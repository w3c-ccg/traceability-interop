{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fe039c4b-52de-491f-a6fd-a0b3fbb4ed76",
        "name": "Clear Cache",
        "item": [
          {
            "id": "102209a9-58bd-4c26-8aa2-06b11024b78f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "651906f1-8c2a-4342-a572-bec58c950bf2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "81416b63-368a-431f-bea0-d7b81bb1466e"
                }
              }
            ]
          },
          {
            "id": "a2bab8c3-5efc-4276-bf1f-89836f7252be",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67c1c614-6a91-4e16-8bdb-216eed4d8027",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5f700ad5-f17c-4a7e-ae44-92472dc51502"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e95eb798-5b9f-4efc-853b-58494a00f383",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dc7f6828-e2cb-46c4-9a81-769604f16e50",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b636ff46-ee1c-419d-b334-2d822015ad15",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99216fd9-5a61-4df5-89bf-4b369613ec62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e83a5fa4-755f-4aaa-8d90-295ab7865e8e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2a838ce-fa7e-4ff8-8ca3-a1832e7e9bd4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4d06b1e-50d0-4252-b67a-f1fd77ce4589"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c5ff4712-e928-4738-95ad-53a6f7930b37",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "686f209e-d0c0-4387-b6ae-0baa53f2b2f8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "acdb1dd8-0630-4037-a71a-690871ce2c83",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "39b45b53-0801-4829-9c5e-5f23cd16c7e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77873af0-6d8b-4aa4-9989-c6860af33801",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd6017fa-85d3-40cc-b79e-8adac5e7284a"
            }
          }
        ]
      },
      {
        "id": "be4fb4bb-fd61-407b-bac7-72b44175b046",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dbc6f28d-9813-49ed-b5e7-c106044d9981",
            "name": "Negative Testing",
            "item": [
              {
                "id": "799f4f3f-f2c4-45f5-8111-f54aa6fe5ec1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c02edfe7-355f-412b-a47f-de73850fc2c6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc945bc-740a-468b-a066-6272c9a01afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b5e54bc-bc47-48e2-a09f-bcb008dac780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dcfeed-0912-41de-bf5c-77a18e10ef3b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656c8bc2-b54f-4e53-9ba5-8b62baddfcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b9c000a-7921-4cdd-94c4-18832143fe0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c9888c-e56c-44b4-9ddc-4c7727636730",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f76a017-1cf8-42fe-88ad-678a570f6e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99a5a6a8-18cb-438f-b96e-75a0e3767087"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e135f29f-bb46-4325-835e-63bc926e5f08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0a448e2-37d6-4004-99e1-23c6c5471fbf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf50b67-c0e9-4303-a5fc-44cea964c101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14d81c3a-21db-4840-974e-faa3cf5ec5eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4e95fa-23af-494e-bdc7-7f051df91a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84573e36-fd4a-44ff-9d1c-a95b623eb48f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1d445a1f-a3e7-4d46-a2d7-b04585f4bc53",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a0fc299d-db55-441a-b08a-07a0a5c925d9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aab6d5a1-9e5e-49d0-a612-7d46c10541e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b610bf5c-32e7-417b-b14c-c932600b2675"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cdd0d39-c09d-4b13-9436-a8c984122eb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fb9b4121-8c4d-4877-9906-a6e4c65abc2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a220b59-6f27-4b36-b64a-f67cfa8ee476",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb8d12f3-2cac-45b8-bac8-ccf495e56954"
            }
          }
        ]
      },
      {
        "id": "d715a6ea-c65b-4520-9f0c-b9071f432691",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4f42f84d-5f0a-4f7c-b54a-6f30675f9fba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b6edd45-ea3a-44f2-935e-32030a49b161",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5855cdf6-1352-461d-a991-22c8715212b1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162b4935-021c-4336-a964-3c75208deca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15889c81-11bc-4d40-8e58-7f2c1d80867f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3064e18-08fa-458e-b843-571c03baf8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26224c32-5c03-4a9e-bd0c-51a49e7efeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77150c45-f746-42df-944e-00ba4cf2238a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd2b8ca-4a42-4aac-a934-4e150174cb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4dc5ea-80ee-4eb9-9f57-61848e3be9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95438782-0995-48ee-9520-3b771e8367cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e4f6afb-c7ef-4562-a7bb-254e5e7e6c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646c3798-d6a0-4f05-a90d-415ba3a7a8fe",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288d11cd-0941-4d14-a434-a06987d1c859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cf14d7-bcfb-4534-8152-81003a556e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bca3301-4274-4d09-96a8-6d43d5e809c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c95cb4d-7e2d-47e6-99e1-62e131bd8b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d2c366-87c0-440f-bf51-8e18a15a6bcf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b2f3e2-1ecb-4376-b3d7-e81c02efd708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf8210e-37c4-44c9-9b67-a3f91c1a96b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d4b4d9-7f17-41a0-84ba-f53663481ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0506ba3-bae6-4fc4-9162-304cd9a6fd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3937d32-6fae-4f0a-95c5-8d03830cd272",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1939f5-bc54-4143-b8ee-4fbd40c1219b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21704560-a756-417d-ba5b-1ff3ebf3a39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb645c3-e80a-4127-becf-922395b96018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f0c80e2-5732-467f-a111-6081fc0c922b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673891b5-e0f4-4fac-a723-5ce390ebdb45",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07823ea4-a986-422d-8c1d-ef70af493786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9af29f9-c5f2-4cb5-8494-1985d9f7395f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fa725d-f308-4083-a704-cc432892fb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd03a938-4e3a-4cb5-909c-a3f9ce7c3231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9164f51f-76a5-4521-91f1-6843cfb1ba6a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a84371-0d2b-45d5-9c62-2dd7a2afd5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb96bef9-af06-4f3e-be3e-14427efb18de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097d2c35-df11-439d-a340-4916af2339c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6abea60-422c-4791-9ea6-ba2e5d73da07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ddfead-28ac-4bd6-b830-768571906b3b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396c4ddd-c350-4d7d-84ac-efe9bb1ee63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c346998d-95b7-4124-8c9a-8385661d7f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd67d8c4-5e89-440f-983d-eaa0501a9fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73801eeb-7543-42bf-9380-b31bed2b380f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d974c368-fbf8-4206-a510-b4f5c9d66c87",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50f9cda-7cb9-406e-abe4-d02bd4092701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e86fc5-5176-4721-b504-db11ec7facb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82af2588-5775-4d6a-8321-81c512705dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "295fdde2-1ba7-4c63-96ed-91fa7ed6a29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c9846d-f7e3-42fa-a16e-aa2c29a987a5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d3992f-0d50-4276-830c-d1b4ed659208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1e3a8a-322a-4389-bc55-12fcbe19d668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032e11cf-d6b1-49fb-bacb-65e2458e5f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6295b67c-a9d1-47d7-abe8-96793bbd25ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca30e10-e24f-420a-8834-e40c2628d6b6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3b2e14-f990-4aea-adec-dad350db87e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde63d20-85d9-4353-890e-34277fce4d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4491302b-3ef9-4741-a062-59de55685e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14e1d94d-4bf6-4fe2-a6e9-312942ca1f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d37ae04-4dad-4289-9192-7d25ce83bd48",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff5c592-5768-4bb7-b918-89083a8ede67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c207c4c5-8346-4b48-94f0-e724e1e32570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f023a500-eb97-4ba0-91f1-c13df62e8ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34c6b8af-680e-41cf-9c3b-627036362df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a61da3-625c-4990-aed2-4f851c4b503f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097e8c1b-f50a-42b6-8b59-689e16d9347e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da80aa1e-6569-4811-bd65-0e5b1d469c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4884ee17-f0e0-45c5-a7ea-2abae3d9f5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "894269e3-c45a-4f5b-8ee2-ca2b58321b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962ffde1-bcf4-442e-bd8c-7292665a1a49",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a04144b-64b7-4ab3-b79f-0e2248a4a4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5a4280-b812-4e59-9495-94962c9f78dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7594ddca-bd46-49f0-8e5d-bf5c212d4490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "837cc7e7-9746-42d0-9dd6-321d83a002d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc99749-fb19-43f4-a785-b25bb29de369",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d290b2f-95f9-4b0b-857a-b47ce15680ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e212e354-8378-4b70-956c-02d15edc604c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad18ef1e-cd62-41c4-873b-1198f8703166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "410e933d-24ee-4849-ab27-5907e8737a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f993b9d8-5579-4abc-b93e-9d194d658130",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124557c1-f733-42f5-9115-0d34fdf4f263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f731248-7199-4f9e-8798-06f3c5fac972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc102522-de91-47be-b8d7-5788a27836c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfd8db2c-dc0c-4ac8-b621-35299e24bdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a84bb5-caf1-40dd-85e5-4ad35a719b38",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f138458f-7413-461a-9e40-b729d1523140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc6dc8a-14e1-474c-b556-c9cc71d88e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c732b7bb-5e3c-439c-8501-4db6aae0fa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03ba463b-fd0a-4d8a-b6fd-8640b20a804c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9ee8b4-5791-4106-bce0-928927e23e04",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c51e5de-3cf0-4dfe-9e47-cfd070ff46e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f485c20-d2e0-4e4c-98d4-7a18810e5ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97faac1-7bb1-4459-867c-7351c2e303f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "375ad6b2-eab8-4e07-ac7a-31019432100f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179518c5-74f5-4b38-a6db-e0afa87fb5ff",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df39acbb-6dba-44d5-8c4c-6c8672b43660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2286047f-ba95-4e1b-b18b-1171d602e7d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db9b655-3581-4dc1-8138-d9bd0b162e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5662da7-a541-4cd4-bb14-7cff612d9745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736f0a89-685b-4ac9-a3c0-d616840f77be",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5a2689-bb49-4c77-bca0-123343f10073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3257e4dd-abed-4c73-b63b-84229efe5ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c87b43-f44b-4660-b128-60273561446a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b110bfb9-e06a-4989-bb69-feb1b3989892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55da0d1f-f5eb-4fcf-b9bb-8129c27c37d9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff4b210-a47f-46f8-b9e5-a8f23381c6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c346e112-5e65-4e33-94bf-88f55644159f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e466021-a224-4677-b9dd-76118f95ebdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "013da372-a00b-41bd-b70b-957c82aa6575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0884b942-e715-4ea9-9164-e76fe912677c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b774b01a-166f-48da-a809-88fd11a1de04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180a75d2-9789-48e8-98f8-691c3275bc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63432f9-80e6-493d-b365-e94ad0968b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d39a42-5e71-45dc-92df-67a55595b8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec5c600-39f2-4331-9857-92b83c415f50",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e8c8aa-b05b-4b56-8910-0ea307b269e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c502d2d-5b4f-41d9-9751-4ebf51ab05d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ecbda5-5e4b-45ef-9689-3445aca2951f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bc96e8-a34a-413b-bee1-b190b1404ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f09487-7fed-4530-811c-db85d4d1a4b2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c19168-9176-48a3-9689-599d29273e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4920e7ac-1514-474f-985e-77b968514924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826cc22a-2a55-4864-9be2-9bebd2080c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af39b90-5751-4260-a51c-306737822cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026914ef-7c00-4baa-ba05-fa2c24efdf93",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d07eb0f-bb7b-44b2-b207-088087f157ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f08452-4900-4aed-be41-4c6306203f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0886e8b4-b367-4e79-8c50-9ccf434bcfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f084bcf6-9f09-466c-b429-fbff5b590ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdbc00e-68e7-43fb-a52e-f88acdb1fab0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7ed69a-2279-43c7-a47d-94eb33844d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043dcafd-4d5b-48f4-aaed-d5c4c1ee65a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5590c1e2-97af-4b91-a578-15625dcb446b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0b7059-d4e9-424e-8138-664eb59873a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4698206b-5c51-480d-b70f-7499bfa2d087",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa9995c-d4b6-4af6-ae52-f0e3f1be3105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32741ced-fdf7-4220-9643-feba412dbed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6750c4d0-ebb5-4647-bdea-0792b1e6fc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "392a2924-ee2b-4543-9ffd-1fb4fcce6c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b4388d-6d70-45f4-8c8d-eb8eeaf3250c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925c6592-b4cc-4ddb-b2dc-fd964acdc98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb92462-80c5-483b-849a-df00b09091a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9997f92e-dd1c-40a9-8ec2-46d67cea6409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad090ef2-0560-4a8f-9d4c-f44910f2c3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf0a83e-3c08-479d-8b86-fc781fbfae14",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4568497e-4c4c-4113-82c0-97bc4570b510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c818d5-d9b2-4237-957f-ae2685bf8b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055f409f-7a61-417b-8519-493ae1e41efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d37008-c2e4-4738-bf70-ef349a28e06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1aa440c-6f0d-4ba6-b1c6-e913472df8dc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75e10dd-162b-493c-9533-5284352cf040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bcfd0f3-ca36-4bb4-ae2a-fcded2723617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ac89c1-3246-4d63-9445-a03c874f148d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5ffbbc-d8e8-4623-8856-02e69267c3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc297dad-d9cc-49c1-a125-c6247a2cef1d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163ba3ee-5933-44b2-a945-da98dea50f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90549c28-c87f-4573-aff8-60204714ec0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d25d1c-ad21-4801-8c45-c546979b8cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e90bf17b-dc2d-4080-a44c-f61d10961818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712c571f-7ad5-45d1-8e80-6effd7b3bdd2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff272883-3a48-4ca2-9154-3fca7d18d70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f90534b-d8fd-41b5-8620-c136f51ad612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cb8fdf-eaea-452f-9a35-3894fe497b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58c18f7f-6b92-4101-b76b-eecaa6cbb8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eecc738-e22b-4b2b-bdda-7747614a4aa1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8027941b-c04d-4c6a-98a1-2fbe326bfdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abe0a8e-273d-47c4-8541-a8415abd5e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ccfed4-5af2-4441-951c-d0e40bfc1083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75de2d59-59c6-4694-9945-3ed57e2d086d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc6caac-39c4-46b1-8f3c-314710aed231",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203c71ea-1717-44c7-9c26-c5ca0543a525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506368e6-911f-4be9-8881-5fa9452926ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a82679d-72be-487e-9910-0256cbb02dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22f503d7-1d25-4199-bdd3-d6e85fe4efd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4755a25c-b62c-4110-bb3e-7a15de8a9bdb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c02b5c-a970-4737-8c33-62ddda541d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75276601-f44f-4018-8094-b7b9fdd5281d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a72f8b8-d204-4d71-874f-f617a6ee7576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6abeb2fa-fcee-4437-bba4-908b3b7f9913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9c497b-4c8a-4c70-aa8b-37af0d1a651a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8425cf-7cf1-46e6-9598-d0aba22f57bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5f5e2c4-b3da-4439-a26e-8dac24476af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede9d5e2-9672-48e5-8148-d6fbd899861d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6481e003-d241-4b1d-a5a9-87d9195dc019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3fbef5-57e1-44de-a129-4272235a04f0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973119d1-889b-4234-9cb9-d8e7f69a8224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775cecf5-8aa3-44a8-b8de-dafe4ce36b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc83194-93e3-47de-99d0-5f9d6d019599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "275b05ab-c70b-4b84-982f-7c19a55fee08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c947b2-dae2-4a82-b9c6-865a5310652f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f77c9df-ddb3-4b15-bab3-284a35d655e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200c77cf-d97b-484a-ac50-254439d8017c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b946113-4377-4064-b726-5b6e95bb4f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "326e0706-40f2-4372-86c7-88b50d5fb6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa597c4b-47aa-483b-8f34-012302378530",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9397b04-4164-41db-9765-26d2ad4c8406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4528df7c-9e43-4782-bdf9-1cc55a28ab41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d203b377-f4f0-4672-98a1-94de881fdb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad305510-6ee3-4996-911a-77f1ceee7809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22054e6e-8bbc-4352-be1c-4db0672aabda",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbb7560-8fe3-41a5-bd26-40b693dc4e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3562107-bde3-446b-868c-ff285299f4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050b7905-25ac-4191-800d-98c3c505dbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9c2eb3-27e6-4a71-b662-7b179af15ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1708f4-08b3-4fb4-8886-ef7aed4d74e8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe890fbc-0ea9-4735-a39d-9cb73f686054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9039360-e319-4fe9-9034-32598fc87eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddea6e3c-6ce9-4164-972f-ec533ab6f6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "98575c6b-8b5c-4580-8cc0-39be55ba4912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597aee83-f602-499a-8b1e-cd7fa11f13d2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3791802-d422-4ae8-a11a-78d4b1784b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56baebfe-6250-4cb3-a0e4-930c6b2a6fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8296f5d6-b1d9-4e2c-9f1c-271e0b0db270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2852f69f-6f5a-4c20-a75f-212520fe12d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f29c65d-122d-4d1d-b350-97af4f881d53",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ddd30f-feb5-437e-ba12-162a4201051d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff62162-bce4-4339-8ba5-ecdb0504f764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bcf647-a513-48ed-a6e3-67bd8f3fdf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b036fdb0-5fb4-4f16-9379-54d6a1924423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f433ead8-6290-470b-8849-b8112d02eeb9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73f614f-0549-40c4-ac9d-a32ab4b12a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02933940-2a3c-42d8-92ef-1ba19ced9db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21103b73-24cb-44df-b325-00797742a16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c9099d-f775-40d6-b99b-67b2c8ea49a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c066cc-d658-4e36-9888-f1d990e0423c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdf0afe-a3e5-4b7d-be3a-31e5d997fa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef363f1-108c-4e45-ada3-68b0032d1c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0a3d2d-322a-42d0-bcd4-74d152c2fae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dcc5f47-2571-48b7-ab68-e6081b53bdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e20149-5f68-48e0-8ebb-df6d6055f49f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b11bb10-27b1-4c39-b54f-d3dc2766af4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32958f93-ce08-421d-89ce-7b053898d815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30aac4ac-4ce2-4ff2-96d1-f403d006d02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4bf5b99-5de9-427c-a848-839bdea98925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754ec438-9c91-41b9-bc29-80cdb464ab4e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbcbe0f-75d5-4e5b-9ee3-06ed1b747aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3936ee21-06ea-4465-b004-2c2c2c8fad41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10659de3-dfcb-4e75-b545-1262d4a909c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acdd3c80-9f6a-4b85-b39a-f687f4b04d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825c5279-7eb0-4097-ba2b-8f4a484423b6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76d63c4-edee-4fc8-8d25-a548c5d2b485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56833a0-48d5-4804-90e2-ce5bbc864493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3066b711-2fc3-4792-81b3-9dc8834abff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eda26695-48ca-487a-a578-b6d3594b87b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8094a223-86d2-44c1-bd91-a07cc829d66f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f435292-d4f1-40f6-901f-c4d68d477085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a69f01-dda6-4c39-8403-5985ad9c7a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973af24e-f514-458f-ae00-8f5292de2818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc2b121-9181-4122-a8d0-3f61738bcffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07c7499-9997-48fa-97e3-2715407e7945",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a63e2b-e670-4a02-9b7c-595277dd202a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15231d3-3c38-47f2-b10f-e98ba2b2e57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1dbdcb-f15a-405c-a64d-abe011a5f999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3005f471-ac74-40be-9fe7-b314188d69c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db0e36c-e3d6-4d60-a4be-334e8d0deb4d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23713833-2d52-4673-ab2d-e76b89f58343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395c5554-a9e9-4a24-99f2-b19ae43a2b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea699d0-c359-45a8-a560-78bcbf3eb25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9afd5e85-4be4-49c8-9673-8b1ebf45dab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1fddd5-eb23-46f2-82ca-3078469c52f5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfd0a1b-68c5-4c05-ac90-136e2776cb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2f0212-dc90-49a1-899c-d095c7b1be4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fc3f6f-29d4-4fc2-82de-0094f440431e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15c7ebbe-60e3-4cb5-9140-68c50535dfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56b726a-c45b-4910-ac04-53e83d589f2a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ed2226-0c35-4fe9-8a5a-078f857d1db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0e0581-4757-443d-84f1-31dae4c79cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5070fef-87ac-4400-a54c-69823fd75b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad106d3-8cff-437e-aaeb-c9aeee75c446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d208ff-1919-4df6-9292-a52f975f3672",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c0eaeb-1ca0-4e2a-b2d4-f40b0a5d1900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f2294c-dee6-43ca-bee9-5cc015bc33f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0571a1ce-3370-4037-af57-c6d36823a734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de586ba8-e57e-440a-a829-88165ace5230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0642b551-7130-419b-b347-93215a156ba6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24b9956-499e-43f0-9111-0a337c654d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d18f8c5-0230-4329-9cda-9960ab7bb686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ab0da2-93bc-4763-9731-db3cae63c48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec896c00-fb87-47a5-b65d-798c71d3a454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e5b7dc-7a57-4c7a-9c3c-0920915cd5a1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0261af2-4ce5-4d8d-94c7-e3cae072cde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196e9e9c-3ef2-48ae-ad30-46c42b7d69bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68845d4-a8d8-4302-85e7-7a445f6e69e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ba94d374-bcd6-45cb-b119-cfb267655d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34c9d2f-fc68-4e74-8a1c-3b3485b801a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c4e2f4-a743-432e-b361-570a38c31e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05a268a-e560-406d-99ba-61e8f75b7659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06474554-ae69-413c-afb2-e8095cc6daab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "83d4f4cc-6f56-4744-a2fa-dbbeef42c9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6be53b7-0a89-4403-83e1-4eb62079de34",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8154f394-5e1a-459d-a8d3-93eaef1c76b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c582480a-4598-4b9e-8609-67694fe62d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6845ef-ffde-4bb0-9132-1ea3e33a30a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7c273e-c058-4823-87d3-6aa4d1503c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea86d35f-8b41-4110-a6be-d077d90b4e26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3882aed4-2d9b-40f5-80cc-f0f85a23433d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6604ca4f-5939-461a-8a51-36b7586cfa73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7f1229-264b-42ad-aacc-569c90eda512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "089b7ba8-fcc6-416c-8b15-71a40a98dd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58d8699-2ccc-4533-8e27-5f8c648248ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5da219-f833-455f-a17c-ab58482ba78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf398a1-177e-45d0-9632-d9fba8f111a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4616dfab-f2de-4ee0-9470-92e4a734554e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "76e9db78-b63f-45fa-8b82-54e3ae05ba64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cfbac9-a8f2-47ea-8f49-ae6c2145b333",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733e6c5f-1470-4bd1-96e6-ba731d4f6f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f726826b-6d43-4e69-893a-6f76718af492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efa1b21-d31a-47c3-b9c0-4634cbb59159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6c7464-41be-4d9a-9868-7c00f574d0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b4920c-5520-4864-a7de-6ace05c35efa",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57c43a7-da26-4b61-9488-78059df1ca49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d2c108-6403-467d-b3aa-7e209544b566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3458bb-859c-4748-b41a-fe1ef785bdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4228b1-8a57-4293-9de6-ff581c338116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b566e1b-cba5-48d3-95b8-a9f0cbbf8546",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be50fb0b-c738-4f60-bc9c-b7dfff36bf2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc921f2e-28c7-4590-a705-dd4c3652a36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46e96e6-2ad4-4ed7-97cb-3c3d08792fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7900d828-da5e-4880-8e9d-2dea5260aa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6045148e-bbfc-4888-b4bf-a4eacf9b057b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303607a2-78d8-4e1b-983a-05dfbe49e705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f98600d-53fe-4760-9ff8-ba59e761667b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea0f198-cf5c-44ff-bb9a-04378b3850fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "557ae68b-2dd7-435a-9df2-1c0902c880fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018194ac-ae82-4b70-9645-a65f6a3a6888",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3854049a-29c7-477e-8b8d-6b375eacc2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee8f549-8b02-40f6-b405-81adba9aaf43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c366d2-aad9-499d-b2bd-864863ad8b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7a1326-f68f-4b17-b3ce-87f0586d316d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e8dbea-3ccc-4d66-8b97-f843531ae3e1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b30efc-57c5-41d8-8d00-d906708ed043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6f7076-e70b-46e8-9139-b7ffd7ab738e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5255fa34-8e4a-447b-82d9-c89fc6b604d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14658102-b82a-4fdc-94a8-629d4b4053f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168860a3-a85f-4673-b5c2-273ff7655fb2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cef979-937b-4443-8473-10b472577445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9730b1-4798-4630-8e64-5435af9d58a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185d6ad4-94ca-4aa5-884b-6deb7a57c151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6845c8-db65-4f4f-8759-eec5d2677fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a07fc4-01c7-4e34-a9b2-1da056dcb80a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c29f2f0-0c9d-4fa2-8253-49e94bb738df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475e75a6-477c-435d-8a9d-def04e1c16a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880ca04e-e14d-43b5-bb37-94f5ed7b950c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce530c95-539c-4407-bc45-6edf9eb6669b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6df639b-542f-4d5d-90f7-40bdadc4fe89",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dec64a-c23a-48a7-890b-e491b7ba4d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2756a0-2c61-4684-a38b-060bf20b0e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1a3b78-69ba-44c7-8917-5617e15f8986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb7ece0-2d0e-4261-8c6f-f9a5bd43a379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14737b6-2c79-4027-998f-cf27b8c00945",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea87ba48-7aba-45cb-928c-e6534b68881b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4ba6be-8ee9-4e9c-beb6-e39bcca380d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c306122-587a-4ce1-87f4-9b86ef96bcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f92b0866-a0c6-4484-aee1-976333958d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbef0f3a-8add-4451-9bcb-12cb66249361",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4540bb1c-6529-4fc9-bef0-0b3b53537388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4989070-da55-4749-a6cc-78e3645c03ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf3fe33-51b1-4f69-8b95-fa9d2814a609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3dc3ed-727c-4bcc-8ac5-f2cffeaf621a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d1bc71-f60b-43be-9fe3-84348d3ac8b2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0183dee6-2fed-4d62-859a-03803ec3b9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2d3190-3468-4c38-8b85-450266abe35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fd2849-c9a9-4280-bda3-9cb0c737257d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90ca5e4f-1a28-4158-ad76-5567c0c8bc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879d52cc-8303-49e5-b34f-d91331f5489e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cecf377-f11e-4619-911c-72886a25b4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cbf5e7-3150-4571-92a4-b67c81aef0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988d9ab2-3c47-448f-ac60-ad8f7314e988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15cea15c-0387-494e-845a-6a619d6f4c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ddd2da-e4ce-4211-9a30-8a3b5b696404",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aec3aa6-d3e3-45ca-90b3-f478b239f5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697cbec4-2109-4f73-aeb7-c7d0e25b12b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fe9f2e-7b38-45c0-af2a-6b36b2a49faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1557b534-94f1-411e-bc5c-7b79130da2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6407261-6d3c-4ff2-b811-33dd79644207",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697ffb5d-9089-4a26-831a-f0ee5a0eb193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ad7b7e-e10f-42f1-9c5f-8529a941b0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6b4fae-1c8d-4a4f-b334-b00d6a68c266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd2bbfd-460a-4af2-88a0-b016670f1861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae9078c-9777-4e04-8426-9407b31e97b2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f013cda2-e0b1-4839-9e88-155131058e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8039288d-296c-43e6-8fc3-459c3c00f1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea0a187-0576-43d9-97b3-37f6a6dd2c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ebfccd7-8366-4eeb-aa1c-cfdc78c04300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47309f12-8502-4079-91e5-145e05ce9ba5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3836a250-01cf-4a62-9bd7-7fa220c05452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e98b135-7c78-4b58-8533-e2b6981f7065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd1e806-b4a9-4720-83c9-335ae89078c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c385bc62-a220-40da-a21a-6a31a5e63046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cf264c-cb20-4f32-a279-039d8eb5bcd5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdce23ef-4af0-4f81-b7e0-f70a9cf8fee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa12c55-82f5-4e1d-a57e-119b01d710b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29408412-5585-4428-a718-c4eb8221f5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25693602-4f23-4f26-9546-6c2b5b50727c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6689922-fa7b-49c9-9f45-7494b80011b1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44602a8-f7bf-4afa-9bc1-01244ce6b159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67fb9da-5fbd-4031-b7c4-b39952bc32a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518fd1f1-c9e1-4947-857f-ddb7d07a70c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2984e1-bcd2-404a-a35c-ab4d2f45375b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801c9645-3ec4-44ed-954f-037489199956",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb3f02c-aaac-41aa-a882-486786d95859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e3232c-9aab-40dc-8731-60f0c7299864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14093c06-3c5d-426d-a5c2-6ec6bd6e4875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b1a941-501a-41c2-9605-87a7637ccdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e2204f-e4e2-44a0-aa40-b94de4a9ad9d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679f38dc-4568-4d2a-a488-01d385ef079c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceaa126a-2042-44f3-932e-ce21877a4f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ad84e9-3089-46d8-a8c5-25ffe1dead43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "61641b9d-ba88-463a-949c-89fc032a2ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de7fcc8-8b18-4335-8cd5-ff1b4d549f68",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c71a30-d6e4-49bd-9d56-183c85a1b156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104f23e4-9fcb-4f55-8c0f-030a44921a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bef862-1e80-43b3-850b-bd555d45d799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f036fb-ad58-4700-a660-99508a2eb878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6828195a-4b13-4a74-b61b-f5486565abfb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20bc067-9614-440e-87c6-ab9daba5d2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770898cd-5e74-4db4-9c8f-0c7650ead52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2065e727-e0e1-420a-81f6-dd1b889c96e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34068348-bf24-4c75-8e06-720a2e4b1434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9617683-05a9-4aeb-9ba6-9cc1e9f07052",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c40ba83-0521-45ac-becd-eeed3a8fad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9757f4a-5bf1-4276-839f-ecd56a27d2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241be7cd-a6aa-460d-8cb3-c283d1d18585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "873e4a91-00f6-4de8-828c-36b16e6d306e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3213152-afaa-4103-ad91-987eaaa6c08c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548731a6-8997-4df9-9a0e-c5bb273acf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41429a7-9a79-4bee-8af6-4261393ed3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435448e3-5aca-480b-875a-fad99b25d817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe20d30-01b4-4a7d-ae1b-fff4687a659a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2488c5df-fb82-4f4f-a995-a0de8a3774b4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd46299-2fbc-4683-86cf-709599c3ba2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefaa574-85f8-4c9e-9279-f6db964dad3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5daefe7-03e6-4b3a-bd96-a62a7ddafa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b397f44a-63cf-4f8a-822d-2bf648907cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d617f65-eb4e-4af5-9c28-b616d723b90c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c6f4da-ea04-4419-86b1-6337e66a4aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01718731-f3d5-4b04-893c-c5455bc65dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfc1a37-2be2-4465-8cfa-b5173d65f807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b599c58-08bb-41f8-8534-b1b9b881c203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf7d0fe-144c-4dd1-b3cc-28b0b35f001f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f12563-8f7a-4fca-8e51-ad234ec001ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35599cb-0eeb-411b-b2bf-70bd9fce7e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480ad3ed-7bc4-4b79-a071-87f4206f9d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c40ffcc0-a5a0-41c2-8c8a-f1047db8d36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d55ad4-6e6a-4922-a56c-0cec85005514",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a61e47-69ca-4c2f-957a-26b85a0f8de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43471e37-8b77-46b1-b80d-6c7646fb2d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f76ef5-c114-46cd-824e-e016b294f206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a970432-5450-4319-8307-eed3a62cb1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c5ec4e-39c1-429c-92b8-f90762e4156c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca58bc3c-076e-41da-97cc-36503d6914b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271f9331-c628-4ac8-a4b0-2251fc0b77ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e53f57-0be9-4fdc-a37f-e56801a115ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "478ba251-20d0-49ab-931b-7119a6661dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8194664a-6285-4598-99a7-038b69c6b081",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ffed51-13e7-4df5-894a-be871e2b6ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2240ff06-09f9-46b2-a095-13a438beaa3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea74c5a-b0ff-4a83-9c7e-e002952b70ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf1d9a1-8b29-48d7-a2ab-9daa5c222a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14f5476-78b8-46b5-8a70-e7ad97540024",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69863575-2264-4eb7-b7f8-dc7ffaf6e808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4cab9984-3127-4ff4-b9fc-28b103a2d4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f0d10d-e58d-49aa-b155-f346389a165d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8efa7775-3841-4e9d-9710-ef16bb576a4d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0cd8d5ce-aa4b-453f-99fc-a24a131f9c1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4ead838-4b3f-43ab-a0a6-7ba2a23557cc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9363be-d822-47fd-bd7d-1bc369bc934c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b346c73d-edc2-47f3-a1f8-b1e3c06148ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9b374a-81b5-40f6-aa6f-1bb6ea084a31",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d57266e-a25e-4d48-8585-482612153730"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf2a2e1d-a1b6-4cb1-b341-2176258d0e02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09e467a2-a262-439c-b385-089291510871"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0c3cc59-2662-4880-bb23-ff66a71912ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dfa0927-7ebf-4074-88ec-bbf5fc0607cc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe503bfb-cc53-4c48-8ac8-73b4dae4ef07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d334cc03-fb5b-4566-ade9-52a0f8581cc2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9c3c4366-8020-46cb-aaec-8c7abc098b4f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b1af518-bc8e-4e75-9e48-a08532a75e67"
                }
              }
            ]
          },
          {
            "id": "5b7ed7d1-24f4-495f-a9c2-753ffbfddba6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3444dee5-ff12-4f5d-ae0e-b2a3d7a98f11",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22243d64-0fd8-406a-aa34-f4a85d65ae3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2e4e9d0-863a-4bc2-a01f-638b1d6c2f33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cd0f54b-a458-48e2-91c3-4605d8ceaed5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "39acb64f-a892-47a1-ab6c-9d4be75e3889"
                    }
                  }
                ]
              },
              {
                "id": "4474482a-45a3-49bd-8d73-9f5c58434dbd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b0c6bdf-d844-4017-ba7e-0603175806da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0275ed0-ad6f-424c-b4e6-cefecab58dff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c578e3e3-36ef-4e03-b3d2-ea29e67f5454",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3604f09b-3012-4342-aaf7-7e7462c5d803"
                    }
                  }
                ]
              },
              {
                "id": "f857e491-ab11-4b95-81c3-df0b4aa79ac4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9ceb693-aa1d-44cc-a0bd-ad8505d786df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93479d5a-c80b-404e-81dd-415431255cd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4a18e70-6424-4d4f-b8ee-09f83f46837f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d176740-f3bd-4230-a322-c71c85c20315"
                    }
                  }
                ]
              },
              {
                "id": "e187bd32-2060-40fc-860e-cbcfcf2219a1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f7c094d-8497-47fd-9681-191481fecce0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ff36bc4-dac2-4c53-ae02-851f5d25708c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac835b39-fd38-4771-af0c-30ae39d552ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "10d56290-558e-46ad-ae88-00c14d541d2f"
                    }
                  }
                ]
              },
              {
                "id": "805dec13-f559-48e9-9b5d-a47e2c293433",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f028d1f8-edf4-4560-9fda-06098ccfb3d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aceff8b7-5802-4ce6-807f-2ce5ca526365"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "448c7b60-b473-4255-8e82-8d983b90edbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "89765c02-dc27-4eb7-8f67-f1e6d6b4fb3d"
                    }
                  }
                ]
              },
              {
                "id": "6d2a8a29-ffe0-4cc7-8f11-949239425320",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d137e090-e1b8-4fa9-86ac-9d0df1fae055",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa16eae1-7c60-4bef-875f-e7bffed430cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7eeb8453-240e-419d-9971-aa09a2ec8fb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8343a2b-e88b-4e71-b2b8-e05e21b1e36e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e9457f3-4b7c-4b3c-a743-b1def002fc30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85be02a2-22cf-4289-b812-ea4c29cfcccd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eb5e4e29-3f1b-4b3a-9d85-3421b2026e01",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "512ce656-4227-4eb6-8316-dc4edad62a4a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd399d72-198a-4a07-bdee-097cb15ef094",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c0656dfe-8d0b-4763-96a8-3b894be17f89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ac77623-0b65-4c7c-8c6b-0726e036fc11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55a65d08-29c8-44f9-86bc-444675a17f36"
            }
          }
        ]
      },
      {
        "id": "e1cd90d9-837d-40fb-864b-5265309506f3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "348f22e6-662a-4869-98d5-e3a8e68bfb96",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65a3f1bf-1589-4af5-8cf0-5a60356ba6cb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8320415e-7db5-4e87-abc3-1ced5aa67556",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b417627-2a75-4471-9faa-34fb363e042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b0aaf3-57c3-49d2-a49b-db44c6369512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da99c1c9-ca0d-4bef-95f7-f0f0677a8010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a11bbdd2-9eb0-43f4-a25b-a4f53a6e766e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4876c2-bd45-4669-94a2-bd410a80c8b1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43231c2f-63aa-4b25-8488-fb36be4b5675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2105cd4-7c8b-4cac-b45b-f7ad63af3f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb9a3ea-9ddf-436b-9dc8-3d7344ab5385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32b0fd7e-d7a7-43b9-8dbb-a1a7dced309a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5745036-85d9-48bd-9b41-e6e9adb1c6ad",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80acbb6b-330f-498a-bed0-f345f58900dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4639e5b3-860f-4512-b84e-9ba25cc4c2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f945ed-0a49-4913-8295-48d56edbce15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a19874-bc93-4efb-abf2-a5e81246044f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577e6781-c666-4cf6-8489-3958ad2ae6a0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6123af-e75d-4763-97f2-51739f73c39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d7f905-8033-41f6-b9ac-fa26abbc2ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3b733b-9dfc-42ac-9694-a1bd05216018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2edbfee3-9846-46c2-8224-6067b9e84718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6df117-162b-4de6-a150-496f39bff2f5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e20c65-67f5-48f2-906f-84ce04010c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b66ab10-1b06-42ad-87e3-2223883ddd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911ac93e-3aad-4b4f-aec6-c142268d2511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e69ee8ba-755d-48cb-97d6-52d15c0d0a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7092b0ee-9bd3-4fc5-adef-6c54d164d5bb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5894d1b4-498c-4ac8-bd77-4dc1b1c4d6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404696f3-3ec5-4849-b4f6-36a919a5b96c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ac902d-b0f9-419e-84d3-d2d10d134d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8b13ee-ca31-4954-8c3c-0caabbf1ebfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156cfdd2-e48c-4cdb-8551-dc8dac87bde0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14f335f-ca66-4abe-aec8-e351cb3ca3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbcd4a2-8d75-439c-a3bd-19430bb47c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4c9af8-7389-423b-b76a-2bcf6f411b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "89dda4ff-2b87-4a7c-a1de-cf229222bf61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc181a21-a423-4357-8117-aeff773d76a6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130aeca9-f822-4814-a5c5-bccf1614088a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9f1ca8-af91-45d6-9aaa-9705debcb18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b259f96-f4f0-4635-99ba-14fcba556bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d577ec3-a432-412e-827e-a9b8d78d5c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5c3443-c47b-45ea-b6ca-0fc8fe4b6d6a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90249b6a-5905-46d8-a0c5-99f09d87fd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580b922f-a9d7-4f13-a362-b666e29f1ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e408a76-e3a6-47c4-8ad4-c509638216b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49ad1602-3679-40ab-9297-d6fd4e338c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf85ab76-e9c7-40df-8441-ae6235670380",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c99ab7-2464-43dc-904d-4ccfe1371a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9700c4-c61d-4d12-a6a2-7fe85300969c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d862ed05-f2bf-45fd-b826-cb12613a71e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6cb86e-7759-443b-965e-0499290912ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6646361b-60a3-45f9-95c8-6879647ea763",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2e8eaa-534d-48df-86d5-7899ef2ee0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c49c2ec-8da7-42a4-88f1-80888cb3a869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564a195d-0557-4f74-8765-4c8b1d985bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0eeba2a0-8e5b-4d5a-96c1-2738692b56c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328db0f3-d203-46be-bf24-86736ea76af3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fe9c6d-abe0-4ef6-a859-c7cbb9f35045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f623d6-ca95-4adc-9b78-1e8a156fb61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8ec680-b574-4c8e-a9f6-e73ec1ad792b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a50a717-1f38-41f5-bbcd-e305dfde74ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608ecb35-212a-4767-8c6c-9a50837e5835",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637cd804-8666-48a1-8415-79fe4b642605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b84470-97c0-4ea3-95a0-bd22103fc1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0da455d-297d-43ec-b793-0b61f1b50323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a41761b3-4f53-46dc-9e47-625ee597623a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73d1f08-3be8-4732-8c5e-8305c9cd2830",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadb4373-e722-4f6d-a7b9-6fa61ed90269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa28e965-ea98-4df4-b53b-caf9fd2c92c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a3668b-673d-42dc-ba2c-bc161cfdc8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8596c5b1-f4d0-4cb6-8397-fe7e7f991ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28070589-ac50-453f-b054-f49cdfd590f5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c7b6da-72be-4cec-ad9d-5910530db4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29fcaee-4153-41ba-9dfc-d2bcd0946e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c883b8a2-9af7-428a-aef1-1fcd88397ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0f7e1d-f0b2-49ca-bbd0-3e7c56508fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313408da-e9de-4085-b98e-50279b0771c4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5c8b2d-acf1-4de3-92d1-33722e1a5ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b42f5a-35a3-460d-8e9a-35afd1fdb95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59869b0c-363c-410f-8597-bc37cec1b6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bf5c6d-59f7-44fb-bf2b-16c7acd23beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9689576d-9f7a-4b43-90d8-b3d619a668b2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692cfb4f-a775-466f-b9e1-79c3da3ec172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19cf7f5-bb05-4938-a15b-1d7308cca33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0225168-ceb5-4288-b189-5fea6d5e921b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e37b0770-4950-4769-98d3-20c94957f4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5360a47-d5cc-44c8-94f9-3905dbd47c92",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ab65c9-58c8-4d85-90fd-da10ccbacd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a58a71-fc91-40a1-b348-40078a0b37f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77dda97-7506-4cf8-a4e1-fb3f3d649254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c756d2-f1c8-4c8c-889c-5bb570ad9a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87684e9-7859-4178-8cf7-7cd559a5c862",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0907c842-c153-4b21-94e5-0befd674cd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62053ca-6a80-4cca-b348-29371b17cd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdc0d7e-ce1a-453b-b42b-3f2808af6507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c8c073-36e0-43b2-9a0e-cb6a377dc5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc0cc8f-fc08-4f78-be96-218138c569f8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a35c16-21ff-4ca3-92a3-e47f7ebc64a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d583a27-25f8-4dec-a5ee-656122edee3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f5f1b3-5483-4071-8bae-1ada1fabb7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0a7c93-f584-456e-b48d-c3ff2b853488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ca0182-6bb7-460c-ac37-c8811b463f62",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4ea185-a197-4761-a416-0845cb5db4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727a3c87-3a92-42b5-b6d7-85b04c3a5f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7637b9b6-10d9-4781-bd1e-2e6d2edf2484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d00e742-3f93-44e9-be8c-b89fb19369ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c763d35-440e-456f-86b3-026b63ed20c6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e549bd-1f06-49d6-a062-e81487eaec59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e03f90-d383-4291-9dbe-8fa053f349a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40766ed1-142a-492b-bdc7-4aae2cb548a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13214083-8ac0-43c7-87de-a71d024fc987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d211ba47-1328-46d2-884a-663bf05745df",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e092605-0fbc-4fcc-9dab-cf02c51ffc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc86b6b8-fd9b-44b7-91b3-029eebc787f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67764aa-3b49-478e-9d46-28e39d36b52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8ca9b2-fd81-48f5-a8f8-6515aeb72dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133b2b32-2100-4cc6-b115-0cdf2936afd6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd3b9e8-8a87-4997-8e75-ea313c674654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d93a133-4939-413a-931c-5bdd632846b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d00845-90df-4d33-90e2-ec5276ed133b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6b360f-7f50-494a-b19d-e814fcbadee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e49a1c-47c3-47c6-bcef-9cde2d9dffc0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17235446-d479-4df9-a952-9daec98d399d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba46c2db-c37d-435f-9857-163d50094910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a273eb92-6887-46ca-bdd9-43c87ae91b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "054a1d6d-2b12-42cc-aab7-8a077d0e0292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a219f294-42b5-45f9-868c-41f7a1f17e26",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27834872-9873-485f-82d4-65ff880aca66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456f76ad-8f08-4fe6-926d-90d15f87f86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d78aab-a70f-4b04-b9a4-972e4cae2c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "878bc2c0-4782-4f21-b488-cafc9820b4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c7e4df-2bb6-45d4-a474-03a637794532",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edcd969-f725-4eb5-91e9-41cb04a58c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f129e366-d06d-476c-922a-6ee57a950aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb8ddb5-1dc4-4729-8bdb-d1a938128604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9796f59b-58e7-4fdb-8091-890b91bf7df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67f17fc-b051-4c1c-b525-230f7713efd5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728148cd-67f5-4d11-b9dc-fd65f326b762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c50046d-ff91-4eb9-b06a-989def030455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268c4255-7f2c-44d6-88b4-2af5cece7bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae76207-e11f-4619-b625-04c1147c8b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b12350-d7d2-4a07-b54d-63b39a3c5b23",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fe3726-857d-4ff2-b0a6-a3b96c0208c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f849411c-24ac-49df-b738-91c04827e724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4520ce-6320-4a4b-8ec2-8583ab09ae03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8176909b-7bd9-4314-9336-5826a58b317e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c21d76-b0eb-4e4f-aaac-ef606d90a99d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20714317-9bc9-406c-8b4b-09996d242eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1215723a-a774-4af3-9e47-552a00d88cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c78b867-b410-49b1-9c68-2b7016df2e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85719ade-fa7a-4bbe-b23f-8af34d37b7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386af10b-a701-40f5-8d06-e3c8dbf3e023",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d2df53-084c-4737-823f-7f3838be469e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4655854-c8c8-4ed5-a6bc-c77a43944905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7c33f0-2eee-43d9-a450-4f26b15c4bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f3cb4e-9f8a-4c04-afb5-840d7abf8ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ab0281-c052-439c-ab09-1ef8f13aa4c9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205b611e-2f18-46bb-a2c0-4e2e1a6260e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4e595a-3e14-4982-b57d-d1e9cebee310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e582af41-5076-4f9b-b544-f36cf093b588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3db07aa6-3b57-4085-81ea-5d9dee655217"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5776b867-8e31-4509-9fa4-172867f999bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a6e509d-9798-428e-8794-6b57d1d029b6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e996831-9581-4c6b-8a20-ae7a8484b160",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7c83c8ad-199c-4e84-8751-daf453fc5398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330409d4-924d-4e7f-8b49-592b2f910e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8e6f7e3-3d7a-47c3-ab66-d0a45792b2d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "883e32f4-100c-4d4d-bbd4-8b842ccd2688",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4aff7c3-e0b8-4af5-800d-e932b73c933f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec3a909d-293c-4e5f-9081-8783f6f01ea2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50270d01-7ed2-4d1b-9ad2-b0656171dc61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b1f6c3b-e537-48c2-8e83-eb57c54d33ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "543d665f-0272-49dd-9db6-850002f9ff1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aeaf58b3-6233-48be-928a-97761c3bcae9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed11d38e-ffc9-467b-b948-63e7999a390f"
            }
          }
        ]
      },
      {
        "id": "b476e80c-2876-4e70-bc9e-df10a5e08afb",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "89063288-54b7-44bf-81ef-0f2320a80b90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfc1f822-f109-4721-b222-8c0a158030cd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fcd9cf65-9515-4975-8c61-e7837c3a4247",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e73ff5-9e2a-4999-a789-cdd1ff8db90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43c10af-b9a0-42c4-8a15-5d8f4391503c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd8ade4-59b8-4786-97d8-ce076ec9bcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "086eaaf5-669c-4879-8eeb-b1aec326632d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ffbb17-86c4-428a-847b-099f3ac3f7b0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79748428-858b-4da4-93e6-3969c1da4607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb4b28f-e1dd-4606-b24f-db827513bc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1de581-79cc-428f-bfdc-21b6991706d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7798992c-0eb8-44bc-8250-f401d841885a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8aeb49-fa0e-4891-9527-c431c5c39bff",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac63d95-1a6e-4924-affd-380f7f8e1a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50337570-705a-4ee2-8e8c-c54ed30a30e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b00d618-5e92-461c-8680-53d7d5d22f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0844678-ed3c-4eb0-8a09-7159006da623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94612d5-2d25-4011-a31e-a9d04fbd0a85",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9826a80-94d0-4803-ba0b-c9c2cdb1565b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51734ccd-8377-4b66-ad07-0ab9e92ded7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1e58ec-4f39-4cbd-96fc-fa6761fb22af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0034c507-b83f-472c-94e0-6ea8fc7467e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a081c1f-c7ae-4dfe-a481-804c1285add8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0732c4e-76e3-4822-b325-c2047da02389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36cb5ed-7adf-4bb4-84d8-bdc1299fff26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a2c99e-ac99-4384-b868-2758d607ef0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31cf5a0f-71d9-435c-97f1-c4c0703daa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2207573-dbd5-4dfb-9c25-f9dc5635a5e6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd65c25-292d-4d25-937a-7f4c3d63b419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226907cd-3192-4288-a820-1d5feb5092f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18aee0b1-859d-4c6f-81fd-7fa7b329250c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ac4f42-e368-40a8-8972-8d387b7413bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b09e6e2-e755-42d8-8d9e-30c2dae64006",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a937684-2668-45a9-9842-4f15f0be3394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38529c2d-3199-41eb-ac1d-bde9f1a0c61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759dac4a-b6c1-4005-8d55-e5af53e7d9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7ca7cd-a3cd-4ef9-8cde-2f9c3a88cf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6633e5-2186-40e7-b7cc-3d3ada87a0e3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a7a008-9cf2-42d6-b4f0-4aab3ca6b685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d66a19-8d47-4311-a033-63d987fb8fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a293ed0-ff90-41bf-86ed-1e2baaa6c68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81741f8e-c8f8-4b80-b066-2c414f9465e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27f6216-5608-4a2f-827b-a141ca81ef91",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529343a8-6b63-42f8-8b4f-58cff3c65374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252802a7-36d7-4763-8f6b-d25982c51b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a60af92-224a-4dd7-86f6-6fd526c27c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54b07e6b-60ca-46e1-b997-30208a3a0d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4c2e6e-887c-45da-a360-b9a0267a7d34",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e354bfa-59ef-4250-aa1b-7201df3b8eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374aafcb-8233-4fc6-8ca7-91ea2450652f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4592b0e5-a69d-4410-9c3c-4dfe137a2b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6737a7b8-c0da-4469-aee1-a0fdabd479e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290e6e4e-28d0-4d6e-9230-2a37e0ae31bf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e07359-d9f5-4c02-9188-27961363f97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f48b808-2523-4729-9537-5d322ed21a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7112b5a8-55c8-4ed1-b47d-0225f169a2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8add233e-5984-4fac-9ad5-a885012ba8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c345556f-dfd4-44e5-b157-c0bdfeae5246",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7846a4-56b0-46c4-8ca1-01dcf312640f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f8e1fa-6abc-4a2c-94ac-f2b2eca76aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455ed2eb-2e96-4eb1-8897-5ea02872af41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "376ddc63-6806-48e2-84b9-fc9189c2de86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34131241-7341-499b-9777-41f92681bfd4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8536f352-3a26-42d0-9e12-7590b3809664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8939228f-ae60-4eee-9df4-ab1ec4a4acab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e427dba-ae82-4500-b2d7-dbffae307744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1632c696-cddb-4bf4-8b74-9787ac64fa5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cb1c26-eefa-4b1c-8483-6d7ef8a46a46",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3264e5e1-4f39-406e-bb51-caded2c80c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8dad45-516a-45bc-84a8-0f6015a2c3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9be9fe-264e-4f8d-b5f1-2e4c5a5303a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f10d5901-d810-43fe-b261-d3524e5370ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4b29f2-4f9c-4379-baaa-155a8013bd2d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35fc425-c43a-42e7-8b06-59a51f877863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda573b2-151d-4f6d-800d-25f51f160b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fe8ea1-b673-44c0-b7c4-9eae01851b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "38922389-6f0f-4dc0-b691-1176e6cf22d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68b4b18-ee7e-40dd-8744-21ba276058ad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa40ed35-0468-4b8a-a1be-3646ad311582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebf6b5e-8a69-406f-9d96-dc95d7ea0ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a63b9ed-2311-46bc-99b8-5bb9deb4992f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f93eef4-967c-42b3-81d2-d9bd7cfae0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85360c9c-4c9c-4882-91bf-3ae4b6c654e2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1320c6bf-1f91-438b-b62e-ac4c159bc420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45abd763-7429-414c-902c-d47fb006a6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff96b373-cee8-4241-9c0b-7c294a9743bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6293080-0435-451a-9813-3609cee8af0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513d2686-f450-4f3a-a82d-674dbb7a343b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78661905-eb5f-4d62-a71f-71485d8ae23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14a6263-2ca5-46c4-95dd-6c0f77ab1a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2470f2d1-2374-4674-8342-463994cfb76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8324cffc-f0a8-45f6-977b-170b54ae487f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd03c9cc-0aea-4b74-a900-0cddfe66c27c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8838aa6a-553c-4228-af3f-c153d380a58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2dce2b-9e5a-4d65-8b1e-253dbfb7a1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556d33bc-d6a4-48d5-bb94-06f570a9683d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bee6a95d-344f-4a96-b79b-c6efe006c8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d789bca-bf32-4761-a907-38dff66ab956",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2c82c9-b56c-4dc6-83c5-53e835650b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf60d52-2861-4913-988b-dffc2c809bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d760fb39-7020-417b-83be-ab6f93fc5bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5061e49c-a508-4be5-9396-56acf972588f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a0dc3f-aaee-4c4c-aef4-592c8287a453",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc5b7db-217b-4a60-bbc0-32affe0d5ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4cc7ccd-397e-41fb-9c1b-42620e190c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a2b7f7-a9bb-460d-a9be-aa071e3adf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "795df184-d27f-45aa-b96c-f0e90fc8735a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9081788-2b69-41a5-9af2-a79d8472ef9e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b0d19c-cf99-443f-a1c9-233a5686df0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa3f38e-d238-4ccf-997d-e2327cb2c6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cbd1e5-86cb-4d70-aef3-43bdb5e0081c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4905b6be-12c2-4d7f-9ded-43f314ab42e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287abe5d-1f58-4225-98b9-fb3f30128b36",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6f4483-6f01-4c09-829b-ba0f5ea3a70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad8a615-7eff-47c1-80fc-eb42980c8c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6682c3-20dc-47d2-98fa-a180c5d4c4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b526eb6-ab42-4c26-899f-f443b39fac03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0512e54-55b3-44e7-a8e5-31f7550db8b2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e9e854-f40a-4428-82a5-946cad64ee06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093fdda3-7d84-4601-9cc4-4951c478ef5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c21866-2e4a-4aec-b27f-39ba6b7748e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58fbe3ab-2c67-4f7e-b86d-c15c7fb89215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa7ca04-0205-4ff8-a7b0-6d2add5c028d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf85f5a9-4afe-437d-aa2a-664d7cd7f73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e7612b-ab3b-45d7-8688-3d0c31691e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d00a2b-7002-4bad-a23b-9bceb1c9d272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a652f975-cbe3-47bf-8280-96e8568eefdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c378dda4-a63a-4a45-86e1-24ef15302e93",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9f8c81-43c4-4a32-897c-83b8c0544f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fa168d-7ab5-40e7-8d13-f863f8c8bafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfc6a28-9ff6-4026-8504-282d308813e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "099abeb3-2882-4fb2-93ec-ab8484f91f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0e19cb-a9c9-4f61-adf1-48c79bfefc65",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db974551-5448-49f2-8b8a-c2e6aa796f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be79da20-4ec1-459f-9fd8-6cbbcb8faf6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6421138-343c-4ef8-9ad2-e92ecc7bba11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d7223c3-38e9-4578-8ff7-0934852260e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bf9608-43bc-4393-9072-5534d0362977",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8d9ee9-b9af-4403-85d2-256e3e901d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cb2ea1-3db6-4c35-989e-705af128d714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dd83a0-0daa-4e2e-a88d-6d38f92fb45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2e7087-be3c-400f-97c5-4facbf408e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105d6d6b-37d6-4e84-accb-444fcd91ada1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef7eacf-a41e-4290-8b70-a331cb622aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa71c07-8599-41b6-950e-accf4ff7b408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e5a86a-b18d-44b1-8ed3-cce43cf10ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9d351d-5a95-4331-8fe2-3d72ec4338e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd8f58e-6be0-4acd-8708-187021a51ffd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ba3400-8387-40a4-919d-93173256c065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7db5ed-2065-4ae0-940c-0c10df9dfbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cc0b45-e2a3-412d-8d60-474339480317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94311abe-d8e3-4719-8d0d-69e05f116017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cbfcd4-9b10-4169-8726-c49d3c1982b2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d89ae97-503e-4122-88cf-93f5b3296a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b2b994-4907-44d6-8bbc-606e26212014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00447d4-f782-48da-95ac-9acae1f3a154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1adc8aab-fe04-42d9-bcc9-a360a728f7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93d3339-f890-4bc0-8695-966b729d62d1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5b3f85-7650-4dce-9688-7e01d92ddd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db11eda2-0eba-4fe4-8cf8-29795b5cf0c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627d54e5-056a-4569-afd3-44b6678663d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d250a9a3-a693-4260-a0df-a4ec1635c7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d014cd1-b91b-47e9-85a5-9b61111a30fc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c68d14-8a78-41b3-b3b7-345267a1bd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d78437-46b2-4d6f-b9c9-0fd512ec8b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628302b3-281b-46f0-a55f-e869e22b7417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79c25d18-5618-4693-9dd5-957cf9da79db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0326f99d-f196-4f40-a8ab-8bb326e38a16",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734620ee-67a7-4930-b9bb-19370916f99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b27868b-0fb8-4abd-a566-e723232b17c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cc8ae3-3862-409e-875d-caa9cd3eff9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a15487d-2100-4b18-8f1f-d978204766a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81383c6-c3d6-4bcd-97b8-cf49426fa921",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e58e890-6aba-4273-8e96-ca3d48fe0692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf57af2-75fd-4b60-b289-33f8d6869dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f07af9-a472-4bd3-8bb1-cf138527328e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65c77c92-0bc8-41ff-bdf3-a3d32c97cc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be510281-96a0-4295-85a4-9c0d9420fb54",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11d3adc-cec8-49dd-a625-9250f9a3f0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc5e5b3-a2d7-473a-ba02-05e99615c75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c2a4c3-fc2a-4663-8c8a-4abc706fa4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb156ce2-4870-475d-9284-c4f6c02596c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0765ad3-a157-4017-8c47-74cf972dcca8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c36c4b2-1a16-47b5-864d-5aedd154bb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8ca5ab-f0c9-4a75-b692-0624adf95dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a845dd-06ea-4066-8f04-0832bcaddcf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23613303-09bf-48ef-9b74-ce5d233c113b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f59bad93-708c-4f51-ae52-e7cde07208e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e5b49ef-1014-41aa-978b-8ffdf609b6f2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c190a7cc-af77-4b79-886b-0a030a7325f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a23841-968f-40e9-9906-eb11169e2203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20b8780-1f74-4c40-9229-1874e36a998c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67538465-ff4a-4532-80c0-d562abc4210d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19dfa350-e2c9-4be7-872e-6dc487284ce8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f78a632-6583-47ae-a808-1d969faecfc5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "859de4e9-d267-40d4-87f5-0b38fbc40072",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "956b66b7-08d9-4a2a-b4c9-918bfc9367e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "def397f5-2b9d-43c0-9c4f-b2959e0e10d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4e641fce-866a-49a2-8879-85f59e88af26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0337e413-83e4-4fd9-96ac-6253170cf878",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "201b8b0f-d909-48ab-808f-fe5305168552"
            }
          }
        ]
      },
      {
        "id": "9c0f21d9-802c-48b2-9712-c2504faa1d10",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9a7b8772-c8d8-4cd8-a0be-ebd45f56ad9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ed05334-c5fd-45a7-b558-88c74f5379f8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ee50521-37d0-41a7-9a9c-94c05f5335d1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d503c7-59ff-4add-9cbd-7d47bcec2ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9999e68-0fa1-4467-9da2-5f01df5cbf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54909140-e5a2-4a6e-b2ec-8dbf5f44cb79",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9c6941-2b12-4c09-82d6-39de14607ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e9691c-0cde-4177-8599-e7e5f1ba9499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be93f3ea-9b2e-43da-abd7-3c3b7ce1de94",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95979afb-6d88-438a-850e-18b4f20e3d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4986e488-1686-441a-b71a-1d40a48d2b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71134081-24d7-487b-8b42-eb67b56769d3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250c0d85-9f12-4326-8196-d8de80407c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684635c7-3c52-419e-962c-a6edcbed3f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b590351e-f6c8-4eb6-aad0-96dbc185ef1f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5666ddcd-7a80-4998-8fcd-cbaa22039830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59667a3d-8053-4443-9578-e26e633ecc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9cb422-d243-4fbf-9e51-1c4b3398a500",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9406c72a-6bbf-48b0-943b-5d53f707020e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239f4fd9-f25e-4c06-bfc4-a2520d51aaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06022a56-4dab-4cd8-8213-68430cb2b301",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1e5f77-d196-43ef-aa1b-ddad93d160ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b8333d-a575-4cae-a2cc-badfb639ccf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3659f2a-de6d-46f6-8b9d-bb501e13108e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f301ff76-cb4b-4625-8d5d-b68f40fa67b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9f9ab3-4d20-4196-a2e1-c57d74695ff4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7901396d-4534-4eed-a79b-8399ef5dd2a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dfb04ae-8d7a-4a1a-8e8c-ab5410ec60b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82297391-332a-482c-a326-af043e481ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da4f307-cf1b-4d3c-9b75-07e69cb24ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d414f1b5-522f-49fe-888e-087a6bdce244",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831fed77-c082-4c94-86c3-51d020b37c13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "053767d9-208c-484c-8a8a-0a4f1e8db7f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f94170-9552-4118-9c65-b89b524860df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5962985e-195b-4a27-8232-f2c410801fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6812f50-c183-417d-9f17-da9243047ccb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0618882-7380-4b97-9557-4de671336085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca0b94a-0d80-4621-94e5-8863b7748784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16b838f-a022-488a-bae4-b77f97dc85d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f078b3-ddd5-4dd0-8590-61facf3c16a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b83a8b5-3653-404c-a80a-ea4742b05750",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53eebd33-4fcd-4ff0-9101-5f8e019c0a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1c4b36-1e30-454e-98c0-5cb0ab022cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57df4ec-99db-4c37-80df-2e84289e7dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af9a674-dc77-4fa0-97f2-700011f6091c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a329b03-7ae9-4ade-97e4-3cb881eaef73",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e15f3bf-8b1c-4306-bf98-305af6072c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd82260-8662-4996-9aae-074fee90ae6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97022aa6-d51a-499b-b066-72f0044e5347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dd6525-0ff9-4cf0-8a66-c8ed934f8faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7a513c-48b9-4a0c-a1de-195cf0a301d2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec4ae09-b6d9-4253-9e4f-67d3c35c17c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e295a8a5-9f06-411d-9393-f2a36a0d766c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2b0a6e-4d0b-4745-aa3f-ac3c779dcb93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac903c2-443a-4892-9196-49c2aff656f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f137bb8-4a7a-45a0-b597-6213760c89f8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1cb2ad-d5ca-4326-93b9-0f02acca2f16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5b63815-08de-46d1-802f-92c42c6bf363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce229cb-6e50-4302-9b74-5356b68d4615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef93cad6-c11f-4df5-97cc-1c362446d746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c9ebcc-e291-44b6-94f0-99526ec02f50",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0079bc7d-3aa7-42ad-8953-3dbeb1b93dbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd23972a-368e-40e7-af17-adf383bc2942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae523cae-acc0-4f2c-b9fa-72f4ec62ea24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daee05bf-5b74-438d-9577-637689de6b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0bb706-cfde-414c-a9d2-5f3b165a213d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0523a5ac-86e6-4cfe-8369-8a1c3a4447dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d0e71d3-de4a-4cbc-a98c-b9aee52fb15e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d906aa7-51cb-4b29-930d-02264efaec77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525db1c6-19e8-4b0a-85c3-097841ed5191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd027e6-03b9-4e7b-8441-226b66949e6f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f51d863-ca57-4417-854a-bcf0d2192f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0927d8e3-bf07-4d10-bd48-cd0d450d8931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44350e7-43a0-445e-b82a-cc78e7cc7dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b00c04-0e3f-46d1-8042-cb8781f954da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eda7c26-cfb4-40c6-89ff-6c25842a817e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9566ee26-6adc-4276-844e-9e1c12fca53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fa535c-0896-4484-b91f-06b275f19b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d1e6b6-dc71-4543-b6a9-cbca5b07e5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a1763e-320e-44c8-9f64-81d6a7fd29af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1251ccc3-d1c1-4c94-be0b-070b5ab08a01",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69751cd3-4af8-45bf-b0d5-dda82589ed35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddd2716-c81c-4878-b790-d2f1b9e3e269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40e845f-3f43-47fa-90c5-06349362cc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4159c89-8b73-424a-9e9f-bbedb7d291d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896473c3-e9e1-452d-98d4-42ba1dc1f734",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d9d5f1-7c7e-476d-add3-119955c759b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f99e77f-6889-4a8f-9a8f-088f30acf0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7a17b8-42ab-4573-aba2-6a3e687acb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeacc72b-f795-48d6-b137-9e3f773753be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d2c5b7-9794-4f43-bf0e-91b92db07f19",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b858db-0182-4cbb-9897-ee0afbbfec4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8c6589-1fd6-46f1-9319-07ef90cff24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec88f05-743a-413b-93ea-7ac49d72d5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b25d55d-22b4-4e8c-9385-653dbf9fa9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2de6d1f-f4dd-4e39-8037-0e8db02c9ca1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f59b66e-a653-4dc0-a758-28fd8f208295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb34cfd0-658e-445d-a291-7b9ae788a8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8814cc5f-377a-46a7-a6dc-67935a7e3555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a41c8b-9113-46b8-9b01-c9826a1ef53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f91640f-4bae-4762-b1a3-18b7bd9aed97",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f637c88-ec86-44b8-bc1a-0944980960d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9191ea-d222-4f49-b181-94ac4f65ab21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cac8889-abce-4aec-a6f6-3b5fd52317c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cf8347-d101-4421-b2d1-58636b22ef4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b96592b-58ce-4b0f-87ff-9fd9fe7142a3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7ae026-28ab-421f-ac0a-884782a2c2c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ed2135-82b3-4b30-a3b2-1481c829e590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506107c2-ea78-4acb-a4fc-694ea8706473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd2a943-c5f0-49ff-b67b-ad52703043d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e424896-deeb-4302-bf25-fbd956d70ba1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca29b58-ade1-480c-a74d-95acd431358b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e681df-6f39-406c-98ac-805457aeb39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d846cc12-f931-422c-af3f-46e3f4a9a91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86742594-ae6c-424d-9733-a4a8442c72fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b450be-ce3c-459f-9a47-55fb420153ba",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9095c38c-22df-4142-b943-22f1e2f18e5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa343c43-f64e-47a1-a34b-26a46fb9d757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3ec4e8-bb8a-4958-8d62-a939d6251632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b850e386-582e-48a3-b504-b1ea88862e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc2bbc6-4956-44c6-83cd-5d5673f552d8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40fcdc5-a853-44e0-8030-d305b2fa1792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd2bb6b-6417-49c1-b912-caab6647793b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c9c060-0276-40b9-8aa2-b3695808a56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c1a5b9-8fcd-4e84-a3fa-4b37bc89d859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce16552-d640-47b6-a53d-446d24d80a44",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47e831a-a10f-40bd-a237-7fccd83a04b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5ffa4b-f763-4734-a682-c523744f832e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5602c90e-f75e-4e33-b3c6-832eaeadd567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497f04f7-2b33-45de-907c-bf9638d99e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7aba99-1c9f-4913-a800-39a8376781b4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf5b8d2-9f08-4e2b-b32e-40fd43728e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3d1aa71-6775-4345-99fc-a3b6808170cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b371385-c72b-43a6-8ed5-f6224bc528b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4238cff-1cb9-4028-ae1d-3a417bb37f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b26978c-9771-454b-824e-8b22a259ba87",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9907f6-8d8f-457b-8063-8f44f6569119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb6a51d3-6c36-42be-a084-b0f2c4d5ed85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83553cf4-50c5-4154-a481-d0791154fe95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736da50b-f4f0-4628-a009-bade9f6ca9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1521db9-b94c-41e3-838f-a69d3ae9abd6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5298108c-920b-40bd-87fd-5ec4bfd86fec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e8b7545-b908-48da-a11f-e613ed4b0b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6429df0f-4470-4b6b-8bca-7692153c4e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4fa843-c3a8-415b-991e-29dde8936dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514e1201-76f9-400c-9a88-52407feb1704",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6870cc-1abd-4060-a401-157553fe9013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c9616b8-b585-478a-ae03-9796626301af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e39a265-a0c2-44cb-821b-ca77c22caf99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dee0fa7-c5ce-4d56-908b-d36fee66afca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00eb9289-d934-4fb4-ab0a-4c109ea75a2d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee6a651-6ff6-4c04-9c3c-dca337109250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "460d7dc0-af0c-4449-bc77-46550bfb2e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd971a3-9987-4756-be1d-530146d593f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7088aedf-70bc-42d7-bf96-e0effa14f686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e2a1d0-7aa7-4087-9f22-8a16224eebcd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e967728-fc60-4604-81a9-41e675bbf1ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06af5f85-a301-48e2-b7bf-cffdce4c067e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "750c12fc-8b5c-4b5c-8c9b-f7670f60421a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fc7df7-bf77-4a16-ab74-751c79f02b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b54c4d-c50c-4dc0-8314-b68c6d101896",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2d3be3-711e-4a47-920e-c2d4dd8900be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be08cb9d-7f4a-4eaa-9b4c-883cbd26a868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced00ac9-ad85-4976-a876-a5634750aa23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cdeaec-9e82-40fb-acc9-a401326b3f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bd9dc8-c4a9-42d7-a943-67c95cf70e6a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1eab44-11c1-4a7c-820f-f92f6588ae62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614c1d04-389f-4f17-a53a-a7f14ee2bcfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee358b20-ce11-4e2a-9122-f229267b1f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444e0627-6b13-4d96-8fe6-81be4d070731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3285b99-736e-4639-a956-b449f8cb5ba5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4905142d-9f5a-4fbb-b8b0-9206007202e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271f2537-7da7-4ef3-a145-cffc86395a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af064f27-c274-4074-ad34-5e9ef36daf0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4b1d5c-4711-40f7-aaff-169bed6b0cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2aefea0-0bb0-4e4c-8804-fe6a98cb0ff1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c260e09f-f1b0-4fb2-9dd7-54251339691f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41359549-d249-4bd0-8c74-7f879903c306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "130edf70-a390-4ed7-ae0f-66c6260a84be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4686752-1833-4422-b337-530396db5f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d0eb63-4b63-49d5-a05d-61be30de846d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0ea879-deab-40a1-96a0-e83d8a119b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9edfb2f-fbc4-4cfe-aedc-3ebf1b073a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8887b4-e11c-4839-a7fd-2cadc956a4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1896e959-119e-41bd-b587-c891a0097206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7321da3c-69f6-4796-9da4-bba442695f82",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272d59dc-2ca6-4458-9bef-07cfdaa53422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012031b0-aead-49fb-8d25-195c75f13be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994df2a6-4e98-48f5-a988-d261da62578d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "742bcd8b-9254-4965-aa6f-6b0cfed410d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f409a733-4576-471e-bd87-e2ecafecfdab",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a8284e-b57c-45fe-a4ef-0e1fdf848a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f3c1c4-d4e8-4f6a-8a67-cb1e0c37fc66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "927ebad9-4ef3-452d-89cd-e0bc0cd11f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced2ea48-9f4c-4b8a-a44c-b13c5477abce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5524d466-0246-477d-95a6-2c4ca183d13b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ab7f15-b82b-480f-9d5b-a39bf52e189b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b197d8b7-cb94-42dc-b0f3-d15c9df6097b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0dae2b4-d9a3-47fa-9a75-96b1fe16063e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a69fb71-e20f-4af0-8046-7998774a15a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bea2e71-36e2-423f-88a9-5c277fba7127",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748e04bf-8b2e-4d79-a015-63986b62759c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5000f167-9b94-475b-aef4-5c345fca194d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de53e1a-f5ca-4584-8167-9b884df94b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9aa42d-d7ae-41f0-adfa-d6ac5eacd1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239a5ca1-3d3d-40f9-9a6d-a3355ef28733",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22241e25-18e6-4db3-9051-7aa7ecc17c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455995cf-8e26-449b-a3dc-30a526a1279a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62eb17b-e87c-4962-bd78-42343cd33054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34660680-3354-4516-9da2-e5b4855a4cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204ad34b-cef7-435c-8123-b63ddaf18d75",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702fc787-9b35-49d5-9461-ff64db44f3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37796f5e-acd1-4f1f-914c-e75f436a9372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e1db5e-0a84-40d3-8415-194932f16860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0f773c-72b4-438c-a3d4-47a3c342943e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152ee490-9d0e-4669-ab84-2d60063736da",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccd5f43-c963-400e-a86b-ce1d880bc852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56636a7-39ef-4a4b-84b8-7a5ad11b40c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0ceb64-cf7e-45f7-9772-6260c01a9f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b619bdd-8f96-4e68-b073-99ab7d10ca6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acd992d-696f-46da-8b03-a1c434e5ccb4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82f6095-171e-4951-aed6-620c0e5b1c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf41b50-6da8-4f46-bf55-a960ebad8758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e74403e-c8b9-49bc-9fb7-99f6a01a8f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3869ff20-2b4e-4978-9909-07904d1d2ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cceddf79-6f9e-4e46-9d4d-4e08a80f4509",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794a179d-b63b-4e59-90b4-bc65897ba7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6776253-340d-4f73-89d8-7803e4bf9c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ef5458-e8d5-423d-b2fc-2ee7d7597d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc59111-a67c-4f7f-a527-d9e277821a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930b64ec-e140-4282-8222-bd41c52f5dec",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b15a625-dfdb-40c5-9e6c-16a1333b65b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e8a907-4686-4eff-bc54-845b0730ccc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c662c309-bbe4-4be7-8b99-60b4b83702bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d51db4-f168-4694-80a8-a4a568d1441e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d5313d-d345-4671-858a-469cc258d270",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06acfebc-c1cb-4dc5-9d32-3a393096a646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52cd079-0482-4ffa-bdb7-2f24cde5b74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "574d5d9e-126c-49c2-a922-c353687616b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d4f79c-bbe1-4177-831d-26c9a39b5a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94186d80-0fe6-4c5d-95f3-d3a0d2b329a4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc485eb-4856-4ea0-8d8f-8e72b7a328c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb13856-81ad-47dc-ba40-6d9c2084a299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6be564-32f3-4287-8587-9e0f18ef97df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdac157-e83b-46ac-a7bb-13205ddbd1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa890912-06d3-42fa-8225-d57d6ff0830c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a64c71-0899-43ed-974e-2e1b65e3e0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34cce32-b4c8-452a-ad17-34e76bc9324c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a36809-c033-4307-a05e-34689dd3fb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4cfd3a7-387c-4edb-a656-cada563e1a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e949bc9d-b6d6-4ae8-9423-65211fa8226b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b8d214-8536-4c08-8fa9-a975dd86c9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0661eebe-cf9c-4947-94a6-bad93f43e0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63158aa-a45a-4ffb-8c93-062e9d07495f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43971f4b-4b51-4e6f-87dd-c97d1e43da2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069eadfe-109e-4d8f-8070-5c37db900c5c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8bbca2-e2ff-4353-9678-773dd482e35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2f2baa-8018-4e78-9c81-4a626c2fddc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ed032f-428a-4e07-a39e-ef5d4a22f4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e6e748-8ae1-40aa-b679-e5164323adcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fea7ff9-3d0a-4cee-b007-cb51b4115c4d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e958a09-d24e-43a5-867a-4b22364aa243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49155ef8-33b1-4b47-8259-332ce6101315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9c45f5-6cbd-4e8f-9fd5-fcf84f7c9fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd732b09-60b7-44b7-a910-887413c4db4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a118690-5069-41bf-b01d-ecd79ddbc4e0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c7d5b9-9181-4caf-8aa3-6b6faebe86b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b094e6e0-6f3d-4174-b4d2-e12b091f01ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db57e7f3-6aa6-4192-a095-b8441d399222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37641472-5bcc-42fc-ae59-84278a89cff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc748eac-3b8a-430f-aa79-9b580777ce1e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08fc547-dffa-42de-9960-bf6ac667846b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4ee516-4637-458d-b2c0-ab4f23825b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a96bf1-4f44-4ead-ae6e-e2cec4562dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e0f753-5590-4cea-a167-44b6cd54e29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a97a1ae-10da-4f21-be4c-678d83385bd0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2b7173-a2bd-4b36-8288-557e2f336636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61957afd-cc0d-4779-b7c5-71d607454f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa295d8f-abe5-42ae-93eb-cf874ce6fbbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72efa089-3020-4d72-a899-838ab3f9eb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a201267-d75a-490d-a6de-2c55b9c5f406",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad17ac2-42b6-4ad4-9ac3-fdf8b41aa8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4f1dc0-fe08-4e4f-9530-d036b6491814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6425d889-f19e-4406-9bce-c0af8da454f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be181e5-c118-4574-8355-14bed44bb3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3780259e-75a5-431a-bafc-9f7c51d709b1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1bab15-f22b-4405-8142-d372add67856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ea3cc2-d64e-49cd-a840-219778847272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4719b34-b693-4856-a9bd-88cc50db27cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa6fc75-70fd-439a-85a5-3d3005685fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29625cfb-8ca6-4c0d-937e-43eb004d23f5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d99224-fea7-4784-96e1-6ea6d6cf4bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3a158e-c499-4e14-9060-307d39f301e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de2de3d-519b-4974-9be8-1f28b49fffc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b7607e-136c-4907-b83e-b0f269f2b356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dd5e70-19ee-4266-bb1c-1827a4f60c71",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcba01f-d22d-460b-9840-4602ea0a122c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9c9c2a-4015-4dba-9b7b-6b246b4a1d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63b18a0-5b16-4790-a1fc-951b78048e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c195082-20ff-43f8-9621-747adf896366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe17393-111f-443f-bb40-cd0d16d68c55",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bb7a42-e61b-491b-bf07-d53f5d1c1524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8a92a8-d4c7-481b-8a67-f8c6657c95a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4442fd-ac28-4ae5-bf8f-37260fe738b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a00095d-d494-4dd6-83b2-9177cf5fd77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75de9723-0eb5-4ee4-8ab9-da84dd6f4400",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddf5b24-f1a2-4c1b-a317-6fb73262a10d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd6a9a9e-52a8-4f0a-bbe3-55a362a63276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49d9c99-bc59-4314-b1d7-18f9b32d6a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82516af4-0d3d-4c72-826e-19c3368eec62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888a4bb1-baef-47f4-b761-98cfb36201da",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f4410b-8e3d-49c9-8366-c2d67e3fe197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0609cde-39ac-4f87-b5ee-9cfe41a5b4a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86b85d3-9f86-4845-aea6-41ca1db11875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28147d2c-15e1-4ae1-8b86-ceba6be92ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5864c9-4b9d-4e67-af72-51095bd4f035",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2ea90b-3e9c-475a-90be-bcca99fe95df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e685ca3f-388a-43bf-bd12-6f615df45927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1246f2-387f-49d7-853f-e980dd3ccc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14dfd69-5576-4324-97db-e846ddfa0606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb0fd6f-5ff7-4873-9335-cefdc4e363fe",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27089a66-4366-4d9a-a71c-025607afa12d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a22f33e7-f838-4489-9773-b0139f147414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed70592-2ac0-4fd0-953d-05041820c874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeee285e-ba71-41ae-b66c-eb3b7e63833a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fda62fc-5fb2-4109-af92-b2835d46bcb6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f67518-f278-4634-b44a-3f81b910e77c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c28bbb0f-2704-4a42-bae9-0d1e26cb1d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf186f7-7abd-4666-989f-6360060d2218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07115172-13d8-4a60-bcf5-a5fbd16ba893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0171452-22c0-478b-b9ef-0f9f87f322d6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd52ed3a-d464-43eb-b74a-2902d0b86e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b65a3b-e2ef-40e1-978b-1d9c87c68353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f343d0-2adb-4801-a7a1-02388456d6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003efb62-88cd-4a9b-8c60-345a374f7112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7094b1c-1a81-41d6-8158-ac97ca05b27c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63555b3-778e-4a68-8e8d-2e9240c6b330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8541cdca-0bdc-4712-b9d9-6607412a3d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5878d71c-21af-4afc-96fa-0dfbfc4be78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf27768a-5232-4396-af2d-aab08f937ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70d8b8c-ff99-4df9-aae7-546d73b73312",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337b960d-5563-4402-b4ca-1d3f460a7c5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1265c0a0-2a26-4403-a13c-0098ab10b131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b542553a-c972-4cf6-b539-5337c3cff66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827aaa36-7061-4b7d-bc55-71470b9ede5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfbd673-7cf6-465d-bcc9-e8418d125603",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d8496b-72ea-4cb5-be26-c2c357983b32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f66ec853-0452-42f0-a0f2-dab3d34dac57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caab3bdd-a1ed-4902-bfb6-9ec71b06e163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f664bd07-6017-4b48-ba27-43788f06e0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539e56ca-4568-41ec-8e3d-a7d2bbd9c8d0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7882cdeb-37c0-43df-9f43-127b1d6935c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54efcc59-d029-4402-8c10-d352f3ec2368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79d9026-8555-4b65-b338-4be425dd7d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebbc388-41c5-4278-9653-228b14cf067d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3fe4a3-eec0-4aac-8950-ce39f1bf8679",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d7298e-8fe3-4e67-a8b3-406619ad7bb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f588f37-69fc-41ac-a6b2-197221452688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf59e890-b005-4a81-b6ba-93e93ae172a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8f2fac-5f6e-4051-8368-815376f9ff8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e214ae3e-12c7-48a6-9c52-9b6f70939f22",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a03f10e-510a-47be-beef-cbe6384223ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f3645d0-e176-4f8d-921f-03cef8b3dfc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a1d062-1e78-4919-ac7c-dd3d006be3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3bbcdd-3a2f-492b-85c1-eb22e7c17a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adbdd6e-215c-4f93-a5ba-44d3be9006ee",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5064d9-9ad6-4f56-93ac-0f4fc550e82b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0484cf27-3faf-4676-8a86-f442e1130799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde70bd2-3b3f-4950-9496-79bccaedcd8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc1527b-c2a7-4ceb-98fe-629eecaab54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3084ae-06ba-432f-b1ac-db6c220f9ce1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d48041-2329-438a-9086-af4fcf422942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c171f491-c78c-4897-adc1-d464ab427a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a958b485-1426-442d-99c3-b9f00650c144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648d095b-8721-41a6-b65e-3f9ee4ee28fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84b8124-0e64-4bcd-9037-c8526df24554",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbafd40d-349d-4292-b1d4-ea3dbac2dc3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7665f231-ad09-41e6-a541-80df79f7a38a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9c41c6-f03f-487d-a2de-7715644091e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ae5fd0-f0e1-486d-9b41-f4672d745578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fada18-414a-43be-b20b-2ed69f6bc70e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ad868c-876f-4f37-b5dd-f8947ac46065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e97d2bc2-1ea7-4c63-9be6-753ed9014300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10529f4f-e342-4199-bb71-9ed2930e54bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b76555-155e-4d5e-9f33-b4d59bfa11e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b50f221-850a-403d-b7a2-0e135849fe25",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef935d8c-3f5d-46b7-87ea-a4b8095df88e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10b2eb25-8c6c-448c-9569-d2f8fd2d629b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77548353-e1e9-42f8-b431-728594111acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4e8041-19b3-4513-9959-70397069c9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac54c784-4ed6-40c1-9184-8d2e4b425afe",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8286ac52-213d-4b09-aa56-a606facf29b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c27784d5-6348-4537-8d3e-80e424886c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6035e0-9c79-4295-b208-e2c607c5044d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e49c71-27a8-4382-a619-eb59f2e6ea97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0e394d-957e-4e75-bd06-58c035293a44",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a481fdf-1f6e-4eba-98c2-3b5c1e08ee4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69793d98-f403-4657-892e-445a244e729c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e0988e-aa05-4ead-bf84-5321064a6626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b199718e-a8cc-4b63-adf1-5dc27ca7c0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eeb2f97-4ead-460b-b253-7114d10b390a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cddfa2-8f68-42ef-8d94-71d9146f7620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f6ae94b-d77c-4d8e-9205-389868368f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beed2a20-b431-4f18-a83f-c79ee864469c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156b3bac-c57f-4442-a026-055755661c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851d5f26-ec7e-45ab-a46f-7850a2686d74",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe76c21-2a5e-4168-877b-866127287d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a665bd-1897-495b-9b37-c1f9a0eb27aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d5e0e8-3ae2-4bd0-b68d-5ff96c192c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f96fa61-3c32-4d8e-8639-33a196d11bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e070969a-ca24-4be0-a64c-37a5e74575df",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277cee71-d53a-4c92-9ee8-807a1fa86dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeae5686-b035-4662-877d-da4a4eedf604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d4cb86-2675-4d46-be38-77475fde1def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1bd026-85bc-4371-ac87-871b578afaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9d52c0-d0e8-4a94-94c3-455ffbbfe3a7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f03b02-b60d-4840-9b65-947ae7a38407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3e4134c-7448-4afa-b7b7-85bb693d697c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fae88e-5427-4bfc-99a1-1ff69f409241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0664cbf9-e943-4e85-b8dc-9ef777ac0bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb9aef4-ccb9-408d-a669-91d4ab313612",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e7c0dd-555d-4fcb-92f1-3b86846f68fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8d706ac-0f8b-49c7-8e71-021745d6b546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7d46a4-bc7e-4238-86c0-a8192b9cba69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e1f0cc-a964-42e8-96cd-28ab29e5169a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeab1e01-d346-4d07-8839-d3e9c4709fb0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997569dd-59ed-4a46-ad6d-c924800b34cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "418d48a8-f154-40df-9c92-a3235bfe8161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96150df7-a02b-4172-83a8-5accc35e4cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0822f545-a067-4c3c-921b-a35a8a6847b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592eeafc-d626-49df-b4f9-578ec65de947",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8efbf98-1500-4dbe-9413-488bb617abad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e54497f-884e-41d8-9412-4ac30cf6d6ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cc3fab-2e36-4e0e-af06-d774279c4190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631c2f42-f4b8-4616-85b6-7f49cc5fc3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c21a73b-7ba1-4bff-8ba2-898ab6360e33",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7d434e-6388-40c4-b81c-0fc755abe5ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf577f9a-bffb-4d1a-9811-34203478c2da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81ed3c5-5ffc-4d22-bb06-8ee9da1ac649",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f2e062-f716-4265-9d2f-2edee2dbe645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8ce020-82e9-4168-9b43-0575f134affa",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2874190e-4255-41c4-a223-08d0f8d2711e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba952ba6-cc6b-40eb-acc3-22969f75a831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d28212-9e57-4ad5-9cac-a1ed551d35fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fcaf25-48e0-4aa1-8eda-3ae4bfc2b9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aee7032-ae88-40e8-b081-6b9ebd8022b5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407899db-92ca-4011-a1a1-044e4273f694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94cb99d4-fe00-4415-a126-b67621098509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c547b7c8-8759-4ebd-ba9c-eae3e49ff072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeeb0574-7f4d-4435-a4d6-27dab2d18931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637c0a5f-6d94-46e0-a906-98c1a1323c59",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52cffac-4297-410c-966b-17263a394c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a7ce34b-c2a8-4bfd-abc1-c2d5d28a40a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de52ec6-08fe-4be8-a4a3-80ff5f277b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3024d1-c5a5-49f2-8566-ca78ff2d6987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0328ca52-f58e-469c-b244-b529b31c65f7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254cac3d-6dd0-4019-8427-01d50f11a0aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32ce3498-8630-4876-867c-33014a009d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdaca418-c637-4fde-aacd-6074b096ad07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561554a8-b3f7-48d2-a382-342d0cd75948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7010e25e-b76c-435d-9f03-3a0da68f1e34",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bc7753-17e4-436a-b358-03d7c64e4307",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36ba7aeb-2ff9-433e-9a67-dc3799f442e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43535145-91f4-433d-a1a5-f0ff74b76892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ebc806-dc7e-485b-ab1a-72c3260de73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff5d4f1-50de-4241-894d-af302955a7a0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4032213-ec86-478d-bfbf-3d75b86d2a42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e45cdbb-1ad9-4990-8429-df54f7191b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d2d20a-19b1-4565-ac23-a9e12607ba26",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fd3491-6fda-44d5-91e4-d5e16207e2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78a8eef-8076-43f2-8392-4bd6380f631e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64a2786-268e-4d64-b35d-36a5176b0ab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1383098-614c-477c-9370-c941bb07f02d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6beb88-3310-4398-9541-1848e80706c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e22ed1c-813a-4acd-8bf9-da4bf73d67fd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dab7b344-f693-4691-a8ab-746e143f2fc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f98db07c-1bff-4716-b44b-aa43d3c825d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dabdca3d-7c4b-4a08-8fd6-041673481276",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b476acc-aa48-48f2-b913-a468c780814c"
                    }
                  }
                ]
              },
              {
                "id": "2a260063-7038-4d47-8703-933b3ee04385",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0bca1602-83d1-4c5f-a774-35a4b61f1a20",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0a7204-b381-4960-a112-ce59c88f09f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5185454a-7956-4b66-bc31-4bc65b59da9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816847b3-32a9-4e74-a8d4-04b3f38fa979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9cace04-bd16-4e38-aa73-2b0a858c6633"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fba15f0-1f5a-4d42-ac8d-0850da77b727",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9360ed32-319d-46b1-80e4-f10a481d950f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "736bd7a8-6902-4948-aa29-3ad612f65cc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e71ced6-2c34-4628-b6b6-b79bf87e0ed6"
                    }
                  }
                ]
              },
              {
                "id": "da9ba241-d653-4872-8174-3c92ca3a1380",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "aee0917b-7d2a-4175-82f6-f1a3574f95b6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af097d5-4839-4db4-9d4d-c0850bac572e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f09e4123-3dd5-4c60-9b7c-fcb800a3b680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52aaeb74-f179-40e7-9a72-2f628dfd5fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04be37db-cdb9-4c1d-9d55-6d7a294763cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "69564089-10c0-48be-9473-a5e4ccd618ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6586a01a-4c60-43e3-81bf-55ac9111cccd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55f7d5d1-c203-4225-8348-d91017de29b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "822871c2-7d65-4014-ac6b-65f9e24d35b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c39b7de-a8cc-4061-b026-213d3ceab039",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf62ef11-d30a-4d1b-a43f-7e4d31ef66ec"
                    }
                  }
                ]
              },
              {
                "id": "a8d88724-5207-411a-9463-0521aa2a40b5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "daef0bb9-45d0-42a5-913e-09c18624bbb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ea2fbfe7-2fab-4a40-9e23-3766821d587f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bb6bd6e-0d07-4e8b-a2d6-bcc295657d0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d37963c-6b24-45d1-8810-114c257fc84a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24911009-3a98-4bb4-938b-15aeb437be62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ee80505e-0328-4b77-abc8-3ae33c1e2165"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23cb4627-b319-4058-a6c4-e61b98bbe80d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eaaefa49-c38c-403a-88ab-d1c3a1bff63b"
            }
          }
        ]
      },
      {
        "id": "a37a4112-1bf8-4b59-85b5-21da33c2582f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "afa5c58c-e2a3-4478-ac1b-2f2189a184dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "382dd934-29ca-4b1b-b680-d9b84cea72ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "783c9b30-f228-44e7-a287-8cb6b1780269",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12efb1cd-9350-4f43-a059-a63ef296189f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fd5d940b-6b07-4ca7-85b1-24e284521d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59d6f61-ea64-4973-b804-700c065c6c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1665b873-4d53-40ae-bb9d-49faba44ce32"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60f99a6b-5207-4e7b-ac14-577c52bd4fdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd2a2491-f371-42dd-8f03-00e637e749bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5659ea2e-b127-44ca-bb69-c5a8ecba5ebb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6dda5bd-3801-4c85-8518-8dcbf6b4154d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f98a2d42-2aac-449a-b11c-e30132198456",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1b050286-b3a8-46ed-a8bb-bad958e929d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d949d98b-b38c-4c5e-a457-6993fd486ae2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51bd837d-ea6e-46f4-944f-c80d286031e8"
            }
          }
        ]
      },
      {
        "id": "48f4e6ea-51dd-4691-9ea6-c70e6b289acd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "113a0386-790c-48a4-9809-7e2c6f290fbd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11b3d73b-a7f8-4f99-a4de-40e5f3d244da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab515c3b-4e4e-45ab-acbb-f5656ecd69b5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598b2aff-967c-4ffa-98f5-9a33bf9dae38",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da2057ac-da2f-4149-a0f1-05ce6bdcb683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae1a5f2-c02f-433b-972e-3d8c48c47fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "deb95a18-9465-4a5d-b211-10d8caf5366e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "922dae9c-d560-4720-be15-cd1276fc7e21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4c37a0c-11af-4479-a391-3cc371cb5e79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "923403af-31bd-4002-8ff2-913d188366fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab491118-da8e-447a-9cd3-0211b8cd82c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77325c75-201d-46f9-9b74-2ccbeb6e42b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9fb6f6d0-1c4e-4d17-bfca-961ab71126fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7db9e73-b133-4d50-9239-94b9f89bf936",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ae00642-cf1c-4855-9249-d24c456fcc1f"
            }
          }
        ]
      },
      {
        "id": "b38881c1-4842-43b7-91e5-4ae3741d5a22",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1e041218-2014-4a47-bbca-7ffe804cef7a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7634942e-5878-4d82-952a-9629f96a616e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc83863b-3828-4c16-8cdb-f56df5c70f1f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac19b73b-edea-4cd1-a8dd-139cbe90219c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1620c0e0-4628-48f7-8a48-d58bea2a9558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95ac473-dfad-4914-bbfb-071d5d294d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "241edc89-8eaf-480d-993f-73d7aeda3a18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a37ecb4d-6d8c-46ad-ad19-c618dbadd4ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45a194d9-aa66-45a1-a0a9-7d51a84b05af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e196d89-dd31-422b-83d1-af32120e7542",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b1ba70d-1bb5-4b68-8811-c83dcdaeece9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82d1b5eb-f7cd-4381-a430-c08ee73a827b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74fa1ca6-da7a-4a80-95a9-5e176f207b85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fa94ea7-9eca-4e11-acaf-e25e62d771c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c44ecfcb-a689-4bc8-ad3e-1e9726386e38"
            }
          }
        ]
      },
      {
        "id": "9eb1e63f-9d4f-4032-8b42-d26500a9d58e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33ed3231-1bdd-48ed-8ea9-bfc29bc70082",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c22bb0a8-339a-4f58-a9c3-5cd43fa517d8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "139ca4eb-f9a7-44ed-8a5d-3f0baaa104ab",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d46aea3a-1302-45a1-aa5b-06e4a1815852",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3ebeeb3-ff5b-4b23-b305-a47eb3f28f7f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 344.781690140845,
      "responseMin": 8,
      "responseMax": 7341,
      "responseSd": 846.633591500065,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695688559798,
      "completed": 1695688671614
    },
    "executions": [
      {
        "id": "102209a9-58bd-4c26-8aa2-06b11024b78f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "944dd35e-7ad7-46df-b151-0c755b6f1bd7",
          "httpRequestId": "70344648-4b71-45b9-b3f5-0d012cf5b794"
        },
        "item": {
          "id": "102209a9-58bd-4c26-8aa2-06b11024b78f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5a7b4710-a142-487f-af4f-20097cfdad60",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "a2bab8c3-5efc-4276-bf1f-89836f7252be",
        "cursor": {
          "ref": "ee1864ed-7c3b-4732-8bce-a3625074bed1",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e1bb6ecb-83a3-4d0c-bbaf-962d93938f02"
        },
        "item": {
          "id": "a2bab8c3-5efc-4276-bf1f-89836f7252be",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7c5b7488-7cf9-408f-bdeb-f258c791e8cd",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "b636ff46-ee1c-419d-b334-2d822015ad15",
        "cursor": {
          "ref": "64bd15c1-a6d9-4749-b11a-87544b12d7ef",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4c87511b-cf1d-4bed-80e7-d9c335c289db"
        },
        "item": {
          "id": "b636ff46-ee1c-419d-b334-2d822015ad15",
          "name": "did_json"
        },
        "response": {
          "id": "248dde42-5dcb-4491-9f55-247bb3ec3ae5",
          "status": "OK",
          "code": 200,
          "responseTime": 1534,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02edfe7-355f-412b-a47f-de73850fc2c6",
        "cursor": {
          "ref": "65813c0e-ee85-4b86-ae44-66507172d031",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "daf00a90-a8fd-486d-861f-b284d600f01a"
        },
        "item": {
          "id": "c02edfe7-355f-412b-a47f-de73850fc2c6",
          "name": "did:invalid"
        },
        "response": {
          "id": "de5c0db4-1764-4041-8095-7fd9076b6fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02edfe7-355f-412b-a47f-de73850fc2c6",
        "cursor": {
          "ref": "65813c0e-ee85-4b86-ae44-66507172d031",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "daf00a90-a8fd-486d-861f-b284d600f01a"
        },
        "item": {
          "id": "c02edfe7-355f-412b-a47f-de73850fc2c6",
          "name": "did:invalid"
        },
        "response": {
          "id": "de5c0db4-1764-4041-8095-7fd9076b6fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dcfeed-0912-41de-bf5c-77a18e10ef3b",
        "cursor": {
          "ref": "11927695-ea1c-4a86-b976-3fbfbd6c2d2a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f252b438-4d4d-4516-a519-1ac1eb16ee69"
        },
        "item": {
          "id": "43dcfeed-0912-41de-bf5c-77a18e10ef3b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6c8ba79b-e833-4b61-90fb-48f8071b9631",
          "status": "Not Found",
          "code": 404,
          "responseTime": 480,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c9888c-e56c-44b4-9ddc-4c7727636730",
        "cursor": {
          "ref": "88bfe0a2-2eb7-4483-9a45-4a26fb35acb2",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b39c5a02-420a-4987-af1c-19646f570aa1"
        },
        "item": {
          "id": "e7c9888c-e56c-44b4-9ddc-4c7727636730",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c426e85f-808c-401f-9378-da62c749e1c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 291,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a448e2-37d6-4004-99e1-23c6c5471fbf",
        "cursor": {
          "ref": "8cff176b-49dd-489b-81ff-109dd882929d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b22f332e-3cb8-4e52-bcf1-43ef4ad3f6ee"
        },
        "item": {
          "id": "d0a448e2-37d6-4004-99e1-23c6c5471fbf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "55715a92-4c21-4edb-961b-f818da1cd909",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fc299d-db55-441a-b08a-07a0a5c925d9",
        "cursor": {
          "ref": "83492a69-ef0e-4e29-b353-53b33f5c3d42",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d1f7b680-ef69-4dba-9e6b-01e8f13ee51d"
        },
        "item": {
          "id": "a0fc299d-db55-441a-b08a-07a0a5c925d9",
          "name": "identifiers"
        },
        "response": {
          "id": "aeb575e9-5e4a-4185-b644-e5b3bd7d9ea7",
          "status": "OK",
          "code": 200,
          "responseTime": 1277,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5855cdf6-1352-461d-a991-22c8715212b1",
        "cursor": {
          "ref": "306bd778-61ae-4162-9b53-0a6f45abc6d4",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4f8cba58-cf36-4943-b015-1b3e35404146"
        },
        "item": {
          "id": "5855cdf6-1352-461d-a991-22c8715212b1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7eebe1b3-f22c-472a-856c-f58abc7a518f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77150c45-f746-42df-944e-00ba4cf2238a",
        "cursor": {
          "ref": "0b13262c-d2db-485b-b27c-6b6f62911c53",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9d6c688f-d063-405d-b43b-5360f0772de9"
        },
        "item": {
          "id": "77150c45-f746-42df-944e-00ba4cf2238a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "08f8c642-d9ce-442a-b405-7070bfcc5a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646c3798-d6a0-4f05-a90d-415ba3a7a8fe",
        "cursor": {
          "ref": "fa41bcf7-520c-49b1-9dff-a0b2045dabdf",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "efbee98b-e36f-4a1e-831d-0d5d24402c45"
        },
        "item": {
          "id": "646c3798-d6a0-4f05-a90d-415ba3a7a8fe",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "311d0ef0-1ab2-4a7f-bfb0-83394918eb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d2c366-87c0-440f-bf51-8e18a15a6bcf",
        "cursor": {
          "ref": "842f6fa2-4b26-4202-8a52-6b2a3c403f4e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4b0b078e-c7ea-41c1-9c9f-9089912e0412"
        },
        "item": {
          "id": "74d2c366-87c0-440f-bf51-8e18a15a6bcf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2a7003b5-41d4-4424-97f8-3894deb39d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3937d32-6fae-4f0a-95c5-8d03830cd272",
        "cursor": {
          "ref": "b1b9c116-2c07-4996-985b-d37c19e06f6f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "421e0884-6e07-4838-bd7b-0c42b2672a88"
        },
        "item": {
          "id": "e3937d32-6fae-4f0a-95c5-8d03830cd272",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "eb6d7c05-47b9-4e6d-83ae-1e3b29496519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673891b5-e0f4-4fac-a723-5ce390ebdb45",
        "cursor": {
          "ref": "659b3a94-04e9-4c00-8123-eb1bd4bec0f0",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "20daf541-145e-4759-b431-a2879456eb1c"
        },
        "item": {
          "id": "673891b5-e0f4-4fac-a723-5ce390ebdb45",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c68e16c8-a6c7-4334-b52b-9f4e3f251ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9164f51f-76a5-4521-91f1-6843cfb1ba6a",
        "cursor": {
          "ref": "44c0f7f2-ec9c-4609-8721-70ed52374600",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0da21a8e-f053-47bd-a34a-9defa0f4d6e8"
        },
        "item": {
          "id": "9164f51f-76a5-4521-91f1-6843cfb1ba6a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5ce471b0-1a5a-4800-86ea-523dd60bfa31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ddfead-28ac-4bd6-b830-768571906b3b",
        "cursor": {
          "ref": "4097fda9-2778-430e-a2c2-6372b2ca83bb",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ec02290b-9f16-46a5-a9e6-b17b82f75ed0"
        },
        "item": {
          "id": "72ddfead-28ac-4bd6-b830-768571906b3b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "15d3afdb-d099-41a0-8fe4-1f6487213b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d974c368-fbf8-4206-a510-b4f5c9d66c87",
        "cursor": {
          "ref": "97b1ce69-8915-415d-8771-957f5f0f1ffc",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "38af23d3-09b3-4881-a658-ea238de541e7"
        },
        "item": {
          "id": "d974c368-fbf8-4206-a510-b4f5c9d66c87",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cc360395-a695-4e60-bcac-4942014296f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c9846d-f7e3-42fa-a16e-aa2c29a987a5",
        "cursor": {
          "ref": "addd7953-9cb9-431b-b380-aa9d69e2c9c1",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3b5202c1-1ac1-400a-80b1-30f889cdf84e"
        },
        "item": {
          "id": "62c9846d-f7e3-42fa-a16e-aa2c29a987a5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f936ed4e-8542-4459-b492-707f850074d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca30e10-e24f-420a-8834-e40c2628d6b6",
        "cursor": {
          "ref": "2e67ce2b-c514-4877-a6d7-a76ca6085e86",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1732ce01-cfa4-4640-895f-63076bdd71f3"
        },
        "item": {
          "id": "dca30e10-e24f-420a-8834-e40c2628d6b6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a002d2a2-54f7-426e-b40f-1b941d80b422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d37ae04-4dad-4289-9192-7d25ce83bd48",
        "cursor": {
          "ref": "df4961b2-dfcb-47ea-91fd-a854b884415a",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "966ccc80-e971-43d5-9cf9-ccf2ea0c0754"
        },
        "item": {
          "id": "4d37ae04-4dad-4289-9192-7d25ce83bd48",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ea7b0271-b99e-4ba9-bced-5939d054e632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a61da3-625c-4990-aed2-4f851c4b503f",
        "cursor": {
          "ref": "58cde0c9-dcd1-4834-bdc4-c3c3a5bdbaba",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b8fe390b-d9d6-4700-8fe1-c5e734e137ef"
        },
        "item": {
          "id": "60a61da3-625c-4990-aed2-4f851c4b503f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "79fc428e-492a-477a-be5f-93de1d44473d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962ffde1-bcf4-442e-bd8c-7292665a1a49",
        "cursor": {
          "ref": "5c88d1f2-6c9b-4e16-afe6-29a2ee25906d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7092c8da-8abd-4aaa-b518-04d623efe1c3"
        },
        "item": {
          "id": "962ffde1-bcf4-442e-bd8c-7292665a1a49",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "38dea432-801c-400b-941e-e0dc19bc7903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc99749-fb19-43f4-a785-b25bb29de369",
        "cursor": {
          "ref": "b9fd79a4-9008-4031-adad-387411ebe0a8",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0b46313a-25fe-4457-8235-42b7e1d476e6"
        },
        "item": {
          "id": "fbc99749-fb19-43f4-a785-b25bb29de369",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "00b9adbf-df8f-4a0d-9856-247276bdd2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f993b9d8-5579-4abc-b93e-9d194d658130",
        "cursor": {
          "ref": "081ed17b-eb5a-4a4b-9a3b-a880fa900e41",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "64465840-6a86-44a3-9317-88e4fab8c49f"
        },
        "item": {
          "id": "f993b9d8-5579-4abc-b93e-9d194d658130",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "20977c70-a7c3-4307-a463-7a342f039042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a84bb5-caf1-40dd-85e5-4ad35a719b38",
        "cursor": {
          "ref": "09b650f2-fc53-4ecb-858a-3fcc932d3fbf",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e13e9c68-777f-470e-a267-8d1bd8a5a093"
        },
        "item": {
          "id": "a3a84bb5-caf1-40dd-85e5-4ad35a719b38",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6ddab2dd-b2b6-48ce-b51f-5a5e4f99d9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9ee8b4-5791-4106-bce0-928927e23e04",
        "cursor": {
          "ref": "cb2c2759-43b2-482a-819b-6e15dccabdf2",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c75f5360-4c6d-4afa-8f1e-330a078ca057"
        },
        "item": {
          "id": "db9ee8b4-5791-4106-bce0-928927e23e04",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3a241471-628c-4d50-a51b-ad5813033fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179518c5-74f5-4b38-a6db-e0afa87fb5ff",
        "cursor": {
          "ref": "40f68a94-712f-4c4b-a091-bdd6b6b10a03",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c5793ec3-8198-420c-8a16-b81698bdff2a"
        },
        "item": {
          "id": "179518c5-74f5-4b38-a6db-e0afa87fb5ff",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3c87af23-7e4c-46f9-94d2-ecfd18bd40d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736f0a89-685b-4ac9-a3c0-d616840f77be",
        "cursor": {
          "ref": "35c53562-ce05-426a-b675-eea18aff1986",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fb14d68f-b199-4b54-b1be-898faa0c159d"
        },
        "item": {
          "id": "736f0a89-685b-4ac9-a3c0-d616840f77be",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "93aff8d4-4c0b-4cfa-a001-5cbba07420c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55da0d1f-f5eb-4fcf-b9bb-8129c27c37d9",
        "cursor": {
          "ref": "c0cb8892-5613-419d-8be2-b1acd4e07045",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0709f6d5-c682-4a2b-a891-c2abcb035d72"
        },
        "item": {
          "id": "55da0d1f-f5eb-4fcf-b9bb-8129c27c37d9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a38527b7-5c78-4e3a-b2be-e04a4cddadd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0884b942-e715-4ea9-9164-e76fe912677c",
        "cursor": {
          "ref": "75537f70-4e20-43cf-955b-233a5c57c029",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "752e2a1d-4f94-4526-85da-165fbf99a52c"
        },
        "item": {
          "id": "0884b942-e715-4ea9-9164-e76fe912677c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dc602ec8-d661-4919-9fc9-0e72a0111cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec5c600-39f2-4331-9857-92b83c415f50",
        "cursor": {
          "ref": "7ccc43b6-92b6-4136-a161-dfe20002ed9a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "09a559e7-071e-4be0-a04a-5585910102f1"
        },
        "item": {
          "id": "4ec5c600-39f2-4331-9857-92b83c415f50",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ad12fc0e-3e0a-4e72-9ab4-1534975e10e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f09487-7fed-4530-811c-db85d4d1a4b2",
        "cursor": {
          "ref": "02c36b35-2646-4440-bd3c-6dad73fa6e60",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "498a524b-69a9-4093-887d-974de8617dba"
        },
        "item": {
          "id": "80f09487-7fed-4530-811c-db85d4d1a4b2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e48e95b7-c73c-4c84-8fe0-f164aa6417bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026914ef-7c00-4baa-ba05-fa2c24efdf93",
        "cursor": {
          "ref": "09dd12b2-4935-4858-8642-b341e9178dd7",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e19e9c81-c2da-4392-8c8f-8335fe6c0a53"
        },
        "item": {
          "id": "026914ef-7c00-4baa-ba05-fa2c24efdf93",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "40d96330-9d9f-49d0-9b1b-bebb3d2bf796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdbc00e-68e7-43fb-a52e-f88acdb1fab0",
        "cursor": {
          "ref": "c0bec805-2852-4d9f-882f-5c061ecb3dfd",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e2c28f96-a180-411f-abea-8e36630e2af5"
        },
        "item": {
          "id": "1bdbc00e-68e7-43fb-a52e-f88acdb1fab0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b97812e8-4398-4965-916e-fb0a2f2284fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4698206b-5c51-480d-b70f-7499bfa2d087",
        "cursor": {
          "ref": "670362bd-17f9-4ae4-bd19-ed159a45e45b",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b47eb246-7450-47e9-88c2-0e38a684e68b"
        },
        "item": {
          "id": "4698206b-5c51-480d-b70f-7499bfa2d087",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "53537fc7-6316-456f-bbed-c233db73856c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b4388d-6d70-45f4-8c8d-eb8eeaf3250c",
        "cursor": {
          "ref": "2b603e08-62eb-4097-a768-785781c7e449",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "06e7468d-5445-4ada-961b-d02d1a21e33c"
        },
        "item": {
          "id": "40b4388d-6d70-45f4-8c8d-eb8eeaf3250c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "142db85d-aea7-42b9-8069-0c62dd097b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf0a83e-3c08-479d-8b86-fc781fbfae14",
        "cursor": {
          "ref": "825f505e-6cc6-4e54-b403-508abf652003",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0eeeb8ce-956a-466d-b2ec-7241c9e362c4"
        },
        "item": {
          "id": "0bf0a83e-3c08-479d-8b86-fc781fbfae14",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4280ac1d-e4d0-44ad-9924-3bbcc51c009e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1aa440c-6f0d-4ba6-b1c6-e913472df8dc",
        "cursor": {
          "ref": "f335e73a-bf15-4e4e-ac3b-12c20a08bd07",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2ac3bdf9-bfec-4935-aa44-3d7c1a09eef7"
        },
        "item": {
          "id": "e1aa440c-6f0d-4ba6-b1c6-e913472df8dc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "77132827-10be-403c-85a4-bb64aff2b7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc297dad-d9cc-49c1-a125-c6247a2cef1d",
        "cursor": {
          "ref": "350d8bbf-463a-4d75-8b3f-d28470121ab5",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e8e18952-6d3b-4245-9754-47113334ca4b"
        },
        "item": {
          "id": "fc297dad-d9cc-49c1-a125-c6247a2cef1d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8584e4be-12f5-4dfa-b72a-2c5ee455eaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712c571f-7ad5-45d1-8e80-6effd7b3bdd2",
        "cursor": {
          "ref": "66c04946-c7bc-41bc-aeeb-9fa647d5924c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c0584b01-78d2-432a-8022-672dcca0618b"
        },
        "item": {
          "id": "712c571f-7ad5-45d1-8e80-6effd7b3bdd2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3b1f3ac3-e903-44e4-b18e-164810579e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eecc738-e22b-4b2b-bdda-7747614a4aa1",
        "cursor": {
          "ref": "cb4fd56b-d13c-4ee6-9a43-eddd46962542",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "60d62ffa-9200-4909-b641-bf51f909415f"
        },
        "item": {
          "id": "8eecc738-e22b-4b2b-bdda-7747614a4aa1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "89b469c8-8ad6-4131-9d99-32d5f3355450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc6caac-39c4-46b1-8f3c-314710aed231",
        "cursor": {
          "ref": "138eb9f2-7bad-4124-b1df-43df1031a710",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3c4dc856-d540-4983-9fd5-d7e7d2b18efa"
        },
        "item": {
          "id": "bfc6caac-39c4-46b1-8f3c-314710aed231",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "37f634c1-3197-4c80-83f2-cf96e45102d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4755a25c-b62c-4110-bb3e-7a15de8a9bdb",
        "cursor": {
          "ref": "b4efbbf6-4f53-4e54-abd6-c761e5ddf1b4",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3de91085-7ed1-46be-9924-77f9541da897"
        },
        "item": {
          "id": "4755a25c-b62c-4110-bb3e-7a15de8a9bdb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "27f373a2-155c-4500-ac07-6e3a05e82aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9c497b-4c8a-4c70-aa8b-37af0d1a651a",
        "cursor": {
          "ref": "0bef75e2-c538-461f-b58d-c157ec787537",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "249fc813-450a-4e45-ad1e-aa83fd98e55e"
        },
        "item": {
          "id": "9c9c497b-4c8a-4c70-aa8b-37af0d1a651a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0877d02a-0e34-477c-9c31-c1a849eb1e86",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 622,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3fbef5-57e1-44de-a129-4272235a04f0",
        "cursor": {
          "ref": "adde443e-2d64-48cb-a591-ae8b8821df42",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4ebeaea7-c706-4ac0-992f-86feb88f9d92"
        },
        "item": {
          "id": "6e3fbef5-57e1-44de-a129-4272235a04f0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9a4d8c0b-9431-44b0-b888-7daca1c05792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c947b2-dae2-4a82-b9c6-865a5310652f",
        "cursor": {
          "ref": "e2164bea-a049-4e84-b438-6613d3a6a450",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bc17d437-6df9-4ea8-ad4a-1dc04ba90685"
        },
        "item": {
          "id": "d9c947b2-dae2-4a82-b9c6-865a5310652f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "43a8c96c-5ec6-484c-919b-95fb65e5e410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa597c4b-47aa-483b-8f34-012302378530",
        "cursor": {
          "ref": "33c8c77b-6280-4f63-814e-adf00fcb058d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d56c219e-c2a6-4a76-b4d5-cc505d3ece64"
        },
        "item": {
          "id": "fa597c4b-47aa-483b-8f34-012302378530",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2219ef0a-88d3-41e0-9417-ef944af5fe7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22054e6e-8bbc-4352-be1c-4db0672aabda",
        "cursor": {
          "ref": "1e9373a3-de91-4b63-b613-e9d25ddf3709",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "330a80e5-3ab9-418f-8eb8-354404aec933"
        },
        "item": {
          "id": "22054e6e-8bbc-4352-be1c-4db0672aabda",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c28b1c51-9c5d-4235-9e89-d28d2f292574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1708f4-08b3-4fb4-8886-ef7aed4d74e8",
        "cursor": {
          "ref": "44d2445b-c6e4-4c50-b4e2-baaed8037c06",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d4f4c7b3-09e7-4582-a4b1-e80d3e63b41a"
        },
        "item": {
          "id": "dc1708f4-08b3-4fb4-8886-ef7aed4d74e8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "05817383-16eb-4426-a3f3-681889fe0765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597aee83-f602-499a-8b1e-cd7fa11f13d2",
        "cursor": {
          "ref": "073e44c1-7336-4535-b564-ceef7df2db0b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "14d452c2-9f1d-4776-b93b-7b00740c176b"
        },
        "item": {
          "id": "597aee83-f602-499a-8b1e-cd7fa11f13d2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "406910d2-59f5-40c1-a43d-1ac58c233ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f29c65d-122d-4d1d-b350-97af4f881d53",
        "cursor": {
          "ref": "5bdb3171-be76-40da-a6e9-4cb73ba41bcc",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "57d07213-db1f-42e3-ba4c-e45e820f844e"
        },
        "item": {
          "id": "7f29c65d-122d-4d1d-b350-97af4f881d53",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "56d115b1-0680-4326-b440-3739d4d7cb3b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 621,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f433ead8-6290-470b-8849-b8112d02eeb9",
        "cursor": {
          "ref": "3f08c0c6-e007-4eec-9717-7f5b8c6fa50f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7320e4d0-9da7-4f87-aac4-6d931907d269"
        },
        "item": {
          "id": "f433ead8-6290-470b-8849-b8112d02eeb9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7634b243-d8c9-4d7d-99cb-45b8a6fd4694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c066cc-d658-4e36-9888-f1d990e0423c",
        "cursor": {
          "ref": "26c664f4-ca32-4086-ad78-d7dcb8cc9816",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "820096d3-a585-4c6f-983c-4d4c3160a2a7"
        },
        "item": {
          "id": "b4c066cc-d658-4e36-9888-f1d990e0423c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "962ac705-333f-4c45-ae0b-9c2dc82e9340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e20149-5f68-48e0-8ebb-df6d6055f49f",
        "cursor": {
          "ref": "5da10be0-656f-4c59-8e29-c8cdf3e22f69",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9f4e1d69-507f-49a8-8174-3b55cf20335b"
        },
        "item": {
          "id": "82e20149-5f68-48e0-8ebb-df6d6055f49f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "629f2bca-f0b3-46bb-95eb-f61466f4efc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754ec438-9c91-41b9-bc29-80cdb464ab4e",
        "cursor": {
          "ref": "fa8e56b5-cc4f-474e-bdcc-9573fbc867dc",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ac285680-6888-40d2-a21c-5a7e84fb18fc"
        },
        "item": {
          "id": "754ec438-9c91-41b9-bc29-80cdb464ab4e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6f960583-56ca-486c-81f5-943a7dd95bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825c5279-7eb0-4097-ba2b-8f4a484423b6",
        "cursor": {
          "ref": "807d2e06-f73f-4ecd-a77e-0d26bb0287b3",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b705be70-8777-4663-a822-1ad82397211a"
        },
        "item": {
          "id": "825c5279-7eb0-4097-ba2b-8f4a484423b6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1923cb52-09e5-4520-9f45-6ee9c1fd05a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8094a223-86d2-44c1-bd91-a07cc829d66f",
        "cursor": {
          "ref": "7606d5f9-60c8-4c05-a4c4-a501786eb1b4",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a5f78929-59a2-4d8e-a9bd-a02b32a22fd4"
        },
        "item": {
          "id": "8094a223-86d2-44c1-bd91-a07cc829d66f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "37373cb4-d9e2-4f18-9c5a-eb4f0ec56718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07c7499-9997-48fa-97e3-2715407e7945",
        "cursor": {
          "ref": "c928101f-81fc-496a-8f58-94e71b4e6cf4",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3ee74ffd-6af2-4994-8e7c-f9743db1aeb3"
        },
        "item": {
          "id": "e07c7499-9997-48fa-97e3-2715407e7945",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "135c7b26-88dd-4544-bb5c-dafd550783e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db0e36c-e3d6-4d60-a4be-334e8d0deb4d",
        "cursor": {
          "ref": "1d37a1bf-9163-440a-be9a-bde27b0a875a",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8cf8ddab-799e-4545-b2c9-bb17119ccfd4"
        },
        "item": {
          "id": "9db0e36c-e3d6-4d60-a4be-334e8d0deb4d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a49d81c9-942e-4a83-84a7-2d5b29913595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1fddd5-eb23-46f2-82ca-3078469c52f5",
        "cursor": {
          "ref": "66c95e9c-4165-4730-8bd5-084866d9010c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f0611135-cab5-4823-82e1-81400ee9d1a6"
        },
        "item": {
          "id": "9f1fddd5-eb23-46f2-82ca-3078469c52f5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8616bccf-0a83-45f4-aaa8-b2ce7c243530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56b726a-c45b-4910-ac04-53e83d589f2a",
        "cursor": {
          "ref": "3a33241a-5ca5-4614-978e-dc14f3c9666b",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "45b57fc8-ce68-4b50-98af-e4dd3914c1de"
        },
        "item": {
          "id": "c56b726a-c45b-4910-ac04-53e83d589f2a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b74352fc-609a-496c-9ddb-3eb8e8f9c2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d208ff-1919-4df6-9292-a52f975f3672",
        "cursor": {
          "ref": "720625be-4ea9-4a1d-94ad-04e74bba0005",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e7408568-f24b-4c24-a65c-b015ab83d14a"
        },
        "item": {
          "id": "a3d208ff-1919-4df6-9292-a52f975f3672",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3d0c57e2-fc4c-4641-9ac9-c0f6d100ef6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0642b551-7130-419b-b347-93215a156ba6",
        "cursor": {
          "ref": "41e1fb47-a49b-4fd0-87d6-21d09c081635",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7481b311-6300-4708-8f49-5b77bc43dbd7"
        },
        "item": {
          "id": "0642b551-7130-419b-b347-93215a156ba6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cd42dc1c-b595-4314-879c-340876b881c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e5b7dc-7a57-4c7a-9c3c-0920915cd5a1",
        "cursor": {
          "ref": "d911174e-4ab0-4aee-a8b6-cda2fe5f3241",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "45fec092-05c6-4329-83f7-62560ceaac9a"
        },
        "item": {
          "id": "d9e5b7dc-7a57-4c7a-9c3c-0920915cd5a1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "701f1f17-8892-4085-bf74-dba48742fe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34c9d2f-fc68-4e74-8a1c-3b3485b801a5",
        "cursor": {
          "ref": "f318ea35-a1b7-4d86-aaa6-36a9670ceb5c",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d743cc67-c928-4a0f-9fc3-cae154a71f7a"
        },
        "item": {
          "id": "d34c9d2f-fc68-4e74-8a1c-3b3485b801a5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "27a5a160-f5c4-4051-b2b4-c0cd5ccd6083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6be53b7-0a89-4403-83e1-4eb62079de34",
        "cursor": {
          "ref": "aad0978d-df52-465c-a9e8-7058e8a8155e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "62ef2b11-7d45-4d22-86dc-eacca3be61af"
        },
        "item": {
          "id": "c6be53b7-0a89-4403-83e1-4eb62079de34",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "62fb33cc-13ef-4e54-8f9d-0ada8011e69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea86d35f-8b41-4110-a6be-d077d90b4e26",
        "cursor": {
          "ref": "2e46802b-b8df-4688-afc9-ae6a412952db",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c58e0e6a-c93e-400c-91e6-2c673e9d8370"
        },
        "item": {
          "id": "ea86d35f-8b41-4110-a6be-d077d90b4e26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0e7b5de8-b98f-42ac-ae09-21d3c814db23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58d8699-2ccc-4533-8e27-5f8c648248ae",
        "cursor": {
          "ref": "122d4b71-f5bb-43cc-9cc9-cd267834f0f3",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fb454a97-172a-4831-8efb-b1d295609e39"
        },
        "item": {
          "id": "d58d8699-2ccc-4533-8e27-5f8c648248ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "334c5de7-bd23-4077-85d7-cb0dac315c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cfbac9-a8f2-47ea-8f49-ae6c2145b333",
        "cursor": {
          "ref": "0e117701-1d8a-4bee-95f2-378027a7b710",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6a4fb5d4-2605-4716-8029-d35641af276e"
        },
        "item": {
          "id": "97cfbac9-a8f2-47ea-8f49-ae6c2145b333",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "de5d5110-281c-4be0-b714-5d9fa26194fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b4920c-5520-4864-a7de-6ace05c35efa",
        "cursor": {
          "ref": "43fbadc7-baf0-41eb-b173-7f541a5c4d16",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e5bb4863-7fb3-4ae6-ba92-f8831d3c3da1"
        },
        "item": {
          "id": "60b4920c-5520-4864-a7de-6ace05c35efa",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d9b6180c-a34e-47e6-b2bb-32e207c5211e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b566e1b-cba5-48d3-95b8-a9f0cbbf8546",
        "cursor": {
          "ref": "30831d12-54e4-4ece-b26f-daf687ad9b26",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d445e5f4-dc2d-430a-8690-6501d4735052"
        },
        "item": {
          "id": "6b566e1b-cba5-48d3-95b8-a9f0cbbf8546",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c4563f3a-24a0-41ba-8fe7-7ac9775c343c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6045148e-bbfc-4888-b4bf-a4eacf9b057b",
        "cursor": {
          "ref": "9fef8cca-ed4f-421a-9046-64c5c92494df",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6fef4764-ff14-4df3-b30e-283cadc82529"
        },
        "item": {
          "id": "6045148e-bbfc-4888-b4bf-a4eacf9b057b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "099c5519-cea5-43d1-a808-89d2b7011af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018194ac-ae82-4b70-9645-a65f6a3a6888",
        "cursor": {
          "ref": "2aadde91-c8fd-47a7-b152-11f17f25cdbf",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2102dc10-8c5a-40f6-84af-93a3d02c997f"
        },
        "item": {
          "id": "018194ac-ae82-4b70-9645-a65f6a3a6888",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bbb01f4a-da74-4869-b6ec-76b486aad45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e8dbea-3ccc-4d66-8b97-f843531ae3e1",
        "cursor": {
          "ref": "59c55f80-f4be-43c0-aefd-88ecc9d1076a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e00a1858-74f3-45da-b8e2-17033a1738d1"
        },
        "item": {
          "id": "f7e8dbea-3ccc-4d66-8b97-f843531ae3e1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d38f328a-122f-4e93-9d27-906bd98a5c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168860a3-a85f-4673-b5c2-273ff7655fb2",
        "cursor": {
          "ref": "de5e4aab-5ad0-48df-aa7b-5dd542bb4262",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "01368565-8bc9-4c95-8b97-55772e251376"
        },
        "item": {
          "id": "168860a3-a85f-4673-b5c2-273ff7655fb2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4c8eb262-f712-49de-adda-7fbeb4a41ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a07fc4-01c7-4e34-a9b2-1da056dcb80a",
        "cursor": {
          "ref": "bb29bce2-c456-43ce-92c5-c820e8c6e5b9",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "65645e1a-8742-4d75-b420-c03f0ec63ede"
        },
        "item": {
          "id": "e2a07fc4-01c7-4e34-a9b2-1da056dcb80a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ef309652-c5ec-4519-92b7-1676e0e128be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6df639b-542f-4d5d-90f7-40bdadc4fe89",
        "cursor": {
          "ref": "4d2ee3f2-65e2-49b7-8741-9fc44dc58397",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a1c36ae8-5b48-4ff8-b37c-cf3b950aaa16"
        },
        "item": {
          "id": "c6df639b-542f-4d5d-90f7-40bdadc4fe89",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8b1251da-ed09-40e0-8e08-784f83e4826d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14737b6-2c79-4027-998f-cf27b8c00945",
        "cursor": {
          "ref": "cdeab15f-f1d4-4db0-a56d-1bb5a6d86853",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9df5daab-931a-431e-b93d-d37663405487"
        },
        "item": {
          "id": "f14737b6-2c79-4027-998f-cf27b8c00945",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0a01e712-e16f-4a7e-86cb-d2c783ba7c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbef0f3a-8add-4451-9bcb-12cb66249361",
        "cursor": {
          "ref": "9f9cad5b-9eaf-4f78-884c-558c38f7778b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ac6d1b03-25af-4b7d-a319-4980e5fbe84a"
        },
        "item": {
          "id": "bbef0f3a-8add-4451-9bcb-12cb66249361",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0edd72c0-9d3a-42b6-a133-7b0c9694c206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d1bc71-f60b-43be-9fe3-84348d3ac8b2",
        "cursor": {
          "ref": "7493693c-4c3d-4fc6-b499-3277f70e75b7",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2a51717d-d05b-4a60-ba4a-e581cf4b3de5"
        },
        "item": {
          "id": "03d1bc71-f60b-43be-9fe3-84348d3ac8b2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fea1f160-cf3b-4bfb-8b48-e90013c858a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879d52cc-8303-49e5-b34f-d91331f5489e",
        "cursor": {
          "ref": "3acde299-2377-4033-a140-87ba6e96c5d4",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "43ae3d65-6ac4-4ff9-934e-549757aa795f"
        },
        "item": {
          "id": "879d52cc-8303-49e5-b34f-d91331f5489e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "22ce84f5-4264-4ad8-9bed-c3f4d70738ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ddd2da-e4ce-4211-9a30-8a3b5b696404",
        "cursor": {
          "ref": "4684918a-432d-4456-ac82-91342ef9908d",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7b315ed5-9fed-4633-8e78-f3f1da9703ba"
        },
        "item": {
          "id": "d4ddd2da-e4ce-4211-9a30-8a3b5b696404",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fa8ccf06-6b74-410b-b11d-f2532330797f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6407261-6d3c-4ff2-b811-33dd79644207",
        "cursor": {
          "ref": "49627cc9-6dfd-4dcf-b2c4-22a280e04dad",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4987ccac-9130-4f3a-812e-196212ab9488"
        },
        "item": {
          "id": "c6407261-6d3c-4ff2-b811-33dd79644207",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "897cf698-7fce-4a07-8eac-356923bc3f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae9078c-9777-4e04-8426-9407b31e97b2",
        "cursor": {
          "ref": "cce5c593-e938-49e1-9f97-3b8edcb96d28",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a5b96388-8b22-4767-8321-a0a9637e0ea2"
        },
        "item": {
          "id": "bae9078c-9777-4e04-8426-9407b31e97b2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e69d8f78-b032-4803-82f1-8401bc0907a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47309f12-8502-4079-91e5-145e05ce9ba5",
        "cursor": {
          "ref": "02dbc551-ad32-4e37-b185-19ec82f5b6c2",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7e8423dc-ac4c-44fe-8f1d-9153557015e9"
        },
        "item": {
          "id": "47309f12-8502-4079-91e5-145e05ce9ba5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0483eb76-c319-4c1f-8607-2b8453e6e43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cf264c-cb20-4f32-a279-039d8eb5bcd5",
        "cursor": {
          "ref": "cad8f4f9-d5a4-446b-b626-453cd2814882",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4b063c04-0108-449f-8296-5c78ca0d6197"
        },
        "item": {
          "id": "94cf264c-cb20-4f32-a279-039d8eb5bcd5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4bb22f7d-4072-4704-bc2a-d5e177d8586e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6689922-fa7b-49c9-9f45-7494b80011b1",
        "cursor": {
          "ref": "e0f3ef10-2131-4818-b7e9-4b549f2f336a",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0b4ace45-e658-49f9-9d44-f4fcd2c83400"
        },
        "item": {
          "id": "c6689922-fa7b-49c9-9f45-7494b80011b1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0363a88e-b99f-4188-acaa-56e59a10ac92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801c9645-3ec4-44ed-954f-037489199956",
        "cursor": {
          "ref": "5372a52f-917c-41e9-9173-231017eac549",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0b78661f-5eec-4849-a8f4-1586b65afebf"
        },
        "item": {
          "id": "801c9645-3ec4-44ed-954f-037489199956",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cf78cb33-f7c5-4155-a71e-ac652aadcf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e2204f-e4e2-44a0-aa40-b94de4a9ad9d",
        "cursor": {
          "ref": "5fc17fea-c088-4df4-b397-c2b1dd6a9d4d",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e8b019a8-f75d-4217-b2a9-dd7335b7cb65"
        },
        "item": {
          "id": "c7e2204f-e4e2-44a0-aa40-b94de4a9ad9d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6ad7f561-c2e6-40d6-9b68-f5709698cf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de7fcc8-8b18-4335-8cd5-ff1b4d549f68",
        "cursor": {
          "ref": "6b7c01b1-4a1f-4300-b632-b2b323b6c190",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d0b8c55f-4b8d-466a-b9ef-a945b9019289"
        },
        "item": {
          "id": "3de7fcc8-8b18-4335-8cd5-ff1b4d549f68",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f5dafc1d-5e05-489e-b8fd-57284497abf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6828195a-4b13-4a74-b61b-f5486565abfb",
        "cursor": {
          "ref": "d53306a9-7813-4657-90f2-93314bff854a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "30e77308-664f-4c9b-b23c-c23596a09916"
        },
        "item": {
          "id": "6828195a-4b13-4a74-b61b-f5486565abfb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "56d03a3f-825e-4b0a-b6e2-63009699bd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9617683-05a9-4aeb-9ba6-9cc1e9f07052",
        "cursor": {
          "ref": "625a5840-0fc9-41f5-b7bd-acd126f1364a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cda97cb9-36fe-47d8-a5a0-964a6158e45b"
        },
        "item": {
          "id": "c9617683-05a9-4aeb-9ba6-9cc1e9f07052",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "00489f34-8791-4c15-a0af-0c014a2bf303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3213152-afaa-4103-ad91-987eaaa6c08c",
        "cursor": {
          "ref": "98da8a0d-e14e-42c1-8d1d-50bb43b75e68",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "35faae13-aa04-4e5c-90d4-b9267f5e9a34"
        },
        "item": {
          "id": "a3213152-afaa-4103-ad91-987eaaa6c08c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b02fd2b2-8170-482c-acd9-80ec01ca8905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2488c5df-fb82-4f4f-a995-a0de8a3774b4",
        "cursor": {
          "ref": "e080a417-322f-4b3c-ba01-5b4ee95c18c4",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "640617c9-36c0-4596-9319-db4a5e71f3e7"
        },
        "item": {
          "id": "2488c5df-fb82-4f4f-a995-a0de8a3774b4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "adc735b6-9bca-4b38-9ef6-103609610897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d617f65-eb4e-4af5-9c28-b616d723b90c",
        "cursor": {
          "ref": "5386da2c-c3ae-41b6-971c-6e6aea1d36eb",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e81bc6c8-68f4-42a6-ae6a-a3e423a02aa5"
        },
        "item": {
          "id": "4d617f65-eb4e-4af5-9c28-b616d723b90c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d9366f80-e529-4ed4-8e8e-1186dc75b99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf7d0fe-144c-4dd1-b3cc-28b0b35f001f",
        "cursor": {
          "ref": "c836a984-29c8-46c9-b231-9cc71939cee1",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6a7ee388-fd7c-4a14-be7c-b36fe5d7af2b"
        },
        "item": {
          "id": "9bf7d0fe-144c-4dd1-b3cc-28b0b35f001f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5192c04b-b8e9-4d95-bb7e-c02a9b933edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d55ad4-6e6a-4922-a56c-0cec85005514",
        "cursor": {
          "ref": "3aaa3bac-7e04-4dd4-8347-8858f760b228",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "eb3672de-f1d6-4b69-8436-13f25538b6ab"
        },
        "item": {
          "id": "02d55ad4-6e6a-4922-a56c-0cec85005514",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c980e44f-403b-40cd-b591-f169b1ce8b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c5ec4e-39c1-429c-92b8-f90762e4156c",
        "cursor": {
          "ref": "bc6a6f2a-3eb5-49b0-a15c-d665a6e5494e",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9bf970ca-9fa6-4032-81f5-8cadc9255c2d"
        },
        "item": {
          "id": "47c5ec4e-39c1-429c-92b8-f90762e4156c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a1235c5f-c94e-4ea8-9866-671485181c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8194664a-6285-4598-99a7-038b69c6b081",
        "cursor": {
          "ref": "ddd9a06b-889d-4c63-b74a-f7bfcfe48795",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a0409285-19c1-4747-ab16-eefbc6b9ebb9"
        },
        "item": {
          "id": "8194664a-6285-4598-99a7-038b69c6b081",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6ca238c3-920f-470b-9285-11613b12c281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14f5476-78b8-46b5-8a70-e7ad97540024",
        "cursor": {
          "ref": "639af76f-3855-43bd-b670-e431545e4e39",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fdd7a3d2-6a08-4e0a-afbc-9ef1c49df656"
        },
        "item": {
          "id": "a14f5476-78b8-46b5-8a70-e7ad97540024",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5e6494a5-4ec7-4ad5-b893-3c75850439ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ead838-4b3f-43ab-a0a6-7ba2a23557cc",
        "cursor": {
          "ref": "8d16baff-db90-4195-976b-eb4157789ce2",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5dbded3c-10b8-4af1-8c42-7daf646dbbad"
        },
        "item": {
          "id": "e4ead838-4b3f-43ab-a0a6-7ba2a23557cc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "60240ac2-c908-4afe-befb-a23ffc267554",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3444dee5-ff12-4f5d-ae0e-b2a3d7a98f11",
        "cursor": {
          "ref": "55b096b3-d3ad-49d0-8c4b-028d3182883f",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3b5d6363-f71c-4f74-9aa0-a1cc83b8a2b7"
        },
        "item": {
          "id": "3444dee5-ff12-4f5d-ae0e-b2a3d7a98f11",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f5183965-7050-4feb-b682-ef8387cd9d76",
          "status": "Created",
          "code": 201,
          "responseTime": 7341,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4474482a-45a3-49bd-8d73-9f5c58434dbd",
        "cursor": {
          "ref": "7b359f85-92a4-44d5-b528-f138cab4c2e2",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "047b9800-865a-4694-a219-018c62ea0071"
        },
        "item": {
          "id": "4474482a-45a3-49bd-8d73-9f5c58434dbd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7fb1fbf6-51fd-4e39-be5f-d40b632ac9d5",
          "status": "Created",
          "code": 201,
          "responseTime": 6124,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f857e491-ab11-4b95-81c3-df0b4aa79ac4",
        "cursor": {
          "ref": "39dd94c7-4f1e-4e92-a67f-7186eb27d359",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3c4430c0-a7c7-4179-8cf1-6444b9b57b76"
        },
        "item": {
          "id": "f857e491-ab11-4b95-81c3-df0b4aa79ac4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c4856e77-86a8-4e62-8328-76e48b06ff2d",
          "status": "Created",
          "code": 201,
          "responseTime": 6426,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e187bd32-2060-40fc-860e-cbcfcf2219a1",
        "cursor": {
          "ref": "b51a8fdc-441c-4ffa-b260-cc74481f8825",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "aecaa927-208f-47ac-a44e-99bb46058892"
        },
        "item": {
          "id": "e187bd32-2060-40fc-860e-cbcfcf2219a1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4f324eea-7cea-4eab-b3eb-7303fc9c6ae5",
          "status": "Created",
          "code": 201,
          "responseTime": 6368,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "805dec13-f559-48e9-9b5d-a47e2c293433",
        "cursor": {
          "ref": "93b25424-e0ae-4cf1-865c-e0ead1061a3d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "89112c8a-7379-4ae8-8c7c-e93573e6c87f"
        },
        "item": {
          "id": "805dec13-f559-48e9-9b5d-a47e2c293433",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "aec7293f-554b-4cf2-ae53-8f6460ec5249",
          "status": "Created",
          "code": 201,
          "responseTime": 6141,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2a8a29-ffe0-4cc7-8f11-949239425320",
        "cursor": {
          "ref": "d81510b4-2b37-4436-945f-2f856fa65b73",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0f95111c-eb54-4511-8791-2e709623aae9"
        },
        "item": {
          "id": "6d2a8a29-ffe0-4cc7-8f11-949239425320",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "58cc9fc7-6208-4f4f-8879-21d4f4f2e096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "8320415e-7db5-4e87-abc3-1ced5aa67556",
        "cursor": {
          "ref": "6d8dcea2-e594-4cc9-8542-cfd686483622",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "045f4c9b-e7cf-4ebb-a91c-8f72cc000e8d"
        },
        "item": {
          "id": "8320415e-7db5-4e87-abc3-1ced5aa67556",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7c9e1cf6-a16d-400f-8456-08c66d51f4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4876c2-bd45-4669-94a2-bd410a80c8b1",
        "cursor": {
          "ref": "45b44c1b-a48b-40e8-b02a-03366a665b8f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f32878a8-4e66-4669-ac75-6922114a51d2"
        },
        "item": {
          "id": "8d4876c2-bd45-4669-94a2-bd410a80c8b1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d8751a2e-21a9-4f91-b3eb-ab10456b2db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5745036-85d9-48bd-9b41-e6e9adb1c6ad",
        "cursor": {
          "ref": "622f6121-ce5a-47da-8963-f32e4af8315f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "eb68f54b-0a93-43a2-a38a-f467e76aa4ab"
        },
        "item": {
          "id": "e5745036-85d9-48bd-9b41-e6e9adb1c6ad",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "312bd102-7d87-49e8-8b28-1129f3eed41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577e6781-c666-4cf6-8489-3958ad2ae6a0",
        "cursor": {
          "ref": "4287c3cb-c185-4612-ade2-e18cf91a43ac",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e6855117-70d8-44da-beb9-91c572f2a951"
        },
        "item": {
          "id": "577e6781-c666-4cf6-8489-3958ad2ae6a0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e8dc96fc-98af-4997-a46e-2517f47a0e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6df117-162b-4de6-a150-496f39bff2f5",
        "cursor": {
          "ref": "cfd83636-5a48-48f5-978f-85f2f5e82ecc",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a95ec8cc-4e78-470f-8ea1-7a9be5655c08"
        },
        "item": {
          "id": "db6df117-162b-4de6-a150-496f39bff2f5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c48adf3f-1753-4682-a989-0118c21617f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7092b0ee-9bd3-4fc5-adef-6c54d164d5bb",
        "cursor": {
          "ref": "a6d71a21-2c3c-4321-bb3f-af49758f9c52",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "296edda2-a261-4edc-aa5b-5cc53888fc68"
        },
        "item": {
          "id": "7092b0ee-9bd3-4fc5-adef-6c54d164d5bb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "aae61c52-02ac-42a6-b3c8-edb067c7aa58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156cfdd2-e48c-4cdb-8551-dc8dac87bde0",
        "cursor": {
          "ref": "b2fe02f1-5802-4b9e-be2b-9b6616efa62b",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e46ed20e-4438-42f2-8137-f1e62f769e86"
        },
        "item": {
          "id": "156cfdd2-e48c-4cdb-8551-dc8dac87bde0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "511a58d6-c253-4ae1-b38a-09a4dfee9676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc181a21-a423-4357-8117-aeff773d76a6",
        "cursor": {
          "ref": "bd89d864-bce6-461b-93cc-90969e3e2e06",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1ebdea8e-54a2-4ea6-b1e4-86f3e1938e53"
        },
        "item": {
          "id": "bc181a21-a423-4357-8117-aeff773d76a6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a1bb3b06-a737-4424-b508-f19fa6acef6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5c3443-c47b-45ea-b6ca-0fc8fe4b6d6a",
        "cursor": {
          "ref": "d3e578f0-5ffe-4b13-8a8f-6060a166082c",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c3bdc8ab-a31e-44ba-8919-ac45a49ea244"
        },
        "item": {
          "id": "3c5c3443-c47b-45ea-b6ca-0fc8fe4b6d6a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "67e4e146-5379-4d6f-be96-60c1da715aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf85ab76-e9c7-40df-8441-ae6235670380",
        "cursor": {
          "ref": "b36e384f-544f-40ce-8a7e-9cf1176581e4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a99c778e-f24c-4614-81ed-91102c40d080"
        },
        "item": {
          "id": "bf85ab76-e9c7-40df-8441-ae6235670380",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0c291cb9-0196-49bf-a06c-70285e836e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6646361b-60a3-45f9-95c8-6879647ea763",
        "cursor": {
          "ref": "faf08a2e-d703-4ac4-ba8d-53b23a181931",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8d77593c-9673-4a15-9fb6-6f5d61289abd"
        },
        "item": {
          "id": "6646361b-60a3-45f9-95c8-6879647ea763",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ab8c05f5-a0d7-47d5-bed5-e9a75fc3ed3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328db0f3-d203-46be-bf24-86736ea76af3",
        "cursor": {
          "ref": "26f9f7ff-e43b-4951-8329-3f097d9dd856",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ce4908e6-acb5-4fbf-92e6-911a4b4d2f56"
        },
        "item": {
          "id": "328db0f3-d203-46be-bf24-86736ea76af3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0c8e3d2c-741b-48b9-8c4e-f6444b512da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608ecb35-212a-4767-8c6c-9a50837e5835",
        "cursor": {
          "ref": "b21e3d3b-9d6e-477d-bb14-427deafa6cde",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b0824ce5-d755-4917-8fb7-279eead841bb"
        },
        "item": {
          "id": "608ecb35-212a-4767-8c6c-9a50837e5835",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1b489583-86d7-497f-9991-909024a12414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73d1f08-3be8-4732-8c5e-8305c9cd2830",
        "cursor": {
          "ref": "1fe76818-ab83-4ae8-b618-c02ac0f8dc10",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9e5ef15f-a3be-4c41-a7a1-f4200ee6d4aa"
        },
        "item": {
          "id": "e73d1f08-3be8-4732-8c5e-8305c9cd2830",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "97ace527-9886-4630-bc54-6cb62b52eb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28070589-ac50-453f-b054-f49cdfd590f5",
        "cursor": {
          "ref": "aa4ec0cb-ac55-4738-8e3a-a728637b635a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "507453ff-8334-4787-81f1-8f08d0701b6f"
        },
        "item": {
          "id": "28070589-ac50-453f-b054-f49cdfd590f5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2d942255-b188-48b7-b40b-1f648acee7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313408da-e9de-4085-b98e-50279b0771c4",
        "cursor": {
          "ref": "f89f63e5-a3cb-46d9-be3b-43b5284e1499",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f5e1b612-5f03-474d-8031-d0f5d4c5f41b"
        },
        "item": {
          "id": "313408da-e9de-4085-b98e-50279b0771c4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "225d765d-3302-490f-8da5-a96835b74635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9689576d-9f7a-4b43-90d8-b3d619a668b2",
        "cursor": {
          "ref": "95e96846-2549-4ba4-883d-c30955ed228e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3456e8ab-c880-4123-a383-4ea912b9dd6b"
        },
        "item": {
          "id": "9689576d-9f7a-4b43-90d8-b3d619a668b2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a0a07337-982f-4382-b564-e0cb0fc9d641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5360a47-d5cc-44c8-94f9-3905dbd47c92",
        "cursor": {
          "ref": "e933b01f-d3d5-42b7-8aac-435db39ab44e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "016e306f-2fd9-47eb-8961-58904d26bad7"
        },
        "item": {
          "id": "b5360a47-d5cc-44c8-94f9-3905dbd47c92",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d2b37ed6-e37b-46fd-a7e2-7ec7e9098964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87684e9-7859-4178-8cf7-7cd559a5c862",
        "cursor": {
          "ref": "b5cc807d-64fa-43f7-8cde-1a80ca6be142",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "aae83f08-f529-4367-8ca8-eec931d06f0f"
        },
        "item": {
          "id": "e87684e9-7859-4178-8cf7-7cd559a5c862",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0bffbe01-38aa-431b-89ed-f531448f937d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc0cc8f-fc08-4f78-be96-218138c569f8",
        "cursor": {
          "ref": "bd568567-eadd-42e1-b645-4b4d849b5478",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ae7fdcba-b721-40ec-9e5f-011f2052ea37"
        },
        "item": {
          "id": "7fc0cc8f-fc08-4f78-be96-218138c569f8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "60dd1383-907e-43a2-b77a-a797f335c8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ca0182-6bb7-460c-ac37-c8811b463f62",
        "cursor": {
          "ref": "f52bf06a-18d8-43f6-a8eb-12c7e4e1f003",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "50d63687-fa8b-4a4a-a7aa-cded0935af59"
        },
        "item": {
          "id": "84ca0182-6bb7-460c-ac37-c8811b463f62",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5956abe4-7de3-4466-9eb6-9e7d652f918a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c763d35-440e-456f-86b3-026b63ed20c6",
        "cursor": {
          "ref": "f4dac6f2-6867-40ca-bd72-0f1a16c10775",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ca8f5a07-b6cf-485e-a0cf-d0887e0ea703"
        },
        "item": {
          "id": "9c763d35-440e-456f-86b3-026b63ed20c6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "24949753-70dc-4997-aaf0-845b6e18e6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d211ba47-1328-46d2-884a-663bf05745df",
        "cursor": {
          "ref": "90820f44-2492-4fca-95cb-738a19be1a55",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7221ad7a-d06e-46ae-a297-0dc5fe825fa6"
        },
        "item": {
          "id": "d211ba47-1328-46d2-884a-663bf05745df",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0f5d7b0d-46f5-414f-8b11-1952ea62b6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133b2b32-2100-4cc6-b115-0cdf2936afd6",
        "cursor": {
          "ref": "a2d4f21f-8f4e-44a0-bfbe-949ff24f36a5",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "367e51b4-cf7c-408d-b590-dd0b798fdbc9"
        },
        "item": {
          "id": "133b2b32-2100-4cc6-b115-0cdf2936afd6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9695aea7-9e65-4377-88c9-8a278370977a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e49a1c-47c3-47c6-bcef-9cde2d9dffc0",
        "cursor": {
          "ref": "1171361f-fc00-4641-a34f-cd2e4002ab23",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "875b5c36-e620-471a-888a-aee47b00547f"
        },
        "item": {
          "id": "11e49a1c-47c3-47c6-bcef-9cde2d9dffc0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7143f174-f2d3-42ec-a648-21bfffe79ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a219f294-42b5-45f9-868c-41f7a1f17e26",
        "cursor": {
          "ref": "2ab6cee6-154a-4deb-a2aa-536edf2bbe7a",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "adc41281-384e-4770-bb90-a6bd69bbf71c"
        },
        "item": {
          "id": "a219f294-42b5-45f9-868c-41f7a1f17e26",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "62b3ef10-7a75-429f-9bb7-0dc326bec52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c7e4df-2bb6-45d4-a474-03a637794532",
        "cursor": {
          "ref": "839273cc-01f2-41a7-a336-83c4a8c0bda2",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b0995238-8778-4aa5-9964-86266862d68d"
        },
        "item": {
          "id": "07c7e4df-2bb6-45d4-a474-03a637794532",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d2ae0895-83e3-4d9d-81a1-4088b8eaf6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67f17fc-b051-4c1c-b525-230f7713efd5",
        "cursor": {
          "ref": "a8d8aaa4-8079-4d5b-ba5a-4e90d7194bc7",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "16b4145b-f655-4205-b7df-2306a2bee094"
        },
        "item": {
          "id": "d67f17fc-b051-4c1c-b525-230f7713efd5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fd0dc0bb-1464-4b27-9147-1508cd2f1168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b12350-d7d2-4a07-b54d-63b39a3c5b23",
        "cursor": {
          "ref": "3693f8eb-159f-43a1-8ae7-d291239db529",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c2ccd852-6364-47d4-9ff1-0d96231c35c6"
        },
        "item": {
          "id": "85b12350-d7d2-4a07-b54d-63b39a3c5b23",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3a1bebba-b205-45e6-88fe-5f6495c200dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c21d76-b0eb-4e4f-aaac-ef606d90a99d",
        "cursor": {
          "ref": "4b88cb54-b8f0-478b-a8e9-e4483834e669",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3474d400-e63f-4f47-81dc-c8e9d0b8e1cf"
        },
        "item": {
          "id": "18c21d76-b0eb-4e4f-aaac-ef606d90a99d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3b7e4737-f0c5-40b3-9fcc-786d47a4d67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386af10b-a701-40f5-8d06-e3c8dbf3e023",
        "cursor": {
          "ref": "043e74a8-1898-49df-bd03-196bca000e57",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a311ab70-67ce-4a70-997d-7f74123a4fef"
        },
        "item": {
          "id": "386af10b-a701-40f5-8d06-e3c8dbf3e023",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d4412a1d-3bae-4f77-8eda-5a35c67d9895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ab0281-c052-439c-ab09-1ef8f13aa4c9",
        "cursor": {
          "ref": "c239cc09-944d-4e99-82a7-059002b4f8a7",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7ffbe87c-b893-497d-be2c-40445d5edb1d"
        },
        "item": {
          "id": "a2ab0281-c052-439c-ab09-1ef8f13aa4c9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "63f8751d-c873-4096-ab55-3f2ad20745cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6e509d-9798-428e-8794-6b57d1d029b6",
        "cursor": {
          "ref": "019b93b7-27b4-469f-91d6-ff6cb435a3f8",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c2d2d6f1-1fea-4a52-9c8e-6cb5f8399bd9"
        },
        "item": {
          "id": "7a6e509d-9798-428e-8794-6b57d1d029b6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c7255274-e396-46dd-9ded-8c62ac75ebda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 87,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd9cf65-9515-4975-8c61-e7837c3a4247",
        "cursor": {
          "ref": "73aa959c-04b9-407a-a77c-c994e1310ece",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ab4ac6b2-d4d8-4b9a-bf7b-19bde3146819"
        },
        "item": {
          "id": "fcd9cf65-9515-4975-8c61-e7837c3a4247",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b552625d-e8d4-4874-9c43-b27a90d00462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ffbb17-86c4-428a-847b-099f3ac3f7b0",
        "cursor": {
          "ref": "1a2a9e5f-c95a-47f7-9242-0180b59490f7",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0571ecd4-4e76-4a4b-b437-d06dacf5b93f"
        },
        "item": {
          "id": "85ffbb17-86c4-428a-847b-099f3ac3f7b0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c3c3fef3-27ea-4914-989b-ff8a1a9af7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8aeb49-fa0e-4891-9527-c431c5c39bff",
        "cursor": {
          "ref": "6b9e2f20-a4a4-42df-b08c-7c9ca74d10d6",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "20b9db0c-9d66-49aa-9360-7fbcd739e195"
        },
        "item": {
          "id": "3a8aeb49-fa0e-4891-9527-c431c5c39bff",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c8064dbf-266f-4d30-ad9e-95525c7f787e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94612d5-2d25-4011-a31e-a9d04fbd0a85",
        "cursor": {
          "ref": "a0463ae2-b5e1-4fc3-be63-33f310adb01b",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9f3c6d99-d81f-494c-b376-0d531c268c45"
        },
        "item": {
          "id": "e94612d5-2d25-4011-a31e-a9d04fbd0a85",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "da1a5dc4-73d0-4fde-98df-a6952c23bc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a081c1f-c7ae-4dfe-a481-804c1285add8",
        "cursor": {
          "ref": "2c61f4eb-2bfc-4354-8259-b00a9eb9c3ab",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3e4c7082-c651-4af3-8568-904f626d82af"
        },
        "item": {
          "id": "0a081c1f-c7ae-4dfe-a481-804c1285add8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9752d88c-315d-4c4a-8370-0bf0c528d2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2207573-dbd5-4dfb-9c25-f9dc5635a5e6",
        "cursor": {
          "ref": "2fcd27dc-2cd1-423f-b9a1-8f5ab928c931",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "df9a8c6e-9b80-4f9c-ba32-95f78b1daa6c"
        },
        "item": {
          "id": "a2207573-dbd5-4dfb-9c25-f9dc5635a5e6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "92722a5d-b322-460e-b9d7-3307cf88fa87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b09e6e2-e755-42d8-8d9e-30c2dae64006",
        "cursor": {
          "ref": "3c3d36b9-ad7c-41de-be92-be7b619250ee",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9c654fd6-cde3-4917-9c1b-bf52427bf806"
        },
        "item": {
          "id": "3b09e6e2-e755-42d8-8d9e-30c2dae64006",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "508e1ada-4cec-4153-ad9a-34355128c03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6633e5-2186-40e7-b7cc-3d3ada87a0e3",
        "cursor": {
          "ref": "538cee22-0a41-41fa-b2aa-308b02f73975",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6f78a404-3c51-4106-9589-f8fbebb2466e"
        },
        "item": {
          "id": "0f6633e5-2186-40e7-b7cc-3d3ada87a0e3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e8c0c514-5d5a-4b07-93d4-92a256f62c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27f6216-5608-4a2f-827b-a141ca81ef91",
        "cursor": {
          "ref": "9fb9af67-8617-4e54-8458-d74e38ce5df7",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "317fa87b-5817-4ae8-897e-304277e189e3"
        },
        "item": {
          "id": "b27f6216-5608-4a2f-827b-a141ca81ef91",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f566fcbb-f6c6-4b14-aaaa-e0d127d4ebbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4c2e6e-887c-45da-a360-b9a0267a7d34",
        "cursor": {
          "ref": "8d7883ce-4751-4ef2-b82a-291c72aec0e1",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "92d2f72a-70f9-42cb-92e4-85bd4ec08396"
        },
        "item": {
          "id": "ec4c2e6e-887c-45da-a360-b9a0267a7d34",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "58d1348e-c987-4c34-bb93-ea271ebef4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290e6e4e-28d0-4d6e-9230-2a37e0ae31bf",
        "cursor": {
          "ref": "43b6ac08-82f6-4a5c-ac95-4bcd0c82b293",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f6724a4d-d963-4986-af9e-30404fa58e34"
        },
        "item": {
          "id": "290e6e4e-28d0-4d6e-9230-2a37e0ae31bf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8ed8c555-e5b6-4d03-9a9c-9f9958bf1896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c345556f-dfd4-44e5-b157-c0bdfeae5246",
        "cursor": {
          "ref": "0c6d61ba-ab38-4ce8-8f8c-62cafaf31044",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8ce04884-23c8-49cc-8917-eedfdfe8404e"
        },
        "item": {
          "id": "c345556f-dfd4-44e5-b157-c0bdfeae5246",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7004915b-ca33-44b0-b117-6c702f769674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34131241-7341-499b-9777-41f92681bfd4",
        "cursor": {
          "ref": "ad937c4c-5f43-4be5-8c45-db978268f565",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "11af85de-2ae0-4297-914a-af7038723ab4"
        },
        "item": {
          "id": "34131241-7341-499b-9777-41f92681bfd4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "75bf8c66-8091-4a56-a1b4-6244d387560e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cb1c26-eefa-4b1c-8483-6d7ef8a46a46",
        "cursor": {
          "ref": "eda45237-b7e9-49b0-acc5-040c613aebc2",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2318aa54-11dd-4dc4-9c59-b80ed02cb6dd"
        },
        "item": {
          "id": "86cb1c26-eefa-4b1c-8483-6d7ef8a46a46",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ab45d8cb-c8c4-4746-8292-06d41705fa9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4b29f2-4f9c-4379-baaa-155a8013bd2d",
        "cursor": {
          "ref": "842d73b7-af4d-41c4-8338-7b5514dbc87c",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0455caef-9972-4a8a-877d-ffa319a28ab7"
        },
        "item": {
          "id": "2e4b29f2-4f9c-4379-baaa-155a8013bd2d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a822573e-02c9-4438-85c3-624573dd69bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68b4b18-ee7e-40dd-8744-21ba276058ad",
        "cursor": {
          "ref": "2280e578-ceec-41eb-9535-33991307350b",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bc291d35-3f32-4b3c-8c90-2daeba9a519d"
        },
        "item": {
          "id": "b68b4b18-ee7e-40dd-8744-21ba276058ad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "61b0086d-daf7-4221-a7ee-4a403fad688a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85360c9c-4c9c-4882-91bf-3ae4b6c654e2",
        "cursor": {
          "ref": "8820cec6-62fa-40da-8f29-b66c515b78bc",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8d0e8028-2c18-487a-bf07-0b2d373394fc"
        },
        "item": {
          "id": "85360c9c-4c9c-4882-91bf-3ae4b6c654e2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "26738dbd-5b1b-46bb-98aa-39eabcceb5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513d2686-f450-4f3a-a82d-674dbb7a343b",
        "cursor": {
          "ref": "e7666567-8648-4b75-864c-c8b038c93867",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8652e55f-a0d0-41e2-9291-448164ea26f7"
        },
        "item": {
          "id": "513d2686-f450-4f3a-a82d-674dbb7a343b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fdb3b11f-3c55-4cce-ab03-94a1d4b84510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd03c9cc-0aea-4b74-a900-0cddfe66c27c",
        "cursor": {
          "ref": "1724a704-c7fd-461f-a681-cb4e59b6f750",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "70c5b7b6-fc74-4225-8c6e-45d07e16913f"
        },
        "item": {
          "id": "bd03c9cc-0aea-4b74-a900-0cddfe66c27c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1668bfa3-e801-4895-97b1-653dea16170c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d789bca-bf32-4761-a907-38dff66ab956",
        "cursor": {
          "ref": "0e88b17e-61f4-4be5-81e3-ca754a05dff3",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b4d7bfcf-88de-4336-90c8-a854b56fe602"
        },
        "item": {
          "id": "0d789bca-bf32-4761-a907-38dff66ab956",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f1ef8665-8d6a-4e12-8959-1de2350e80ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a0dc3f-aaee-4c4c-aef4-592c8287a453",
        "cursor": {
          "ref": "66366e61-4ff6-4244-90b8-030e90230ffb",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cb53929e-ede5-4ef0-b883-4724d5127519"
        },
        "item": {
          "id": "d0a0dc3f-aaee-4c4c-aef4-592c8287a453",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4f15a537-6d6c-4e63-b813-84780307776a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9081788-2b69-41a5-9af2-a79d8472ef9e",
        "cursor": {
          "ref": "6c4283ce-227b-4282-9686-94b92cd7d457",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "389b6b6c-acc3-4dcc-958d-af3f0cb81f1a"
        },
        "item": {
          "id": "d9081788-2b69-41a5-9af2-a79d8472ef9e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7e69d459-a60a-4bae-b69d-379893b687a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287abe5d-1f58-4225-98b9-fb3f30128b36",
        "cursor": {
          "ref": "cad1e08f-5a9d-4d5a-baa1-f306edf7d386",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fbe28ab2-44a2-4c0d-bf46-211c913eb15f"
        },
        "item": {
          "id": "287abe5d-1f58-4225-98b9-fb3f30128b36",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6d4fc8dc-491f-4cf5-b4be-7836a2bb3905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0512e54-55b3-44e7-a8e5-31f7550db8b2",
        "cursor": {
          "ref": "7b57fd55-a166-460b-8269-b0741b17ed94",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "527279fa-5459-447b-b1e8-cb10c508fc4e"
        },
        "item": {
          "id": "d0512e54-55b3-44e7-a8e5-31f7550db8b2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8dacde78-90ec-402c-92dd-3c267cb00648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa7ca04-0205-4ff8-a7b0-6d2add5c028d",
        "cursor": {
          "ref": "6a402392-fc84-4943-96ca-bc06e746da63",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "191a7d5c-57f6-48c9-8c67-5b98c114283a"
        },
        "item": {
          "id": "efa7ca04-0205-4ff8-a7b0-6d2add5c028d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "35e3f853-7d58-4d9d-bfbe-167dfbf85b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c378dda4-a63a-4a45-86e1-24ef15302e93",
        "cursor": {
          "ref": "2d458c7e-77be-4c20-a9d8-c62f0034b734",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e9f22c81-62bd-4515-a977-476483cc5c68"
        },
        "item": {
          "id": "c378dda4-a63a-4a45-86e1-24ef15302e93",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "060913c6-e0d6-44f4-ab5a-359b0a815c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0e19cb-a9c9-4f61-adf1-48c79bfefc65",
        "cursor": {
          "ref": "d78125aa-08fd-446c-8a42-388210433e66",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b041a9e4-a716-4794-a055-e3e6e601a9c3"
        },
        "item": {
          "id": "3c0e19cb-a9c9-4f61-adf1-48c79bfefc65",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5b24fa8b-1932-4640-9437-d6468ce23701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bf9608-43bc-4393-9072-5534d0362977",
        "cursor": {
          "ref": "0cc94fcc-8a96-444f-95ee-f1a6d2717975",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "57b1ba17-e659-4d35-9243-6dc5073be442"
        },
        "item": {
          "id": "79bf9608-43bc-4393-9072-5534d0362977",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "208a7638-02a2-49c5-a300-489c9376043a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105d6d6b-37d6-4e84-accb-444fcd91ada1",
        "cursor": {
          "ref": "2d2db0ce-9eec-4588-90aa-1aee5d5bce4c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "27893d29-8e58-4873-84a2-1861b8880cbd"
        },
        "item": {
          "id": "105d6d6b-37d6-4e84-accb-444fcd91ada1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5d355384-23e5-4be6-a313-1cc712fa1e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd8f58e-6be0-4acd-8708-187021a51ffd",
        "cursor": {
          "ref": "9783d544-0e08-4f3a-a2c6-70edcdb5f76c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dc30c270-e374-410d-ac05-77a31baf37cd"
        },
        "item": {
          "id": "9dd8f58e-6be0-4acd-8708-187021a51ffd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cf55334b-5d0b-4d2c-ac71-bc5e6364cf81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cbfcd4-9b10-4169-8726-c49d3c1982b2",
        "cursor": {
          "ref": "85086307-0249-48af-9234-09622182640c",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d69ccb53-7dd1-4da9-b9e8-889c06fb911c"
        },
        "item": {
          "id": "62cbfcd4-9b10-4169-8726-c49d3c1982b2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "45afd8b9-3dc0-454f-bed3-d8b69987b521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93d3339-f890-4bc0-8695-966b729d62d1",
        "cursor": {
          "ref": "c7634203-e9ac-45a6-b38c-684523e9d950",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bdce07b6-d297-42d2-905e-827f7ad36b45"
        },
        "item": {
          "id": "e93d3339-f890-4bc0-8695-966b729d62d1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "05d65fec-52de-48f9-bfcf-a4f1c02acbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d014cd1-b91b-47e9-85a5-9b61111a30fc",
        "cursor": {
          "ref": "ac7779de-6f21-4011-8088-b3b97874ee8d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "94e9cf6a-7adb-47a3-adc8-7e6dcd846df9"
        },
        "item": {
          "id": "3d014cd1-b91b-47e9-85a5-9b61111a30fc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8f83a3d8-b9aa-4bc6-9879-43ab244150af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0326f99d-f196-4f40-a8ab-8bb326e38a16",
        "cursor": {
          "ref": "aaa2fc89-a537-4714-bc44-b4eef8a863d6",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ef58ab01-628d-4d5e-a255-4556ab53e328"
        },
        "item": {
          "id": "0326f99d-f196-4f40-a8ab-8bb326e38a16",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2af7766f-dbdd-4d2a-b797-bd26d7303f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81383c6-c3d6-4bcd-97b8-cf49426fa921",
        "cursor": {
          "ref": "99b09353-06be-476e-92bf-821e7ed4e56e",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "11658a6c-470b-4a6c-ab56-12721f47f798"
        },
        "item": {
          "id": "e81383c6-c3d6-4bcd-97b8-cf49426fa921",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "35bfe0ce-802d-40d6-b60d-9ab3bf7e919f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be510281-96a0-4295-85a4-9c0d9420fb54",
        "cursor": {
          "ref": "fa780431-2278-4c2e-9864-824c86b12c10",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3cf8bd7a-02cd-4377-bcd7-1514f8325cf2"
        },
        "item": {
          "id": "be510281-96a0-4295-85a4-9c0d9420fb54",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6ec4e94e-e695-4ece-a586-b9aa4fdd4962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0765ad3-a157-4017-8c47-74cf972dcca8",
        "cursor": {
          "ref": "ffb0c922-4f26-46c3-b127-3ac2eded628f",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ef8c5992-ca3a-4b10-a796-3751252c1397"
        },
        "item": {
          "id": "d0765ad3-a157-4017-8c47-74cf972dcca8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1ed3dfd1-4bfc-4d1f-8223-deab54f10260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5b49ef-1014-41aa-978b-8ffdf609b6f2",
        "cursor": {
          "ref": "17d2615d-1c2e-4328-88ce-8584f60e8d50",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7a434923-7421-44d6-824e-cce418a7f39b"
        },
        "item": {
          "id": "4e5b49ef-1014-41aa-978b-8ffdf609b6f2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b9d61712-c1fe-4106-8eb8-9b53d99f2198",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee50521-37d0-41a7-9a9c-94c05f5335d1",
        "cursor": {
          "ref": "a8306b72-db0b-48be-bcc5-7466d3c17935",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ef9ecd75-d145-400e-96e4-1eebd20585da"
        },
        "item": {
          "id": "7ee50521-37d0-41a7-9a9c-94c05f5335d1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "73f6571a-5900-468d-b4f3-5552fa4a7654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54909140-e5a2-4a6e-b2ec-8dbf5f44cb79",
        "cursor": {
          "ref": "c7de3bd0-7094-4d82-a3fa-3de8b02f1ff1",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "99ca4498-7d28-49a0-a3c3-4ca07031177c"
        },
        "item": {
          "id": "54909140-e5a2-4a6e-b2ec-8dbf5f44cb79",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c004f19a-64c8-46ea-a6e9-fea984c646cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be93f3ea-9b2e-43da-abd7-3c3b7ce1de94",
        "cursor": {
          "ref": "3e92f3f8-2629-4dc8-89bb-44c7737c3fa6",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9c1c0ded-cb86-4442-b01e-2ac0e707cf9a"
        },
        "item": {
          "id": "be93f3ea-9b2e-43da-abd7-3c3b7ce1de94",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0b6220a0-5eb1-4b34-adeb-425f01b7e1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71134081-24d7-487b-8b42-eb67b56769d3",
        "cursor": {
          "ref": "9ab6ff36-4e89-438d-8738-ba873708e0a5",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7781667c-fbaa-45f5-aea7-38a5fa8723a6"
        },
        "item": {
          "id": "71134081-24d7-487b-8b42-eb67b56769d3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "898800ac-18d3-4dfb-ad91-f34e970ce062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b590351e-f6c8-4eb6-aad0-96dbc185ef1f",
        "cursor": {
          "ref": "6a5c33ce-c565-4415-ba7e-4c68a19fffe1",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d1da79a6-9af1-472b-9c52-94fbd46eef15"
        },
        "item": {
          "id": "b590351e-f6c8-4eb6-aad0-96dbc185ef1f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1d17027f-7095-4769-b009-5c2a25c2ffbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9cb422-d243-4fbf-9e51-1c4b3398a500",
        "cursor": {
          "ref": "ecbd763c-8dc9-426f-aef3-f15aa518b1c7",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b7cd78da-cb53-4e0d-9098-ca40645d9823"
        },
        "item": {
          "id": "4d9cb422-d243-4fbf-9e51-1c4b3398a500",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d43c7c43-98df-4055-89f1-887197da7556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06022a56-4dab-4cd8-8213-68430cb2b301",
        "cursor": {
          "ref": "75e159dd-70c8-460e-b151-a9f7e6709c94",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8cd9e1fc-6bae-4e57-907e-a7147ff2db26"
        },
        "item": {
          "id": "06022a56-4dab-4cd8-8213-68430cb2b301",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1fcfa18a-9cbc-457b-bec8-f613098453df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9f9ab3-4d20-4196-a2e1-c57d74695ff4",
        "cursor": {
          "ref": "f4c010b7-ee10-47a8-a87f-6eeeca95794b",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "846093f0-0702-4b20-bb2a-da27ca31a8e7"
        },
        "item": {
          "id": "eb9f9ab3-4d20-4196-a2e1-c57d74695ff4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d3d15966-f816-456d-93eb-44fa5ad57380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d414f1b5-522f-49fe-888e-087a6bdce244",
        "cursor": {
          "ref": "2ef96499-4c99-4652-b97b-e0bf11800d79",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3743f3ad-430a-494e-8e82-9361186067a4"
        },
        "item": {
          "id": "d414f1b5-522f-49fe-888e-087a6bdce244",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "715fad40-2486-43b6-b128-f610f3ce3d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6812f50-c183-417d-9f17-da9243047ccb",
        "cursor": {
          "ref": "c356fba3-fcfa-4d88-905c-24ac4ea8d7e3",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "dcb68b99-3792-4368-b99e-d09b0ee56fdb"
        },
        "item": {
          "id": "c6812f50-c183-417d-9f17-da9243047ccb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e545526b-7507-46c4-a85a-c0d7f85e67ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b83a8b5-3653-404c-a80a-ea4742b05750",
        "cursor": {
          "ref": "7ab74ef1-5396-4497-a89b-af4714705bb6",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "81a6636b-085d-4be0-ab5b-6b6da7c7f8ce"
        },
        "item": {
          "id": "6b83a8b5-3653-404c-a80a-ea4742b05750",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b84a27c3-42e1-43b8-b8fa-6cceac9f3b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a329b03-7ae9-4ade-97e4-3cb881eaef73",
        "cursor": {
          "ref": "fc12bc28-fd04-4019-b804-0479b58c2299",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "12854c48-fdc2-4b3a-963e-53d7b1fdf9c8"
        },
        "item": {
          "id": "9a329b03-7ae9-4ade-97e4-3cb881eaef73",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5fd8a2bf-63b4-42f2-927a-36ed6636f40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7a513c-48b9-4a0c-a1de-195cf0a301d2",
        "cursor": {
          "ref": "c7022e02-c012-4c0a-9311-2e1b1eed131c",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1177aaa0-4ecc-471c-8602-8836047a8fbe"
        },
        "item": {
          "id": "fe7a513c-48b9-4a0c-a1de-195cf0a301d2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bb5f7ec7-737c-43ba-9260-1d187c28e169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f137bb8-4a7a-45a0-b597-6213760c89f8",
        "cursor": {
          "ref": "61fd7e18-6f86-4c60-8733-b395333ad81f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ae64be6e-2e94-4982-9619-f9980ecb7f77"
        },
        "item": {
          "id": "0f137bb8-4a7a-45a0-b597-6213760c89f8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fb4057e3-bc0e-4ed6-84cc-2017a76773cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c9ebcc-e291-44b6-94f0-99526ec02f50",
        "cursor": {
          "ref": "1a943454-0b08-48dc-9307-797cd510c85f",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a3d75d4d-5902-4f81-90f3-af203df76953"
        },
        "item": {
          "id": "a3c9ebcc-e291-44b6-94f0-99526ec02f50",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e56ac7db-9976-4ce2-b633-9bb26e142e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0bb706-cfde-414c-a9d2-5f3b165a213d",
        "cursor": {
          "ref": "e072c0bf-07b6-4693-b220-7ddf75d4171a",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "434b71ba-8c64-40c2-807a-5f3aaf944ed4"
        },
        "item": {
          "id": "4d0bb706-cfde-414c-a9d2-5f3b165a213d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "994795f0-a88f-429b-a8a4-7005618e165c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd027e6-03b9-4e7b-8441-226b66949e6f",
        "cursor": {
          "ref": "b77683b2-80df-474c-ac4a-564f93e673a7",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c33edd46-a366-4bda-86e0-56d3c986d530"
        },
        "item": {
          "id": "2cd027e6-03b9-4e7b-8441-226b66949e6f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "79c6b95e-f809-4574-aad3-0c9a2c64d6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eda7c26-cfb4-40c6-89ff-6c25842a817e",
        "cursor": {
          "ref": "0488d232-04c0-4673-98ce-9a6ba2bbf184",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "632656f1-6c31-4a1a-a422-2838cd9b246f"
        },
        "item": {
          "id": "2eda7c26-cfb4-40c6-89ff-6c25842a817e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0c799d91-f030-4d45-8f25-fb3d15df9331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1251ccc3-d1c1-4c94-be0b-070b5ab08a01",
        "cursor": {
          "ref": "94448963-a0c1-44ce-8235-72352f2fa0de",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d36e8647-e4f2-4047-a3f3-61ffea0a5191"
        },
        "item": {
          "id": "1251ccc3-d1c1-4c94-be0b-070b5ab08a01",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c3c6c503-1e26-4c99-899e-bcb6ba0bfd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896473c3-e9e1-452d-98d4-42ba1dc1f734",
        "cursor": {
          "ref": "20113115-3506-413b-931a-9333753af580",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "34f4c8b9-0873-44d7-907c-2f1267c021dd"
        },
        "item": {
          "id": "896473c3-e9e1-452d-98d4-42ba1dc1f734",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d99e9e63-1f6c-4cd6-bbea-c7785e184bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d2c5b7-9794-4f43-bf0e-91b92db07f19",
        "cursor": {
          "ref": "ab51dc93-2b47-4986-8a22-fd4b175d9703",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c195b6cd-4522-4f8c-9b2b-e3f2d035ba8b"
        },
        "item": {
          "id": "56d2c5b7-9794-4f43-bf0e-91b92db07f19",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8aa5a204-a777-40bf-8d0f-16760e359e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2de6d1f-f4dd-4e39-8037-0e8db02c9ca1",
        "cursor": {
          "ref": "2057f400-f8e7-4f56-894f-371f2c97f94a",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cc33548f-01fd-408a-8e32-a00d3386889b"
        },
        "item": {
          "id": "b2de6d1f-f4dd-4e39-8037-0e8db02c9ca1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "36d2ddb9-4560-4a26-95cf-057d03bf0e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f91640f-4bae-4762-b1a3-18b7bd9aed97",
        "cursor": {
          "ref": "df7e8651-66a4-4fa0-a430-04618ff7341e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "177c2a8c-fec9-4663-882e-eb4dbac90cd2"
        },
        "item": {
          "id": "2f91640f-4bae-4762-b1a3-18b7bd9aed97",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b8749bfb-6a79-46ca-837c-1a004b0f9ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b96592b-58ce-4b0f-87ff-9fd9fe7142a3",
        "cursor": {
          "ref": "6b8edc43-440f-40e4-a8d2-a4bd4634900c",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e3a99b3a-ff5e-4895-98d2-c3a4034f7c0a"
        },
        "item": {
          "id": "6b96592b-58ce-4b0f-87ff-9fd9fe7142a3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c587adfb-fad9-430b-ad0b-8bd86265f0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e424896-deeb-4302-bf25-fbd956d70ba1",
        "cursor": {
          "ref": "e1804062-6611-437a-9de0-fcedee0e0046",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5e18a971-4155-44b0-a59a-0cf3e7717055"
        },
        "item": {
          "id": "3e424896-deeb-4302-bf25-fbd956d70ba1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c26dd522-1755-4ce2-a927-ca0cce94d9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b450be-ce3c-459f-9a47-55fb420153ba",
        "cursor": {
          "ref": "14b8c9d7-cc67-4507-9eab-5653cc2475e9",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "05030e0c-d693-4d3b-a699-e650aba941c9"
        },
        "item": {
          "id": "c5b450be-ce3c-459f-9a47-55fb420153ba",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9bee0b4d-6ebf-4dac-9bd2-8a87440f9e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc2bbc6-4956-44c6-83cd-5d5673f552d8",
        "cursor": {
          "ref": "21f70e5f-87fb-4bb0-bb17-4eea5dad3fa4",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2b4508f1-f7f6-48ed-9d54-eec03ce45163"
        },
        "item": {
          "id": "6dc2bbc6-4956-44c6-83cd-5d5673f552d8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d326f86d-8d64-4acf-921d-bd4579627e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce16552-d640-47b6-a53d-446d24d80a44",
        "cursor": {
          "ref": "0aaf3e26-fc0c-44d9-b185-f67fccc62b9f",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c9a05bcf-0f92-4915-8c42-e8a23e700e37"
        },
        "item": {
          "id": "fce16552-d640-47b6-a53d-446d24d80a44",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "26dfbabd-f546-4bc6-ac21-f39228d2b1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7aba99-1c9f-4913-a800-39a8376781b4",
        "cursor": {
          "ref": "46e3bfc0-f76f-451d-b824-ccfaa966df60",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c7687943-419a-462d-8ab9-ab995b8695b4"
        },
        "item": {
          "id": "ec7aba99-1c9f-4913-a800-39a8376781b4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b07dd438-416f-44cc-8157-afc5584c5714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b26978c-9771-454b-824e-8b22a259ba87",
        "cursor": {
          "ref": "881c0dc7-283a-4a3c-a474-d6bb9be09cef",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "761ef4d3-2190-4964-a915-3b0d07547712"
        },
        "item": {
          "id": "9b26978c-9771-454b-824e-8b22a259ba87",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "212b648b-3214-44f6-8753-cfde636ebccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1521db9-b94c-41e3-838f-a69d3ae9abd6",
        "cursor": {
          "ref": "0c6a9b81-74a5-4dc9-83cd-2df017fcbde2",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c1701f8c-dc24-4d3b-91be-96dc91e9550b"
        },
        "item": {
          "id": "f1521db9-b94c-41e3-838f-a69d3ae9abd6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c3529f32-cb8a-4ba4-8545-6712a8c5921d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514e1201-76f9-400c-9a88-52407feb1704",
        "cursor": {
          "ref": "dd1cc705-f668-4b19-b3e9-4eb66ab11462",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b860e2ac-8508-433a-8d09-dc87b689626f"
        },
        "item": {
          "id": "514e1201-76f9-400c-9a88-52407feb1704",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4512e402-8d07-4d2a-9703-349fea8be39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00eb9289-d934-4fb4-ab0a-4c109ea75a2d",
        "cursor": {
          "ref": "50287361-d1df-46b1-a9e4-71c200a06084",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7d58b653-400f-48f5-bfd0-882a140c6a5e"
        },
        "item": {
          "id": "00eb9289-d934-4fb4-ab0a-4c109ea75a2d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fa1c922b-5e23-44e2-a1b2-21cfeb1af151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e2a1d0-7aa7-4087-9f22-8a16224eebcd",
        "cursor": {
          "ref": "2501c46a-eeb2-4c53-8c53-aa6a663fd32a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bdeefc68-7ced-49e6-b6dc-27cc0436f1d1"
        },
        "item": {
          "id": "35e2a1d0-7aa7-4087-9f22-8a16224eebcd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "17018f42-5382-4cec-b262-d859f9d87cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b54c4d-c50c-4dc0-8314-b68c6d101896",
        "cursor": {
          "ref": "b8438f09-2b6c-4d9c-a523-1051cfe53a84",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "dc67ce28-55e8-41fe-928f-eb3f1f483514"
        },
        "item": {
          "id": "55b54c4d-c50c-4dc0-8314-b68c6d101896",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "58cbb5cf-1631-48af-a341-dd30a8cfdb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bd9dc8-c4a9-42d7-a943-67c95cf70e6a",
        "cursor": {
          "ref": "b56028b5-18c9-4c9f-bc28-a6d220e4651a",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f113bdde-87a1-45c6-a219-f6cf055da2f3"
        },
        "item": {
          "id": "71bd9dc8-c4a9-42d7-a943-67c95cf70e6a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3c58d5ad-95d6-4183-b001-d7e6588501fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3285b99-736e-4639-a956-b449f8cb5ba5",
        "cursor": {
          "ref": "3a733941-9c04-4bab-ae1f-0269025adfb3",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0020d9ac-eee7-402b-a313-32f582a8a901"
        },
        "item": {
          "id": "c3285b99-736e-4639-a956-b449f8cb5ba5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e79d04ed-efc5-4c53-9c64-8c71026b3936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2aefea0-0bb0-4e4c-8804-fe6a98cb0ff1",
        "cursor": {
          "ref": "77ec0598-f102-46bf-a9b9-d96eebefd19f",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "019f95f4-79a3-4fb4-a7d3-51dfc093dac2"
        },
        "item": {
          "id": "a2aefea0-0bb0-4e4c-8804-fe6a98cb0ff1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cd8bb785-e6a9-4bb4-aa93-0233aa5c9065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d0eb63-4b63-49d5-a05d-61be30de846d",
        "cursor": {
          "ref": "044b7d3e-5f89-415d-850a-ec1567d80747",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "dd83aca8-bbf0-499b-9e7d-7bebda6e9619"
        },
        "item": {
          "id": "87d0eb63-4b63-49d5-a05d-61be30de846d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "712e5db0-a1e5-44f3-89b1-2c05dbe080ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7321da3c-69f6-4796-9da4-bba442695f82",
        "cursor": {
          "ref": "2bb1a708-2cf4-4f6e-bf71-0ad2338bd415",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "54745ff1-e3f9-440a-94b6-d8a160aeaf8f"
        },
        "item": {
          "id": "7321da3c-69f6-4796-9da4-bba442695f82",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7105c477-bc70-43f9-91a0-c7902f13b3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f409a733-4576-471e-bd87-e2ecafecfdab",
        "cursor": {
          "ref": "d3278a86-251e-47ab-ba88-debe656d4662",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7798dd99-6897-4e34-b304-a0fbe7a1b447"
        },
        "item": {
          "id": "f409a733-4576-471e-bd87-e2ecafecfdab",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4537ff6e-971d-4f0a-ad39-a2a03a568cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5524d466-0246-477d-95a6-2c4ca183d13b",
        "cursor": {
          "ref": "bced2276-ae87-4454-8807-0d352d19c6df",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f0ed253a-6ad6-4284-a50b-f9a9237b9223"
        },
        "item": {
          "id": "5524d466-0246-477d-95a6-2c4ca183d13b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "93e01c4a-2c72-4b7f-a796-1ab867a7760a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bea2e71-36e2-423f-88a9-5c277fba7127",
        "cursor": {
          "ref": "f9d505d5-3048-46b2-9a5a-69f011a00288",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e771b310-c6fc-4d25-9913-73b0c0a5936c"
        },
        "item": {
          "id": "1bea2e71-36e2-423f-88a9-5c277fba7127",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "95909cbd-396b-48f1-a23e-d32cbbe41130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239a5ca1-3d3d-40f9-9a6d-a3355ef28733",
        "cursor": {
          "ref": "96f47c5b-e4e6-460f-92fc-f4c8748b62d7",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2c485270-aecf-4d0e-8757-2e5b7e652537"
        },
        "item": {
          "id": "239a5ca1-3d3d-40f9-9a6d-a3355ef28733",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "107a7200-b577-4e57-9d6c-df3cf036ff8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204ad34b-cef7-435c-8123-b63ddaf18d75",
        "cursor": {
          "ref": "8c1b891d-c7ee-477b-8c0f-fc14883837ed",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "82c510ef-e28f-41c7-b81e-01c29d7248de"
        },
        "item": {
          "id": "204ad34b-cef7-435c-8123-b63ddaf18d75",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dafc5095-a20f-4f77-b1b5-d22be58db77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152ee490-9d0e-4669-ab84-2d60063736da",
        "cursor": {
          "ref": "7d5ca776-4ad5-4558-a427-9bc36deb1fad",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "eaf53ef6-7277-4cfa-ad0a-11f97bd7b3b9"
        },
        "item": {
          "id": "152ee490-9d0e-4669-ab84-2d60063736da",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fc78ad7a-e891-4a3f-8eee-fe155aed4a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acd992d-696f-46da-8b03-a1c434e5ccb4",
        "cursor": {
          "ref": "9ef79a6d-3092-49cd-8106-3f77eedbf071",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e0013556-0202-40d9-b9fd-58ec57a30887"
        },
        "item": {
          "id": "2acd992d-696f-46da-8b03-a1c434e5ccb4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9d7d2975-cae2-43b6-8db5-efbd78e1207f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cceddf79-6f9e-4e46-9d4d-4e08a80f4509",
        "cursor": {
          "ref": "603fd95b-0050-4f34-995e-e8948176ffa8",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "73fbd43b-242a-43c3-9f51-b7d7a593e066"
        },
        "item": {
          "id": "cceddf79-6f9e-4e46-9d4d-4e08a80f4509",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "770e052d-1788-40d5-a632-fbc8270ce7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930b64ec-e140-4282-8222-bd41c52f5dec",
        "cursor": {
          "ref": "84e76b93-ff2d-44d1-999d-3be6c74a36a5",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "540e028f-cf17-43ad-8824-e7b97e6d55b9"
        },
        "item": {
          "id": "930b64ec-e140-4282-8222-bd41c52f5dec",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "19d7e206-fdec-4d47-b274-15f4c249226c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d5313d-d345-4671-858a-469cc258d270",
        "cursor": {
          "ref": "e4ba7bef-7133-4f9e-83f2-61824d7e088f",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "096cacfd-825b-4fc7-b914-833fa7c684f4"
        },
        "item": {
          "id": "28d5313d-d345-4671-858a-469cc258d270",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "286800b4-71df-4c1a-864c-9592b150a450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94186d80-0fe6-4c5d-95f3-d3a0d2b329a4",
        "cursor": {
          "ref": "d2075a76-002a-4438-855e-238a9f0a4397",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1eb520be-a975-45ee-b709-6cf7a348d45f"
        },
        "item": {
          "id": "94186d80-0fe6-4c5d-95f3-d3a0d2b329a4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7ab4277b-6483-49ad-bd9f-2ae8c9862606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa890912-06d3-42fa-8225-d57d6ff0830c",
        "cursor": {
          "ref": "e9163e42-4a05-4b0c-b111-39615cec3fe2",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0e9ff42f-e88b-4d56-9602-60a0d4e4c1a0"
        },
        "item": {
          "id": "aa890912-06d3-42fa-8225-d57d6ff0830c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c76a80cd-320a-4f51-8ea8-82a47518ed3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e949bc9d-b6d6-4ae8-9423-65211fa8226b",
        "cursor": {
          "ref": "76b6152b-2851-4c31-987d-32e0df95d636",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1b689188-b5c5-4002-9f3d-f67a083b5d10"
        },
        "item": {
          "id": "e949bc9d-b6d6-4ae8-9423-65211fa8226b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "715c1690-5dbb-4a67-b0f9-980ed5faf2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069eadfe-109e-4d8f-8070-5c37db900c5c",
        "cursor": {
          "ref": "b9f22075-9035-4877-9ccd-86f7c2e3a4e4",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d083aab6-9f51-48dc-b4dc-7a871264f2a8"
        },
        "item": {
          "id": "069eadfe-109e-4d8f-8070-5c37db900c5c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b16eb88f-e087-4a46-bea0-7f401bea0de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fea7ff9-3d0a-4cee-b007-cb51b4115c4d",
        "cursor": {
          "ref": "535c9400-25da-4226-8bb6-eed789f996e7",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "69d25cfd-36af-4d68-8cb8-a015ced38d84"
        },
        "item": {
          "id": "9fea7ff9-3d0a-4cee-b007-cb51b4115c4d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "114db185-c5e4-49f1-9947-599137945af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a118690-5069-41bf-b01d-ecd79ddbc4e0",
        "cursor": {
          "ref": "ebd6e64b-1368-4848-aafd-915781e41510",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "824cf697-3b5e-43f4-8e84-3a4da457a152"
        },
        "item": {
          "id": "4a118690-5069-41bf-b01d-ecd79ddbc4e0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "985a434b-5721-4bf7-84a5-e5ae9d32b00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc748eac-3b8a-430f-aa79-9b580777ce1e",
        "cursor": {
          "ref": "a341183b-c230-4a44-9a87-3262e8f25f2f",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8051fcbf-1854-4fcc-a0ed-9a11e4ff0b0d"
        },
        "item": {
          "id": "fc748eac-3b8a-430f-aa79-9b580777ce1e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b4d7b352-3bce-4873-8d76-24a8fda7afab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a97a1ae-10da-4f21-be4c-678d83385bd0",
        "cursor": {
          "ref": "20cc4795-9335-4bae-b5c1-1f414cde9d6d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "64c4da72-97bc-4d13-908b-e9dfaaf4fad1"
        },
        "item": {
          "id": "5a97a1ae-10da-4f21-be4c-678d83385bd0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e1e6bbc2-7663-464c-b4c1-88db9e0ae1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a201267-d75a-490d-a6de-2c55b9c5f406",
        "cursor": {
          "ref": "1e6de337-9e39-420f-a9b5-1da69572f687",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b829fa85-6b5d-4737-a122-77e8c4d8b736"
        },
        "item": {
          "id": "0a201267-d75a-490d-a6de-2c55b9c5f406",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "634e1e0b-d626-47a3-a146-1c607371e090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3780259e-75a5-431a-bafc-9f7c51d709b1",
        "cursor": {
          "ref": "5b902524-3b1e-4957-9956-598f052465b1",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0c461667-8829-484a-9b05-88f5066d502c"
        },
        "item": {
          "id": "3780259e-75a5-431a-bafc-9f7c51d709b1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2b9cd51c-f58e-40db-a5d6-00ae1045c1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29625cfb-8ca6-4c0d-937e-43eb004d23f5",
        "cursor": {
          "ref": "a043fa05-5f79-41cb-8c8a-25683a170a67",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b87ed78f-5965-403a-8a0a-92271baa76d3"
        },
        "item": {
          "id": "29625cfb-8ca6-4c0d-937e-43eb004d23f5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d4070d69-4f8d-4f94-ad8b-23a051f238a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dd5e70-19ee-4266-bb1c-1827a4f60c71",
        "cursor": {
          "ref": "4b139b1a-0439-4794-acc6-2df0d966c31e",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "285accc1-c5d9-4774-8ff5-dba3b4e89964"
        },
        "item": {
          "id": "d6dd5e70-19ee-4266-bb1c-1827a4f60c71",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "edf65fc0-23af-4819-b59a-8ab9d467fd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe17393-111f-443f-bb40-cd0d16d68c55",
        "cursor": {
          "ref": "9765b963-d852-4543-958a-5542736cbf4b",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e6847bfc-e552-4bfe-ac58-06617fa833fa"
        },
        "item": {
          "id": "dfe17393-111f-443f-bb40-cd0d16d68c55",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "21cfab7d-1a93-4fb5-bff6-e26e3798aac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75de9723-0eb5-4ee4-8ab9-da84dd6f4400",
        "cursor": {
          "ref": "a19df90a-4525-42a8-96b4-3456401ff657",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5e921bb0-ec4c-49b3-aaab-83150dea84e2"
        },
        "item": {
          "id": "75de9723-0eb5-4ee4-8ab9-da84dd6f4400",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "031357ab-34c2-41f5-8548-bb9f9d97b21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888a4bb1-baef-47f4-b761-98cfb36201da",
        "cursor": {
          "ref": "4f0e3425-d4db-4720-9e66-eb3c81a82b07",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "86f0be43-199b-4549-b21e-7d4c547a9436"
        },
        "item": {
          "id": "888a4bb1-baef-47f4-b761-98cfb36201da",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "95bae0bf-70cd-4dbf-8a5c-d3fb2eaf77cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5864c9-4b9d-4e67-af72-51095bd4f035",
        "cursor": {
          "ref": "feeb8ce9-bd97-4eab-9623-bfcf4b6db882",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "784278a7-68b1-4568-8b6d-46183faf9182"
        },
        "item": {
          "id": "7d5864c9-4b9d-4e67-af72-51095bd4f035",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "30b52141-912b-4dfb-8f2f-a4f67e7d19da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb0fd6f-5ff7-4873-9335-cefdc4e363fe",
        "cursor": {
          "ref": "6b8ddc67-26a5-43ce-bbe3-c46cd86e4331",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "55ccf660-9d45-4752-84b0-6b2114bb64e0"
        },
        "item": {
          "id": "3bb0fd6f-5ff7-4873-9335-cefdc4e363fe",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "728aec9d-4c4a-471b-8972-c4426c12591c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fda62fc-5fb2-4109-af92-b2835d46bcb6",
        "cursor": {
          "ref": "be753601-c788-47ce-9064-70d6c0504731",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6b0f24f6-cf81-42d4-aa50-4e7995b6757d"
        },
        "item": {
          "id": "8fda62fc-5fb2-4109-af92-b2835d46bcb6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6ceecaf8-a58a-4247-96e4-49a59f4e5131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0171452-22c0-478b-b9ef-0f9f87f322d6",
        "cursor": {
          "ref": "a10da3c7-5a45-4539-be44-61a102241f8a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2bd2a46f-35b6-4f07-9dd0-5ece1591d2d6"
        },
        "item": {
          "id": "f0171452-22c0-478b-b9ef-0f9f87f322d6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ca3335e5-456e-4814-8c20-0806d42ff593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7094b1c-1a81-41d6-8158-ac97ca05b27c",
        "cursor": {
          "ref": "5f7292ae-6c76-40b0-865c-24405ba09907",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aba2acbd-117e-4c57-b34b-a9553402f909"
        },
        "item": {
          "id": "a7094b1c-1a81-41d6-8158-ac97ca05b27c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d28d2992-149f-483e-8ac9-9b8b43c33e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70d8b8c-ff99-4df9-aae7-546d73b73312",
        "cursor": {
          "ref": "1cb2f555-0c1c-439e-965f-ce31b5acece1",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dc152e9f-801e-49fc-8651-c107045c20c2"
        },
        "item": {
          "id": "e70d8b8c-ff99-4df9-aae7-546d73b73312",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b69bfb4a-c28e-4af5-ac6e-00f44f720759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfbd673-7cf6-465d-bcc9-e8418d125603",
        "cursor": {
          "ref": "8e0a37e7-dc29-4409-974d-9ede5b6c1087",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "610fba26-082f-4982-aa97-90f91b2fa824"
        },
        "item": {
          "id": "edfbd673-7cf6-465d-bcc9-e8418d125603",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "070e9959-9fda-47f5-8dc0-132adb1528bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539e56ca-4568-41ec-8e3d-a7d2bbd9c8d0",
        "cursor": {
          "ref": "5e115cca-0445-405d-8687-c1823ebf48f5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e7ebf043-1960-46c6-a582-38552fb0672e"
        },
        "item": {
          "id": "539e56ca-4568-41ec-8e3d-a7d2bbd9c8d0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f25fad7c-a9d1-4f69-ba5e-4717345575ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3fe4a3-eec0-4aac-8950-ce39f1bf8679",
        "cursor": {
          "ref": "7fc35193-c817-45ed-ae61-d7601bff2585",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a9c8d1c6-962f-4745-b02e-3b8c5c827bc2"
        },
        "item": {
          "id": "7d3fe4a3-eec0-4aac-8950-ce39f1bf8679",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1966678e-6e2b-41d3-9485-d24c03d9cbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e214ae3e-12c7-48a6-9c52-9b6f70939f22",
        "cursor": {
          "ref": "c9ef6ad3-675b-422c-8f70-73e2476eec32",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3a48a64d-b874-4cac-9ae9-ca865777a142"
        },
        "item": {
          "id": "e214ae3e-12c7-48a6-9c52-9b6f70939f22",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e7e9e619-8105-4e10-8644-d8e014e36c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adbdd6e-215c-4f93-a5ba-44d3be9006ee",
        "cursor": {
          "ref": "e8cb24c6-04f1-4729-8d6c-b63e09368943",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a40ee93b-a626-4fea-b133-b9ca57c1b3e1"
        },
        "item": {
          "id": "5adbdd6e-215c-4f93-a5ba-44d3be9006ee",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "429b5281-2946-4b7c-98c7-1176aa1cb338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3084ae-06ba-432f-b1ac-db6c220f9ce1",
        "cursor": {
          "ref": "689f752d-b3d3-4475-97a2-ff0a475a8f98",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5b22f5fc-dcb0-4992-9bbb-24e1857b584e"
        },
        "item": {
          "id": "be3084ae-06ba-432f-b1ac-db6c220f9ce1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "479ec7f4-a969-4c38-8728-80108e95eccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84b8124-0e64-4bcd-9037-c8526df24554",
        "cursor": {
          "ref": "53e0989e-0f54-491b-88f4-8c07b7decb02",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "de50c56a-898e-47f2-a737-c41a6294ed3c"
        },
        "item": {
          "id": "c84b8124-0e64-4bcd-9037-c8526df24554",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b59644df-afe5-4c6c-8211-4f4615d264f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fada18-414a-43be-b20b-2ed69f6bc70e",
        "cursor": {
          "ref": "9d134827-4857-464d-8a5c-45087c67dddd",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e50ed3aa-c6cc-410b-ba22-319fbe3cd248"
        },
        "item": {
          "id": "f9fada18-414a-43be-b20b-2ed69f6bc70e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f1072099-71ea-42b1-84e4-3256c33436de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b50f221-850a-403d-b7a2-0e135849fe25",
        "cursor": {
          "ref": "749b5885-2504-4314-ac3a-85761099bda8",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6a8971f6-e9e3-40e7-8d80-6ff4560adbda"
        },
        "item": {
          "id": "1b50f221-850a-403d-b7a2-0e135849fe25",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "25ea0772-fe3a-41e4-99fe-47e50d3d3f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac54c784-4ed6-40c1-9184-8d2e4b425afe",
        "cursor": {
          "ref": "c9c81cb3-2848-4f0d-a04f-8e0068fb1e2d",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "63037644-9cee-4bf3-88db-c62c0c73521b"
        },
        "item": {
          "id": "ac54c784-4ed6-40c1-9184-8d2e4b425afe",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a2368b43-93c9-4ef9-acf2-cbee158442c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0e394d-957e-4e75-bd06-58c035293a44",
        "cursor": {
          "ref": "a23aaf02-ff2b-4e3c-8860-0be1ed662e6e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9536edae-6b63-45fd-937e-5a6f1d9d61dd"
        },
        "item": {
          "id": "9b0e394d-957e-4e75-bd06-58c035293a44",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fead60cc-f4ca-4e19-bee8-15cceaac7915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eeb2f97-4ead-460b-b253-7114d10b390a",
        "cursor": {
          "ref": "6175bfc6-5887-494d-90d8-7443cfec29fb",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "bfbe1ba5-c8a0-48c0-84c2-e68a339b240a"
        },
        "item": {
          "id": "0eeb2f97-4ead-460b-b253-7114d10b390a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e441956b-4ca1-40a7-b900-d7681100b7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851d5f26-ec7e-45ab-a46f-7850a2686d74",
        "cursor": {
          "ref": "d5f24e56-576f-43ec-b9ca-0480d945641f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ca301c47-c7ae-40e1-a108-06eebbe091b3"
        },
        "item": {
          "id": "851d5f26-ec7e-45ab-a46f-7850a2686d74",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9953e78e-e42c-4f08-8c9f-e8f3379e139c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e070969a-ca24-4be0-a64c-37a5e74575df",
        "cursor": {
          "ref": "9c2e8fb0-2726-4a3d-ae1e-90095862f8f6",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fff3e2e9-52ac-4ad3-bded-bdaf8c1c00db"
        },
        "item": {
          "id": "e070969a-ca24-4be0-a64c-37a5e74575df",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c3e0df95-138e-4539-a5f4-cbf692167f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9d52c0-d0e8-4a94-94c3-455ffbbfe3a7",
        "cursor": {
          "ref": "bc64fafb-e29c-406f-bb4d-d29671f38a25",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3b769fc8-c6cb-4d34-8d7f-76043c78d490"
        },
        "item": {
          "id": "5d9d52c0-d0e8-4a94-94c3-455ffbbfe3a7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2111a5ba-7453-43b8-8471-848e23be97f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb9aef4-ccb9-408d-a669-91d4ab313612",
        "cursor": {
          "ref": "75af18be-e206-44dd-8b52-347868b68a41",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ce364a7b-d016-4472-a236-0f57f6c63648"
        },
        "item": {
          "id": "dcb9aef4-ccb9-408d-a669-91d4ab313612",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f781ffb0-9fd1-47a4-a7cf-136199d79f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeab1e01-d346-4d07-8839-d3e9c4709fb0",
        "cursor": {
          "ref": "8c012e49-86e2-4a4d-ae21-19f402e790f7",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "878d8e37-eff7-4a31-8da6-266e53582793"
        },
        "item": {
          "id": "aeab1e01-d346-4d07-8839-d3e9c4709fb0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b044db18-a6b8-4750-a22d-23002740deaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592eeafc-d626-49df-b4f9-578ec65de947",
        "cursor": {
          "ref": "3843da6e-9f33-4ee5-8402-4ec51b6f7865",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "be6b44b3-3cbb-462b-9e3a-6ac01c99b41f"
        },
        "item": {
          "id": "592eeafc-d626-49df-b4f9-578ec65de947",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "edaf48c9-b6b9-472c-9a77-ce9d35caa011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c21a73b-7ba1-4bff-8ba2-898ab6360e33",
        "cursor": {
          "ref": "c5fdf1aa-218c-44c0-9691-34a5e01eb59f",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "51a6c10e-cc51-469c-806b-f5cc792f9a25"
        },
        "item": {
          "id": "9c21a73b-7ba1-4bff-8ba2-898ab6360e33",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0dfeda5d-4cb6-4bc5-ab93-b403e8112763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8ce020-82e9-4168-9b43-0575f134affa",
        "cursor": {
          "ref": "a08f18d1-a58a-4266-8f80-2ecbc5649c3b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "16934b5d-e16d-42b5-93ce-f63fc7400d6c"
        },
        "item": {
          "id": "5e8ce020-82e9-4168-9b43-0575f134affa",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "70b24889-7d4d-442c-8a94-a7ca2d68ddf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aee7032-ae88-40e8-b081-6b9ebd8022b5",
        "cursor": {
          "ref": "1c8e21ae-41bc-4de2-b37e-2966b1d8cb19",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ee94658a-86fe-4ae6-9041-59da4b4e2aff"
        },
        "item": {
          "id": "9aee7032-ae88-40e8-b081-6b9ebd8022b5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "55729bd4-8869-4c50-a358-11f9adafba7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637c0a5f-6d94-46e0-a906-98c1a1323c59",
        "cursor": {
          "ref": "2955e9ed-1c77-4045-b48f-84714b4a65df",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "61e15293-1f09-4430-b3ce-884a400f7560"
        },
        "item": {
          "id": "637c0a5f-6d94-46e0-a906-98c1a1323c59",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a83942e4-0943-4cf8-bd57-132bdee780a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0328ca52-f58e-469c-b244-b529b31c65f7",
        "cursor": {
          "ref": "85190cb6-c043-42d5-a4dc-3a143c55ac85",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "579d513d-dfc2-4cf9-a2b5-e40b14ccc09f"
        },
        "item": {
          "id": "0328ca52-f58e-469c-b244-b529b31c65f7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "008e4bf5-0bdd-4703-8d4f-d064303552a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7010e25e-b76c-435d-9f03-3a0da68f1e34",
        "cursor": {
          "ref": "04734fcb-1d58-4d44-b05c-20dfa313a056",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a5c0fba0-8311-4941-9fdf-33cbfd141a8f"
        },
        "item": {
          "id": "7010e25e-b76c-435d-9f03-3a0da68f1e34",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5ad17e2f-18b0-4d66-a643-e08711883858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff5d4f1-50de-4241-894d-af302955a7a0",
        "cursor": {
          "ref": "298409d8-cf8f-4ec5-9563-ab1a0069f777",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "aaf726af-9011-41f7-bc49-a7926d81f828"
        },
        "item": {
          "id": "2ff5d4f1-50de-4241-894d-af302955a7a0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f9bc2aed-8e79-4947-95e8-fdb46d326259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78a8eef-8076-43f2-8392-4bd6380f631e",
        "cursor": {
          "ref": "2578a0c3-600f-40f2-96ef-98f88f38404c",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3e7c5182-8ef0-49fa-a91b-7f04480f359e"
        },
        "item": {
          "id": "b78a8eef-8076-43f2-8392-4bd6380f631e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "85662160-34d0-41ce-bd2c-304ca4c85d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bca1602-83d1-4c5f-a774-35a4b61f1a20",
        "cursor": {
          "ref": "9796ca50-ecc5-47fd-a130-0380b0c00295",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ae65e92a-7d35-4ed4-bf2b-8b8145656e7a"
        },
        "item": {
          "id": "0bca1602-83d1-4c5f-a774-35a4b61f1a20",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3396e4d4-ff44-4e3d-aff0-08ebd480876e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 87,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee0917b-7d2a-4175-82f6-f1a3574f95b6",
        "cursor": {
          "ref": "4409f815-2a51-4d3b-9ffb-79114e1ea7a6",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "51cbb47a-dec0-4a8b-a9ff-608f61bdc40e"
        },
        "item": {
          "id": "aee0917b-7d2a-4175-82f6-f1a3574f95b6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9c2bed3c-b669-4055-abf6-6596b0c5027d",
          "status": "OK",
          "code": 200,
          "responseTime": 183,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6586a01a-4c60-43e3-81bf-55ac9111cccd",
        "cursor": {
          "ref": "bf599727-ec78-48cf-8a79-02ebc2d325b1",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5db645ba-e646-4640-9867-c1199f08f313"
        },
        "item": {
          "id": "6586a01a-4c60-43e3-81bf-55ac9111cccd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "203d92ba-995c-49f2-b91e-dfa8ff63d19c",
          "status": "OK",
          "code": 200,
          "responseTime": 1724,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d88724-5207-411a-9463-0521aa2a40b5",
        "cursor": {
          "ref": "20140b01-2a4d-4f8b-a664-4307e0de4204",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "142b120f-9d01-427a-ba51-36967145a37b"
        },
        "item": {
          "id": "a8d88724-5207-411a-9463-0521aa2a40b5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9f353ef5-d604-4bca-9063-b637237d7078",
          "status": "OK",
          "code": 200,
          "responseTime": 1560,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "783c9b30-f228-44e7-a287-8cb6b1780269",
        "cursor": {
          "ref": "efc3544d-9b80-453e-a8ed-65f10ea6b3e0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6e445ef1-57e5-48d6-963f-e7e08a4e447f"
        },
        "item": {
          "id": "783c9b30-f228-44e7-a287-8cb6b1780269",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "01a5cbe0-1792-4165-9e68-2d664c121cf4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783c9b30-f228-44e7-a287-8cb6b1780269",
        "cursor": {
          "ref": "efc3544d-9b80-453e-a8ed-65f10ea6b3e0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6e445ef1-57e5-48d6-963f-e7e08a4e447f"
        },
        "item": {
          "id": "783c9b30-f228-44e7-a287-8cb6b1780269",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "01a5cbe0-1792-4165-9e68-2d664c121cf4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab515c3b-4e4e-45ab-acbb-f5656ecd69b5",
        "cursor": {
          "ref": "b663bf0a-14c8-4d49-8823-baa0c1c63b83",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0876ba63-118a-460c-82a4-33ba5eed1834"
        },
        "item": {
          "id": "ab515c3b-4e4e-45ab-acbb-f5656ecd69b5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "08d77b7b-5361-4bb5-993c-2e648ad3bf41",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc83863b-3828-4c16-8cdb-f56df5c70f1f",
        "cursor": {
          "ref": "a829ed2f-6bdf-45d0-ac13-72f30fe3a35f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ceff6a66-3944-49d8-9447-919cebb93cd9"
        },
        "item": {
          "id": "fc83863b-3828-4c16-8cdb-f56df5c70f1f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f134d7de-39db-4716-9a75-dd2779dd761c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}