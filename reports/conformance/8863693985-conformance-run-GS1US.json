{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "97ed9943-0103-4909-a7ef-1629e4624e91",
        "name": "Clear Cache",
        "item": [
          {
            "id": "68f11d7b-8e55-44c1-9b45-301f3bbf9613",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "336ae0dd-6e15-4142-bef9-3a9f899049e0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c725f761-e203-4469-9210-be0c66dc1ad0"
                }
              }
            ]
          },
          {
            "id": "449603b0-7295-488f-8702-9d3a8211097b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a530cc0-4c1a-4e93-bf1a-d4576efd67ba",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "457df792-0502-46d7-9032-6cdd571ba0ca"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c3c5eac3-55d5-4cac-a04d-274304c5b4db",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "378c2909-5d47-4a6b-afb5-1ddfbd52733f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c7425b1-30ea-423a-9a41-a1ce1293063a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d973612-9c99-45c7-a0ad-f3b990a3a043",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22fd8cd6-3eb6-4d1b-9cf9-90d4d6f6e46a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "651eeeb6-6548-44e5-8eb3-3fba1a6978de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cdca0dd6-e7e4-43c8-b241-33a900250c6b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e79f5b3e-4ec0-4b61-a980-8916a9a8b243",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5b02e93-1da5-4a91-9dca-7d86237cdfe6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccd77dd3-e3ac-445e-a3c4-966da50d2bf1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "676e1edd-b076-4395-aeed-f5cc8d71010d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9293a33-af8a-4b84-81f3-37b8baba7838",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4c0b60b-c6a0-4547-a5c0-6f5c86a64099"
            }
          }
        ]
      },
      {
        "id": "6e689b41-4afc-4693-b83d-7df03844aeb0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7ea1c4e9-c6ec-4cca-9572-3b6db7b4fc7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f38e7231-949f-434c-80d3-5b1d36468ce3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7143c128-cd21-440d-a48b-62bd6eb106ea",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7f09d2-bd87-4509-8393-4a591a99f9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04e702e2-3c49-4532-8dc4-19fc86f6d9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3e056d-01bf-488d-8c2e-39923831f018",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22256ceb-33d8-4afc-a31f-b6e077fbae49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0ebfb7c-02bf-4d5f-b571-038c14234bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a51c2d-c0b5-4176-9114-6bfe23cadd30",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ae4503-9939-4ea4-bd88-441c4e649234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "613b2c27-99b1-4f04-807f-b494f17a807d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "73503367-c61a-46dd-b4f7-9065d4eb4c22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6512940-ffe0-4bbf-b36c-813ee0e41802",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7263598-a69d-45d7-8418-0686aebe0ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8295134e-ecf0-4b77-a55a-11441da8dbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63bd733-fbb0-4ebc-93a1-e3537d94e26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7805ea7-c1fa-456e-a1dd-6de2c5b5d297"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "11060289-8daf-49e4-bf2b-3f31eeb98ce5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a36511a1-84a7-4779-97db-b4b5eaf88b10",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a52ee971-9c34-4fd9-a4fb-6ff9a9711bc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b9ddc6c9-8799-4039-b25d-c6d60a64af58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "716f4b66-357d-434f-83a8-67c5330033c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3e624910-4b92-4591-ad62-a3193b5179a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2096e006-7da5-4f92-a79a-3ab380c90533",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "086f58aa-0765-4dc9-b1f9-0902aaf8bc8f"
            }
          }
        ]
      },
      {
        "id": "65644a91-512e-4919-9cf0-5b3fadcb9f7c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a78eec42-e967-4827-a79e-77916fe20b3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4cb4e23-d838-432a-a81d-1b7ad69dbcf8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "25a03586-e75c-4fbb-af48-b63797035da6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010659e8-c5b0-43ee-bbfd-8b99f73d572d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5148b97d-7757-472b-b185-264a587c7ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216e2320-f2b9-472f-878f-fa98deb2521a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ea55699-af2a-4ddc-9d33-052cf8047660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae85bd7a-284b-421f-a108-9cf868e09c81",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45ee49c-0fdd-4c74-b45f-0d8e1943608e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee477f1-b0bf-4155-9b10-f67f714bb65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4facc7ac-393c-4cb8-9c77-d28f16f9bfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1d9410f-2433-4d58-a15b-a5c92e5fe43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086523d9-3706-46c5-927f-9c1a8e04841e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca648a6-3cca-4704-9a47-68028678b84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf45c13a-8828-497e-a833-f0992932b381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b274295-e4ae-43e5-ad35-0ac907e3edae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "960c5b00-4562-4c76-ab24-c37b546ab7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef34da4-aedc-4885-9deb-9e5ad4fb388b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9d9a52-5334-437e-85e7-1f7b240ecd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc534694-ebe4-4a6e-bcdd-09b27b76890f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be66941a-5e48-41a1-bde8-cec0484b17ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc093cb9-f0c5-407d-b687-2ba7862a943a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500ac405-b0c2-44b2-b94d-67ad0b4059a0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd13384d-fdd9-4c05-8563-e3559e204b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93508e42-8176-4145-b17a-281d8ab8c103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce89653a-526d-4d34-8673-77c6fe1edfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3de1494f-5471-468a-997f-4250f8160de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be25efdf-355b-44d1-9f60-ad23dd092e3b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad825bfe-c9d6-4e6c-bc85-3279ce14f2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58acddc7-735c-4294-9771-ce3783d567fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66bd212-1d6c-4661-9559-7daf64d8e6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9088011-f21a-4b56-8ca1-642a5ac7aa02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ebfda1-09de-4d2f-8087-0c5530bdb102",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f005eb0-3f96-4dae-acf9-bf7eb7e9778a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1425ec6a-476e-448a-b168-d0add204a55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efae5d80-ccae-4ddc-9a87-8f49270e2537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8554c5a-a87b-4ac8-827d-9cd181ff4b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936ca5c4-9c3b-48e2-be50-d7c4a83d27f4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2def92c7-7ae5-4334-9a3b-43919d90ae07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebeb3139-8f78-4029-8909-4999495d35ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93de6b7c-b47c-4dd8-9494-adebce8aca23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "262b29bb-3705-4350-82eb-e3f3405fa058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35079a1-ad94-4a6c-bd88-733f7bba8d9e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f8f428-9438-4dcf-90fd-7df380290974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6462a1-cbad-45d9-99c6-5c74590054bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4180182-a7e0-4188-aa15-9451e08b09a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "371b3954-ebcf-4e36-b426-0d2480fbf8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda36a16-fc01-4ad0-9b60-f8cc471a3385",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11afcc7b-aaad-434e-9a59-89d666791c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d2b150-87b0-4695-8864-f3cf14a1f046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038b2df1-7cc1-4761-b1fc-a953ca74f51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "677c8644-3208-463a-868b-a70fc9108fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6862b774-859c-441f-9a43-3a966b0e6bbb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47e16c4-239e-4487-b2ba-53fd103f8770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a4ff30-9dd5-4284-9f58-9600577ec7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7947b9-64d9-486c-965a-2f548be85850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a0e2b87-45d2-439d-aa3c-78a2df6d03fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf50394c-fd25-451d-aa86-06d6ce2b6d00",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5b7a73-40d7-4100-b6ee-b23c3bd7d56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f481099-3ac8-4a09-8212-f62889f86d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a19848-b0ac-4973-a964-729735e576be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f57d0af-579b-41c7-a6dc-5998f498bc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6496752f-c848-4162-9167-ce710c49ea2a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab529580-ba02-4a13-b1c3-8b2a2b9aab9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a7804e-ebc7-44e4-afd6-7eed342878f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fd8d56-8f7d-4cc9-8559-472817d540d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2071a65-8f79-4256-8474-a3bf2de4b70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3e3d68-677d-442b-989c-303eb5606919",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4d34cd-020c-4e49-bf24-e3a772dc0202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcfb9b0-71c9-4bf7-a43d-d36650f31391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6e0593-5b2a-4ec1-a836-83fbafd73e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1a6045f-8637-46a4-8574-064ff877f4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d6fb67-b6fa-48c2-98f2-3ee6b69c2422",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68fd966-9474-45c6-ab86-e3ea00f09558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b0bfd7-b83c-42a9-974d-6081554cc1e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5121962-482c-4313-9f51-7dee9891a227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5b45774-cf83-455f-a9e9-37ec48b96709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955f4497-b50c-4246-b3a0-aa635c73535c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474d32b2-4fdd-4f35-b54e-b8fd8bd90a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3d9584-0792-482e-afbb-41c4fdd771d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db05fb5-e024-4623-a001-2c5717424c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1a82c9c-18c7-4322-8f67-e5aaa3acf9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7899559f-84b4-4981-9605-267a44d92477",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67688ab4-c345-4d43-a79e-195c274802b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdc488e-0dde-46d3-94c5-81708b8f3227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c10bf7-2e52-490b-9e3c-36e9c61b11ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "135fd66b-4471-474b-aac5-49f1ea51966f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48250d6d-d479-401f-a9c2-051a2fc0b2b6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6480fb93-e650-436f-9fc2-1c137e7a7b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a93686a-491a-4ca3-a3b9-f5d3cad16842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9b4fb9-26b3-4148-8851-1a219564549a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5290f3-f914-431d-a599-f6a0de4cf576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18515b1-b2e6-4a76-98bf-58fac3781f64",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576599a0-428f-41fc-b580-ed2406b3dc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa9c2ff-576c-480c-a6ca-c7d7f8b8cdb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912f4978-2183-43a3-afb6-92edf377db13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cda632d-6b60-4f74-9943-37755e054954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78007fa-b84b-434d-91e4-e8cbfe30e681",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ec420e-efb4-4a22-ba27-127e18e5eedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2a6c3c-70ed-4ae9-be4c-90f75e676c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bd63c7-889e-4952-8be0-0c32b761db63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc774d6-ab8c-44e7-89e5-0223a83ef7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99b3a83-9e57-416b-afb9-4bb7e41fa75e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0604ebb5-d0b7-4af3-a620-0e3e8ec010b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab866989-122c-4031-aeca-6ead1f3edd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a99587a-8f9d-4668-a1a1-83d92845b26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40a1bdb8-f61a-4390-af60-8c99f071b2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a424db7-1c93-476a-b747-b2834befff0a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2231d22b-53bc-434d-ae04-b6a5273e8b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca23759-3906-4ee0-a0d6-a237f109d5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee11468-10f3-4d0a-a76c-ccb541129d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d99ee80c-96a8-41cb-a34b-e40dcb7cafb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0d5736-c328-4891-b328-d51c119ed7bf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a118ec-9e59-45c6-a013-565ed288e714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127344f8-e4bc-4b12-ad36-10d303d55c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f370697b-0427-41f2-a22f-035a8fd83092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53f3ac1a-e4b4-4ef0-82e2-5fbafad6bd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5dafd4-0c0f-4149-a180-8db2d9ddb19e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8629be68-d233-48f7-957f-47455e766c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f08430-ad10-4eee-b43d-21ea8f458451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0795d61-4790-4fff-87b3-9b3fd6931169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8adad8b0-4228-4260-935a-cddc1e263a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385d93f3-5de9-448a-be4a-6abbf3695d8a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae391cd-5906-4f17-bc2f-2cfb0f671494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4954355c-4dcd-40e2-af76-deb959ccc298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8b8b13-f951-4ffb-801d-2677ec179a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f647d882-1b81-4e34-9908-193524144002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2bf38c-5a48-44fd-9354-ef6a125e4fcd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec73e20a-b3cd-488b-9528-59daae2d4a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9c97cf-6ceb-4dfb-a427-b574180248b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19b92b1-664d-4400-939a-29e2dcc6a25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10213507-0ab5-497d-a718-950942573955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a230ef-146a-443a-8aff-5d31be7ee943",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3bfc41-725d-4994-bad5-607a3b3fbc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665d77f7-9d3c-41c9-a313-2b702c88860f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8aec45a-faee-467e-a963-0ae1be67ca19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53c554f8-82ae-4852-b994-637223b17b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88174f23-90f5-4c80-b9b2-9ec394be8b1f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25396756-4ee9-4e84-84d2-e650b90943e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9e6e4d-451e-4c81-91a1-9cbc12145880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d70e3a-52eb-4dbc-8f13-ada29bc5092c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf3f97f-963b-4504-b2d0-783a77f10c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c33fa18-f85f-4217-b87d-bd900ca817b0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60df4b0-2945-4e90-abcf-e0d3a77c40fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ec69ad-90d2-40e3-98e9-d26196434cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2a03e8-4c6c-4e9f-961e-ce0c06e1a821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "165eadea-ab0a-4e20-b3b7-b2dbd5de6d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a861ea-8574-4c1d-8472-e3c83c14a76d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6038a4-63c0-46f2-848d-996e375c8186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b988e2da-223d-44c7-8d03-525c813590a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250df8da-79b8-4e2f-9b8f-652732184a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7acabe3c-6dca-4232-8729-3d84956938ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb596f78-5914-4b18-8c6b-ae881ca3967f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0d55f0-2949-4a14-9f58-dc35958c227e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355a7128-86c4-4e41-a9ca-126ce5584bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71af9c36-727b-4168-84e2-7f9ed6fbe783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7137b488-6a87-4f47-92e2-f1ec053dd8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620fafc9-f574-43db-bb11-8726677b31f9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd72b857-6f80-48d5-9f06-1bb37ecaab53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c053f9d-3778-4137-96dc-ff1941bf1ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b32825-cf5a-4652-ac9d-dc99ae804f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21db54fe-a46a-410a-8ad9-fadb64870e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f765c4-510d-44ab-a704-dc24d7c10f2c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1c6577-ff1e-4958-9d30-dea19289c234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe6e89d-b7d1-49e9-8a32-0330877d5266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00c6782-7bb5-4892-8df5-db47208aab78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5644cbec-da81-4139-9a7a-04ff61439729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f537b2-8928-4815-a4f0-b3aed082a74b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3424d3d6-557d-401e-aafd-c283d9567c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1211e1d7-33c4-4eff-97c3-4a921f44d5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579ae7ba-9a01-4d7f-a946-550e0d355875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99866c28-ec5a-4615-9a3d-58c53cd8fefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc113e0-ec50-4a8d-9812-bf91fb974cbe",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac390178-9731-46b9-85e1-4e10a877346d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5051da-9719-448f-8f16-e75554c9494c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3b635a-d3e5-42ca-98ac-e0c9df05ab2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "67ed6e61-3116-4a5d-8d33-ed9cd401af4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da9f853-6d64-447f-8ce0-9c1ee07b358b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0f8205-97b7-4526-aeb3-d43ab113d2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cec1bec-0069-442d-8d6b-45bccd9de4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c67d97-c0ff-4ce3-bf1c-a2a719719be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "207887bc-fc9b-4988-a560-b5e6ca791f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781348a5-4e95-40f3-a3b7-0588535388d7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c05ab0-e2e3-495a-9beb-b3ca46cb03c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c2db2f-25a5-4b35-84e7-6cdc28d47f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50dccc2c-3134-4b12-bb42-f408a932bac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75b5c5d0-ba90-46c3-8044-31af428119e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb09540a-c9e0-4517-93d7-e18d94d51c29",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77086813-a519-472c-802f-19d48513c452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274c15ca-a149-4fab-91ba-0140a0a48365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554b4a18-2f28-4fd2-81e4-2e89a4f91f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "772e4046-a83e-4f44-9665-61c5cb8ef008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cacd844-5a79-44ca-8035-d9f60874b595",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c7a6fe-d609-45ef-b63a-e97d7d8191a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c008295a-988f-461a-ba91-d8f843821c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933946ae-f22b-4d88-a995-b229d0e3a0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "465ac0a5-4f77-40e3-bf65-1969158ef3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee371af-02f6-4af7-9ade-d46d57bee191",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b346a0ef-f481-47c1-8f61-25a10d9eff4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e75eec8-0b07-4aea-adb7-54c6c53afcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffdaf59-6c36-46ba-8bcc-9a2dd60f0df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8494c9-0c15-44d7-b2e3-077b781f27da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4abda7-aac5-47fd-9258-3429fed47a48",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df5b31b-cf92-4692-beff-6cd49301f16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9281eb68-32a9-40d7-b6c8-2e7771368ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d128e72-7d16-4e9a-a20f-10279606557c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9bfeae-7e5f-406a-9dae-82da22fe4b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4058ebc9-edc2-4315-be7d-c924cbde6a1b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3542d80-e67e-4001-99e9-58172b827121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e94656c-dfaf-4982-984c-a1ae679ff8c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91660b36-d940-47b1-84b9-8a07b7206702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "53c6b0cd-9483-4476-85af-59a5e84c4d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4a6d52-c1a6-4f5d-b134-b2dfb2b50cd4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04291771-d7c2-490f-942b-4eb6bef1f110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df1b36f-6361-493c-8499-cd6ee548c037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bf4bb9-6b2e-417d-9176-bce6a52d54c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "63db1604-17de-470f-9e31-60427ac0e4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8278a976-8468-4676-8789-3101fd4a5c2b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94667e00-a7f3-4c0e-a6f0-3deb2f3f7ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3861525a-ae04-4778-9683-afbe4b9cbb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2f192b-80d5-4354-a255-25fa74585dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7d0f47-6139-42cc-9220-396833511a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8135ed-95de-441b-b4e6-72da31c073e1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4bac28-2ffc-454d-be58-ae8d381d68ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57fb9f7-3372-4236-b916-0498ca543d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d679e8bb-c9f5-4975-872a-7ad2748b7f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad81a5e-b655-4a53-af9c-1a61451ffbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09b5482-a7f3-4370-9fcd-61919a9f3084",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a3358d-213f-4c45-8123-21d7ba127a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce950e9-f786-40e1-8b43-49cfd89e629c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5beaa7-a097-4e4c-af10-9410ae1a8768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e62e85d-b1dd-4c11-855c-26024da30205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6570e97-c9e1-4fd2-a7fa-e14c686f6aa7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a5cd0c-3809-486a-83f2-230bca7002b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ddaab35-5e34-4276-bce3-29a65a2b7b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0440763f-929d-48d6-a470-ed91a059618b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd72ee9-ab53-404a-955a-e97146239d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe8125f-95ef-404a-add1-e310ebcf3ba5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c64e90-1f51-4a41-8091-9219e5d3d183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0332b323-5734-4528-bbb8-ac50ed8e93cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ba6ab3-8916-4d6d-b6f4-481dd530bee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8189b1e-1479-436f-a6de-3adf687db8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84bb076-f271-4a32-aaa3-f585f755526f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bbc5bd-c0e0-4d5c-b3c5-606803ff826b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6218fe1d-4d9f-4589-9377-578a28220e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542c48c8-e452-4ab7-831e-7df13cbab81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a94066f-dffb-45b1-924d-1ae348bdd006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d19ea5d-e0c7-4c86-ab7f-b4e928397a20",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbdf4f2-2105-4402-837f-239dda546950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3493c1a8-2fa4-4b44-a2d1-8bb72378770d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7852ca3f-14ba-47f2-9020-f80086b83da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2672209-f6a7-4ec4-9d18-5f6e4f51588b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dfb537-ac4e-44d1-8adf-73ce88b38e66",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04ddb86-0ba0-493f-ba6a-2f437138307b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b068722-660f-4dd8-ba0f-84ddce72bcc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89a10f7-5bcc-42c7-acb0-cf0ff4efb403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4644d3-7143-4aab-adea-7bb1a0030e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3ecc10-f4b0-4720-90e8-dbc4de02defe",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad95b52-ee5d-4383-b811-fa0e83bd6a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525c4f70-9799-47a7-b702-f732be93d1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ffccf8-7f0c-4639-a74c-51ecfc101f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc2323e-c46c-44e2-ba70-6f77e313a8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74d5714-23eb-4a69-98af-2b573b1f6895",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492caf11-8ce4-4471-9073-953cf7fa2163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75c0bdb-0f14-4418-b289-a27f6297f288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0d6b26-19ef-4606-94ed-fd07be78a30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e498be6-6e4f-4c11-bd59-daca956a9a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f76146-5232-4564-b25f-2dc71190ba82",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b6bf55-e2c7-49e3-a62e-f6b142617d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d8cddc-6a05-49eb-b6fd-831a433b3738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aef9bf4-9955-4d6a-b71e-56c05221e6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37c16503-ffa5-4b79-b360-5a5aa86836da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa942a6-cc65-4830-ba6e-fd5f2a9c68a2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647c87d8-303c-46ee-b743-456235ecc709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b1c094-24a7-4887-9059-e8fde8a32fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47421f2-d6eb-4dda-8543-6817fa33d6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76b5817c-3336-4413-95ba-9bb69aceef70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d304d3c4-9543-41c5-a575-b9d9284bb35b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdc9502-b869-4e08-ac77-9fb3f141a153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caff4a87-53d3-44a5-a7ee-41cf9bf8f9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca10bca-d130-45d2-ae07-75d06a4b8f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "964fa459-ac9f-4069-a777-e53e83014eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0309873-1d7f-4e71-985b-f588c0cf5064",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d3ee9a-d0b0-4030-8345-a5e7b4238131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29fa906-adbe-4bec-9303-90de7dba6bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7c5a0c-7d16-42cc-a767-c82d5021b7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "489586fb-4be5-4839-b7e8-32287ff59a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f44310-5fef-4f57-b38e-d41794d6acfa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b9ded2-0f46-4b5a-92ba-a0fbf7381081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a0d1b8-1356-45a1-8f43-19650f07c497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995a4e75-d44d-4516-a550-696be90eeb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e473fe-d3a9-4a93-8d3f-5f4355279592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868286b5-bcb1-442f-ad6b-09d0b4227408",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cbde4c-56e7-4108-ac52-c2e2b62bb408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b944d114-4b34-4b6b-b91b-ffa885ee6555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc37f0b5-0b10-4f8b-8385-a81ef28aa7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2de82c75-d675-499c-b791-6ea6f4927979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e444435a-94ba-45bd-8bbf-dd15c4f866be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e781348d-c6fa-4228-ba5c-80ca5c240625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acea8501-8bc7-47ff-99ca-3f3491fad51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b621fc-40c8-4173-ab2b-51784afd3e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "331a3d86-6834-42ce-8c97-f0e469a9dbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec6d0e0-1d06-4ba5-af0e-aa266e77dcb0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cd472b-6080-4bcf-a1f2-7d9a97a26e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25603a50-708b-4430-bbb4-378e625ddf2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056d5530-cfae-45f8-871b-c2f9a506f61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "af9fa07a-4147-448a-9bca-b3eb8eff96fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cb2100-6b6b-41d2-9ced-331ca51d6c4f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc171f0-d0ad-478a-8f44-ae2e68e78ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24ae6d3-5226-4f9c-a457-7bf3cb5bc440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2572bf0-0afd-48c2-8020-39a6e791128b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "164253fc-fc75-45d9-8d74-5cbc7e078a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ceedc40-9916-4dfc-ab44-232e008bb95a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca65c0b-6b53-49f3-b42c-7c231ac36f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e27da0b-a34d-4898-97ec-9e16d7328e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed90031f-96f2-499c-8862-6e0ebf2d2d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "96d576d3-d379-4711-ae60-13ffd4b9d5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da0b415-b9ef-4792-8729-c640341f6b88",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28641adc-0503-4131-adac-a3d2c057e0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd21596-b291-42d2-a541-1839cacd3ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc9acc2-3dc0-4aa1-9b4c-2edf4f62dfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1bbc29-a4c7-4993-a9fb-9972c55d519e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6071e3-1593-49f4-844e-37d1f3af55a3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3360ca8e-220c-41a3-a9ea-c9df07c3e6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23532cc-a791-4a98-8204-1bc2da6b9620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75434c0e-fb91-42b1-9f78-fb403974a3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2d7c87-9457-4d73-a79a-126ddc7d5af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4b510d-51a7-42ad-b70f-dffd24f91f47",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfda1e10-331e-4238-9432-563bf6fc7f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854ab30e-6acc-40a7-9844-ef8e37ffaca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36bbf35-2aa6-4314-9a76-5af73d8e0a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa21aa1c-78cb-4e29-98c5-37b84ecb7e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737f0467-ba09-45e2-a8c4-34f15d4689e7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c2b73c-d97f-40d5-948c-0677f3a04b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15364662-27b8-4a01-9c1e-f10a9fcb3d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edd30e2-e1c7-4537-ac1a-863598083afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a67e1ad8-fb3c-4aaf-be82-4a5d01678dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4fff34-e204-4601-9352-2a763f3f3cd1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33631b3-1621-4f68-9c12-879a06ed3c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b148870-e816-42fe-a752-f15de59ab922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13a61d4-16df-488e-ae9b-2676d28723c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c11f84-6425-4bd3-a0bb-bf72c69f8f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848d266a-ceb4-44f7-9f7f-140c4b8e0734",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2d72a1-35f4-4bd3-bc81-3d0ba6beb03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6097d7d2-c444-46b6-877c-193e06274777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516c3270-ba94-416c-9fe1-7bea6a417976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c63a6873-dadb-4592-a31f-0a002ad1b467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b6901f-4fb9-4cd5-9533-808c5a442a93",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96264b0a-3b0e-462d-82f3-a57567166996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67479591-6a44-4302-89bf-575ee5deb45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd893905-7a1f-4e03-8a8c-5a3eb65b089d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7a2633-45c0-4cdb-b523-24acfda65f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b299633-098a-4119-90f9-87e6bb9db05b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521d59bd-b2d8-4217-af82-d15800c9335a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb61e4e2-e8a1-411d-a80d-cd7ba8d009d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdd2f28-0a33-429f-b62b-56af52a2a61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c33f87-654e-4a85-8c9f-72c334b45171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d31039a-b77c-4588-b33a-fca201050d8b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402a78ff-0b8c-4489-8d91-66efa384074a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370e6bf5-959f-487e-a1c6-105bc2ec657d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cdd3f7-6ff9-4abc-8f8f-04dff0757c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca26f7c-2364-4d86-968c-4be8d5d64ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866f9665-78dc-449c-896f-45a2ee28047d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54dc7f3-e852-4b20-98c5-aed22b8ee714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f466d3dc-fcdf-4a70-b586-28bdd00a254e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932d0933-b333-41e3-a4e9-fcdeb239e737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db1d7f51-63af-4044-930a-6d848ea4fc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8681c3f4-c891-492e-86c8-ac7e11ff80ab",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb317ebc-2190-4629-abf3-5f3bdb9159c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd71a31-d4c4-46cc-ac0d-a5274e8b1fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28c338d-6d3a-45e9-9b47-78cf85abcd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a093105-1d37-4353-8ca2-721be9fcdf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2bed3d-83bf-4a69-9fa4-9a8a57f3f64c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8fd721-a2db-4151-807d-cc5ba0846444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fa8efa-84cb-419b-9462-fc99e6750d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edc8462-fd19-48a8-8155-0536199b1ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f759e2f-e75d-48f5-808f-c156166970a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0515136d-2d40-4d6e-a382-e0fdcd1374a4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542182eb-bf11-4f1d-8441-3062f9dc97be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f371130-e3c0-432b-8f9a-7d52088f2170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7ee669-c54b-4e64-93c2-fc377b027091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "249363c1-cf0e-4528-988b-4bd5770b2b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86cf57c-a57d-4fc5-93f6-bd10f767e22f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64cb0ba-ce6d-4e77-a763-189413579c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bb9b8e-4467-4a3e-949b-c9d1d658f315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc08b022-4add-4034-ac83-d091c38b70a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0818bef8-ba57-4b48-855e-bfb7dcafc55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b824871-7b4c-4cb9-9662-a7f9b2680498",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132b96ca-1b61-4d65-96ef-29eb538a74de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b8a94ea-2483-4a42-97fa-0377e45b37cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8009727d-224a-4744-b66f-064da7f793f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a71825da-eaa3-47d4-81a4-b504ed49d892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de745955-3885-4e75-b2e5-131e3712e138",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13f01e3-2c34-4657-b92c-09012fe2d41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d20cf97-5f6d-45bb-ac88-02255a496544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3963ec6c-5da5-4632-a514-b989817c40ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b37b81-01d9-41d6-815f-8a723c139a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2752fb23-0845-4a91-9f29-d3f37982ecee",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f3ba01-66a1-4046-a73f-6c3d3ae96046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e2fe51-6fec-4ba6-850e-c6625db1a5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bf8388-1a81-45cd-bea4-276a75cd8c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a54c2409-6c7a-456a-bd19-b5a25f2c8262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb395d0e-f2a9-4ecb-8359-96060eff3667",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad5032e-fcfe-4f85-a1fb-8df06bdbc1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158b0093-64f5-4b23-a734-a2097b479c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1470f9-776a-492c-837d-c59a0685261a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "408f7a1b-0ef0-4ba8-bf23-04977d18c079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f67548-aa8d-4df3-a987-ef8fbad4ada1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf0c833-fe14-45a4-925c-b66e6ad37873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8aaf82b-3ddf-43a2-956d-1cce91057a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c9c8d5-6b43-4af8-9a56-568f2370bddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cce577fc-37ad-4aca-8c35-675e0a828d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdd5800-d405-4672-afe0-bcce8c9fe4c8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d8d79d-36b6-4167-b4d0-57f14dc4fd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d828c961-dea1-4328-a525-7f56435d5ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3865366-7786-4d55-a14f-f0c3a298a0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c28d466-4ea5-4ca4-a8d7-808ad24c7f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd269093-52df-4197-89d0-000768d9161f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1eda75-a779-48e8-88b8-a29fa323c006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47dbf492-c27f-495c-8786-792cf0cb1d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67399945-fac1-4319-9453-22f61cbddcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11fb0481-78b4-4371-b776-616976218f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68a408c-9073-4c3c-bc87-446083301bb2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccd5f76-51c3-4010-85aa-3ed663d1fb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe044e7-7f9c-49a3-a304-33f3b160e894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67825b6f-e438-400a-a7af-bcd86a8f907d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4417010a-9056-4274-a7e3-859ff0de2009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32cfb79-92df-443a-94e7-43f041f628ae",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd41740a-7935-439d-a240-6df7c3077061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268952ad-296a-4980-8085-a551cba67f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fcfd37-fc22-4470-a7de-80951649242e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf64094f-f367-4368-bde1-4137a726c274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be64bd28-c451-4d9a-9604-9dec2b44d5ed",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2c52ae-9e5d-45da-878b-89b850c11633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46a4c06-1a5c-45a6-9612-01489f52c156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78b9798-2ecd-454f-95c2-9cf9117b2ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb95d88a-f16c-4f50-97e9-066bb978929b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34174944-ad81-467d-a088-7185e2b41b55",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea77975-d692-4336-b4bb-1b66c3ad02b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2b8dfe-f309-4b66-9869-10b03ba4b54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc18320-6c84-4a6d-bb8b-cf3c0909dd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1565994c-7d3a-4682-9b55-b05ba7237ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa2baed-bcd2-4c56-bd1e-f4090f64fffb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd44f58d-1add-418f-8a9c-73b147c94d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b704db4f-f3c4-4549-b9fa-dd071259e3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25563af4-9634-431f-ab8d-5aac9eb9a723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5bb14b-602f-4570-9f6b-61f7dab67511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492cd0cb-25de-42a0-8ca4-29b17e4ecc9f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c350c630-3f74-4fce-b034-f2265b69b71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cb1974-1c03-481e-9d36-92b80d147689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9866cc16-fbc2-41d4-9929-4669b712cd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc82bb2e-cc3f-4873-891d-929d5ecf5c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd64a4f3-5dd5-47e7-87ee-6dd9160be3c9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04cb46b-8164-48f6-8d24-2100695cf403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567c9c13-3ddb-4be7-8771-ad672551d578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d08e6d7-e1d9-4741-be68-f5d849232560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "26f14db7-4c19-46c0-865e-9595c2acfcc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d349296-6b77-4930-b66e-151026d3e58a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f220cb9-6c29-41de-aa70-d274dbbe741c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d07e09cd-5b02-4277-9036-121b08b0531a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c912ae-6103-46c9-93db-da15f0e2e504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7181a013-2f75-43bd-9b29-9c306d76d563"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f0a7fcd4-322d-47cf-a161-371a5aadfc70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce4c1f4a-389d-463e-ae54-f20376dccce9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a5d509-0c28-4b11-b7ba-691eb0d519ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c03a71b-d159-416c-9b5b-d830c00014d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b7b52e-c353-474e-8e8c-68ee1a566dc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d055efa4-ac6f-4020-a39a-ea56b53d1755"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d443ec89-7c1a-4b78-a382-e744c1f392e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "511d47b8-6a68-4007-b939-e744d9de3b3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43752a18-e4e5-455f-a289-30ca7f0fdd7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60447ea2-e27c-4639-94de-55731ba6a4cb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c06e55e-3526-4e4f-91ae-802ed00a5983",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff2f5167-029f-41b9-995f-19d74317d82a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dabc108a-df0b-4584-86ef-c27660d7527b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9696a69b-4224-4db6-9683-ad9d1cc7ddc9"
                }
              }
            ]
          },
          {
            "id": "aaacef8b-5010-4ad5-aad0-90fe18aa2853",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3979728-9e8d-4e08-bcab-45fd9686c356",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9413d6c2-ec54-4aca-a494-fa118823f551",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72cc60d-a011-4bec-9ac1-66c73f0933d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5711ffcc-9248-4bfa-a973-6538475828f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e022fd72-d21b-4b6b-ac34-38dd99f5556b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92ffad4-0101-4081-8bc2-a1b475b85bd9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3beb274c-82c3-475e-951c-bf5a6ffae9c4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fce336e2-70fa-4cc6-a791-6b49573d32dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a71b41cb-d011-4d79-a9ff-f374aaa4513e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82b98c50-89e5-40d9-87f5-073aeeed09ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "09d9e233-94cc-4d4b-b64d-81fafcc328f2"
                    }
                  }
                ]
              },
              {
                "id": "42cbaa82-5961-40e9-8e41-b4d71b7fb7ed",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14765402-8ca9-4267-ab67-622568f92699",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f8c100d-9283-4d3b-892a-24bf44b4c5af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bae3232-cc2c-4d56-a30d-1c70bd0c3868",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f84b42b1-9652-4ec9-a9c0-18a0fe8c729c"
                    }
                  }
                ]
              },
              {
                "id": "cfdbdfab-9f61-48ff-b6d1-893ccd49fba0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11510dfa-0a84-442a-8681-a9780b3cab82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a100651-886a-468d-9a98-3ba6f227c7ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "834b5318-1bec-45ed-83ed-173dc2e26eb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "253e6af3-99d3-44a1-8db3-7a54cfa87f14"
                    }
                  }
                ]
              },
              {
                "id": "e0637405-f6cf-4b73-8863-173e2b182968",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8513092a-849a-4acd-83a0-678ee737094d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e75f05c-70a6-4aa4-a56a-0bb44841fca6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b82204e3-c7e5-47c5-ace1-c0d732c26aa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "edc17296-6c9d-4528-9682-257efddb3ed7"
                    }
                  }
                ]
              },
              {
                "id": "cff05988-0bba-4ad3-bd1f-4bdc58dd7043",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eb1743c-0fe6-4e0c-9da4-617bccd89ee0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a854f44-dc22-412e-be5f-7aed76e20a9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5c40503-73ac-4e64-9aa2-5ac92a61adbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d4f4f9b5-75ac-4526-b248-e94bde8201a1"
                    }
                  }
                ]
              },
              {
                "id": "87e489ba-d24e-413d-98ca-11f7cf1e8335",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91bd40c0-ee60-496c-8106-58530a78798b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7d3f585-6384-4eac-876e-347d7bcb1086"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da3b4867-a57e-48a8-995d-65647dda579c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a38fa947-02b6-4011-a91b-6d2e32faaf62"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "23c02fed-1805-4e6a-b6fd-78855c08363d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e6d862b-f9aa-40ac-8352-410bde597fbe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9736c9e-1074-4980-802d-a5adf607ab89",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e8b3e0a-f709-4497-bcbb-58273e5010f0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bd16ed7-8b1a-4fb1-ad07-1f0b1295f2d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5865c584-bcd4-43fe-8ea6-c4cb2fb609ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fbf8163-83ca-48b0-9cc8-075e342d4832",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08f7b32f-b309-4e9e-89b4-14068eac1fd1"
            }
          }
        ]
      },
      {
        "id": "df7e96bc-078b-404b-8c79-7abe434099dc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7d96c855-2bb5-4198-b67a-93aa9c777223",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87115452-dd68-425c-a59a-06e02f49ef7b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ecce795a-58a6-4a48-b54e-968fb6389275",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6f3fb3-32fc-4dcc-9b97-46a6b7c06c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823694bf-647b-4e1b-af55-23c57bf6d788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1b6e27-c4eb-4619-8224-131adfd4da56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cba51d9d-4c11-42b5-8c00-efe69aa223ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bfc6fd-5f92-4de5-bb09-82337421bc01",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb59eec-b579-44a8-bbd7-ef966e14d7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cf1342-c66b-4eab-9622-31fdff026b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4331efc6-1a82-4443-b52d-c5acce00fb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3abd11b1-4743-45c4-a05c-938f3b7f7ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f162ba59-2c74-42e1-af22-16ef7c9369e2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f22a13a-1805-4118-8a5e-879a149ac709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab41779-d8a4-4128-a70b-c57c5c9afba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5882197e-b52f-43a8-a186-c7fc27fd88d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7cff7dc-1f8b-4697-b3bf-206a2442c52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6649fd-98e9-4894-a81f-4943e9307652",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110b209f-a7c3-4e4d-a7fe-df14c5ca20b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4134d3-942d-46c5-b3b7-200d06c614cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edd9212-9e53-49db-86e3-3144011efdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81c276b5-1548-49af-83f8-3f68d290e668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a469fb34-ea0d-4ea1-8623-5d19d041348e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf410231-0f3c-4a46-bca6-b45509812687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e6fb9c-e0e8-49a9-981e-c011ebae4308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaa4c2e-bd87-4a85-889e-285c4b0cf45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d69853c7-8bfb-46ac-bf91-6710c0500305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9417c0-1cef-4bea-bba0-47d501136841",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699c5af4-5814-4e21-bd08-9bc7dd5f15e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1f8423-340f-4c88-a085-e8f1e35b77f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb00c5a-c426-44d7-ad4a-6dad6e8fcbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "535ebe5a-01e6-4f9d-9c73-68b799cd7667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecd4385-7ef8-4868-90dd-3be16acf95b9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692c3a31-e39e-4590-a26d-178f98c85ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e260d4cd-e955-4c15-819b-bf2f5eb043b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f3795e-4a19-4b66-952e-f5f15302af4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e56033-e8c1-4f22-919f-0bd047d14e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11319466-5287-4c79-8f97-6657c024c3c9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e082f6-ad84-4222-b53f-3f91a7c9da87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbc0030-dc14-4946-a27d-311b03215873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720b2ab2-f3bd-4a3a-b5c1-9cafc09397b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e181289-e7d3-4615-90fe-d9f821c7faf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8893dba-fd83-409a-a2c3-ccbc4a452467",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84088547-ad1f-4f0d-b384-1c13216d73de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c28df9c-252a-4ab2-aec8-ccec05acb5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b422227c-6a42-4362-8076-e06b6ca305c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62a7fb6f-531c-4e79-b6fc-ca22ec0dc03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ca2c1a-a73d-48a0-9a9b-64264cae24fe",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d2485f-cdbb-432a-8818-18a53fdbf187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f24c62d-1a35-40f7-9573-94b17611d760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d605ea-05ad-497e-8149-92dd6f9ea44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "900a29f6-8f2d-4cfd-a199-15d526011794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9667de-ca87-445f-97e3-077a83cd2dbe",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00468aaa-9d08-47e5-91c3-234db25cb595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b8bf3f-6d32-4b4c-ae01-1b63e1609dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affa2f68-9ea1-4a54-954c-7ac8dbef1fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1f51ecd1-9cb9-421a-beed-6bdd1e2a9f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed76ef6-c78d-4b0c-9ff5-1133eb501e0d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2086bc03-9e70-4caa-bcc9-931bcc298e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ab446d-4dee-44ac-9ded-30c935b32821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e456e50-a1ba-4626-b221-0e35598be88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b43c8bbf-f631-4766-b6e0-527241589d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d442267f-98be-4483-aef3-263de82ea305",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d938e80-69bc-40f0-8dc0-a3e4647cb5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3c3c96-0ec2-4b3d-bcf5-203cdfcdf733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142d89bd-4d76-4d0c-b2f5-2b111b9023b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91d8367c-1584-4672-9eb0-5139a3936367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b9667f-54c7-4b99-b1e0-e4a15d70073d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c62ac3-d875-49ac-b1f5-b3ce759b978b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c53b5e-fee4-4184-9f16-4171cbce5c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6a8fac-972e-467f-a8b3-f10167710c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "90bc8b3d-6bb7-45de-afeb-39e406a41837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe691fb-976b-4c1d-9e59-cfa4f4028190",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c00537e-9412-417f-8f99-7853851ee322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e819775e-1972-4e3d-8775-a2a6fa8abeb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4e2372-63c8-4d9c-9f8f-92765f09b337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "196de389-44a1-43ae-aa97-4a6091531bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cbf53e-6bc7-47ef-8411-48c2828223db",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be74a26-686e-4b71-b5da-93ad1d924cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70db075-86ca-4ae7-b16f-4c589b6a5206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a70ac5f-5965-4603-b46e-a096160a2d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2ace44-25e0-4e12-8415-7e7d4f6826b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4be25b-a678-4279-8df0-7fd1bf3a3fa1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42efbc6a-f108-4c10-a425-ed6fc53f8365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9900d218-a368-4979-91e4-ba333b09a7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302a78b7-129f-4f8b-b948-a441fb7f1db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a064480-696c-4489-a11c-1bb25224d974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d99b828-6565-4b7b-ad7a-97e1079ef9be",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06293b8d-7c4b-4e94-97f1-c7b813eae2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76577b3-8fb5-43a5-bb57-a55731461ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d328088e-e613-460f-8b19-517fba11a509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0429e921-e678-46b1-a245-20c455f651c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7a106b-bb01-4b0b-b33b-3fb58f772244",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618a738c-dccf-4925-a43e-c2f05b40e7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54ec63b-2e57-460f-b9b0-14b10daa7b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abf4dea-1a30-4276-a4cd-197825e21394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec37141-2c86-46dc-8493-c4ad1fce2c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9774f8a-1f17-48ec-b30a-f5363730993b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d5d6c6-8250-4233-b228-c13921f81be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184e7083-a011-459d-b52b-1c4f7ad6ec52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab19222-469a-41b5-babf-d8c3b23a9c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d86c16-a154-40c0-824c-8b53d0935483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88244618-1452-4d64-acc2-118c97d1baa7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893ad18b-481b-4ccb-8313-40c8e54f432c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856dc5af-3fcd-433f-b383-ffac80c0644e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ab92b3-c860-4618-8585-8159792472e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09886b1d-64e6-4fa9-be75-2b21e800a301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284f57ec-5b46-4471-a65e-d02fb0e82cc7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49add42b-7666-45d7-a135-2b8ca39b4be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c84d173-51aa-4fce-bb66-875a248d8cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5ce2ef-9c72-4636-bcf8-cd38680fbc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b9228a-09f1-4c84-b6cb-794db43ce995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4080107-65b2-41b3-acb6-69c1533f6a57",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d271d66d-4674-4b07-bf43-3092373ee0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c43c25-1e35-4f4a-8c6b-3f41739f63a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed294bf6-e79d-4e3b-baaa-6c4a9b99efec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be444215-3c60-442d-9b15-7577c2bcea10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d37e46-5acc-4c21-b01f-63167037c6bd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51c5ea7-ffdc-42d8-a7b1-8aeb3502d2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc11ec0c-42c3-4541-9034-ae033f53c23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54657f21-b22c-41b9-bbb6-b7976426fd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d36b289-9379-4424-9a77-013b3566ddaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b704ea-7c9b-476f-9787-c6a1161e59ed",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba6fc67-d5b5-4613-a81f-fd4238c2a5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcc34c1-dc1e-4114-b1bd-a494cf7fdac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6c2534-5758-4505-a1d8-eedbc8add9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c95df030-f76f-460f-84f9-dee75eee7167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6c9f2b-0bc5-4443-8518-f16ddf661bc9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea128763-bc33-4a5f-a056-ea7259ee78bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cd0089-3ca9-4121-bf88-50483a95e598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a4e34b-6a59-48b2-aa99-4087d630339e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0d9cee-f0b2-40e5-a414-c44be63a7c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5697627-6d2a-4107-9170-385d82a30982",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c1cff5-da0f-46d2-ad4c-4715a1f05a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d6240a-bd71-4aca-88a7-105d67e63637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68134c98-2b93-438d-aa58-9afa1803dd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3fdbb7-6438-4886-8cea-c3d0659390a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91952a3e-0f6f-4c74-97df-1d047038d249",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4110e5e-21a4-423d-aba4-5d6ecd927aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8e4312-1f4e-4f93-ace7-7cbfb2f4d32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8cb9d1-1306-40b6-bd48-61a22ce16f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6ce828-504e-439a-b9c5-d2854c906ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4eac25-a2a0-4254-a3a0-5d7c24ee6bc2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31101669-56c6-4c4f-a06b-133d70f933ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e385a2-a932-479c-bd84-81f7fd71c79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f0e06b-9ac3-433b-9aa3-09dc24ccf555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0e3d08-78ad-415a-95a7-fdc9a71967b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f9ede8-e183-47c8-834a-f92ba727d276",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c13ac3-d1e8-4610-8716-c2dab24835a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8073a629-c407-4adf-807f-c4e241f404aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188cb527-bd70-456e-8d28-2da7a2b8fca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1e0867-1611-4dfc-9963-fb71877199b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8446f5c6-ed6b-4b51-9ac6-ab571d54155b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ceb432-ff8b-438b-8df1-f571522865a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a177f78b-ed15-4dff-aad8-6888d522830c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9a84c4-982a-4c14-88fe-281fc7ae5294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1009c7-133c-4de0-9136-1b76547ef0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8422a7-137a-4421-9f1b-d390ee26dcd2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6bbad5-a0b8-43d2-8ed6-9c945e48ab78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474e1507-ef28-4c2c-843d-659aecf33826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd2e55d-b821-4cad-ba62-20c112312270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30bcf458-637c-4cba-8f84-774ff55c72fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73abe141-c06f-4dd9-a230-2494570aa564",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cde1152-6b2a-4fef-83dc-40b0ca4eecec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167127d1-3191-4621-baa6-498f574c9964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74a7cb1-3bae-4011-914e-3c8bde8196e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae947c26-8f41-4db1-bd7b-adb03d93db02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87932f3d-8e6d-48d3-983a-e3333a4f2a04",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36eb7253-dbb0-4b3f-b7ef-9c0b139f3691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b82200-1897-4039-930c-df8499ff5c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8765a52f-5296-4993-ad8b-58722f94b4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "436daa02-64d7-4f66-b0b7-4787662e8502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4753e654-6e33-44dc-82d5-2317df30fb1b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede298aa-b812-4a42-920a-3dae9ff90d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef67c36a-3203-41ed-a7ca-a4aac4704f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634ded53-9cab-440f-81e6-97ca2b80b3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8479c2d5-a92e-41e4-98f6-14a23940d24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54ce05d-e7f8-4669-98c0-c17967e7f761",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9889e6b6-b79c-4ebc-8bcc-9f3f39ff1137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead41bb1-08c5-4698-aa4d-d8cf3c2667d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a57771f-f6cc-4ba3-80cb-d50b269a2df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7393405-f469-43d2-88ea-2aff77947e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d225ab5-8b30-433f-9733-e27d96588661",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd99048-5789-48c4-a3a7-a2c62d26c355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c450096-d6c7-4201-8b01-a845c9f4a0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ef9c25-86a5-4183-ae44-66f7f432df22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb344ea5-e103-4cac-b32a-6a687c2d55ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a7dd4616-7b92-4f33-8508-eaac889cf656",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82556143-7e82-46a6-a094-ad2eef3f6c93",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4708d45-5b64-430b-8a54-53df4ffb8554",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e99f1d-2070-4dd7-8d6a-f6c80bb76cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c6676b-2b58-49a8-a232-4bbc31c56fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02f10877-99bb-4fa7-99c5-b05b7fe8ae04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63804015-5989-4aae-a000-b3e22efeb6f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9be3082e-1d61-4b00-80b1-5bd6a9f70f43"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5619538-d3f0-4240-9a41-01e558346773",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7df0b95b-1b53-4870-8943-f74f4508c0f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "999cffef-977c-4f94-8308-12487a80ab28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c997a778-e063-4910-a862-420a1a80b16b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c043126-d7ea-43bb-bed3-2c94efccd67e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f0e3be1-1578-4a55-9a95-2b4c6d11f69c"
            }
          }
        ]
      },
      {
        "id": "c4bd993a-4a65-4a7b-92ec-bf21a9087c2a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c7ac4881-3b0e-48c0-8256-bcd12b09fb94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0590d9b9-ec4c-43b5-b8c6-05747c162f60",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ee697851-56a5-4829-88ee-4fa3e5072e93",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce7fc15-91b2-4cfd-899c-806b65c0d775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08569c48-4ed4-496d-b96a-15f4d181ffd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fa7864-78e2-4297-b80d-63d3c4dc7247",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48ea7c5-71c6-40a6-9b0a-f02890d4b810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9114e36-1659-4a17-9300-3471fd553bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072d7c85-ea56-4ad3-8bb7-de3dc221c2da",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a652700b-438a-44eb-95a6-7e70c5e82f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08244ef3-9dc6-432d-8ab0-e23beff3d3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995171e0-b7ac-4e55-87d5-5f23b888ceca",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51ae0bd-babf-4416-9f72-ff24a9451060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a203af-d3f1-480d-9c59-70698c09aba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caabe017-5df4-4e66-ab9e-c02ac06a5896",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69e518b-9618-4c93-b3d4-7917b5de2285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b481fcc6-f923-4a34-9cbe-64cfeff239d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebf6f67-3657-4c3c-935f-450d5428f8eb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e07d31-6d5b-471b-99d6-eb0dd4e7c21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c6b4cd-0ee8-43b3-897a-513d6becbb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1a8002-a73d-43da-9bbd-8273c296150f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2349a44-79b4-4344-a9fe-66f058409100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f74b87b-e2db-4911-8ca2-df5ea1709ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad4d01a-4dd0-4afc-9b6c-f400a47f3d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3482d8-eeea-4f92-9d4a-82e06c3031af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46103ef2-8b36-4f06-bd30-b767fb9f7b84",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac31cfc-116e-44d2-85f3-3f7e8fd26f2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcd38313-83b8-4eeb-9eed-3b28c7dd1d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5689baed-747b-4eca-9bc3-bdcd9bc7bf9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57cdaf35-a832-431a-babc-4dc8f8191a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b147e7-ef87-42c6-a319-5e0b61412684",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3a16be-2023-444b-95af-0dda0ba734ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bab8acd-2cc6-42eb-a7ba-43ecd5d037d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c520896-0bdc-48bf-b05e-5f4d53ec8d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5525d90-8ed7-428e-85d4-bc14cbaa9083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4573022-1c16-48d9-bd8d-079ca6ef6b4b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc31c01e-cfaf-403f-a501-3f147d321afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc1a61b-fef3-4754-a978-8720ffb79bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6460c66-9a4c-458d-adc5-3f33defdbfc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25f2839-9ffc-4dc7-af4e-e2bacba93dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda05427-f062-4ee5-bf93-128c09eed72b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4fc739-c198-4f40-8949-824595ac9ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea61e2f-d518-492d-804f-f4a3f833fca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f9fa09-ccbf-4b3c-83ce-a8991974bb37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e67c817-8966-4dbe-8619-dee32f71e809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0c90d9-b216-4cd4-81c3-ddf20981f7e7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f21736d-a120-4d4e-8559-ff649e88aaac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1640179f-d709-4eaf-9c0c-47b40ecbc66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e80645f-4d6c-4e69-89be-8bd17f25e28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9957950-8125-4d05-9d76-c96707345a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da6e403-b4f7-4a6e-a44a-0df4b0a4b9b6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbde52c0-b279-497d-bff6-625e2b7c49f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e350b03a-8b16-4245-b6a8-ef386f6b3a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67093187-274b-4982-a0a8-0eb32487026b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53628cc0-2bf2-4e8c-b690-03f306a4144d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bab0d0-c05d-4f4c-bed1-126bfa57e5d3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845ad8ab-824a-4092-ae83-f5287d2e129e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7c8fe3c-df55-4aa1-bd0c-bed230dc2931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f8a6dd-5916-46da-b113-b0fd02867de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae68e10-407e-416d-a1d0-ac969553699e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f3c8dd-e4f9-4837-bb8e-f0770a1ff7d7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630d483a-41a1-4363-a7c7-10e9c9fbc362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68bec08e-2ed1-4d88-87bb-4e9dced4a6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8db129-b3d2-41e7-a143-20edc81cd91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1090710-5b50-431b-a860-a3e8450f4643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cf9743-10b4-4757-b862-02414db61758",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6718c07b-5d07-4079-a3a8-53ec2e768668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "356d45bc-710a-442c-b88a-e69fcd556932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33238a60-fca3-412b-ad19-a3c441f24feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c8f000-d5e6-44f9-bef8-7a37e3e8aa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1af1bb-9292-4059-8a20-bb290c849814",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcb3c52-23ed-4a2c-b7ae-ba6dcd057a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9526cd51-5030-4be2-8f2d-99f976077234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f6e193-f6e8-4bbb-88f8-a891e3b5a8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8bdecf-6c4d-4f4e-8243-4157b6152f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779f7519-ebd7-43ea-b455-930853fa8c86",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d641e149-14d1-4b44-8be5-b445d15730c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837a1be8-cd11-40a9-9d31-0a2166385599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec58716-0f88-46ec-a52a-b086d49d652c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad1e800-987a-4245-8a10-dade0ce1619f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d057ca53-7f9f-4ef3-a77b-9991c473a937",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289937cf-f7f5-474a-a00f-bcad1826a7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db31d0ac-9919-460a-9aae-70f360efb5b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff2b47c-2f64-4409-b96d-05903074dfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7746bc9-a4c3-4cc8-88b2-b8ac2256128a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1251eec-3dfd-49f3-89f4-b230e6b1159f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d2b34e-71cb-4051-8dd9-28dc4c8466b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1359f0f-8b46-49b0-bd64-34343fb737de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3aec6e-fe8c-4ae8-8d9d-99845d2317a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6310c8-5ee2-459a-b63a-0beb31754c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a308ea04-9f3e-4819-ad67-6c722b1e4be1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168f00a4-2189-4c4c-8df7-e8662dd20669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133bdbe1-9ce5-4b1b-ade2-3206f5e8e311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a875d0-519d-403e-b6e1-15396eec6e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f6e481-3387-45c7-bf31-f3d6dda81494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698f9dfa-d06f-4738-b905-47071fba2077",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710d9588-413a-40fe-88f5-310c4afe64ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58341e74-fc5d-4d0b-8fee-e4bd13d08012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa13e52-1e4e-4e38-92bc-9edc690aed27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba335bf8-0ebf-4378-a819-a92a25118b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0041e59f-d6be-4ad6-a208-0df342f795cd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7b1b45-ae0d-4bf0-9787-d8fb6a2a0b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c574fb1c-80c5-454f-b1aa-61ce28962ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccd0358-8938-4438-8320-46003dfe4081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e2a279-12c7-4aa3-94fc-b7b8bb11c553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f516b7e5-e3bb-4339-bc00-c1204126c634",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12db918c-e045-416b-8fe0-484904ed8f21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d851b96c-5b95-41ed-a720-8bdf6acce3dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39b5dff-6f88-45d7-ab51-d084900d5256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ceddd33-700d-4a51-9d1e-6a8e1095a169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ead3c9-420a-466a-9024-6d4df542b526",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fd0429-6f2f-4fe6-bff1-005890fce45c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9fae880-dd80-421b-9865-6a3a0e71ec18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4f20a7-3e69-480b-b484-7627539a4e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f470bd42-51c8-42fb-9ed2-1d0f30faa906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f11ec1-fd2e-4a92-8621-a62e099d347a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e9a14f-41c0-4f88-8c3d-5c5f02014676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03ddc5de-e266-4eed-b010-0f1970d124bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6129d5-0ad5-4e82-b109-16a44fa7fa45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26624708-c823-4ca9-90f4-535312dbb0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ca5c9c-360e-4213-8e08-0ef5870b8bdf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777e5ddc-2f48-495e-9ea3-eda73c6ef9e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cbaae81-fb08-434d-95eb-fa1808960fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4c544a-f8ac-480e-97f4-58265446d080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262491a0-d67e-4c9f-a157-1f3ee6adf61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1009808c-e632-4a59-820a-e8a2fff04fea",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43345b19-8a12-4ed8-9312-7e5f8997c4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c1048e-0221-4013-9965-0afab4ff7038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b163a0-8ee7-4183-ba2e-16844def7004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4e0b7f-6782-4141-8895-0c284754229b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eea055e-8bef-45ff-be74-f2f39561f3a9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecb56a5-e18f-48e4-80ae-b8f0d8068cc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c9fdc5-0d20-4d15-b1d2-c186e9a9e1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f44c1a-2839-406e-b2e1-3dead78577c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c69446-2e29-4437-abe4-5eb85cf14459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e212dd-44d2-410b-b7c4-4fbd14729476",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae914c4e-f3a2-44b9-8298-176e6bb4f90e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2724dd22-c87d-4fa7-8b65-29888f7dd043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efad5758-ba31-4144-8017-c54a89a0d01e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d900517-9482-4ebe-9ad8-0ad5ca4a7417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057ef8d7-b66a-465e-b824-9d2937fd8724",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d25bfd-bb66-4702-8464-6d9d2f3676cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93ced02f-bf19-4860-88c1-1d7b447f7017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f74213b-578f-4fd1-9470-1f4960411470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9dbbcd-3dae-424f-b18d-18f2dc3744a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba6d4ac-23fa-4876-b211-2f24c3751986",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f1d1f2-d3de-4067-aa9c-928f6a943177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ae8cf20-b0f2-481f-b7d6-c2f8861ad898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208d729d-187c-43c5-8b09-b35665b9f2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ed1f72-8611-4519-8100-684db00c56b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06575c75-f324-4027-8058-c4f4305bc1a0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56957ba8-1528-4705-8faf-51078f3c341d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "798b09f6-4ecf-4db6-95df-cc5b5b714d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c1548e-1856-4d4e-a56a-46b22399608f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46337525-faa6-42a4-a82b-fe14520581f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbdbcdc-2c6d-481c-b2f4-1f59ad1c923b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbec5bf-fa4a-4cc7-89d9-19b448712d35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6acd45f-fc9b-4c57-9999-207c716853d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bca0da6-e89f-4dde-9614-4abcbee87555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79070103-fd49-4d86-b427-e280fa6f2c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09523a9-dc5c-45d9-9ae2-51ef4f36855a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c683cc2-16ba-4f36-bf65-b583d39ee2e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e8b290-1795-45d7-88ce-c4c46e5042ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11ae679-56fd-4da1-a73b-1676fa110514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713728ba-f5da-4f6a-ae77-32aece81af70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030546e5-c45e-4cd0-b867-c6694697b76d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1103d981-3907-4d2a-aee1-4e828fa14be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9383d93e-4719-489f-8066-04e9c6068ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b6977e-0b90-4c2d-8c6b-7fa31ce15a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0993198-953e-4dd7-b1ea-9ed65fe26b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfce0b63-ffe4-4f56-80a1-6e7cf79dbbc2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6dc588-1da3-4226-b6a7-be5ff4b34e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1970b6a2-99cd-49e6-b3ec-a60f9e760c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e752730-29b8-4c3d-beeb-678803dc97d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a794c4d-554b-4a98-8d39-0ef2e1954af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a66ee53-0e57-4358-bbe4-9042dfef88be",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4033715-dd42-4505-b06e-fd267a45d806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccae8ec8-2aac-4682-9113-d8a130c49c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ea44a1-9b10-4c65-a585-ce02d3e814bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff8cbd6-5232-4426-a71c-6dab4eeb8621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597afa65-7606-4764-bdeb-af19c5c54ab7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbab952d-5ae4-4047-98c9-a66d466714fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3081f9e5-938c-4391-886e-2f475cec8ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77f948c-72b7-4751-a614-a788988049b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60304bfc-0b7a-4b70-94e3-4f11e62588ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855cb28a-d25f-4e6a-bd90-dad3c9f1350f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41841a2-c59b-428d-b602-0e9824dc66e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aefe6b9-434c-4c43-acd3-c0243a896865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a9b101-0a5a-4aae-a259-bcc4b9b59eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559d0dec-4f8b-48bb-96a1-0214af0c219f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3292175f-800e-4b46-ac6f-7595d7441b0d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c9088b-5cb1-4e40-b057-36dfe69c01b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e2fc20-2a0e-4d6e-b74c-4c7c8260ab14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20009718-8293-4e42-a5f6-42ff5fa79086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1a01c0-a2d3-4e02-b688-4f1bbe445adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10a5cc3-3930-4f37-82b3-f665b11f8761",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e54c75-ca59-47f7-9206-213562c1be97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95833f4-ca47-4ef0-9ff1-9e4bb4a6f326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a392d2b-b919-44ca-9f0e-f2cc6b8b6198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f26ef6c-60f3-4257-845f-3bab828f5604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b532cdb-2e95-425d-9976-1fb001820ab3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b3415d-e800-4910-ac1d-3faae184df92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c75c20-0cc5-4b35-aa15-881addd46d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4321e0-b9d3-4c1d-ad1f-866d5b54e662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2031bda-604b-47d8-ae79-b5b83f0cc0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c42aefd-cdd3-4228-99e4-e503c2d500c4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cacbde-505c-446b-9054-3d763ba49ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d76d30-78bc-4395-9585-af68f5613ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cc8834-1fcb-4f6a-933b-a367e40ed73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d517c14-e122-4ef8-a576-ab2b94c79015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9557cef6-b3f1-4523-a609-54079445fb65",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932a0ec3-05ca-4f0f-8273-2d8f34b979f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e6656c-5509-49f8-837a-88733437acec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f272004d-2c7a-47cd-aa21-6fe2f6be5901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c3f3a7-9bc0-4a7d-afaf-0380d53e62fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b0720e-20ef-4873-bc52-e76361ede69e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f488e7-f690-46db-88e9-c641e565d563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968673ca-ca34-4e65-bb0b-8e9e4e3c6df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03a5335-40a1-40a3-a7dd-44f8cc90404d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46414739-c1e0-474b-a039-14fee0bd2f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e698fd94-6a1d-439d-8cd4-7810a0445193",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58e457c-6414-4e84-b2d4-dd48179fc35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb8915c-d819-405a-bde0-cfb63f1e15b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8c7a59-5eb2-4f1e-bb60-edf1e5b2f58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de184fc2-73de-4011-9e1d-198c62def38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e819d5c-85ed-46b2-af31-d63cbc491181",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b378062a-183e-46e9-b288-a9f3080b4c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536d045a-bdbf-4b0d-b9dc-05ef090faeed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75710d29-955a-40a0-b51b-aef3d11e4b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0458a354-532f-4e8a-a77c-8856e8e32e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9361da78-a117-4513-b67c-97058014c345",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcc663f-4417-452c-97fa-fc2d1a09464c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0240a7c8-eefc-41ff-9a7e-cdde7c5c7cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a60fea1-e68b-4663-ae0c-88037cf2a548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db30d149-f153-4309-925f-cec01df8e196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcf5673-a443-46e7-8416-0eb18d3e4cf5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e95c34d-5790-49e9-bfdd-3bb3743844a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18555b59-908d-4b07-b115-ee236febbb65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8693448-c9f2-452e-a902-657c08739805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23c067a-c5f2-4375-bdd6-8a6ad14377cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bbbe10-8da4-4d84-b740-6e8c0986e7c1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc00e38-16c6-4cbb-b4fc-a726e38c17e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9d2850-a735-49aa-b2c0-dfc4693b863f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78a3abd-a4ff-4009-8af9-2d822a2641fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a54ac1-6f5c-4733-aed9-ea685ccf631f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd04cda9-7afb-4b32-8de5-983f89d3961d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e1f89e-7d89-4c1a-a9ca-a4e456de3b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6176c1-9515-4017-a378-2172a975ad2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7084b0-8433-42d8-a847-ab696bde7583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f886daf-7eec-4ae9-ada2-af10cd72b35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7e8445-fdaf-426d-99ee-302816841597",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d23d8cf-c250-4a16-8181-5d5aea608ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080dcd6e-fd94-4be1-96f8-d91d4473ae38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10514110-7e6a-4031-bc14-0b4a7426ad04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bca93cb-f348-45a3-88e5-e4fe7afd74ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c665a4-5701-4d6e-b874-e7eece6920b9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1117b89-9772-4892-a335-9ff59dffc639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a43f48-d528-40f7-a517-3d73347e87a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd02702-bbd5-4183-aa91-30a50e7ff369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df29e2ea-6426-4011-b4a4-85f661eee05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035cd74a-b0c5-42bf-bcd5-98ff364b325f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a402a9-0bd9-4a3a-ac4e-c3453b827222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f39a720-548a-4e64-a0a1-e5c41bb39300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e274b105-5c1e-4fd4-9bd0-79c968312f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee53d3f2-0ec0-40db-b9a9-8c66d00641ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2707a514-d331-422d-aefe-31c37d5b14e7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943c71c1-d328-4d3f-8f70-0b2d1f5c1c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb65d621-ea0c-4539-a14b-eabb9941c735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92944ad2-40ec-4a39-b568-ea224217d47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8328c7-e56f-435e-bde5-db532835a3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f2f0d9-229b-455c-b992-15d4ca2a77b8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1720d977-a329-4543-bfed-1abe964c8c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b20447f-d974-4a9a-96bd-c7884250a9e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af7b602-39c9-446f-b602-1653d0e40575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f52ca86-660b-4b70-8e8a-a4e860283b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a865fa24-88c2-4e97-a386-6f75dbaeb051",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7095d36e-0891-4059-98cf-cce75def003b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9fdc2c-b198-40c7-a8b1-564f9c7ea9bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a90028-5e8a-463a-b8d5-b0dd73a1a604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621c84d1-410c-41e4-9c25-a576d6a03521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3725265c-ceb5-431f-b846-617b269f14e0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75f5e2b-cb08-4504-8cae-06b6210911a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f584d237-1b8c-4d2e-a718-055c9e97f5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7c2659-ee7b-4720-b260-fa85c5a7cfd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f47052-ac12-4eff-938b-cf62d51256c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0190e991-6e88-4edc-8293-37124858f710",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7069195e-a9b4-4852-a06f-3117ae29f582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1133a3-6fe2-43ee-9859-dc9fb422e0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd54ac8-5811-4d89-b179-3c1ec35a4ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce36dea-f34b-453f-afcc-b48e5e5ac181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b92253-d18b-472a-ae53-4e68919e082e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82296232-44ea-442e-a5ab-d1e531349ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c637ee-d9e8-49c0-b560-aa827f86734e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab47a67-e97f-4a91-a6a9-69be5fc8d595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284844da-8741-49e0-9987-e944b7e8e6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c789b45-283b-49e9-aa0b-c9485ca8f3f2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ad2978-1203-4f48-8441-0c78693f6c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8cda7d-38af-445f-b8f6-ecc9da771226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37301410-2b0d-4522-8b8e-3edea4e3a8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd10c53-909e-4b56-aab2-e50d4df76409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e15d21e-7acb-486e-b707-0fe14d4e9d2d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbef328-f066-4308-a8ef-6c56f6e50553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd031316-e35e-4532-8904-0e2dc7700c5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5dc2a4-b609-4d14-909b-123a5a03e23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29af8e01-f1df-47c1-bd75-ce8b986d8442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b66719-4b31-4eee-af3f-fc3542a704e2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5aa277-f7a7-4a9f-98e6-08ad68d8b4fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024b8455-aada-47fe-a5d6-1bf7e8d8ffd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836503c6-e3a3-49d4-a236-0896831d3f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feac6b5a-c314-4751-a54c-96d35499f58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b6c655-78ab-4ee2-9089-49558a6dfdee",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4f39cf-c317-4a70-b68d-69a4cfda3f59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d1f12cb-361f-4f69-b5c6-b1d9a603008b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce033c9f-cbdc-4a83-b83b-e0a5d8eebf36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c0068d-d760-437e-886d-88b6abdde20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd7ac40-ff81-427e-a832-888086e8dd4f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45520716-8f46-46f6-bb90-ce3307702b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c3ce421-3909-4b0e-a196-9f3de4123ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad888d2-c087-486d-9df8-360ad20afaa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb37336d-3530-4725-9882-d1c2ed10102f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461391f0-76e2-4f56-ab83-e9a553a875c7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83720ad6-a2e7-4c53-a0c6-af0f8d95b015",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa13cb29-01b9-4144-bbbf-064f555f5904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f1eb53-e085-4f3d-8cc3-0c85ad619777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a1a64c-c286-4a22-9d79-ed278aa06cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34c1d99-0882-44e1-acd0-72a58f74f89b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becb0b6e-a404-462b-ab6e-67f31e4aaf2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f56ceff-4eb5-4d7f-8f8f-3450252d81b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612bdda5-a412-43f9-9584-55fadb86e41d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5694b4ce-82b3-40a5-9269-8eefeedab57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130949aa-8aca-4b1e-b45b-e200a1c1b687",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdf2e60-9d16-412b-819d-36addc908236",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee8483a-0c61-4fa1-a1c1-438a41f4a4ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c147f72-56e3-46c5-9254-29cfa42083cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e36c82-8409-4d24-b7b9-8ce8cf61d03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfc8b84-0c58-4997-afc3-059c20c7f759",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de16b93-fc94-489a-afa6-57bdc86a37af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef1b14f5-7eb8-4ded-912e-7f4cbe6951ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37f6080-0ca9-407f-a487-d58cd091df01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9eaaaa-5c1f-46fe-b7b5-ed20043761c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e98256-880b-4922-8776-eb06461ccc27",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1be08f-99be-4d84-b4c5-3810df38f51b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18f066bd-69e6-4d5c-8f18-4ee1582b5a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacdc931-a508-47b7-8aa1-293515a67942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934ba345-a0fc-471b-9b5e-05192a8e262d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b42fc9-4902-4615-82b8-4a999e490b4b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6c9fbc-0833-40c1-a5df-85bcd7a12353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc474167-53fd-4904-8e1d-bfd1cc3e1959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd239c3-f64d-4753-b848-816a0ea00435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620505e0-797a-412a-b47f-75b855c533d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd65f4e-35e7-4950-a832-f8406ffdff8b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0391f87e-199e-4384-96b4-d25cde25bd32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1b0254-7c1d-413c-b87e-9a925ee7899e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af435dab-bc55-4a0c-857a-a19d96d18a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5a5141-c734-4725-bd36-8042f233790c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ee2e64-11e5-43f0-8c1a-1b9ba5a67976",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ee6bdb-1d62-4605-892c-f9188417a378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90e0b07b-4d9e-40c7-99a9-2892414879ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4faff24e-e6c6-4957-b484-e23101ec9fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12fe929-3089-490e-b975-92ba6a45e87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51849dd8-3d47-4e6f-9807-f297c9c0dcf7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb15a893-b439-48fb-ad7c-b3b8438720bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b07865d-3033-4bb7-811b-98ba9fed1791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5e5969-eb0a-4d52-a14c-9c745a637154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0a78a4-97dd-4a81-93ef-d8af2669c96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557a044e-b5cc-4dfd-b7f8-bc1308e53b42",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e22bd7-1d44-4370-81eb-d3979c5075a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebfa8a43-fb9e-4268-8420-5dafa23f2bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9f2c29-2c95-490d-8f1e-ca8712a8ab81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1372258-3c63-480d-9821-4b417aa51fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcfb82b-9614-470f-b94f-ea3681d67f28",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d57d2a-0d42-469b-bcac-f8de866204f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0f8fa10-0316-45aa-a0df-5cd7ee623deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93c0774-a92c-41af-8bac-84ef9286ac45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29be0e07-2aee-4b33-b422-f9b8534de6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8544d6b6-00dc-4397-91d6-99bb5992137d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13140533-aa74-4d75-8ff1-2b0e0876d258",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db759029-5264-4fa9-88c7-95110c8dc559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62079d20-ca89-4a1b-b49f-68e6d2b83260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de883cb-0f87-4283-90bb-88b9578c56a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d261e8-a52e-46f2-b238-135b92aec6ae",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74da76a-c906-45d0-8277-f68d7a519113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6143170f-e98f-46ee-9448-9550aa4253bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4ae289-f367-4a2d-bd7b-731d03a41e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bfb39b6-2bf9-4139-8138-4ab8ebbc9fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a72a34-9035-48ef-af27-3c6f11fd281c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbc35b9-604a-44af-8567-2dee0fc59faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e0fed92-c86b-467d-8f95-d911a04283e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6063e8-170b-46c6-a2ac-6db0425181e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c8169c-c9d5-4651-8050-ddad6e3dca3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09164b12-8d16-40d7-8e13-e66b7d0189c7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdb304a-761b-4bc5-8ff0-62fcf00c0a95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "983fa907-1f19-40c2-8c41-b12f6422cf26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd3bf1f-5931-42e1-8ae9-c7f41fdc3f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db82fc4-d34d-4b71-98da-f2cdd5361c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d271c50b-1de1-4c26-9afe-7d786a7da529",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1dc8ea-f295-4b79-86a5-50da4d7b121b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e108c8-f448-42a2-9fb2-4bf1d8539f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7c74de-7e7d-48aa-8b95-2e1d95b03473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51163bd8-d880-4d9d-ab4e-21f9281f353a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ac35b2-2927-4dc7-925d-64849a876bb8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750c8ceb-6886-40af-be48-fc4ea536b64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0320eeed-d6a6-4696-99bb-681b76da83d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f0f10d-83bb-4288-b620-3094f52d8bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abe19a2-4b9d-4e62-a502-da2660ca84a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474c8a15-cee2-4df4-bbd9-3064731c2ff2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc53d214-d4a4-424c-b107-977766240be6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bef7f8e-77ab-4737-8773-e2a3a555e36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b4d835-2f20-4581-a883-912a86bc8591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27405b20-2fec-4b50-beb4-693931eb8455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f71509d-d0d9-4b6a-8397-9fcc88bfed97",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc391899-d8a2-4620-a640-8bbb4fd52fe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "702f2175-f88d-43e5-9e9d-7be5c15f2c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004f036c-9958-4b88-949b-42c03d790c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ba89dc-aaf8-4dd8-ba5e-808ed2b4466c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af5496d-dbb6-4dcf-90e0-69183c21c545",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d01f179-07cc-4c8b-ad0c-4b0d9f069acf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec9174fa-280b-4f1c-8993-315c35e3ea49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42339690-53e0-4505-8166-6d3eb278980e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4c3b4b-6479-41c6-ad4d-5de36ac76e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d18940-beab-4d43-a705-4c4b02e4c408",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea205d5b-6cba-4b74-9025-cd529553d8bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1558a00e-243a-4137-a9b9-8c8afe83165a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "276fa848-df5f-49d5-8800-091bd46f04f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a3e0ba-c5f3-46e2-adcb-524b7bd1a6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90734be-3a78-41a1-88d3-9bb3efa4e418",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95ab7e5-745c-4c6f-a698-bde6c3c56ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f3a84b6-1a39-4b79-a1da-51d4a3de383b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af3e245-f425-4b93-9f00-42f7fa784932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f06b92-668b-4f2a-9c71-4b165c44c91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab433e3-2e52-4130-8498-74b86daed819",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837b4f39-4eb4-4737-9453-a7f3bcccc0ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "864677a7-0075-48a9-8bca-494688614e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eddd073-24cf-42ed-8337-cb4a5680840f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f7b615-4f56-47d6-8f97-3d947fc99395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2868cbe2-33fb-48f4-b4f6-7d99580b8c1f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bedf43-ad16-4cb5-8b5d-d5c930fb870d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca9819bd-2092-41c2-ad05-32f7bea8adfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ba0d99-6b3a-4405-b930-b14344ea9c0c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b9c9dc-4f06-47c5-a26e-9590e1f94be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265cb4ae-2c57-4f4d-9c67-712c7cc30fe9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100cc317-89fa-45b6-bc3a-8bde3ef31ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca51c24-1f93-42f6-9423-1829db4b8ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a49520-3a18-476e-b58e-96100c70df46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47653c35-572a-4592-864d-42c6d13a1a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51afd81e-9ce5-40d7-af0d-839f208e8320",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471388a6-648b-4126-bf6c-a0f9d6ee6c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d989c1df-a74c-474b-bad4-df7a66989aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e4ddeb-450b-4a84-a293-3c5a4743152f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcb5b58-ec8f-40af-896b-85d876c8dcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4584c826-58c5-4e9d-89c2-039c05900e28",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d818f93-6aea-4d21-9be4-d9c171866d7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd92f29d-762c-4585-9296-1207bc7dfd45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beab353f-325f-4ce1-8c95-b27eba0e5625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d2d365-8e47-4cda-ab89-a310d3a0b4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805eb41c-0729-4482-80c0-b93b8ce4cf57",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1fbce7-c4f1-405f-a16d-fdf7273bd5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c27201c5-65d0-4346-8d7a-35d09a2a4b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0463522-5ace-4180-a33e-ecba3ec5b4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f58704b-b231-40ae-a207-5582b12d390c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2448a2-2449-4814-ae0e-6924513608a7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3e8db8-eff5-48d5-8932-7ce3a27a17b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07a2a36f-39a5-49da-84c2-a976b270dd9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4217e500-fda3-48b3-8c41-473cc9fa7e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b6106a-f3d8-4ffe-808e-f38cdbce3c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0824868-ffb4-460b-9c30-81f36b2668d6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18840754-ed7b-43b9-9c15-0528d7a35838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a6c585b-3844-4769-ad91-348c11871070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377f69de-4e04-4eed-a585-616879af6110",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbd5198-ad3a-436b-b414-2aa8afd36cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba1c243-8772-47ee-8df0-67b19921a97b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc64f192-08e9-4990-85b1-68906d30e72b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0585559-2ea2-4d6f-b950-e3f3282ca3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd48148e-3ec4-42e2-898f-58f02b99e749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c05e91f-1def-40ab-a359-5013cbabfebe"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31d8bf0f-9f9c-4329-ac13-5511cb24162c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba5d5116-7e71-4a12-afbe-0c5eeda0e0ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c4314a8-b6f9-443c-ac17-26ae60fd634c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "424dd6f7-df19-4c0b-8dcc-8411b840d1a7"
                    }
                  }
                ]
              },
              {
                "id": "71090eb5-557a-42c7-a193-818c1861bbd9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f91deda-f8cd-4efb-9dd7-6c3ff37d2d1d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903806a7-ba32-455a-8b07-98e2c5a802d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4c1fbec7-52ba-4e51-8be4-9b296112ade2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9813311e-7fae-465a-9d37-547573ccaa18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98a574a0-feb0-4867-901e-6e8557803afb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4841b3a3-b0fd-4430-b113-af77ad3b7043",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "483ddc4e-4a1a-4084-8ab9-388b05890a3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75add173-ba44-496c-b51d-d38765f539a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a2abc70-513a-4eae-867d-69aeba031afb"
                    }
                  }
                ]
              },
              {
                "id": "084ed904-1dc3-4337-888a-6ea0142546e1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b71c2b76-fa78-4d89-a0a3-fcefabe19c36",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28950584-41e7-422a-8477-c705633106e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "97daf852-f11e-49c3-bd4d-606f10ea8752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410daa39-20d8-4c71-8ac5-2daf41afe679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab47ec7d-6be1-40d8-b551-eff035bf0cbc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "37bc47e8-6577-4023-a3cb-d6c6251c6c56",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e5a2426a-165f-4af7-8fed-15e976d253a7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e604d7d-0f10-4e8c-b7a0-87629e52c2c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "55e92921-e1dc-4cb9-808f-cf18a7948c38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c1f0a33-e01e-4493-a91a-0c1ff8fdfeb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "679a4bd4-cc62-42fb-afdc-a4e2950bdf76"
                    }
                  }
                ]
              },
              {
                "id": "222cad01-43ca-4e4a-bdc5-cfec99c21b69",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d078cc9-ee62-4f90-a5e6-dac22d62a6c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "199e6748-ca5c-45e0-adce-9f592de75537"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4473b03b-c692-42e8-a3be-ecb82511ffe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4a781ea-fabe-4824-8b02-dd5ff686f0a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4133049f-808d-44b4-845e-12c588c3963e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "44471d63-bbf3-4f45-967d-eceb44be284e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b89ddf8-0f37-4790-a3d9-1c3cc65f6ba0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd84afe4-755f-4457-9c13-54c37ed2352f"
            }
          }
        ]
      },
      {
        "id": "f170131e-81fe-4420-9a39-838641192f4a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e989c405-8f02-43ea-b564-6d2a88c62126",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9983a8de-8b7e-4d0c-9d0e-38c1a6e277a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16f35fc8-3bd9-4751-89af-5fa38f03859f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327abb9f-a92a-4da2-a48a-9010ec6d3d84",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e961060b-dac1-45df-a9e9-17a55833162a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ade703-f499-44c9-9668-771546a0193d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07879709-8bbe-46ed-b809-edda7b11f02f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03dfefc2-86ce-4181-a98c-3ba409cd1ce2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88da5b05-7793-4ef8-bcd4-e6f6110a0cbb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b4f30bf-02a1-414b-96b9-42030609a5eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a7cc9d2-b473-430b-bf4e-46c21302427d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffab8e81-59db-4a23-a83b-118438ff1d4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d47d3ef3-fba2-4634-b757-3e3e359c9c92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81b18292-1eb8-4338-be38-996bb0e656b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7bc400f-ea4d-4c4b-8369-ad9e27494795"
            }
          }
        ]
      },
      {
        "id": "5ea80b2c-e99f-4f92-aea6-21e2b291de74",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fbd1cea3-8acd-45d1-a7ba-e0266f574c90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f17354e7-c008-4291-9041-92ab574fa3c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "444e83a7-d186-4a51-9b9d-dd9e01fd0fc0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cd4fe9-6274-4d3b-ac31-300cd2dc6082",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3a17735-5518-4ece-be5f-99e5b8fdc9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8129a7f1-f300-4a86-a67d-db7c92ecb010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee66dbde-5fda-4094-aae9-0231fb6f9299"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61138582-ba0f-4bd0-b665-f5a50dc49b2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "785894aa-159f-4bab-86dd-f647382ebcfe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a627024f-0033-4285-a6a5-ebc85617303d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bb03c38-36cc-43a1-af09-4f9bce64f9cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6471e8d-9a3b-4d2e-a0fc-6f0273dee339",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ad50067c-4128-4df1-873c-37309294a3e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95ea6ce6-33c7-4cba-9c0f-1f59a2725713",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15da46b1-45de-4400-a309-ad31d8be1246"
            }
          }
        ]
      },
      {
        "id": "aa076e9c-086a-4fac-8f90-8ae71974c393",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "994afc8a-cf9b-42b3-8684-7ffd8150b460",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00fe2439-140b-4ebb-929f-7647f9fe09a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06f90472-b3b1-4041-9f99-817fe15ee519",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8619b727-9676-4a80-9e1c-bb0d2b8b59d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dde1440b-67ce-491b-8670-6a5f444c47c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0c2b90-4f73-45c0-ad38-adacd8da28d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea9fd081-804e-4a9a-acb3-1819c781fbed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78e4b26a-4cc3-4c1f-8388-618da5e7894e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01ea1648-71d5-4369-bd36-064f29a848cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "553cc9ae-eabf-4396-a54c-9c3baa503749",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4530977-6627-47f3-9956-089d126a641d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26dbe884-e332-496f-8d58-509e8d735e66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ef7d7364-24a2-4416-8d32-c2fb53d47448"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f40efe5-ac89-4ccc-bb35-413e57e60095",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee694318-bff3-4c9e-94c8-a263f70615a9"
            }
          }
        ]
      },
      {
        "id": "529ef2f6-fefc-430e-8ee7-451e73cce2e2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b51a1407-b175-4f03-8b4b-027efbb2a573",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f0ba0ff-2d83-4fdf-afff-80d180ff52cf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "db33ee7b-6aeb-4fe0-96d0-56aec6d40cc4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02a648e0-c720-4193-a6df-730389153876",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "387f20b4-03eb-45fc-9a8d-1c7f7cf56f8e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 107.65873015873014,
      "responseMin": 4,
      "responseMax": 14814,
      "responseSd": 966.5780268284572,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1714264733387,
      "completed": 1714264768801
    },
    "executions": [
      {
        "id": "68f11d7b-8e55-44c1-9b45-301f3bbf9613",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1e2ce05f-d2bf-42ab-8099-ebf89680dd06",
          "httpRequestId": "06d08f83-f082-4f73-a596-5e4a5398f572"
        },
        "item": {
          "id": "68f11d7b-8e55-44c1-9b45-301f3bbf9613",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1a30e1ba-d3de-4179-85c0-4f9ca2a02082",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "449603b0-7295-488f-8702-9d3a8211097b",
        "cursor": {
          "ref": "f7d640d9-1423-4d84-ad8a-8824e5e3ef61",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1d3fd32d-28c6-49ba-8e45-3320bf0e52a4"
        },
        "item": {
          "id": "449603b0-7295-488f-8702-9d3a8211097b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "acae88e5-c2ba-4424-a255-24a040f7e3f2",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "9c7425b1-30ea-423a-9a41-a1ce1293063a",
        "cursor": {
          "ref": "81b746ea-6b69-4fa2-b9b2-761eecf28558",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "df8a23d6-c295-4560-8642-aee5d11317f0"
        },
        "item": {
          "id": "9c7425b1-30ea-423a-9a41-a1ce1293063a",
          "name": "did_json"
        },
        "response": {
          "id": "f99703f9-78b4-4636-86a1-477b6450083d",
          "status": "OK",
          "code": 200,
          "responseTime": 123,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7143c128-cd21-440d-a48b-62bd6eb106ea",
        "cursor": {
          "ref": "74eea022-532c-4a26-b3b7-c7a0e1426a7e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4ac8ff2c-4416-4110-b7b3-546d5a85b3ad"
        },
        "item": {
          "id": "7143c128-cd21-440d-a48b-62bd6eb106ea",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b5c466c-045c-4f4c-93aa-957bdf581322",
          "status": "Not Found",
          "code": 404,
          "responseTime": 480,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7143c128-cd21-440d-a48b-62bd6eb106ea",
        "cursor": {
          "ref": "74eea022-532c-4a26-b3b7-c7a0e1426a7e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4ac8ff2c-4416-4110-b7b3-546d5a85b3ad"
        },
        "item": {
          "id": "7143c128-cd21-440d-a48b-62bd6eb106ea",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b5c466c-045c-4f4c-93aa-957bdf581322",
          "status": "Not Found",
          "code": 404,
          "responseTime": 480,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3e056d-01bf-488d-8c2e-39923831f018",
        "cursor": {
          "ref": "9bed4b39-73f0-4c68-95ba-576be11bd897",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "584f1ba8-1f68-4fc7-a233-775639452e5c"
        },
        "item": {
          "id": "bf3e056d-01bf-488d-8c2e-39923831f018",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b21692c1-ca54-4a1c-8658-b552f7219f1f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 19,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a51c2d-c0b5-4176-9114-6bfe23cadd30",
        "cursor": {
          "ref": "43307431-b0c9-40ec-bc69-5cd3406bcd41",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4b9e869f-22b4-45dd-a85c-a9d391eb6449"
        },
        "item": {
          "id": "29a51c2d-c0b5-4176-9114-6bfe23cadd30",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "23bbfd58-3266-4aee-9433-66fd81a0a7f8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 25,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6512940-ffe0-4bbf-b36c-813ee0e41802",
        "cursor": {
          "ref": "1784053e-f08f-48ac-8ad4-7f38b8292821",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2b7764d5-04a2-47b0-9734-b9f7f6522815"
        },
        "item": {
          "id": "e6512940-ffe0-4bbf-b36c-813ee0e41802",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fb352a3d-dc13-400e-9635-7be8956f8828",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36511a1-84a7-4779-97db-b4b5eaf88b10",
        "cursor": {
          "ref": "cb667de9-4914-48a1-bae0-0cfe0fb361ab",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "64ba15df-b8c4-48ae-967c-ff44feb7c43f"
        },
        "item": {
          "id": "a36511a1-84a7-4779-97db-b4b5eaf88b10",
          "name": "identifiers"
        },
        "response": {
          "id": "fd8b0614-604e-4b33-a73b-b5cb82331edd",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a03586-e75c-4fbb-af48-b63797035da6",
        "cursor": {
          "ref": "36cb9db5-e57a-40f1-85d6-86d9d3f8da05",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "367c9596-6369-492b-ae8f-bc77f60a7e10"
        },
        "item": {
          "id": "25a03586-e75c-4fbb-af48-b63797035da6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "abd80347-1f51-48d1-af04-074a5567cdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae85bd7a-284b-421f-a108-9cf868e09c81",
        "cursor": {
          "ref": "c6932ec4-9a92-463b-9331-0f6da656ebea",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "42ae82c5-fbb9-4c24-8e46-257bafd002b5"
        },
        "item": {
          "id": "ae85bd7a-284b-421f-a108-9cf868e09c81",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0cad26fa-3ffb-43f8-bf84-2f174cb7bc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086523d9-3706-46c5-927f-9c1a8e04841e",
        "cursor": {
          "ref": "ed9b3084-9fd5-4054-9e30-afec2b2c325f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fdda3de2-7cef-4138-892d-a134b19ad972"
        },
        "item": {
          "id": "086523d9-3706-46c5-927f-9c1a8e04841e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7e9650d9-4b72-4ec3-89e9-886779092ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef34da4-aedc-4885-9deb-9e5ad4fb388b",
        "cursor": {
          "ref": "e1d6602e-2de3-41ee-bbcf-3acfbae99e97",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8e13a2ba-64a4-4e6d-b247-5a23f21ec6c3"
        },
        "item": {
          "id": "2ef34da4-aedc-4885-9deb-9e5ad4fb388b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "40e2b046-5212-4582-a2bd-16c7ca875f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500ac405-b0c2-44b2-b94d-67ad0b4059a0",
        "cursor": {
          "ref": "82c80b4b-f888-4c81-8adb-703d5f81b1c8",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5c07e515-0f9a-4c94-87b0-71ab5d2d679e"
        },
        "item": {
          "id": "500ac405-b0c2-44b2-b94d-67ad0b4059a0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "30854e44-d305-4c37-95e7-208b434b8f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be25efdf-355b-44d1-9f60-ad23dd092e3b",
        "cursor": {
          "ref": "91f573c5-240d-4f5e-a89b-589e2f10ac12",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c702fcd0-be91-4d30-9185-e1f3749eb625"
        },
        "item": {
          "id": "be25efdf-355b-44d1-9f60-ad23dd092e3b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8b4a02f7-b6ab-44fe-9f8d-a824199b2561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ebfda1-09de-4d2f-8087-0c5530bdb102",
        "cursor": {
          "ref": "24cb6cb8-4835-4570-979a-d3434003c7ba",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e9dc36f5-399b-4001-9932-f6b489b37aee"
        },
        "item": {
          "id": "89ebfda1-09de-4d2f-8087-0c5530bdb102",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5a19f0cf-0656-4a0d-a9de-f70de1d8a4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936ca5c4-9c3b-48e2-be50-d7c4a83d27f4",
        "cursor": {
          "ref": "209db9c1-44fa-4fa2-ad11-36e29a9ccba7",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b8f95326-ba70-46c3-9075-a6eb50783cc7"
        },
        "item": {
          "id": "936ca5c4-9c3b-48e2-be50-d7c4a83d27f4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "773b2367-912b-4f56-9cef-8b7ff9731b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35079a1-ad94-4a6c-bd88-733f7bba8d9e",
        "cursor": {
          "ref": "e2e79fe7-5c40-4dc2-9efb-7c7d8b46a74b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9e20a58d-7950-44f1-8e8c-09dfbf4723a2"
        },
        "item": {
          "id": "c35079a1-ad94-4a6c-bd88-733f7bba8d9e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9dc741f0-f314-4359-8135-ee3bfbed6d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda36a16-fc01-4ad0-9b60-f8cc471a3385",
        "cursor": {
          "ref": "e0b3cbd0-f115-4c15-89b1-85776ee66b4e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "764dcdc3-e0c1-438b-8346-9b555eba2bfa"
        },
        "item": {
          "id": "bda36a16-fc01-4ad0-9b60-f8cc471a3385",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f0fa9e78-7903-4eda-99fe-a8a85c0c53ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6862b774-859c-441f-9a43-3a966b0e6bbb",
        "cursor": {
          "ref": "ed710474-d57f-48bb-894e-34ca0cb6e68d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dfeefc03-f07a-4036-b677-7c59fa511f90"
        },
        "item": {
          "id": "6862b774-859c-441f-9a43-3a966b0e6bbb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b4f8087c-3741-479e-ae18-b1bb4fda4ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf50394c-fd25-451d-aa86-06d6ce2b6d00",
        "cursor": {
          "ref": "41fa27b9-12aa-4c30-af12-2116b32a7d46",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5d2030dc-b89f-4352-83f4-21759f0605c7"
        },
        "item": {
          "id": "cf50394c-fd25-451d-aa86-06d6ce2b6d00",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a1dba022-d027-4605-80cb-07e5cdea7199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6496752f-c848-4162-9167-ce710c49ea2a",
        "cursor": {
          "ref": "8e616145-6cb5-46e8-88bf-f5391b27f763",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "710645ba-3954-4ba6-8633-f70824aa0168"
        },
        "item": {
          "id": "6496752f-c848-4162-9167-ce710c49ea2a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "851fc150-966a-4c28-91c2-714f5182df64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3e3d68-677d-442b-989c-303eb5606919",
        "cursor": {
          "ref": "8ead198d-d736-4f03-8010-40cf5092d945",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bea2ceda-ac18-4130-a1a0-bd40270e3258"
        },
        "item": {
          "id": "5c3e3d68-677d-442b-989c-303eb5606919",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "90e2ef58-7ee8-453e-bbbc-22e54cbf4a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d6fb67-b6fa-48c2-98f2-3ee6b69c2422",
        "cursor": {
          "ref": "2b14224a-3a25-4ccb-91bb-6ac698f7bc38",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0887e6d1-c790-4abd-b8f2-e932728dd9a8"
        },
        "item": {
          "id": "16d6fb67-b6fa-48c2-98f2-3ee6b69c2422",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ee0f2ba4-6498-463a-8c6e-f7a1bcea1319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955f4497-b50c-4246-b3a0-aa635c73535c",
        "cursor": {
          "ref": "e7bcc445-ade1-4a11-8c50-7b8c3c018116",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "affe90a7-0872-4562-bc96-fd6a066e3cc7"
        },
        "item": {
          "id": "955f4497-b50c-4246-b3a0-aa635c73535c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "63edd6e6-cad4-4897-9342-971e489f2a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7899559f-84b4-4981-9605-267a44d92477",
        "cursor": {
          "ref": "359ddfb9-be3e-4c2d-88bf-52d6e0815a50",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1c39a8d9-9cb1-4095-ae3f-918fc4c84684"
        },
        "item": {
          "id": "7899559f-84b4-4981-9605-267a44d92477",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f52aec4c-51d6-4e55-b0e8-1a9e7cee54f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48250d6d-d479-401f-a9c2-051a2fc0b2b6",
        "cursor": {
          "ref": "a5303730-b4a8-404d-990d-05901f9b350b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "40e83a2c-19d5-473a-8765-f07a850c4e3e"
        },
        "item": {
          "id": "48250d6d-d479-401f-a9c2-051a2fc0b2b6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d35c8671-396f-4ccc-88e7-12b6876e9bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18515b1-b2e6-4a76-98bf-58fac3781f64",
        "cursor": {
          "ref": "4e64adef-4aa1-4238-8154-7140e9ca1171",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bd393418-0931-4366-94fa-37abbb2bfa7c"
        },
        "item": {
          "id": "b18515b1-b2e6-4a76-98bf-58fac3781f64",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "465d1f58-be72-4c1b-a9ad-52538509114a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78007fa-b84b-434d-91e4-e8cbfe30e681",
        "cursor": {
          "ref": "8cfcd4e8-b56d-4b5f-8802-d417bfa1ba60",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "46d7a8f4-1eaa-4f7f-bd45-402a00f8de06"
        },
        "item": {
          "id": "e78007fa-b84b-434d-91e4-e8cbfe30e681",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ace79991-7537-46e4-b53f-fb680a164f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99b3a83-9e57-416b-afb9-4bb7e41fa75e",
        "cursor": {
          "ref": "4d651bd1-0aec-4d14-8f9b-4f6b39734835",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3b9e1d20-e2b0-47b0-9543-59119143f9fa"
        },
        "item": {
          "id": "a99b3a83-9e57-416b-afb9-4bb7e41fa75e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "908fe431-6d4d-4de4-ad71-1db12de55e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a424db7-1c93-476a-b747-b2834befff0a",
        "cursor": {
          "ref": "845f0265-3d1c-400d-99b1-aaf4dc451158",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "189b359e-fe28-4a81-b6e5-cfa03e09fb02"
        },
        "item": {
          "id": "7a424db7-1c93-476a-b747-b2834befff0a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fb1abd6e-7801-4180-b9e5-9a23b542430d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0d5736-c328-4891-b328-d51c119ed7bf",
        "cursor": {
          "ref": "d47fc13b-b73e-4fc1-b1e5-43217fedd09a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6ebb9d6f-7f39-47c3-987e-cf870e7412c8"
        },
        "item": {
          "id": "ab0d5736-c328-4891-b328-d51c119ed7bf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bd7866a2-91eb-47ee-ab3c-f5dad16d841d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5dafd4-0c0f-4149-a180-8db2d9ddb19e",
        "cursor": {
          "ref": "8b2d5d63-0403-4574-b7dc-a1cf0c93fbd0",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b821e3a7-1d76-4953-b6c6-920c97b9ac7b"
        },
        "item": {
          "id": "9f5dafd4-0c0f-4149-a180-8db2d9ddb19e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4c070887-ed32-46d6-8a01-2c5547c7939f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385d93f3-5de9-448a-be4a-6abbf3695d8a",
        "cursor": {
          "ref": "a70b7467-879b-4bb5-9853-622597653db8",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2897887c-4448-4320-8253-2e686eae0ba0"
        },
        "item": {
          "id": "385d93f3-5de9-448a-be4a-6abbf3695d8a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "15d7af1f-ee58-4f7b-ba68-7c884c3cdf01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2bf38c-5a48-44fd-9354-ef6a125e4fcd",
        "cursor": {
          "ref": "556b8fd0-f630-4a6a-a94f-a19711669df8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0fe226a6-dc96-4bf2-893e-5e5aa125e210"
        },
        "item": {
          "id": "ec2bf38c-5a48-44fd-9354-ef6a125e4fcd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bb34c170-c6dc-423f-adc3-4aaaf4a6fbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a230ef-146a-443a-8aff-5d31be7ee943",
        "cursor": {
          "ref": "8788890d-c9a1-43b0-aca1-8881e30bb552",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "becdb667-6084-42b7-a54b-32c216b03fd8"
        },
        "item": {
          "id": "f3a230ef-146a-443a-8aff-5d31be7ee943",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9c59cc09-9315-48fb-97d2-836b00a28744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88174f23-90f5-4c80-b9b2-9ec394be8b1f",
        "cursor": {
          "ref": "0d020e71-3337-436f-a209-74e89444bf86",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "997c898d-8693-44ed-a6d8-32d2f54caf2d"
        },
        "item": {
          "id": "88174f23-90f5-4c80-b9b2-9ec394be8b1f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6cbcd4e9-64b7-4ab8-a921-68214de28e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c33fa18-f85f-4217-b87d-bd900ca817b0",
        "cursor": {
          "ref": "c93ccea7-c9a0-4f7b-87b0-c9c9c1cae8c0",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7acd2d5f-3337-4023-bcb7-c5d0e8bcf781"
        },
        "item": {
          "id": "3c33fa18-f85f-4217-b87d-bd900ca817b0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2fed54c5-a38a-46af-baac-93d59d4795bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a861ea-8574-4c1d-8472-e3c83c14a76d",
        "cursor": {
          "ref": "509150fa-c699-42dd-ae5f-43d76290a791",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b73ea761-117d-4d8f-8ee9-3c8525f053f3"
        },
        "item": {
          "id": "51a861ea-8574-4c1d-8472-e3c83c14a76d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1d56b7d7-1d8f-4bfb-a339-b918fb30995f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb596f78-5914-4b18-8c6b-ae881ca3967f",
        "cursor": {
          "ref": "2caeda53-2a3d-45a3-82cf-61e2a5bd6d35",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "94c73b57-edf3-44a6-b896-196afdbc1564"
        },
        "item": {
          "id": "cb596f78-5914-4b18-8c6b-ae881ca3967f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b21af74b-34cf-47e5-842e-79b6cd6bb342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620fafc9-f574-43db-bb11-8726677b31f9",
        "cursor": {
          "ref": "3a484aee-43da-4a91-868f-4599c521b9f1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1db15831-272c-4c2f-839e-a68d42c69c8e"
        },
        "item": {
          "id": "620fafc9-f574-43db-bb11-8726677b31f9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0fc3ec3c-9565-40c6-92d9-e1bd2135366c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f765c4-510d-44ab-a704-dc24d7c10f2c",
        "cursor": {
          "ref": "f9c26e46-b4cc-469e-ba80-4094d30f5c01",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c1fc371d-c446-40f1-8656-4c1c67b7d173"
        },
        "item": {
          "id": "77f765c4-510d-44ab-a704-dc24d7c10f2c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c34ca521-ccea-4bde-aff1-7e9adebede62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f537b2-8928-4815-a4f0-b3aed082a74b",
        "cursor": {
          "ref": "c01e94d2-9473-4105-9424-6600f8e0e4dd",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2d73d1f7-16d8-46f7-8001-d2836a42f67d"
        },
        "item": {
          "id": "16f537b2-8928-4815-a4f0-b3aed082a74b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3b300320-c1ec-4366-ad13-d12d655f2728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc113e0-ec50-4a8d-9812-bf91fb974cbe",
        "cursor": {
          "ref": "704c6912-a0e5-47d9-86a0-b8b4aaf50290",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3a54ce50-a942-4a5b-9a54-68b8e1ebde92"
        },
        "item": {
          "id": "1fc113e0-ec50-4a8d-9812-bf91fb974cbe",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4450d918-443f-4b7b-b29a-e089b75424cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da9f853-6d64-447f-8ce0-9c1ee07b358b",
        "cursor": {
          "ref": "dc21e765-b95e-40f2-ba11-f145afc803c4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1ee52d09-d9e5-4570-a29a-02a30871b5bb"
        },
        "item": {
          "id": "4da9f853-6d64-447f-8ce0-9c1ee07b358b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0c77d467-ef9d-4d43-9ff1-dba27471330c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781348a5-4e95-40f3-a3b7-0588535388d7",
        "cursor": {
          "ref": "8ac4f810-35ce-4a2d-9403-a5c22bd6b723",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c8369973-b40e-4a76-9424-9583e6e6e8a4"
        },
        "item": {
          "id": "781348a5-4e95-40f3-a3b7-0588535388d7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6aff3e1b-b9e8-4301-ab04-3d1a8a167367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb09540a-c9e0-4517-93d7-e18d94d51c29",
        "cursor": {
          "ref": "3bd402d6-d89f-46a3-bced-3a8ed37b575e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8a150baa-14e4-46e3-91e7-243d04ebf238"
        },
        "item": {
          "id": "fb09540a-c9e0-4517-93d7-e18d94d51c29",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d5af9f40-3444-4adf-acdf-eaa4733dc3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cacd844-5a79-44ca-8035-d9f60874b595",
        "cursor": {
          "ref": "009d9a35-24d5-4228-8821-894fe7ed126f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9c89dae9-4063-4a16-8941-42f176fe6fd0"
        },
        "item": {
          "id": "7cacd844-5a79-44ca-8035-d9f60874b595",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "da14b712-35f7-43fb-944f-90783d93e0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee371af-02f6-4af7-9ade-d46d57bee191",
        "cursor": {
          "ref": "a2ae2958-5334-4790-a3d5-f111323fe2b5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e940190b-9245-4957-a383-813ea5e612b5"
        },
        "item": {
          "id": "9ee371af-02f6-4af7-9ade-d46d57bee191",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0bcc506c-a802-4049-be8f-4a4507cac692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4abda7-aac5-47fd-9258-3429fed47a48",
        "cursor": {
          "ref": "9d53c6eb-960e-49aa-b8da-60c9d0a10ab9",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d7620624-82bd-4808-9e4b-a4d18a1ea448"
        },
        "item": {
          "id": "5e4abda7-aac5-47fd-9258-3429fed47a48",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7775a18c-3654-40f8-82ac-0d8265e7fbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4058ebc9-edc2-4315-be7d-c924cbde6a1b",
        "cursor": {
          "ref": "ced83c61-eeee-4a9a-bd29-b7aeb0b6fce6",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3b0b494d-94b6-4895-aa8c-fc2222b9233c"
        },
        "item": {
          "id": "4058ebc9-edc2-4315-be7d-c924cbde6a1b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ba75ac64-f71b-42c3-b6d9-4034cbaf7203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4a6d52-c1a6-4f5d-b134-b2dfb2b50cd4",
        "cursor": {
          "ref": "45733583-1fac-49ca-a417-6c85505c991a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b81630cb-f719-42d4-b1e2-31edab86e07b"
        },
        "item": {
          "id": "bc4a6d52-c1a6-4f5d-b134-b2dfb2b50cd4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "51e7d00c-3724-4aa7-860e-5c6124d24597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8278a976-8468-4676-8789-3101fd4a5c2b",
        "cursor": {
          "ref": "4c75b270-78a0-43b7-8b6b-13b5502b03cf",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "accbe792-22b9-4ebd-a142-5951a96e61fd"
        },
        "item": {
          "id": "8278a976-8468-4676-8789-3101fd4a5c2b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6bcd99d2-fd3b-4f0e-b7c8-216c44f16dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8135ed-95de-441b-b4e6-72da31c073e1",
        "cursor": {
          "ref": "83ddf5b0-5cd5-42c2-a724-77787b5d626c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ecdda41e-4064-49fe-beeb-913954cfafd7"
        },
        "item": {
          "id": "8e8135ed-95de-441b-b4e6-72da31c073e1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a62d813e-a37e-4045-8dde-ab2fc4077238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09b5482-a7f3-4370-9fcd-61919a9f3084",
        "cursor": {
          "ref": "e2af789d-9cdd-493f-a132-5c762e4f893d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3a9e23ad-a5b6-4dbc-95bf-ec46fdcda17f"
        },
        "item": {
          "id": "f09b5482-a7f3-4370-9fcd-61919a9f3084",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a42ff3f8-502e-4b6b-bdf3-5f4ccbfbd7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6570e97-c9e1-4fd2-a7fa-e14c686f6aa7",
        "cursor": {
          "ref": "8b16a14e-fbe3-4dd7-b507-124050648e22",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "69bb03d8-9d96-42a2-a6f4-d360a365fb5d"
        },
        "item": {
          "id": "e6570e97-c9e1-4fd2-a7fa-e14c686f6aa7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9ade7507-4c32-45b3-86e5-2cb0235b7649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe8125f-95ef-404a-add1-e310ebcf3ba5",
        "cursor": {
          "ref": "f80be860-3f27-418d-bc0e-7e8099324668",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d1ba9952-3eda-4ec7-8cab-4bd93aacea27"
        },
        "item": {
          "id": "ebe8125f-95ef-404a-add1-e310ebcf3ba5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "99fd0d54-d5d8-4618-9f9b-2c47e22afcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84bb076-f271-4a32-aaa3-f585f755526f",
        "cursor": {
          "ref": "c002c832-3473-4a5c-9770-21ecc29e13a2",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1356b9fe-fbe5-4165-ac4f-c7e19b161eaa"
        },
        "item": {
          "id": "c84bb076-f271-4a32-aaa3-f585f755526f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "20b80399-5cc1-4a41-a93e-df044d2ee89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d19ea5d-e0c7-4c86-ab7f-b4e928397a20",
        "cursor": {
          "ref": "1f254c13-85f9-465e-9997-f02a3df63031",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "17ec789b-1781-4e8e-8491-8fc562d93c1f"
        },
        "item": {
          "id": "4d19ea5d-e0c7-4c86-ab7f-b4e928397a20",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f6d422bf-c438-4d8e-8dd7-cb614f01934d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dfb537-ac4e-44d1-8adf-73ce88b38e66",
        "cursor": {
          "ref": "f7d26016-e035-4ec2-877e-192ccad7b4e7",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "730f9456-b92e-4f4e-88fa-0800e7bd8946"
        },
        "item": {
          "id": "d6dfb537-ac4e-44d1-8adf-73ce88b38e66",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "672a7801-b0d0-4ce1-b131-bf083d2c3bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3ecc10-f4b0-4720-90e8-dbc4de02defe",
        "cursor": {
          "ref": "e463944d-fedb-45e7-8b1d-7f6600ace7ce",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b3a40aef-06c8-4913-99c4-5ad044595063"
        },
        "item": {
          "id": "7e3ecc10-f4b0-4720-90e8-dbc4de02defe",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fb378fdf-c0d0-4f98-a64d-6e68cc306f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74d5714-23eb-4a69-98af-2b573b1f6895",
        "cursor": {
          "ref": "22c0a9e8-eedd-4fc1-b127-c194c6f91ffe",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f9695d2e-7a19-46c6-ae6f-0c71d23953c9"
        },
        "item": {
          "id": "f74d5714-23eb-4a69-98af-2b573b1f6895",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "513958b4-e63f-482c-89ea-dd15cb1d57c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f76146-5232-4564-b25f-2dc71190ba82",
        "cursor": {
          "ref": "816cc770-c9b8-494d-9493-6c894f85cbb7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b041205c-73e9-4e6f-a230-f4a8b03022fb"
        },
        "item": {
          "id": "c6f76146-5232-4564-b25f-2dc71190ba82",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8ad127b7-bf97-4e9e-8938-7c6784e59d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa942a6-cc65-4830-ba6e-fd5f2a9c68a2",
        "cursor": {
          "ref": "be9d58f3-8663-4b4d-a217-cc0825622204",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bc91f673-d625-4758-86d3-aef68c51f30e"
        },
        "item": {
          "id": "aaa942a6-cc65-4830-ba6e-fd5f2a9c68a2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fc55c052-97e0-46ec-ab2b-f40e730a31d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d304d3c4-9543-41c5-a575-b9d9284bb35b",
        "cursor": {
          "ref": "a274da32-a3f0-472e-8155-d153ca3df8a4",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d044f628-28e4-407c-9114-2f16be6caa57"
        },
        "item": {
          "id": "d304d3c4-9543-41c5-a575-b9d9284bb35b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d2fc4e46-68bd-4d47-acec-c1e4e9785cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0309873-1d7f-4e71-985b-f588c0cf5064",
        "cursor": {
          "ref": "54b3f4e0-a775-4dca-bd33-1f3f2c3a06c0",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f06ce55e-c1c5-474c-89d1-5667fb377963"
        },
        "item": {
          "id": "b0309873-1d7f-4e71-985b-f588c0cf5064",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "45fbba99-f189-477b-86f7-0a97edf58c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f44310-5fef-4f57-b38e-d41794d6acfa",
        "cursor": {
          "ref": "194e5acb-0c3c-4490-9bad-a8360379d127",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8fb28bc2-c458-4f8b-89f1-f2839832b40d"
        },
        "item": {
          "id": "65f44310-5fef-4f57-b38e-d41794d6acfa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1755f694-0cb2-4ba7-bb64-6b383cc0c4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868286b5-bcb1-442f-ad6b-09d0b4227408",
        "cursor": {
          "ref": "49f06643-5442-4bab-80ef-98be2580b41c",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7c229f98-0564-4b6c-9afe-c4f5cee872cb"
        },
        "item": {
          "id": "868286b5-bcb1-442f-ad6b-09d0b4227408",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c60b23e1-b771-4d79-bd92-c06c30401978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e444435a-94ba-45bd-8bbf-dd15c4f866be",
        "cursor": {
          "ref": "4f556e87-625c-447f-9a8b-4a4fb662f424",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dc47b129-15e3-429e-8862-052c78907f5e"
        },
        "item": {
          "id": "e444435a-94ba-45bd-8bbf-dd15c4f866be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a2387fd0-79ae-44e3-a571-c37747600f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec6d0e0-1d06-4ba5-af0e-aa266e77dcb0",
        "cursor": {
          "ref": "2cd6b988-708a-45f6-969f-8167e772012f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0d1f1cc5-e31b-4af1-9169-77d73bd6a242"
        },
        "item": {
          "id": "cec6d0e0-1d06-4ba5-af0e-aa266e77dcb0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "54bc2423-79e3-4827-9e1e-52a20c2a1b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cb2100-6b6b-41d2-9ced-331ca51d6c4f",
        "cursor": {
          "ref": "2615837b-8fc9-4454-b5af-f8236b2f8109",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d50bf60f-adeb-426e-8bff-119c36361968"
        },
        "item": {
          "id": "33cb2100-6b6b-41d2-9ced-331ca51d6c4f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6b59ea54-92ff-4b6e-88df-103e19bbd7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ceedc40-9916-4dfc-ab44-232e008bb95a",
        "cursor": {
          "ref": "2e9c465f-46f7-4304-8866-55a9ca482385",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b9f9faee-0376-4d23-bef5-36e35c8e9c2c"
        },
        "item": {
          "id": "4ceedc40-9916-4dfc-ab44-232e008bb95a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "092f835a-eb6b-443c-a04d-693e15137f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da0b415-b9ef-4792-8729-c640341f6b88",
        "cursor": {
          "ref": "2533df23-95f2-445d-9ab6-f9d068445987",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a423e997-b92f-4ed1-a7d4-aafd5fd7028a"
        },
        "item": {
          "id": "9da0b415-b9ef-4792-8729-c640341f6b88",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b2e4cfca-9653-4b41-952c-379a44e2a79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6071e3-1593-49f4-844e-37d1f3af55a3",
        "cursor": {
          "ref": "70f32cc2-4eb3-4d94-afce-b2e447d5a38e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "243265a6-6f10-4a11-ba54-e0a67958ebf4"
        },
        "item": {
          "id": "6a6071e3-1593-49f4-844e-37d1f3af55a3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2841147b-0bd3-4489-a0dd-00c2bee8694e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4b510d-51a7-42ad-b70f-dffd24f91f47",
        "cursor": {
          "ref": "0044c5c5-d890-4c89-8970-b4de6c63dbf9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b7dc79b0-2607-44c1-9774-a72b80901340"
        },
        "item": {
          "id": "5f4b510d-51a7-42ad-b70f-dffd24f91f47",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9d6d569f-0502-425b-a2ec-317d38874edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737f0467-ba09-45e2-a8c4-34f15d4689e7",
        "cursor": {
          "ref": "5f1235a0-f399-4700-9943-897b3a1ecfc2",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "11e17732-73d6-49a4-aac8-59b8cc60c037"
        },
        "item": {
          "id": "737f0467-ba09-45e2-a8c4-34f15d4689e7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "58f56a04-1e73-43b1-8daa-4bdcb254f5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4fff34-e204-4601-9352-2a763f3f3cd1",
        "cursor": {
          "ref": "1fe50834-3427-49b8-96fd-bd118371a79d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a6cb3c8d-4c35-4518-967c-b0ced3e2e428"
        },
        "item": {
          "id": "7f4fff34-e204-4601-9352-2a763f3f3cd1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d8da9dae-9c70-4939-b2b5-cd8a86e5d325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848d266a-ceb4-44f7-9f7f-140c4b8e0734",
        "cursor": {
          "ref": "3bd897f7-cc6b-490b-ac1b-9efb58cb4b14",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "34cf46dc-1e1a-4aa6-9e5b-7788f2a7be7c"
        },
        "item": {
          "id": "848d266a-ceb4-44f7-9f7f-140c4b8e0734",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c00c086b-eea4-42f6-a047-f88bcb1e939d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b6901f-4fb9-4cd5-9533-808c5a442a93",
        "cursor": {
          "ref": "199f55de-5004-40b8-845d-417b444370bf",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5a2459b4-3d33-4067-8609-ce20e66db698"
        },
        "item": {
          "id": "89b6901f-4fb9-4cd5-9533-808c5a442a93",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "da63fced-3f10-4b00-a9c1-7169edc9b4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b299633-098a-4119-90f9-87e6bb9db05b",
        "cursor": {
          "ref": "aeb44710-49f2-478c-b463-4e4c0b729fc0",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c63d3447-d9b9-4eb8-9a38-853a6b96e448"
        },
        "item": {
          "id": "8b299633-098a-4119-90f9-87e6bb9db05b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "74b6aac2-d1d6-45b4-862d-ffc2de618429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d31039a-b77c-4588-b33a-fca201050d8b",
        "cursor": {
          "ref": "7a627eef-508e-4b30-a0bd-f7f70dc1f199",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3e20b581-1d1e-4f0a-8b77-da35b9e5e1a1"
        },
        "item": {
          "id": "4d31039a-b77c-4588-b33a-fca201050d8b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6373ad55-43bc-4532-b4ee-6afc3cae8e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866f9665-78dc-449c-896f-45a2ee28047d",
        "cursor": {
          "ref": "67d058b9-c14e-4e42-8c4e-cfc2396ac072",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bdb3f0f9-637b-4b16-a4c4-4d0c53fc3692"
        },
        "item": {
          "id": "866f9665-78dc-449c-896f-45a2ee28047d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e14d2a4c-43b3-4e5a-90cf-7cbcdd4f5821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8681c3f4-c891-492e-86c8-ac7e11ff80ab",
        "cursor": {
          "ref": "951bab43-fffa-4a72-aa90-d0f1eb722833",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4294c161-d7c9-4b1d-b2a5-c944280cc644"
        },
        "item": {
          "id": "8681c3f4-c891-492e-86c8-ac7e11ff80ab",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3b791438-b25a-463a-a85c-c3653d7d9da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2bed3d-83bf-4a69-9fa4-9a8a57f3f64c",
        "cursor": {
          "ref": "3165125c-005e-4fa1-bb25-2fed8f8827cd",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fd448e29-ca0c-4321-a3f3-fb3d2ffbaa0b"
        },
        "item": {
          "id": "4a2bed3d-83bf-4a69-9fa4-9a8a57f3f64c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "434b573c-85b7-4e8e-a8b2-e558fca0eae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0515136d-2d40-4d6e-a382-e0fdcd1374a4",
        "cursor": {
          "ref": "86cf6b8a-595a-44c2-854d-eb7b10c4659e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0a7fde7c-cfff-445e-b0c1-f2f2bafa1bd2"
        },
        "item": {
          "id": "0515136d-2d40-4d6e-a382-e0fdcd1374a4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "93cf3ae0-a09e-4dfb-8cea-a87190d36e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86cf57c-a57d-4fc5-93f6-bd10f767e22f",
        "cursor": {
          "ref": "d8a29b5f-1d41-4f89-9272-b214f0c4b384",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f270706e-e4d4-49f5-8346-17d28bcd9c54"
        },
        "item": {
          "id": "e86cf57c-a57d-4fc5-93f6-bd10f767e22f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0995e284-6507-4bd7-9db7-8135a4329c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b824871-7b4c-4cb9-9662-a7f9b2680498",
        "cursor": {
          "ref": "1e1367ce-39b5-43e7-ad28-e3736709ef03",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7657dde0-a292-49ac-947d-d61e5f3c0b46"
        },
        "item": {
          "id": "0b824871-7b4c-4cb9-9662-a7f9b2680498",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3958fa10-a37d-4d76-b597-a6270f15df2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de745955-3885-4e75-b2e5-131e3712e138",
        "cursor": {
          "ref": "381b8291-18e6-4168-9d5a-37412ddf007e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8d7c9d1f-a153-4987-8347-ef89611d2f00"
        },
        "item": {
          "id": "de745955-3885-4e75-b2e5-131e3712e138",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7101cc0c-7951-4872-9f2d-ae6530342c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2752fb23-0845-4a91-9f29-d3f37982ecee",
        "cursor": {
          "ref": "709821e3-7d3b-4eed-b06d-46cbe8897023",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c12f1d45-beb4-4ed6-b621-8586c129ce1d"
        },
        "item": {
          "id": "2752fb23-0845-4a91-9f29-d3f37982ecee",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7c9da9e5-225b-4b04-baad-f1ef451ea5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb395d0e-f2a9-4ecb-8359-96060eff3667",
        "cursor": {
          "ref": "c43385a3-7c8a-46cb-a1b0-9718eced14af",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "19cbfb6a-05f0-4b8b-b2f5-27bda1e1cb6f"
        },
        "item": {
          "id": "fb395d0e-f2a9-4ecb-8359-96060eff3667",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7ae1094f-6e72-4314-a339-34dab1c8582b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f67548-aa8d-4df3-a987-ef8fbad4ada1",
        "cursor": {
          "ref": "d36bc88e-836f-4456-874f-ff1c500c1d29",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dc3244b2-90db-42bb-86cb-bd082d074221"
        },
        "item": {
          "id": "52f67548-aa8d-4df3-a987-ef8fbad4ada1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e75942b5-94bc-4911-a28f-980c51c4fd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdd5800-d405-4672-afe0-bcce8c9fe4c8",
        "cursor": {
          "ref": "6eb0879b-a41d-4cc4-a389-7919bbb5451b",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dac7507c-ece6-4c29-9904-2ecdb1913f24"
        },
        "item": {
          "id": "6bdd5800-d405-4672-afe0-bcce8c9fe4c8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "381bf4e1-6377-4ff8-922b-543cff756aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd269093-52df-4197-89d0-000768d9161f",
        "cursor": {
          "ref": "46c4628a-356a-47d7-9426-0533c06e804d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a4a0689e-8123-4926-a1ba-e93bb58adc65"
        },
        "item": {
          "id": "bd269093-52df-4197-89d0-000768d9161f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1b1a9c2b-4f05-4642-9b8b-a650588e4c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68a408c-9073-4c3c-bc87-446083301bb2",
        "cursor": {
          "ref": "bae5c4be-a26b-4e1a-8ae1-8d8fed768e82",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e2204a31-9b8d-4b15-b8a6-14d03dfc858d"
        },
        "item": {
          "id": "e68a408c-9073-4c3c-bc87-446083301bb2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8aef477b-f8ed-46a7-b37c-eaf4e517af54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32cfb79-92df-443a-94e7-43f041f628ae",
        "cursor": {
          "ref": "030d8749-c652-4ebd-8fbf-880f5dd4c6ab",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fd789c9d-0174-40b8-96da-7c3c74376423"
        },
        "item": {
          "id": "c32cfb79-92df-443a-94e7-43f041f628ae",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "51c84aeb-e29b-4b81-a5bb-d57b448acfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be64bd28-c451-4d9a-9604-9dec2b44d5ed",
        "cursor": {
          "ref": "ed09831f-3444-4b84-9338-22fa9196017f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ed781c5a-ec38-409f-a6f3-bbd35976ec11"
        },
        "item": {
          "id": "be64bd28-c451-4d9a-9604-9dec2b44d5ed",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "082c4b61-42b0-4d3f-9783-5a4db2864b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34174944-ad81-467d-a088-7185e2b41b55",
        "cursor": {
          "ref": "4ce9ac63-e7c9-41bd-baaf-476874080a29",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d6fe0c7d-6817-4b3a-98a0-69013daa03b4"
        },
        "item": {
          "id": "34174944-ad81-467d-a088-7185e2b41b55",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "01bfa68e-7620-472c-9217-ae9bbfaa9b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa2baed-bcd2-4c56-bd1e-f4090f64fffb",
        "cursor": {
          "ref": "5726123b-9b7b-42ff-a6a5-6b78920586a7",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "43ee3f42-0281-4906-8050-8a279640229e"
        },
        "item": {
          "id": "8aa2baed-bcd2-4c56-bd1e-f4090f64fffb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b407af14-1207-4b80-98b2-e5400a1b4bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492cd0cb-25de-42a0-8ca4-29b17e4ecc9f",
        "cursor": {
          "ref": "2cddcf78-989d-4bbf-9807-a7c099990584",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "69e509b7-b61e-43d1-8783-8016ec44b69c"
        },
        "item": {
          "id": "492cd0cb-25de-42a0-8ca4-29b17e4ecc9f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "61fec075-8f1d-44e9-a6ea-6d43b02fa3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd64a4f3-5dd5-47e7-87ee-6dd9160be3c9",
        "cursor": {
          "ref": "f0e88d88-9d69-4fe1-97c5-5f0403e50e16",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "81f36d5f-fbb0-4c7f-906d-7fc5388b40ee"
        },
        "item": {
          "id": "fd64a4f3-5dd5-47e7-87ee-6dd9160be3c9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "787a14df-cd60-4738-8583-0f2926e1334a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d349296-6b77-4930-b66e-151026d3e58a",
        "cursor": {
          "ref": "846e5c5d-0a4e-4730-9151-3b107eedcaf0",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4040c1d1-44cd-43fd-a12c-00b742e522f6"
        },
        "item": {
          "id": "5d349296-6b77-4930-b66e-151026d3e58a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d707bb0d-6da7-4e62-9f9a-1fe1a3ecc3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4c1f4a-389d-463e-ae54-f20376dccce9",
        "cursor": {
          "ref": "601a2308-5a7c-4321-bdf5-a96312101ac0",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a9ef4d5b-75f6-4004-b020-c23b5a77f479"
        },
        "item": {
          "id": "ce4c1f4a-389d-463e-ae54-f20376dccce9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2a60771c-01d7-4480-9ca2-f7898be65f45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9413d6c2-ec54-4aca-a494-fa118823f551",
        "cursor": {
          "ref": "149fe8e8-d33e-4aca-83fe-502201437c1b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "68544797-48c0-4aba-954d-980eaa5a8761"
        },
        "item": {
          "id": "9413d6c2-ec54-4aca-a494-fa118823f551",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "274f9b5c-1eea-4270-bf66-4c91db845225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3beb274c-82c3-475e-951c-bf5a6ffae9c4",
        "cursor": {
          "ref": "ffa97932-1b3e-4eab-b6ec-b72abe51d9d5",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dc1ffe88-878c-4586-b5c3-50ac11a7eaa3"
        },
        "item": {
          "id": "3beb274c-82c3-475e-951c-bf5a6ffae9c4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "267c7577-4a63-42fe-9e0d-212f0b769fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "42cbaa82-5961-40e9-8e41-b4d71b7fb7ed",
        "cursor": {
          "ref": "3bc93db4-c6e8-4fd2-9557-f381c00a30b4",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ed55e433-6cf5-4b97-af74-ada05a76375b"
        },
        "item": {
          "id": "42cbaa82-5961-40e9-8e41-b4d71b7fb7ed",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "88bdb1b9-0f03-47c9-87d4-aa29d54186c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "cfdbdfab-9f61-48ff-b6d1-893ccd49fba0",
        "cursor": {
          "ref": "0b0c24bb-b8a3-49b3-96fe-6b69c9b72da2",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "99815852-107d-4a3f-984c-8816f43b4e57"
        },
        "item": {
          "id": "cfdbdfab-9f61-48ff-b6d1-893ccd49fba0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "451ce405-6f98-423f-b2f5-ab588cfb1c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e0637405-f6cf-4b73-8863-173e2b182968",
        "cursor": {
          "ref": "ed1c1933-122c-4115-ad0a-3dcc4df52cc5",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "87deb748-efdb-418a-86c6-0662d59fd23b"
        },
        "item": {
          "id": "e0637405-f6cf-4b73-8863-173e2b182968",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7ee956f9-86eb-40b1-b25f-b1cff9aba6d3",
          "status": "Created",
          "code": 201,
          "responseTime": 14814,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff05988-0bba-4ad3-bd1f-4bdc58dd7043",
        "cursor": {
          "ref": "a7f46b23-bd30-4740-880c-81a2ddc7209d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3f1f8dc5-8bd3-42e7-888c-07076bafb22f"
        },
        "item": {
          "id": "cff05988-0bba-4ad3-bd1f-4bdc58dd7043",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8080d9fd-ab36-4e72-a002-8d0fcb26336f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "87e489ba-d24e-413d-98ca-11f7cf1e8335",
        "cursor": {
          "ref": "7c122bff-41c7-43df-afe8-c06193769a30",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "620c6fff-8de0-4127-8c6e-5115967d78f0"
        },
        "item": {
          "id": "87e489ba-d24e-413d-98ca-11f7cf1e8335",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ed1d3533-e23c-4877-94a6-03449e4ad3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ecce795a-58a6-4a48-b54e-968fb6389275",
        "cursor": {
          "ref": "7bef4af9-ff8a-4796-b7d9-e28a90889428",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c6017e20-9645-4cea-8321-d9d047eb6b06"
        },
        "item": {
          "id": "ecce795a-58a6-4a48-b54e-968fb6389275",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8956d826-c3b6-4c5e-8c43-6b4b9457bd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bfc6fd-5f92-4de5-bb09-82337421bc01",
        "cursor": {
          "ref": "3c5eb0bb-5955-4d83-86b4-48c0feab91c9",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bcf72616-6bcb-43b7-b1ac-8c65cd3cdb18"
        },
        "item": {
          "id": "f4bfc6fd-5f92-4de5-bb09-82337421bc01",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b59c986e-2c4e-4b1a-ac04-e01d2f65b3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f162ba59-2c74-42e1-af22-16ef7c9369e2",
        "cursor": {
          "ref": "88fdf275-9df6-4353-b0b6-855fbd65f17f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b4633b29-b659-4a73-a890-15c0a87d32ae"
        },
        "item": {
          "id": "f162ba59-2c74-42e1-af22-16ef7c9369e2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ae1e0c46-446e-41ae-8a04-ba2208abcd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6649fd-98e9-4894-a81f-4943e9307652",
        "cursor": {
          "ref": "062c3bcf-0e31-4abf-8b11-a8d135452a67",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "94317bba-2a4e-490a-868e-0cacaa777b86"
        },
        "item": {
          "id": "1a6649fd-98e9-4894-a81f-4943e9307652",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7936ccf8-0ef7-4220-868d-be6e686a6496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a469fb34-ea0d-4ea1-8623-5d19d041348e",
        "cursor": {
          "ref": "e3668d62-d55d-4c85-a6e0-cd0018ef656f",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4ff9bf74-fa75-4f04-ab02-aa544f9c0f5c"
        },
        "item": {
          "id": "a469fb34-ea0d-4ea1-8623-5d19d041348e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8290779c-055d-417a-9291-bce60c513a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9417c0-1cef-4bea-bba0-47d501136841",
        "cursor": {
          "ref": "a422b4d1-3804-44f4-ae3c-6b6a15682f35",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fc55ca59-3656-4553-988d-8c96a7e302b2"
        },
        "item": {
          "id": "2f9417c0-1cef-4bea-bba0-47d501136841",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a90d29f9-75c0-450b-bb4f-f91ee602ec74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecd4385-7ef8-4868-90dd-3be16acf95b9",
        "cursor": {
          "ref": "ecc4b506-771f-4ce3-a9e6-39b2816f4a94",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ee0092fe-d008-4efc-8344-c93685dab925"
        },
        "item": {
          "id": "aecd4385-7ef8-4868-90dd-3be16acf95b9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "daa52632-f722-48ce-b099-936d2313d528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11319466-5287-4c79-8f97-6657c024c3c9",
        "cursor": {
          "ref": "b7225530-804c-43c9-a773-f4c6d18cc307",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dc8295d0-2733-4be1-a13d-345b4d620870"
        },
        "item": {
          "id": "11319466-5287-4c79-8f97-6657c024c3c9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "81c7b454-1eba-4816-af1a-7ece6c0d2bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8893dba-fd83-409a-a2c3-ccbc4a452467",
        "cursor": {
          "ref": "38d5486f-4464-4b0f-9b1c-11004b44d86e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2e0bee2e-34e5-4b2c-8389-60d092f55cb5"
        },
        "item": {
          "id": "d8893dba-fd83-409a-a2c3-ccbc4a452467",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "365aa04d-a193-4b9e-b7d2-8ceb17b3689c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ca2c1a-a73d-48a0-9a9b-64264cae24fe",
        "cursor": {
          "ref": "28da15ce-68fa-482c-8c35-84ac87c1a002",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c36f8dbc-19ed-4cf1-94a9-2e76649a3205"
        },
        "item": {
          "id": "92ca2c1a-a73d-48a0-9a9b-64264cae24fe",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7640bc92-633d-435c-b8ab-d0d5a7332a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9667de-ca87-445f-97e3-077a83cd2dbe",
        "cursor": {
          "ref": "a51c7758-c9c9-4508-9c6f-315c95193da9",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "81d0f207-fbba-4c0f-8bdb-0278c0383f21"
        },
        "item": {
          "id": "1f9667de-ca87-445f-97e3-077a83cd2dbe",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "15d51cb6-f2d6-4b60-b97a-7246b4cba930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed76ef6-c78d-4b0c-9ff5-1133eb501e0d",
        "cursor": {
          "ref": "29184fac-aac8-4d5e-9498-1e3d5fa9f773",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "12dbb3fe-1479-4e26-9fb5-c9c0d8774dd4"
        },
        "item": {
          "id": "eed76ef6-c78d-4b0c-9ff5-1133eb501e0d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "08e463af-71eb-4a69-8e04-5da8559d8c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d442267f-98be-4483-aef3-263de82ea305",
        "cursor": {
          "ref": "e514545a-cd7d-4965-bed8-e93560b4ceb7",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b62e03a1-cbc6-48dd-a917-941b6e466d89"
        },
        "item": {
          "id": "d442267f-98be-4483-aef3-263de82ea305",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4c137b1a-2693-4e0d-9108-3a987f0269e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b9667f-54c7-4b99-b1e0-e4a15d70073d",
        "cursor": {
          "ref": "8433f118-430f-4fa8-b071-941a0aace44a",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "80542b03-50e6-4561-a858-c48d6929c7ec"
        },
        "item": {
          "id": "57b9667f-54c7-4b99-b1e0-e4a15d70073d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "518b6da8-6d3a-4c63-8ad4-f69e112b11d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe691fb-976b-4c1d-9e59-cfa4f4028190",
        "cursor": {
          "ref": "ddabe980-e6e1-4711-9138-cad082fca72a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d1c64387-61ad-4349-9909-ee5e65c26d92"
        },
        "item": {
          "id": "dbe691fb-976b-4c1d-9e59-cfa4f4028190",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3120a1c4-deb0-4dd2-b5c9-26cce7828f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cbf53e-6bc7-47ef-8411-48c2828223db",
        "cursor": {
          "ref": "9e9e583f-9911-4273-949c-7ccac21d32ec",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "87f1b5fa-df70-48ce-a2e1-0e8f87681aa2"
        },
        "item": {
          "id": "e4cbf53e-6bc7-47ef-8411-48c2828223db",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4a73c985-eb85-4fe7-ad81-baeb29e5483a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4be25b-a678-4279-8df0-7fd1bf3a3fa1",
        "cursor": {
          "ref": "0246ffa7-a962-4e6e-94d9-45a04c848dbf",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3d242a8a-3c90-4524-bf6d-24825dcbda13"
        },
        "item": {
          "id": "ce4be25b-a678-4279-8df0-7fd1bf3a3fa1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5c944f82-9b3e-4283-863c-b4c4b5775e64",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "8d99b828-6565-4b7b-ad7a-97e1079ef9be",
        "cursor": {
          "ref": "91176c24-18bb-4f57-8b32-ee870853ecca",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e1b5780f-1f72-4efb-ba73-8c20228421dd"
        },
        "item": {
          "id": "8d99b828-6565-4b7b-ad7a-97e1079ef9be",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "50e668b6-1c45-41ba-9559-f1b22da6724f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7a106b-bb01-4b0b-b33b-3fb58f772244",
        "cursor": {
          "ref": "43105729-1a1a-4ef2-a0a0-0a75e15fa8db",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "85048990-0463-4f9d-a54d-0929b59b774f"
        },
        "item": {
          "id": "1b7a106b-bb01-4b0b-b33b-3fb58f772244",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0fcf4285-fe36-4567-a4bf-a93cc208fdc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9774f8a-1f17-48ec-b30a-f5363730993b",
        "cursor": {
          "ref": "5db014c7-94db-4fe2-8637-b7deb8ca2e27",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ac3f24f3-4864-46f5-9e19-767a92a40667"
        },
        "item": {
          "id": "a9774f8a-1f17-48ec-b30a-f5363730993b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "45c2d5f5-01b3-4f41-87e0-85993ac23f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88244618-1452-4d64-acc2-118c97d1baa7",
        "cursor": {
          "ref": "c3be8f91-4e79-4fd3-8014-621188711db2",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "eb9a47a2-e0af-4f3e-b687-2bbd90efc63a"
        },
        "item": {
          "id": "88244618-1452-4d64-acc2-118c97d1baa7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "311dc8f9-d99d-4e0a-a67c-fa44964b48bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284f57ec-5b46-4471-a65e-d02fb0e82cc7",
        "cursor": {
          "ref": "5a150e4d-3834-4a6f-8bc1-aba136ec7052",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "14f992a6-1dfa-4bf8-8ff9-ccada52f40e7"
        },
        "item": {
          "id": "284f57ec-5b46-4471-a65e-d02fb0e82cc7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "16a1d455-c4ca-497a-b391-fdabfde3bf6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4080107-65b2-41b3-acb6-69c1533f6a57",
        "cursor": {
          "ref": "614a3eca-64e0-4a91-8bd3-dd020152ccb1",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "98b84f68-807f-4a9b-a47b-f3f37dc52866"
        },
        "item": {
          "id": "d4080107-65b2-41b3-acb6-69c1533f6a57",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "21cbe221-68f0-41b1-8a39-15127b079686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d37e46-5acc-4c21-b01f-63167037c6bd",
        "cursor": {
          "ref": "122b63aa-c6eb-47d7-968c-73d32e20c7bb",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3600d4cf-747f-4cc6-a2c1-27ef235cf02e"
        },
        "item": {
          "id": "22d37e46-5acc-4c21-b01f-63167037c6bd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6a0dd35f-652a-453b-81d2-245ba90975bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b704ea-7c9b-476f-9787-c6a1161e59ed",
        "cursor": {
          "ref": "42d5bb1e-3f10-4499-b225-25804735c641",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6ea08055-2fd1-4a4e-90a6-59d0259dc824"
        },
        "item": {
          "id": "a2b704ea-7c9b-476f-9787-c6a1161e59ed",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "89d29571-49f5-418c-91b5-3398234900c1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "ba6c9f2b-0bc5-4443-8518-f16ddf661bc9",
        "cursor": {
          "ref": "2c223256-edf6-4520-a09a-348e561efd10",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6d337593-d8cc-4755-9112-a10b8b72fd5c"
        },
        "item": {
          "id": "ba6c9f2b-0bc5-4443-8518-f16ddf661bc9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8d515b4f-739f-43ee-aeb2-6fe25c834ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5697627-6d2a-4107-9170-385d82a30982",
        "cursor": {
          "ref": "8602dad4-3179-4dde-84ef-6030f177c994",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "81b630b3-56a0-43d0-85ed-125bd4c154bb"
        },
        "item": {
          "id": "a5697627-6d2a-4107-9170-385d82a30982",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f53272b4-92c9-4941-95c2-e9b5e3b93d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91952a3e-0f6f-4c74-97df-1d047038d249",
        "cursor": {
          "ref": "bb16ff43-f05a-4dfc-a8f0-e7e454937b3d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f033cde5-6644-4a0c-95f5-6fef2d35c8c3"
        },
        "item": {
          "id": "91952a3e-0f6f-4c74-97df-1d047038d249",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "55225d02-b89c-43a8-bee0-ff5f17f3032d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4eac25-a2a0-4254-a3a0-5d7c24ee6bc2",
        "cursor": {
          "ref": "07230ddf-d0f8-42e8-8f38-43e2848c10c9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2105cfb7-42ff-4174-86d5-8b8367251104"
        },
        "item": {
          "id": "1b4eac25-a2a0-4254-a3a0-5d7c24ee6bc2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ad7df2c7-e6ce-4f4a-9520-e40a7714ebdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f9ede8-e183-47c8-834a-f92ba727d276",
        "cursor": {
          "ref": "980721e2-90fa-480a-b137-44afb9ebbd34",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "66ff25db-f065-4ff6-bdb8-48cd93c049ea"
        },
        "item": {
          "id": "c0f9ede8-e183-47c8-834a-f92ba727d276",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ffa3def7-e7b4-4930-bcd8-d82b678a7cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8446f5c6-ed6b-4b51-9ac6-ab571d54155b",
        "cursor": {
          "ref": "01f5d4d3-e9f0-48ef-aa48-1a100d412c07",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "41890f36-b029-463c-84e1-afa3f8e777ac"
        },
        "item": {
          "id": "8446f5c6-ed6b-4b51-9ac6-ab571d54155b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9d582511-d969-42fb-aa8c-4a1490466362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8422a7-137a-4421-9f1b-d390ee26dcd2",
        "cursor": {
          "ref": "b70d933a-57aa-4a5d-8be9-702b28eacee2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "669976fb-cef3-453e-824a-b0eba34e21eb"
        },
        "item": {
          "id": "bc8422a7-137a-4421-9f1b-d390ee26dcd2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6f0b75f7-64bd-4e26-8033-0896e26e08e8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "73abe141-c06f-4dd9-a230-2494570aa564",
        "cursor": {
          "ref": "95b16718-af38-4f9e-add6-6f9e708c2ecd",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2fe28ed9-7f04-423b-bfff-d01e53e70a02"
        },
        "item": {
          "id": "73abe141-c06f-4dd9-a230-2494570aa564",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "65ddc2b3-4704-493e-8e2c-e06fdaa218ef",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "87932f3d-8e6d-48d3-983a-e3333a4f2a04",
        "cursor": {
          "ref": "f735836d-6cb5-4e17-88a2-901e25c130e6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "28fc3ef6-9594-49c4-b263-84e128d00e27"
        },
        "item": {
          "id": "87932f3d-8e6d-48d3-983a-e3333a4f2a04",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f44f99e4-ee59-4e63-8931-a9014475b5e4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "4753e654-6e33-44dc-82d5-2317df30fb1b",
        "cursor": {
          "ref": "433bb1a8-966a-453b-b705-545d511464a8",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e9ddbc77-dbae-4054-ae80-80f08243e4be"
        },
        "item": {
          "id": "4753e654-6e33-44dc-82d5-2317df30fb1b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a3553b03-4bd1-4c26-a691-68bd04065661",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "d54ce05d-e7f8-4669-98c0-c17967e7f761",
        "cursor": {
          "ref": "b0ce7d06-72e3-4ded-bfa5-8b6db77d0f99",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dda8feff-7e19-4a37-8993-2f2f5ee3786e"
        },
        "item": {
          "id": "d54ce05d-e7f8-4669-98c0-c17967e7f761",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1278100d-81b2-47c5-bafd-25a3c2c50517",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "8d225ab5-8b30-433f-9733-e27d96588661",
        "cursor": {
          "ref": "e1271c18-2a07-4808-a664-68a8734b3258",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "266ec09c-81a8-4856-b722-61a0b5c70ef3"
        },
        "item": {
          "id": "8d225ab5-8b30-433f-9733-e27d96588661",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b6f40a18-d6d8-4172-9dfa-87edfa0e74e5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "82556143-7e82-46a6-a094-ad2eef3f6c93",
        "cursor": {
          "ref": "c1db8565-336b-4829-9523-e5c97aa0554b",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0bf01200-c90f-4adf-99a1-62b8c509c044"
        },
        "item": {
          "id": "82556143-7e82-46a6-a094-ad2eef3f6c93",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "884a955d-b861-45fb-b732-c50d279a4836",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee697851-56a5-4829-88ee-4fa3e5072e93",
        "cursor": {
          "ref": "0a11827d-85bb-4b27-8311-ce5e0a645812",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "506e5d50-7125-4cef-90bf-4a8a44e37abe"
        },
        "item": {
          "id": "ee697851-56a5-4829-88ee-4fa3e5072e93",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "890ce7b9-7412-4abd-b805-f14aa884eaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fa7864-78e2-4297-b80d-63d3c4dc7247",
        "cursor": {
          "ref": "c8623b92-563c-490c-868d-f3423bc6c310",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9e531642-04d2-4263-8ce6-59295a9c7857"
        },
        "item": {
          "id": "56fa7864-78e2-4297-b80d-63d3c4dc7247",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8ce1277b-8f38-44fa-89ad-48c32592616a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072d7c85-ea56-4ad3-8bb7-de3dc221c2da",
        "cursor": {
          "ref": "6eb82805-042f-41ac-82e0-aba8a690f406",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fa5b6695-73ed-4119-84c3-89e7abd60f1d"
        },
        "item": {
          "id": "072d7c85-ea56-4ad3-8bb7-de3dc221c2da",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9da7346c-d6ee-4889-aa72-c8b33be7e8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995171e0-b7ac-4e55-87d5-5f23b888ceca",
        "cursor": {
          "ref": "c083a633-07ca-46a4-945b-c91f781ae535",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c996561d-06b4-44e4-b926-d88c5ec4b1a0"
        },
        "item": {
          "id": "995171e0-b7ac-4e55-87d5-5f23b888ceca",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3f22b9ce-1b0f-40fe-b5d4-4b7d90ff6607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caabe017-5df4-4e66-ab9e-c02ac06a5896",
        "cursor": {
          "ref": "293ae8b6-6f5a-4004-a002-e7c551bab527",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9d4fc159-3fab-4af8-a55b-0f080fb98b3d"
        },
        "item": {
          "id": "caabe017-5df4-4e66-ab9e-c02ac06a5896",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "066d67f8-5fd2-4e22-ae32-76abba965799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebf6f67-3657-4c3c-935f-450d5428f8eb",
        "cursor": {
          "ref": "029aaddd-65c4-4517-9c06-36d07d00b3b7",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a23f9016-6751-4c31-9875-e1df339af83f"
        },
        "item": {
          "id": "6ebf6f67-3657-4c3c-935f-450d5428f8eb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "75a56bda-841e-4fcd-bf3c-22052643c098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1a8002-a73d-43da-9bbd-8273c296150f",
        "cursor": {
          "ref": "24eb63fe-dc41-43cc-95c5-1bfe4142d669",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "116e1e61-edb0-4552-8872-aeab59b59b86"
        },
        "item": {
          "id": "aa1a8002-a73d-43da-9bbd-8273c296150f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f71404aa-8098-48c7-b2f2-fb4baaacbae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46103ef2-8b36-4f06-bd30-b767fb9f7b84",
        "cursor": {
          "ref": "13d2d0ad-b192-4082-94a3-bb349a6610d2",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8da5aba9-35fd-4d49-82d7-643007ffce42"
        },
        "item": {
          "id": "46103ef2-8b36-4f06-bd30-b767fb9f7b84",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4168cfdb-0c7b-47f4-bbec-d917fc7bf895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b147e7-ef87-42c6-a319-5e0b61412684",
        "cursor": {
          "ref": "66367c97-de60-4067-864f-a89095bbc023",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "eae57ace-e020-4494-8db1-0bf256e7a770"
        },
        "item": {
          "id": "87b147e7-ef87-42c6-a319-5e0b61412684",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e506db56-205f-4d23-8667-a949861d8b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4573022-1c16-48d9-bd8d-079ca6ef6b4b",
        "cursor": {
          "ref": "532f2eb4-a936-4fcc-b714-98e8bf7b9f7f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e963414c-4ad3-4958-8582-d3675fdb2a28"
        },
        "item": {
          "id": "c4573022-1c16-48d9-bd8d-079ca6ef6b4b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5b5640cc-3fbf-4774-961e-fbb7ad29909a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda05427-f062-4ee5-bf93-128c09eed72b",
        "cursor": {
          "ref": "98907fe8-2fdb-4355-987e-c105e1ba7437",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3e1e5abd-08ce-407f-be90-fd1db97a5fbe"
        },
        "item": {
          "id": "cda05427-f062-4ee5-bf93-128c09eed72b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "00c69fc6-b584-418d-8019-9d3c2a9726ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0c90d9-b216-4cd4-81c3-ddf20981f7e7",
        "cursor": {
          "ref": "1ec447cf-d232-4743-b511-739ebac40194",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b15bf37a-b2cf-4dc0-b8ed-8b302b37f1e2"
        },
        "item": {
          "id": "5c0c90d9-b216-4cd4-81c3-ddf20981f7e7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "785e195b-2934-43bd-a329-f11434f20215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da6e403-b4f7-4a6e-a44a-0df4b0a4b9b6",
        "cursor": {
          "ref": "99f70459-1bb9-4a01-9bf2-f2602340a915",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3554dfb5-8913-4b9a-b0e4-51def51b755e"
        },
        "item": {
          "id": "5da6e403-b4f7-4a6e-a44a-0df4b0a4b9b6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7a03995d-a83d-4e3d-a201-8cc544261cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bab0d0-c05d-4f4c-bed1-126bfa57e5d3",
        "cursor": {
          "ref": "9144b7eb-d230-4435-885b-8d206a7fed69",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3923031a-a5bc-40ea-851b-50db379f0aac"
        },
        "item": {
          "id": "81bab0d0-c05d-4f4c-bed1-126bfa57e5d3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a369ef26-ca30-4aa4-b0b5-c879c7435505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f3c8dd-e4f9-4837-bb8e-f0770a1ff7d7",
        "cursor": {
          "ref": "7b7e0579-786d-4f15-9a6b-147f5f4880ca",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a6eb6dee-ab47-4b84-b2f6-e384aa0cda00"
        },
        "item": {
          "id": "97f3c8dd-e4f9-4837-bb8e-f0770a1ff7d7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "25f27bc1-676c-415a-98ce-d5280d1a324b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cf9743-10b4-4757-b862-02414db61758",
        "cursor": {
          "ref": "af368669-bf14-496e-862a-7d243e6c1379",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "954dba4a-1ae9-45aa-b3ae-1af6953aaa05"
        },
        "item": {
          "id": "14cf9743-10b4-4757-b862-02414db61758",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "84b948d4-023c-4115-8f9f-c862e9d7a9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1af1bb-9292-4059-8a20-bb290c849814",
        "cursor": {
          "ref": "0d605844-5f83-49fc-a7bc-a1692738f935",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "93a5df34-c30a-40ca-b07c-6e209fd04a24"
        },
        "item": {
          "id": "8f1af1bb-9292-4059-8a20-bb290c849814",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f854cd36-c9ca-4586-812f-6c92b0a9e2e4",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "779f7519-ebd7-43ea-b455-930853fa8c86",
        "cursor": {
          "ref": "bc704d32-95f7-4749-98fc-a3e399eb5afc",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2dd3b9e3-08a9-4456-b0b2-d9570bea41fb"
        },
        "item": {
          "id": "779f7519-ebd7-43ea-b455-930853fa8c86",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b8fdf654-5d97-4855-983b-efaf0ec53109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d057ca53-7f9f-4ef3-a77b-9991c473a937",
        "cursor": {
          "ref": "4e88f041-f82e-4b55-ba96-339fcee18073",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "71f63c96-41d1-4fbf-a13f-95e0724aa8f9"
        },
        "item": {
          "id": "d057ca53-7f9f-4ef3-a77b-9991c473a937",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8e4e1c3e-c7b6-4017-852e-4554a246690f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1251eec-3dfd-49f3-89f4-b230e6b1159f",
        "cursor": {
          "ref": "eaf2c2f8-7b47-4758-a7e7-36a2a9379c12",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "431163ab-db2a-4ed0-b543-f86791b1a2bb"
        },
        "item": {
          "id": "c1251eec-3dfd-49f3-89f4-b230e6b1159f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bebc422a-bbe2-46e5-8f4f-8bfce2c064a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a308ea04-9f3e-4819-ad67-6c722b1e4be1",
        "cursor": {
          "ref": "6a86c229-19ab-498d-8481-5ed3b6704b44",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "91fd776d-44ec-4508-89a6-9be31e10cf74"
        },
        "item": {
          "id": "a308ea04-9f3e-4819-ad67-6c722b1e4be1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "798d2663-43b4-4a6e-bdee-660cd9dfbf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698f9dfa-d06f-4738-b905-47071fba2077",
        "cursor": {
          "ref": "823078fa-3bf0-4af1-a3de-f539c59f84b9",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fe43a00d-6ecf-4ace-ae9b-a933201a7a09"
        },
        "item": {
          "id": "698f9dfa-d06f-4738-b905-47071fba2077",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8fe9f6db-c40d-4c25-b840-3a0d1e97b3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0041e59f-d6be-4ad6-a208-0df342f795cd",
        "cursor": {
          "ref": "64dcc060-ea79-44e2-acf7-603624e1d741",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a3642858-4927-40c1-9134-69467413d9a4"
        },
        "item": {
          "id": "0041e59f-d6be-4ad6-a208-0df342f795cd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "562987c7-cbed-4ddf-b471-45c5a9a25eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f516b7e5-e3bb-4339-bc00-c1204126c634",
        "cursor": {
          "ref": "804acb67-5674-40c7-9285-71d582267777",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a6061674-bb0e-4373-9288-4844193ab057"
        },
        "item": {
          "id": "f516b7e5-e3bb-4339-bc00-c1204126c634",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3f8ed866-6575-473f-95d1-558683af1791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ead3c9-420a-466a-9024-6d4df542b526",
        "cursor": {
          "ref": "f6c63bc3-ecb1-49ac-8ce5-cbac69dde029",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0d25b01a-db0b-4d3c-b20b-678fcd9c5543"
        },
        "item": {
          "id": "00ead3c9-420a-466a-9024-6d4df542b526",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "52cdd526-8fb0-4525-a89a-a5d5208d68fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f11ec1-fd2e-4a92-8621-a62e099d347a",
        "cursor": {
          "ref": "a42f2f02-c08d-4833-804f-46b0d631e1f8",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "eb44228a-f2aa-4aec-8dca-f8e502b65309"
        },
        "item": {
          "id": "58f11ec1-fd2e-4a92-8621-a62e099d347a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a69b828d-5877-4a18-ae55-404bcafc9602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ca5c9c-360e-4213-8e08-0ef5870b8bdf",
        "cursor": {
          "ref": "200b405a-6cc2-400e-ac5f-bf7b9bae9a63",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "32be0448-09e6-4150-b5fd-dea3c0db9562"
        },
        "item": {
          "id": "78ca5c9c-360e-4213-8e08-0ef5870b8bdf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d776cb36-543e-4f90-ae98-5c83d1346210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1009808c-e632-4a59-820a-e8a2fff04fea",
        "cursor": {
          "ref": "bedbe482-e200-4004-b092-fcf6ae4cd9b4",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2ee58d47-a11e-41a6-b29f-38c0763780e5"
        },
        "item": {
          "id": "1009808c-e632-4a59-820a-e8a2fff04fea",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "39f19dd5-24b1-449a-91ce-42a508844c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eea055e-8bef-45ff-be74-f2f39561f3a9",
        "cursor": {
          "ref": "6508a8cd-0f55-4841-af39-38aea85fc604",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3055a37e-678a-4230-8e44-a5057b84ab92"
        },
        "item": {
          "id": "8eea055e-8bef-45ff-be74-f2f39561f3a9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bb0b0416-d265-48be-af07-25524962c962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e212dd-44d2-410b-b7c4-4fbd14729476",
        "cursor": {
          "ref": "431fcf63-b799-4609-821d-9af8790783f2",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1d6b50b1-ab23-422a-9d84-7ef7aec1ccb2"
        },
        "item": {
          "id": "86e212dd-44d2-410b-b7c4-4fbd14729476",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1fb5f2f2-611f-40d9-8b88-b7dd8ca490ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057ef8d7-b66a-465e-b824-9d2937fd8724",
        "cursor": {
          "ref": "4bc7c241-922a-4b69-93ce-2a1bbecd1d49",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2ca60a26-59b9-4722-a725-c1a6c722ec43"
        },
        "item": {
          "id": "057ef8d7-b66a-465e-b824-9d2937fd8724",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "137776a0-c601-452d-8ea7-69011ab73f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba6d4ac-23fa-4876-b211-2f24c3751986",
        "cursor": {
          "ref": "46adc5a0-3541-4728-a82b-4e844733ccdd",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2ccc3a58-b9a1-4352-b2a0-cf9816c1f865"
        },
        "item": {
          "id": "cba6d4ac-23fa-4876-b211-2f24c3751986",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "71e68fdd-783f-4644-a3d2-ac2a1568ea3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06575c75-f324-4027-8058-c4f4305bc1a0",
        "cursor": {
          "ref": "33467011-cff4-4afa-9643-88d1f58af840",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6eeea719-92bf-43c2-a0b8-0fa3a211b9e1"
        },
        "item": {
          "id": "06575c75-f324-4027-8058-c4f4305bc1a0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "53ba79d3-2330-446f-bedf-f4f573d5b2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbdbcdc-2c6d-481c-b2f4-1f59ad1c923b",
        "cursor": {
          "ref": "e8ff57e1-caaa-4bb2-ab16-e866da105c00",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "09cafad6-dc81-4401-91d2-b2d733b97de2"
        },
        "item": {
          "id": "5cbdbcdc-2c6d-481c-b2f4-1f59ad1c923b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e46084b0-0968-460d-8175-c94e745bc81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09523a9-dc5c-45d9-9ae2-51ef4f36855a",
        "cursor": {
          "ref": "ab065f07-869e-4e76-aaf7-b491441be9c4",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d180f1e2-0a42-498f-970b-8667e9a5296f"
        },
        "item": {
          "id": "e09523a9-dc5c-45d9-9ae2-51ef4f36855a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8d45cca7-143c-4e23-a7a2-5c43480c8960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030546e5-c45e-4cd0-b867-c6694697b76d",
        "cursor": {
          "ref": "cbafbd4e-95e6-47a7-9fe1-70d7ccd46820",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d2cabb8e-84dd-4753-93f0-97d86903fc23"
        },
        "item": {
          "id": "030546e5-c45e-4cd0-b867-c6694697b76d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c5b8992c-8ca2-4f92-993f-44f3265e72aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfce0b63-ffe4-4f56-80a1-6e7cf79dbbc2",
        "cursor": {
          "ref": "4db3400b-d153-4c16-a533-69f8542bf558",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7bdc57b9-2114-47cc-a5b6-cd68105c7ba3"
        },
        "item": {
          "id": "dfce0b63-ffe4-4f56-80a1-6e7cf79dbbc2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "681a5faa-dc17-4b78-8cb5-7c1319c4378f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a66ee53-0e57-4358-bbe4-9042dfef88be",
        "cursor": {
          "ref": "eac22b3b-ccf7-4b44-916c-154ea6b9933d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1703a973-39c4-47e6-a996-771fcbc314bc"
        },
        "item": {
          "id": "8a66ee53-0e57-4358-bbe4-9042dfef88be",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f9fd17a4-8c11-40a1-b936-fd44471e7eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597afa65-7606-4764-bdeb-af19c5c54ab7",
        "cursor": {
          "ref": "91f62079-55b7-4bb4-9669-9c9439e6e151",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "88174be3-9833-4929-9e22-6464cc08972f"
        },
        "item": {
          "id": "597afa65-7606-4764-bdeb-af19c5c54ab7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7f76ce47-faa0-4164-86e0-133e653ed8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855cb28a-d25f-4e6a-bd90-dad3c9f1350f",
        "cursor": {
          "ref": "113be030-f4fd-47de-9b3c-e9c9821890b4",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e39a14ec-c045-4c80-aed5-f6cbeeaeaf55"
        },
        "item": {
          "id": "855cb28a-d25f-4e6a-bd90-dad3c9f1350f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4a466585-1156-40f0-afa5-0b7c74b7d733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3292175f-800e-4b46-ac6f-7595d7441b0d",
        "cursor": {
          "ref": "00d8992f-e6b4-437a-aca4-d5e0a1b8dd42",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cef131c4-5698-4e67-96ca-b78073072db1"
        },
        "item": {
          "id": "3292175f-800e-4b46-ac6f-7595d7441b0d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c514d5c0-b8ab-4df5-af46-41a2049e3c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10a5cc3-3930-4f37-82b3-f665b11f8761",
        "cursor": {
          "ref": "bbb611f3-e3cb-49ce-9c9c-60234c3288dc",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4f23900e-4b98-45f1-bf78-1dd86cc6577e"
        },
        "item": {
          "id": "d10a5cc3-3930-4f37-82b3-f665b11f8761",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7f202dfe-d88b-4e95-a44e-5215c57e9e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b532cdb-2e95-425d-9976-1fb001820ab3",
        "cursor": {
          "ref": "9157f3c1-b725-4c9d-b79d-bb2bede77e40",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d1ca5124-ab67-484a-8433-f606524657c3"
        },
        "item": {
          "id": "8b532cdb-2e95-425d-9976-1fb001820ab3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "35e243e3-de3c-42c4-83bd-019585db74df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c42aefd-cdd3-4228-99e4-e503c2d500c4",
        "cursor": {
          "ref": "46d83cf3-9e56-4b48-97f4-f15152be2669",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a9827ec9-8539-445f-942d-1bf71c662e50"
        },
        "item": {
          "id": "7c42aefd-cdd3-4228-99e4-e503c2d500c4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b1e9ce89-4b9d-4cb6-aa0c-76d6c6f79d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9557cef6-b3f1-4523-a609-54079445fb65",
        "cursor": {
          "ref": "269ff341-cc2a-4e37-b37d-f778ccbdfe5b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "02c90790-4e30-4efa-b32b-8c8fa3619e6a"
        },
        "item": {
          "id": "9557cef6-b3f1-4523-a609-54079445fb65",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "77529cbf-78d1-4431-81e1-b4cb2c91d8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b0720e-20ef-4873-bc52-e76361ede69e",
        "cursor": {
          "ref": "1fdeaf9f-318a-465c-9163-0259b2608916",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "23c70884-ab7f-49b1-80c7-54195094b672"
        },
        "item": {
          "id": "a2b0720e-20ef-4873-bc52-e76361ede69e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "05100f9d-9eb7-4ebb-81d8-0b433ebc66ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e698fd94-6a1d-439d-8cd4-7810a0445193",
        "cursor": {
          "ref": "fb27a59c-a90a-4a85-a7f2-0e7d744fc75d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "19f956e7-8757-4d7b-80c1-172c3b9b4733"
        },
        "item": {
          "id": "e698fd94-6a1d-439d-8cd4-7810a0445193",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "742c278e-bd59-4951-8a05-ae1d9ec979e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e819d5c-85ed-46b2-af31-d63cbc491181",
        "cursor": {
          "ref": "d98d2874-d00c-46fc-ab21-64996d354382",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7a839426-9c0b-47c4-8ab5-5ce884c48f4d"
        },
        "item": {
          "id": "4e819d5c-85ed-46b2-af31-d63cbc491181",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "707df0ed-c21b-4fca-880b-390390452fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9361da78-a117-4513-b67c-97058014c345",
        "cursor": {
          "ref": "600a3d5a-a5d8-4e39-abbb-a1ad23833c54",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0b095ce4-cbb7-44cd-9c0e-e6188620f563"
        },
        "item": {
          "id": "9361da78-a117-4513-b67c-97058014c345",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "74e8c2f0-a3d9-4d07-af3a-d98ea0ac9be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcf5673-a443-46e7-8416-0eb18d3e4cf5",
        "cursor": {
          "ref": "c28e736b-5155-4564-b8d2-7584a69ec0f0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c5e8dff8-f929-4092-9c7d-ec1ab3fe62a2"
        },
        "item": {
          "id": "bdcf5673-a443-46e7-8416-0eb18d3e4cf5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ec175ee1-10de-4691-b999-48d9e2ec40c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bbbe10-8da4-4d84-b740-6e8c0986e7c1",
        "cursor": {
          "ref": "02bb4686-2b09-4ac6-b0f1-85a06693309c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5d56a8d8-83b7-4b82-9320-ac620b0d8ce1"
        },
        "item": {
          "id": "45bbbe10-8da4-4d84-b740-6e8c0986e7c1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5c523f39-606c-4f84-a5c8-6a01a36c8a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd04cda9-7afb-4b32-8de5-983f89d3961d",
        "cursor": {
          "ref": "d56ac423-2950-441a-8a57-23d2e7260ddc",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "009c541d-f8a9-4b8c-af74-cd097ea86e25"
        },
        "item": {
          "id": "dd04cda9-7afb-4b32-8de5-983f89d3961d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1bcffba8-1c90-4691-b39a-36df33889bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7e8445-fdaf-426d-99ee-302816841597",
        "cursor": {
          "ref": "6d679c03-b169-43aa-a729-089a83ac14bc",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e01fefa0-48d9-4ec1-8eee-5a5560ca5057"
        },
        "item": {
          "id": "0c7e8445-fdaf-426d-99ee-302816841597",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6cf454cf-8f20-4405-9f11-c189cd5be16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c665a4-5701-4d6e-b874-e7eece6920b9",
        "cursor": {
          "ref": "8181759d-58ad-44aa-9168-1fd3d805097a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2b148f87-c960-4d4d-a281-7454605ec5d0"
        },
        "item": {
          "id": "76c665a4-5701-4d6e-b874-e7eece6920b9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7a84e45e-a6a0-40db-9d07-042f07b7073e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035cd74a-b0c5-42bf-bcd5-98ff364b325f",
        "cursor": {
          "ref": "dfd43040-1b80-4345-a124-aef2819335e9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d105dbef-b791-496c-856b-0a51b607cc8b"
        },
        "item": {
          "id": "035cd74a-b0c5-42bf-bcd5-98ff364b325f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4e3d019d-899e-4f5e-8f4d-3ce94b8c6c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2707a514-d331-422d-aefe-31c37d5b14e7",
        "cursor": {
          "ref": "6554f941-0194-40bb-bc2d-1c5527b65a4e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1d7f1d04-0cd6-4620-a78b-e4fe50cde29c"
        },
        "item": {
          "id": "2707a514-d331-422d-aefe-31c37d5b14e7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "445246fc-e006-4296-a340-8ad217e63e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f2f0d9-229b-455c-b992-15d4ca2a77b8",
        "cursor": {
          "ref": "1031e558-fc91-44c9-9d17-94db3d879c9a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "61a85c88-477f-4fe4-bd35-2aa6246f88bb"
        },
        "item": {
          "id": "c6f2f0d9-229b-455c-b992-15d4ca2a77b8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "afd8a15c-a1a3-46e8-a186-db46f5e9789e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a865fa24-88c2-4e97-a386-6f75dbaeb051",
        "cursor": {
          "ref": "eb987ab1-6ef5-4dde-af84-eccbc119b7de",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6d3fa142-ec8f-436a-b67c-3e157ab62181"
        },
        "item": {
          "id": "a865fa24-88c2-4e97-a386-6f75dbaeb051",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9b360d0c-acfa-412e-927b-6e303fa8a4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3725265c-ceb5-431f-b846-617b269f14e0",
        "cursor": {
          "ref": "4e769500-249c-4559-9b2a-eac3c416607f",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "109ac22b-1926-4424-8653-26b12a46c8dd"
        },
        "item": {
          "id": "3725265c-ceb5-431f-b846-617b269f14e0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9f4d7f4c-0850-42de-8674-d19e96011590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0190e991-6e88-4edc-8293-37124858f710",
        "cursor": {
          "ref": "5679a198-2b04-4bb9-8abc-f25f74cb9227",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cc83b54b-67b4-4302-89fb-b3d4ff372890"
        },
        "item": {
          "id": "0190e991-6e88-4edc-8293-37124858f710",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "34608ae6-8506-437f-b705-9bd2fa0308d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b92253-d18b-472a-ae53-4e68919e082e",
        "cursor": {
          "ref": "2908cb4b-d246-4f2a-910a-aa8dd70678c0",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "db77dbc3-b9e5-432f-934f-e8ff2763e2e4"
        },
        "item": {
          "id": "93b92253-d18b-472a-ae53-4e68919e082e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1a93940d-ef01-48d3-9504-b99cba96192e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c789b45-283b-49e9-aa0b-c9485ca8f3f2",
        "cursor": {
          "ref": "2414e86f-4830-46a3-b6ec-2334c6aa34cc",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e3e42c6e-3a10-4b2c-9c8e-46ca01f7a290"
        },
        "item": {
          "id": "9c789b45-283b-49e9-aa0b-c9485ca8f3f2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "428f5349-c8a1-40bb-afe7-651a9b3c7b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e15d21e-7acb-486e-b707-0fe14d4e9d2d",
        "cursor": {
          "ref": "dc0c09c6-cad6-498d-9fdc-f9c91637d8b2",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "78182933-96af-471e-af5f-b2a68a0f5329"
        },
        "item": {
          "id": "9e15d21e-7acb-486e-b707-0fe14d4e9d2d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fb1fa7e3-8048-4da6-aa26-f377044d9b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b66719-4b31-4eee-af3f-fc3542a704e2",
        "cursor": {
          "ref": "c9fdaa29-5309-4229-8b9e-149d4383ce82",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b8f11262-10c1-4c75-a7c5-1bb75ff630c7"
        },
        "item": {
          "id": "15b66719-4b31-4eee-af3f-fc3542a704e2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "94aec500-aed6-434f-b90c-911022c7db1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b6c655-78ab-4ee2-9089-49558a6dfdee",
        "cursor": {
          "ref": "dd07742d-d47e-4f61-b954-15ce3fe429c3",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5bb834f0-4fc3-4444-881b-0601fc948c57"
        },
        "item": {
          "id": "a8b6c655-78ab-4ee2-9089-49558a6dfdee",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a7f6a00a-d216-4fec-bbd7-6aa2432fbf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd7ac40-ff81-427e-a832-888086e8dd4f",
        "cursor": {
          "ref": "3b72ae64-db1b-4032-94fb-94cbd263ef33",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e45a028e-3485-48f8-a162-b85a5cc4fb48"
        },
        "item": {
          "id": "6cd7ac40-ff81-427e-a832-888086e8dd4f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6af2520b-d213-4899-bc76-f23e1d5e1c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461391f0-76e2-4f56-ab83-e9a553a875c7",
        "cursor": {
          "ref": "558f58b4-39b5-4252-b87a-c92e7c35932a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "12d6fcd8-e9ea-4fce-a02f-99429d7f1703"
        },
        "item": {
          "id": "461391f0-76e2-4f56-ab83-e9a553a875c7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "92d235de-3e8c-499a-a4db-be6fecfc8351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34c1d99-0882-44e1-acd0-72a58f74f89b",
        "cursor": {
          "ref": "ce8f98fe-1e06-4f6f-8595-235949d546e6",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2c1f2133-ac36-45ed-84c9-730825a87f67"
        },
        "item": {
          "id": "c34c1d99-0882-44e1-acd0-72a58f74f89b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b944f406-7010-4eb5-8127-cd638c3947b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130949aa-8aca-4b1e-b45b-e200a1c1b687",
        "cursor": {
          "ref": "1c992450-fa2f-437c-8d27-8ce7920bec95",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bd6a0171-2633-41a5-bc9c-b9e26aea33b3"
        },
        "item": {
          "id": "130949aa-8aca-4b1e-b45b-e200a1c1b687",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "30d5fb33-ee10-4b09-b837-9ed501255bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfc8b84-0c58-4997-afc3-059c20c7f759",
        "cursor": {
          "ref": "a3141152-f728-4523-b53d-ce4a67bc6842",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f146b2db-0f1b-4c31-abe7-f22be8443905"
        },
        "item": {
          "id": "3bfc8b84-0c58-4997-afc3-059c20c7f759",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c65a6d0a-f384-443b-9a51-b31b57fe027c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e98256-880b-4922-8776-eb06461ccc27",
        "cursor": {
          "ref": "6e1b9bc4-892b-4913-ade6-b9428ec7ba0c",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "67039322-689d-4fd8-ad44-7d08ea876cb4"
        },
        "item": {
          "id": "c9e98256-880b-4922-8776-eb06461ccc27",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fa4bc768-9ab1-46aa-b263-68d234c1f476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b42fc9-4902-4615-82b8-4a999e490b4b",
        "cursor": {
          "ref": "84b9ee07-9bd7-4cf9-96c5-183a4c154348",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "81511703-ddc9-4936-8052-4dde3918e958"
        },
        "item": {
          "id": "a7b42fc9-4902-4615-82b8-4a999e490b4b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5f17bfaa-06c6-4c08-994e-17e1fd2764a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd65f4e-35e7-4950-a832-f8406ffdff8b",
        "cursor": {
          "ref": "e492e365-8622-41e1-b2bb-7d0d81fafe31",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2e2d3c2c-14a4-4046-8639-31dfa3c2714a"
        },
        "item": {
          "id": "0bd65f4e-35e7-4950-a832-f8406ffdff8b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b4b92dcb-540f-4ac2-8b20-ecd00a98168d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ee2e64-11e5-43f0-8c1a-1b9ba5a67976",
        "cursor": {
          "ref": "3bd3fb8f-89c0-4d35-be90-a52028ba7fac",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "83b93676-3e17-4ddf-96ce-ebf6d798587b"
        },
        "item": {
          "id": "a1ee2e64-11e5-43f0-8c1a-1b9ba5a67976",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "01a41637-cfd1-4ed3-a66d-fe9e084d211b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51849dd8-3d47-4e6f-9807-f297c9c0dcf7",
        "cursor": {
          "ref": "e5fe61cb-1861-43ae-b965-24973177f242",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "73f7608b-0d77-445a-a660-3137c1f302e6"
        },
        "item": {
          "id": "51849dd8-3d47-4e6f-9807-f297c9c0dcf7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b2b1268a-b902-4257-8b1b-c36d119baf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557a044e-b5cc-4dfd-b7f8-bc1308e53b42",
        "cursor": {
          "ref": "af222ef3-28c4-4fab-9f6c-9e62e2ea15ef",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6a6b1f00-3cd6-43e3-bbc8-537d87877951"
        },
        "item": {
          "id": "557a044e-b5cc-4dfd-b7f8-bc1308e53b42",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fda0bfb3-bb15-4e94-b1bf-e913e16691c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcfb82b-9614-470f-b94f-ea3681d67f28",
        "cursor": {
          "ref": "ccec3c08-dac7-4a3f-9179-de49469d1b8a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4e353e92-8d2d-4bc9-882f-e8f8df2405d6"
        },
        "item": {
          "id": "6dcfb82b-9614-470f-b94f-ea3681d67f28",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5555d0a8-205e-4d13-9804-44a76c08e15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8544d6b6-00dc-4397-91d6-99bb5992137d",
        "cursor": {
          "ref": "bff470d1-5fec-426c-8a83-cc218d05c55a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7795b3c9-6c74-4640-89ee-5277530219d9"
        },
        "item": {
          "id": "8544d6b6-00dc-4397-91d6-99bb5992137d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "27baeb6d-390d-4c23-912c-932bd433224b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d261e8-a52e-46f2-b238-135b92aec6ae",
        "cursor": {
          "ref": "09b95121-468c-44fc-b06a-89dcfb4f438a",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4296e982-aff3-4ecc-ab88-67f9cf99bbf4"
        },
        "item": {
          "id": "59d261e8-a52e-46f2-b238-135b92aec6ae",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f52aeb68-670d-4ee0-a2b4-563b78663480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a72a34-9035-48ef-af27-3c6f11fd281c",
        "cursor": {
          "ref": "5c8cfb7d-2737-4240-bf1c-c35158ea6127",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2ecfe09e-9306-4dd2-b8e8-7da70f519013"
        },
        "item": {
          "id": "d9a72a34-9035-48ef-af27-3c6f11fd281c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ecdea4a0-b7b0-42ff-b511-60e03a52b669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09164b12-8d16-40d7-8e13-e66b7d0189c7",
        "cursor": {
          "ref": "df91c52a-e1b5-4df5-9ee2-a351c457f56a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e824a5a2-f606-4707-86d1-36f2ec477ac5"
        },
        "item": {
          "id": "09164b12-8d16-40d7-8e13-e66b7d0189c7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6a1151f0-2e2a-4cb0-a5a7-ffa858992a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d271c50b-1de1-4c26-9afe-7d786a7da529",
        "cursor": {
          "ref": "91515f0f-98cc-4ac5-9b37-fcf59b315f22",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "12a2c975-c27a-4290-831e-c8988462603d"
        },
        "item": {
          "id": "d271c50b-1de1-4c26-9afe-7d786a7da529",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7afe443b-6702-42a3-9c8a-71178340713c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ac35b2-2927-4dc7-925d-64849a876bb8",
        "cursor": {
          "ref": "e6b5a560-beee-434e-badf-2b0a995b652f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c4de2220-1d20-494c-a6b2-3800e7cd55c1"
        },
        "item": {
          "id": "64ac35b2-2927-4dc7-925d-64849a876bb8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e8393c32-2e3f-4bfc-b96d-70070b306aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474c8a15-cee2-4df4-bbd9-3064731c2ff2",
        "cursor": {
          "ref": "7aa79287-e778-407b-a348-51c8a814b5db",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "aac0ce5a-eb1c-40de-8e04-161bc859ae8a"
        },
        "item": {
          "id": "474c8a15-cee2-4df4-bbd9-3064731c2ff2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c435c4d1-6f4d-4005-be5a-4c82d75ea9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f71509d-d0d9-4b6a-8397-9fcc88bfed97",
        "cursor": {
          "ref": "462f3414-bb27-4813-95f3-33a03a055473",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8085bcdc-0ea0-45b0-9b79-64cb87f66b8b"
        },
        "item": {
          "id": "4f71509d-d0d9-4b6a-8397-9fcc88bfed97",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "08603b92-482e-48ec-b131-339d176a3cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af5496d-dbb6-4dcf-90e0-69183c21c545",
        "cursor": {
          "ref": "6123c758-74b8-4f85-9af7-540e8726e4d0",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a1393c92-3cfb-4e7a-99db-95ec8b898634"
        },
        "item": {
          "id": "6af5496d-dbb6-4dcf-90e0-69183c21c545",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "dfbbc554-a964-4bf5-975f-165ce8aa361f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d18940-beab-4d43-a705-4c4b02e4c408",
        "cursor": {
          "ref": "9c370c2c-8f18-430c-8c31-0617753950d3",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cb2c082f-d86b-40b0-855e-0c66246661bc"
        },
        "item": {
          "id": "d2d18940-beab-4d43-a705-4c4b02e4c408",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4694fef1-c9a6-43d0-b9d4-7b692bf9f710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90734be-3a78-41a1-88d3-9bb3efa4e418",
        "cursor": {
          "ref": "498a9a18-375d-4344-a4dc-55ef4d4e7997",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9b1b94dd-b7c4-4a6a-8eb2-2e34f64d54a7"
        },
        "item": {
          "id": "e90734be-3a78-41a1-88d3-9bb3efa4e418",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bd9fc416-75c7-42f5-ba8f-a7a7c58f6d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab433e3-2e52-4130-8498-74b86daed819",
        "cursor": {
          "ref": "289bc4fa-4963-4f52-ba9c-325556cfa5af",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "10a9b2ed-f881-46d0-944f-b8d92325ecc5"
        },
        "item": {
          "id": "dab433e3-2e52-4130-8498-74b86daed819",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5d102e57-00eb-4973-8cf2-9645fd5414a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2868cbe2-33fb-48f4-b4f6-7d99580b8c1f",
        "cursor": {
          "ref": "e885eca9-565f-41f9-ad67-f880c88fc8dd",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cf93c885-92c1-4586-bfc2-5da10c66c1ec"
        },
        "item": {
          "id": "2868cbe2-33fb-48f4-b4f6-7d99580b8c1f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0b486045-6665-46f7-8235-898677d4854f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265cb4ae-2c57-4f4d-9c67-712c7cc30fe9",
        "cursor": {
          "ref": "9b36d37b-c77b-4f03-9b71-aa59da0db7c3",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1d10fe5f-2f94-4530-b7e9-63c602d8f269"
        },
        "item": {
          "id": "265cb4ae-2c57-4f4d-9c67-712c7cc30fe9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5131aa3e-835b-4746-9acd-40319d35efb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51afd81e-9ce5-40d7-af0d-839f208e8320",
        "cursor": {
          "ref": "b9e06944-e49b-416f-95f0-5ffd86074855",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "00978ee5-8084-45ee-9809-f332ba0f3d38"
        },
        "item": {
          "id": "51afd81e-9ce5-40d7-af0d-839f208e8320",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "71ffb7a3-eed1-4920-9af7-9ba8be14c6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4584c826-58c5-4e9d-89c2-039c05900e28",
        "cursor": {
          "ref": "a122e618-8ac8-4bc4-9d08-651670680a6a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bf51ea69-18f3-44f4-a13e-b9cf0b32cbac"
        },
        "item": {
          "id": "4584c826-58c5-4e9d-89c2-039c05900e28",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "152ec8ef-7e2e-4707-9bfc-f685213517d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805eb41c-0729-4482-80c0-b93b8ce4cf57",
        "cursor": {
          "ref": "a0d3955a-1589-437e-8d33-25d9cfc3c5c0",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c28db894-7be3-4eea-ad08-6694f810f18c"
        },
        "item": {
          "id": "805eb41c-0729-4482-80c0-b93b8ce4cf57",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0ca08fdb-8e92-406a-b7cc-5eaa0941d5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2448a2-2449-4814-ae0e-6924513608a7",
        "cursor": {
          "ref": "44468b66-b6a1-4aa6-bb71-694e459634dc",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9be106b2-c29b-4bb5-9cee-2498de7e5a56"
        },
        "item": {
          "id": "be2448a2-2449-4814-ae0e-6924513608a7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b7c79ac6-73fe-4d7e-91df-247182e3d059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0824868-ffb4-460b-9c30-81f36b2668d6",
        "cursor": {
          "ref": "d726945a-1e6a-4871-b3ef-33e398ffdb7b",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bb812888-95b2-4328-8b85-2a0f8eb2bd61"
        },
        "item": {
          "id": "d0824868-ffb4-460b-9c30-81f36b2668d6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f02aae4f-758b-483b-bfa3-a81e6f24a6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba1c243-8772-47ee-8df0-67b19921a97b",
        "cursor": {
          "ref": "034496b7-9b88-4ab8-9610-5a4182400c85",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3a845872-0209-4981-8759-c9e51a9296d5"
        },
        "item": {
          "id": "fba1c243-8772-47ee-8df0-67b19921a97b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "12d283a1-ad7e-4603-bc93-50f74bbc76b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f91deda-f8cd-4efb-9dd7-6c3ff37d2d1d",
        "cursor": {
          "ref": "cdeb74fe-2eaa-4309-a1eb-903cdc055182",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9758e628-537c-42e4-ade2-02e0a6d32f2a"
        },
        "item": {
          "id": "5f91deda-f8cd-4efb-9dd7-6c3ff37d2d1d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "54871c3c-354b-4a3d-bd8e-257ed49f5e38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71c2b76-fa78-4d89-a0a3-fcefabe19c36",
        "cursor": {
          "ref": "840d62c2-1d0a-4fce-9150-b56c6f10b82f",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ddf5eaa2-6c72-457c-aefc-1bb92196c0a8"
        },
        "item": {
          "id": "b71c2b76-fa78-4d89-a0a3-fcefabe19c36",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0255fd47-ab1a-4444-b389-0800f42e4090",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a2426a-165f-4af7-8fed-15e976d253a7",
        "cursor": {
          "ref": "46208c75-877d-492c-9b74-af0a32ff65fa",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "487b9e8e-072e-4c58-92ac-27969c750461"
        },
        "item": {
          "id": "e5a2426a-165f-4af7-8fed-15e976d253a7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dccce779-01f1-4239-9b5b-7cc41e917a4f",
          "status": "OK",
          "code": 200,
          "responseTime": 3040,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "222cad01-43ca-4e4a-bdc5-cfec99c21b69",
        "cursor": {
          "ref": "8b934790-f82f-4a59-b9fb-770143c9d2b7",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "88db911b-860b-4e50-ade8-e95083019093"
        },
        "item": {
          "id": "222cad01-43ca-4e4a-bdc5-cfec99c21b69",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bef22e25-af5f-490e-806f-a6ea14caee52",
          "status": "OK",
          "code": 200,
          "responseTime": 2865,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f35fc8-3bd9-4751-89af-5fa38f03859f",
        "cursor": {
          "ref": "ca2d0299-07f8-4a2a-89c9-214fe6030df7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3cb90b4b-2039-4942-9df6-970ef117897b"
        },
        "item": {
          "id": "16f35fc8-3bd9-4751-89af-5fa38f03859f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c34020d8-65c5-4f34-b05a-248fd89c2ee9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f35fc8-3bd9-4751-89af-5fa38f03859f",
        "cursor": {
          "ref": "ca2d0299-07f8-4a2a-89c9-214fe6030df7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3cb90b4b-2039-4942-9df6-970ef117897b"
        },
        "item": {
          "id": "16f35fc8-3bd9-4751-89af-5fa38f03859f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c34020d8-65c5-4f34-b05a-248fd89c2ee9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444e83a7-d186-4a51-9b9d-dd9e01fd0fc0",
        "cursor": {
          "ref": "a174adf7-2737-4d4a-a596-df94fb4b39cb",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3a95a4c4-34ef-447a-b0f9-67bad43b2283"
        },
        "item": {
          "id": "444e83a7-d186-4a51-9b9d-dd9e01fd0fc0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6797583f-8feb-4141-87ba-ee0f5855a94c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f90472-b3b1-4041-9f99-817fe15ee519",
        "cursor": {
          "ref": "519c152e-c25a-4692-b692-1a5206385b9b",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "aaf97e62-1764-4967-9d57-029db127cc49"
        },
        "item": {
          "id": "06f90472-b3b1-4041-9f99-817fe15ee519",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "44cc7888-b07f-46e7-8b74-f5e0a4e7b51f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}