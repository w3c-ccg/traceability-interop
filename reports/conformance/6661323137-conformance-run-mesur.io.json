{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f0cace20-6871-4709-abc8-19986eeba007",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1bb94261-26a4-4529-877a-3bc25c7a4325",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89581d95-58ce-4de0-a9a5-c336f41f9133",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e8685cca-2b28-4926-a538-f0c61fe528c6"
                }
              }
            ]
          },
          {
            "id": "bb119681-5024-4cfb-ab53-30a97df1d90e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd39d0c6-8842-4e2b-9d1a-1783060c7fb0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "41614f6c-fb47-4a99-8620-ec55cc23f208"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dcdf11bf-2c9b-4d32-b02b-883405ff95fd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e2d0f0cf-a084-4ffb-8c35-412e6810423c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f3c30332-de89-42e3-8111-ecbe866f048e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a186644-3c84-449c-8cae-7e4a4a3adbd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c40d82ec-9145-44b8-a864-3f95030e37b4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8bb1d49f-e9f3-43ea-b524-21720dfb8c28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d57ac271-2dd2-453b-9e1f-b60a2e6301a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "97591457-8a9c-400a-890c-b98376029b55",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0f1fd72-7173-48b6-b145-d527aad54be7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0e84df9-e675-49a2-b88f-1d37c7dcc732",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a01f8198-f4b6-4704-9bbe-e58479e01d73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d7585ff-b2d2-4f65-8087-ace7c6f88541",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f99e8ccd-e326-490b-acac-2f9df3fa2aa3"
            }
          }
        ]
      },
      {
        "id": "1aaecaa2-2fa3-492f-ac02-bdf3a48ad125",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "00b39554-ce0c-4278-a9db-dbe5a284326d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8169fb76-c12c-42c9-9c23-693fb313f090",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ff7aadc-0b5b-48cf-a83d-61b5e7816c8d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6bf18c-de2a-4276-9646-8731cf86cc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29a1dd2e-cca9-48b6-a0d7-86749b24bc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7eaf03-f1a8-4efb-a056-563332f46d67",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f567772-529e-4d97-b965-3b0f88715a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d88dc01-1137-4e84-a776-9f3884d3dfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b92480c-71b9-4b6a-a89a-c706f9ecc837",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea36ca6d-8ec6-4267-bc96-1094626fe1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17501537-3b77-40ec-8508-c521f3eac495"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2e5f7c8-a003-4c51-82e3-957a97b2683a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a93a6cd-b95c-4cd7-8097-9750e9f6e432",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ce3e39-dbde-491f-8178-9041e39f7743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78904cd3-86be-48de-9a98-e38496149b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73096507-de2a-4f13-b55d-b30e32a49dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558801f1-a33d-43a7-a457-5cd60b8444cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6cabb778-d911-41e4-8230-8312bb4ffb8e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "425a43d9-cb98-420a-8d85-e6e086866761",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4edbd596-3591-4d76-8290-d0dc91c19416",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2ac12628-e0fd-453b-8771-8c55cc6f29e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5f7a4c7-c895-4bf2-9ae5-803deba152b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "954f82bf-0730-4a41-a534-d1f9e3e5ad30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "635de754-819b-4d85-a64f-0078a39c9bb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b6ff4ee-a0f1-4e29-9fc6-fb9fcf6b6a51"
            }
          }
        ]
      },
      {
        "id": "d7953330-7421-4aea-a903-8a0bf3dd3066",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "156f2953-1d05-40f9-bad6-5c70d29d2f2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ab25b67-4c5e-4f8f-ae5c-1483d443a1bf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "783b5383-518b-4705-a4ec-538c52e43d96",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f876de71-62b5-4438-989f-14a3b552d44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca057e2-56cf-429c-90c2-ae7677a43d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0a4706-1a78-43fc-a7ad-5e134e3b88a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4de56899-61ca-46a4-bcb9-22d746c0d623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f308af-2fe9-44b1-bed4-2c04c703bd6b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3af7b5-dc02-4180-ae89-ffbbb96f714f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60a9bec-868c-4ddc-b7f9-57f047a0bf27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401c990e-b35c-4af6-8aba-b40573c53969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3ea8d48-f540-4cfe-a8df-93253210e8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c6d401-5f9e-4286-a0fc-af807ab4d528",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed584c6a-2bac-430c-bd4d-0ec553f693b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77459e5-d562-497c-9b1e-1b668a3b4cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a290e1-d4f2-4fd2-b8eb-434567df4480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a49881e-1c4b-4c7e-942d-9ea012a1d946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1b2be7-29d8-4a51-b09d-43a30eebe1cb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e699da0-6e79-4872-bec2-4778a0703fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbed2fa3-0ebc-4fe6-9ef8-6e56711cb0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2e31a5-063f-42b2-a131-b68a295030de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4580726b-372d-4e61-9e36-956dad3a85f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67972fe-6bc3-44b6-b181-6f0a989864df",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cc8842-b513-4a3e-b4c8-9f322d756141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf39aeb-5d0b-4ace-bb98-25219d8e8e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb766d5-7059-42dd-aa9a-14a0d1d4c4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e54523-2177-4f69-a20d-274f2b84ac8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362942cc-8be0-43cc-9075-a6ac8e22acde",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bfe3b0-e743-42f2-aea3-d95fe8659dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c90f966-0d01-4016-9846-5fa8357b2f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9383650-70a5-4f62-9a48-8a3aa50643c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "056997aa-e542-48f2-96d9-ecdbb3ea5823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97640e1-e14d-41d5-95e8-7d49f27de360",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947aaca9-01d2-4fac-b0a5-4ec8311b3dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa8f146-5c5f-46cf-80ee-cb359591fe04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83cfc92-5a09-4f01-b322-ad34667b0c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43dd5444-7d58-45d5-80d0-cad50aea018c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16db3f7-215d-4af9-926b-19f5fbbc9cdd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0204776b-e256-4c23-a4af-887a0bb40cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b98810-6af0-4b06-bd7b-fe8243b71877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7cb582-ef9b-4fa4-9276-682f07747160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97d71189-a28f-4e9d-a0cf-52e204e6b552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa58226-d0ab-41a7-9851-5f8892dbfba6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e3d08f-677c-4809-927f-d47649a71003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f87c10-2ff4-448f-a4a5-d6d5c0f3068c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d833f26-c4d9-4caf-80d1-ca88cf87f944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48bf2197-88be-410d-8974-a946df051285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb18fff8-9ae0-4f6a-9a8b-58b516ea6a08",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199c2048-7960-4fa3-9e3a-5b144d313771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd1504a-ec62-4f03-8849-f78c95b184c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db73390-fb98-47c8-8be8-94b718eeaa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22d8f903-8dab-44bd-9798-537ec5df848f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5772710-03f8-4bcc-a302-a0585d8e9519",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb186f3-d719-455c-84dc-cee4f197e848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7206d4bc-636c-45cf-9474-49017d8a356d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3d82f5-68d6-48c8-9d79-73ca9148a27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "839509da-c975-4310-b642-85b72a99579f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c471a23f-9748-4465-be99-cdb32ed53060",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072f21e2-0c9a-4cd3-a207-c4d920a610e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bb29cc-538c-42ae-b041-806fdede640c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33926cd0-7aff-49cd-ac9c-85ef994e9422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "234dffeb-f5c3-40a6-ba64-44021e64eb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed78441a-49a3-4aa0-8252-d2edc641112c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7049bba7-a563-46bf-98c4-57aa97364058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd1e5d9-f966-44e6-9706-d1f1d9120927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31386661-2c20-416b-8896-aa3cab24cd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0850173a-fbc9-4b3f-bdb1-0fe759b282ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b5ebd0-60f1-4d65-be62-b23c3a880646",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ace0b7-7acd-4337-980a-db5f433c6e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02551232-254f-40ba-9608-dcea602678f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f29ff08-c1c5-47f0-a260-2fc845dfb535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbdfee60-319d-4771-b05b-9781f1b1d7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49ca708-fefe-4d70-997e-ebf26737baf1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5e1e3b-8e81-43b2-a485-c3da1da2388f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09087f7-d5a0-4372-8d04-651b0d7174e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76edf97-7fcc-438f-94cf-79b14517870c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f0eff38-1239-4824-958e-0c7c9f8afd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013a5b94-e494-4d9e-ad63-d1ca2dac8f91",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b95361-1aab-4506-a909-06b9a83a1320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9ec528-b486-4dde-92b5-b212e0612cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5b7731-e246-488e-b330-0aaf2c070ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f5fc60e-a7b5-4984-97b1-0ab993e77919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b9ce2b-cb3a-42a6-be5e-9866a1aa8713",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf71aa04-3f8b-4d37-96de-ff522c0b2d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409f2ab9-a89d-4b8f-b396-1a28e50e9d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62303629-57dd-4c43-9572-c3f098815f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3705091e-4858-4e58-9a08-b460e9386921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40302e3a-11b1-4a29-8122-c8968ee828fd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad6f5ec-6abf-42a5-8503-4874d42f57cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e35eb83-41c9-4869-ac6d-82b6c4395fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694f64e8-b0eb-4526-ab00-aa7dd8c26002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b208176-a70d-4ca1-832e-2c29c5dee34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8f76cd-03f7-441a-be16-29f0537fb67e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd934057-0754-421b-a592-6d3bf173665c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365e39be-9b64-402e-951c-3734a47a89c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3f144d-bc75-460b-a377-18f511ef17d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "faa90959-868a-4fb6-a9f6-137f31c0f5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81913ab-5edb-4993-9e56-4f0662594193",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bf3465-e55d-4884-9874-25b4754b035f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649d8dc1-1840-49e5-83b4-3d739871d5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257a52e5-349e-4455-8572-d2318b5ea479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b27a5c3-a0f2-4b4b-bc07-b512e22f4d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4d6759-bfec-4484-b7fa-732924804289",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5831df21-ff65-4b42-9733-f36034ee7390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a874f136-b211-48ca-ba01-031ab6a02a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13a016c-a3a7-4694-a1af-3a147b9c2573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c612998-2634-47b0-a0d7-13ed1ac5cf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdf229c-ed16-4c44-9a5b-29de69757a33",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9cd7e3-e0ea-43cf-971f-362289157851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1df618-08a4-436e-9aae-879576fb6eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929776e7-03ae-4bd3-866b-50d3d3ce2849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db7dfdfc-8d3d-4c5d-9067-d7fb3245a8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b81e32a-13e6-49d2-b41e-d54b20725ad9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d32cb4-65f0-4b5a-969e-615593a0bc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bac07ed-a2ee-4396-8c6a-42f06ae1328b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b98d564-b50c-4ff6-943f-54d0d72637fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a4452b-21b7-4de4-b5d5-b664cb5db100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91766c2c-31a8-4871-8a19-ddd12b7546a1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bfc55b-a581-4f42-846c-fd15209d2497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad42a53-5a09-467d-8bf4-9b3bd817bb57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1e8613-dd8c-479f-9894-8e97a7fccdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a3b1df9-56ee-45ff-bb59-6c371caa36e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db8f6b6-4a86-4cfc-b1f3-39a62c3a0a93",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ad3388-c259-4034-8732-7dd3c5506295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e6dd81-bc4c-4f45-9d8a-c09cad1badb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9c9865-c70c-4f61-8eb3-d4e2796babc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d4bca8-cf47-45bd-8b4f-bb09d4b4ca02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ea34b9-9f32-4c97-bafa-82162ceca4b4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27427c23-469d-4d94-9212-367c946c5df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc60ef1c-18b0-48a7-a493-e7db23b2ffa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c942864-a354-419f-8763-98021df4d698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48e07c59-5427-4598-a325-2a2deeeebb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e040d7fe-eec2-4583-94ae-07d3159d8e3f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a238e8-a8cc-4643-b99a-4ac0c3a817df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a28c75-f7a6-40ad-8467-710bf461baec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b22d3a-e0c5-4960-9840-adfc101f0352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2319e0-3488-4d50-ac3b-735371c810ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a413bf-8f22-4451-b832-2f3180266385",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad0ce04-0580-4067-8840-8b1646b621e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd4b38b-6238-4675-8210-c27f04c0659e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7bf311-68d8-42cd-8717-fe107d0014ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "540b4e97-373e-4b08-8b82-e9bea4cef6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e893d817-1671-42c7-81d8-18783fc6c6ab",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223d0ac9-1d05-439b-af82-8ad3d14e1989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adcae08-5813-4061-af6a-5b3e72e8de35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e5e761-3547-41df-9e92-fb0e08267323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d566c0ad-1d8d-4e88-82be-4c0ca3c40d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b778d4-2101-4fef-b143-f713ba4cac64",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31975fd-eecb-4f86-92f1-c458b0469c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e597aa-ad23-4dc9-b397-89a7231556cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b389a762-55f3-4b92-8497-d1c74828a7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce435aed-1653-4901-9d4d-8b11f19e49d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18fb33a-6099-4510-a7da-6835a1253f8f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e91dbff-091d-417f-aaf3-b5e6e6de1a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9daf8e31-449a-4cab-8440-3cd1aa6b775f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282efaea-0166-4199-ac6a-7aa238031882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9003b6-6b23-4c01-bea2-85e0d110896b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706a8c1f-6b30-4e85-ac51-5e148cbf85b1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c579f4eb-9590-456b-8048-be143809cf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e90630-2783-49f7-b2a2-c481b0ef1aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d14496-0796-4232-b4b8-315103e1d5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f1c162-e90e-448f-9f4d-38a756665bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44de198-a695-407c-b34c-dd0b48144feb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5af7eac-f3c5-42c3-a779-809ad7da899b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40591999-70e9-49e0-9373-0cc2ad3a8713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4b826a-d563-42ee-ab32-fbb3e2c637fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af8d4f18-c59c-4575-ba2b-f068895520a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae002df6-b34e-441f-87e3-b98ae3ef77dd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f84e64-1de9-4c99-a665-4152293bb77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685bd307-53a3-470c-936e-649eba1dc214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d026d7-9314-4da7-ad34-0972076bdb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38fa283b-9081-43bd-acb2-18a868b143bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c428128-22d7-424f-97bb-46b5f8602110",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243e1711-7455-4df1-a6fd-6065d9aaf798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7e996c-00ab-48f5-8f30-cf1fe26015a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ab5c1b-f631-409a-b399-de4e58bbadd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf62dd8-c7dc-410e-ac9b-3ef770bb996d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2aa7177-4ac3-477e-87b3-6e0d3ddf4e3f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86b5ea7-a3e3-46fe-8749-958d7e7bbbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cf6d992-2367-4af3-9210-3e3ab90cf167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0ae421-320c-4ab0-89f8-022df68d4bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9c6e2d-21e3-4b49-8c91-69c985d288a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b6c4b7-472d-4511-8983-eb35b5a80220",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e996e490-8743-4c92-baf8-028b0938c2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699ce3cf-c169-4687-9106-2e06c472c799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c70aef-1841-489b-9ff2-d00da24e21c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8000a447-a2fa-4880-bc87-990e322214bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848f3ead-a940-464d-a0c2-b4ad7a4276cb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f527e8-38e7-4abc-8e51-cbe34a496b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb07eb83-c027-415f-9777-ccf40bc0a030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2da3fa6-d9fe-4e9c-8d3a-dd7875d45f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa78901a-433a-466e-920f-4e9f9deeb8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06156060-8556-4e0c-b9f7-78f89d1d6de2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bdab7d-2d28-4043-9ff5-a0a69a1d03b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87845639-f0cb-429f-b47b-11869a4ad85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c505e8a-cf6d-4567-b8f5-a4a6a4e07beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aebdfd49-8857-44ae-8d62-50424e3106d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b29086-2999-4f28-a90e-47749894c754",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ed537c-decd-4959-bf58-9fcad62d8f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca622b7-c6d6-437b-bc3e-d96ec644f31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d4fe07-e230-4e9b-9da3-5a4ce7ef2c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad03684-c8d4-40ed-9255-01ac480eb2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8469f0d2-77a5-46a1-a133-89bc430034ab",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4975d6f3-f1fc-45ed-a30c-26c002f1a48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0127e6-bc43-49d4-a055-489bcb12e54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5624cde2-3701-4e45-b176-6799fc615846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6384c67b-9cd8-4dbb-b24d-ccb0dffbe33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0cd2b8-e2bb-41f4-a90d-98f141d65b5b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d4dc80-2bba-4042-93af-553820eed1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962068c0-eb1c-48a2-a4d1-11e95dc1b1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfdf2f2-6253-4cb4-9c6e-d153c6990da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "16676811-5808-4049-82a8-08c00b4de014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fce217-7dee-4e55-82d3-cfbad594e410",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8c4abe-ee69-4af8-8766-9b669a1862d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233b62d7-2d6e-440e-8e58-ab988fae3e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66a9edf-8571-4702-93de-c103ef2de72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc4ccd9-e88b-4db0-b7b1-6cdb4763da4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b825aca8-2fc8-4cbe-815b-aebc623cc2e9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3421e06c-7576-47e1-91c7-273e80e623f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbb6fcd-59ce-471f-bbe2-ad456206b55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2d7e87-5e12-4555-9ab3-0c32e27ce538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "11cbe852-2d50-4b0b-b326-298ce700865e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e57944-ff77-4db8-ba05-6e7323081f47",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88f06e4-0299-408d-a90f-f2757e365fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9fd064-aadf-4942-8d57-e7b41337125b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57758994-1839-4138-bd49-12b93efc8250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19d7dff5-5264-46a8-a8d9-6e1a06b43e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773f6dd6-23d2-4f66-84a7-6c432203a690",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a749e3a-bf8e-49a2-84d3-50f974af1d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a97389-7ecb-47c3-9226-3f1fb857be34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0f3bb1-c356-45c2-ab1f-7d8c6d23c622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbcda42-fbf8-4dd9-9175-2ab76ab99400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f578e4bf-eeb3-4eef-98ff-8fbb533edafb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4336dc3c-3605-4c24-a02f-4e783d9eaa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5247298-d7e2-4295-b277-8111ff412577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab063f5-6c37-41df-b46a-4b808f82bdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46d569b5-b85b-4d61-b3da-867d663b7a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889681f3-3817-4855-8ca5-6a241d7858b9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a98b45-2969-4356-802c-7fc109e1d3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35314be-7a83-4c50-bf67-eab2ec79ab27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c3f333-0727-4f9d-926a-d8fa02b4f889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8063c0e3-f2ee-487a-807b-1c6927e37672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb07267-059c-4a44-8372-88e74e178f0f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4a26f8-d549-42c3-b25d-23e279ea28f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a168c302-9df7-4de9-af35-cfba5b64c104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a5aecb-80bb-4825-b230-94c01de5316a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d691c79-442c-4808-afd3-37b01fa3d70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc18b28-531c-4923-ba7d-c961925b4622",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ded3c99-efbf-4855-bd40-27171c53020b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1a7d69-c6ee-40b9-9d30-2529afa9fcfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e79c874-f6dc-43aa-be25-b2b96692028f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08e8c4d5-8134-477b-a77c-f5d932790e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67417a04-371c-4bc1-9650-c9c56a0d902d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d46629-6029-4b24-afc0-e0c55435c6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87e0592-9982-4e63-b636-f7ba2f2559de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0915a536-59ad-4aca-98ec-7ac03e87d1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8be74b-8975-466d-b76c-717c9cefd74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c89289e-7cc6-4eae-8c6f-294f3ffc7f33",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cf4697-4fea-4279-86de-0b14b2855433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9f027a-841f-49a8-9449-55b67a209b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455c7c55-9b35-4073-b996-8b90eb455409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f6f16e-a559-4c03-b0fd-e076d31fed0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a1c26b-b7a7-4384-b5ad-a65b86c577e0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7bcb55-b271-41da-8a6a-20542b629658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a1816b-a5f1-4a82-a1ff-fdd5e07f274f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ca3afe-c2e8-4958-a6c4-7dc2a59b3135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a750e96e-0bce-43ac-84f2-af4ef0a6bb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ab39db-309f-4f7b-afe4-21adb4e37106",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8412e3b-942f-4aef-8eea-e303122b7906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860bd29d-99b5-4ed1-b6ff-4b4774da84b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79632987-d8ee-4224-aa11-268a91fa429f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ffe8128-fc11-48df-a624-d545b273871f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f642fbc4-de3d-49f8-b54d-a262ca5de3ab",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3468481-3033-47bb-b27f-e4ba952d41a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebf5ffb-85cb-40ea-93f8-f331e58880b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e0b8cf-1386-4531-902d-77ba3fba2473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c860608d-90d9-4dcc-82d5-a5980e86ca0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb851de9-cef8-4cc7-94bb-c1bc966d6bc2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a316a154-6973-4846-a0ce-3ca54d3b2dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b116596-8b4b-4bd0-a5bb-4cf9c69c75e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457ec454-8d0f-435a-9a19-1cec832e5ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "59a51641-5323-4b94-b9ba-c49db78d6ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54cda69-74f0-4a8a-b17d-8a3a9f6034fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eacaf06-0474-4c42-a94b-0d9f45144c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b884a3d-5a4d-4694-8090-8b046639fe59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298702f4-a63f-40c7-a5c1-a3d888bea6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "86ae0af6-ff97-4296-9b8b-902f03b7c207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531f097e-3952-4d30-82b9-044fe7532523",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ff765a-0ced-46f0-8d2c-4a82b1960077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb55f77-ebb7-481a-b093-602a199e8e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843a7774-e67d-4b47-afef-55a4f12de030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c36cc20e-5b86-420a-abd7-c69423684a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a0b143-abd5-4421-ab83-bb9999d3c20d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65849f6a-b1af-4485-bcae-27673eb9e594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a65b25-7a74-4f3a-a252-f2b63986be05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0201b2eb-2054-4a53-a596-57b77a4f40d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "64e240c8-ca47-4eb0-9e1c-153f24f0646b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0714da3c-cbfa-415c-b99e-1ec2310e9751",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c4d987-0460-4ba1-9b38-09ebb9c35cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7edf6a5f-a0d1-4802-afb7-b3af2f53109a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06eb983-4769-43e4-9957-b7b9fcd31599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0058955-cb1a-48ec-bc65-63cb864d5c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652f46f4-7850-4583-ac96-9eb87ce27fd2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6ac1a4-2625-4670-a80a-b5a098fdccf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfe2cec-39fe-47be-9607-3aaaf60eae12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20b033a-b816-4303-9411-374e894370c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6ba30a-c4b3-47b2-a659-ff9aa86c4a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3089a353-045c-421d-bd6b-79d22af9b494",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c98d5bc-770d-4120-ac87-505a61181e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3f6ca3-8a91-4be2-b9c7-659a0dce35b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd4d2ee-2665-491c-a94d-3deabaf078fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c94c7cc0-bd73-40d3-8ad8-ec37ed6fd063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73268c5a-b455-4f65-a4e1-a3a2c75d2dbe",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db369e22-a22e-4f05-b0dc-df491050aa2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d879559-ea8f-42ba-ba9a-975f89850611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efc0c73-ef9e-420f-9ccd-90545ce7728d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f618cf-f6e3-4aa7-b060-5553696d1937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e75b8dd-7689-4f9d-87e7-5c51a7fddb4c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07c062f-1dac-4ee9-b20c-01c442fc23c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e626af14-a300-473f-a6f7-d3fce572aaf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fd6af4-3d8d-4699-b596-bee35b12985c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f33ea50b-5e6f-4f36-902f-589f4311ce12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2bbd97-7fac-431e-87f5-765c3392cbf2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9674ea2-8b60-4583-a56c-e411face9ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9611bd49-7aa6-479d-af1b-1848091725b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424fc83d-01b2-470b-a3a1-8f1ab92c2ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b2b5025-f2c9-4842-9a64-47bc2b087883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599272a6-eb87-4f20-9c7f-76e6cad57026",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd4be25-7e31-4c65-8c83-3b014b948693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617ec08e-d8bd-4fd5-9c6f-d358c682f939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9e743b-40fb-472f-9a29-4acf63776ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1829d95-6b52-42ef-a2d0-66de9c2519d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8433f5ec-b80d-4119-9b0e-26333c911a12",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca24283-520d-4f3f-bf85-ddced36740a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacc43aa-a6a4-4124-90f2-794643ba04b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1b6322-1ea8-4f10-ba7c-109287ad9d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5728fd-d9d9-417e-84a3-a9b824134bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a84c93-5303-43ca-8351-2d96148b351f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35c7faf-2f6a-40b5-aae8-8f8a91b5b32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c870bf7-d6aa-41f8-a8a4-d5c32ff9c0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588b967c-491a-4945-b2c2-93b945d0b5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1055f29-5655-4022-8332-eb243cdc5871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c54af4-d93a-46af-bab5-9e394c43f3cb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853e3373-4163-408a-9bba-6decbf4d2a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19ddfbe-aebb-48d3-9d61-0123db31236f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2604cf33-e851-4239-823c-aeb4526cd3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "57cc72e8-6038-478d-b1c7-574decaaf49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b26139-a159-4b3d-a8aa-c3075228056f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34dcbbc-c5be-4771-aa2f-2daff9c22262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3303e220-d6d0-4bad-8638-0fba9c316d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eae15e2-e792-42e0-bee7-bd3eb83ca7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5322a50c-63ed-4afd-9bca-8071c0145618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b335bcdb-a17e-4d3b-8c3a-2b99cb5b6f21",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ef458c-7e1f-47c2-a8ba-644753b9fbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17be7f1-b350-4ab0-9fe8-a73bdd034273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357d37ef-6619-4908-9b81-5656b0bf214a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f59157d8-40ac-49af-a1ce-a138abfe1ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c5f827-b1bc-4df3-9fcd-694f54c62dc6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b94ba3-3a6a-486f-85f8-26a459f15eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788fc27c-7741-4a42-a8a7-346f4fb7b264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2c0946-dbb2-4663-8846-80c42ab88985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5737853-7a22-4977-a1f8-0e36182362bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904b9ccc-1e07-4619-99dd-1325e251a52a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9939d39d-d617-4fcb-9b14-4396c8f2efd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4131142-c55a-4dc7-adbf-4959e539f36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc1bc70-4fcf-4909-85ac-19efd840f40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28521b13-1238-4bea-aa8f-d44d9b7d416a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ca8273-4bea-41ca-894f-6502d0eb7a7d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01257ae9-1fa6-4f5b-aaef-ddd84329affe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd996950-d421-477b-9b3d-ddb8d314d8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe46586-f246-4751-ac33-de0e84d4a4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7ceec1-eb28-42eb-8104-00dda0f6d852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d843be-8593-4e73-87b1-564fe1ac30ba",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd29fae-8e90-4ad2-8efe-51c81b071617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40fa1e9-cb4e-4961-b18e-cc5c857e2e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d2c43d-b318-488a-a2b7-0e5e1e79c598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0d75f4-b698-48a2-9873-0cad5cd5895b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe27dab2-6818-4ef6-94bc-affef1384b0e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e7d39c-94dd-4a4e-9b5c-988a2e5b3f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637981ac-ebc8-4e38-9f7e-7f2692587c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4b9c02-bb05-4b79-af47-08fb25e64d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4d32c4-8e8c-406a-abc7-2f53d08fa7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0378239d-65d2-48c5-8665-d545b4301ce6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295d36ba-cf32-4dfd-b0e8-82b094e9f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04ffab3-7f6d-455b-a3d8-f51e9b113b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967cdce3-317e-49d7-adeb-898e0d8c392f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f60fcf5e-e220-47cb-8a82-9e3532c886e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ebaf19-9d56-4bc7-a276-3b5bdf952311",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dd069b-2062-4047-9c9b-77af8c35d0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606b0309-a56b-491b-a254-7c1e660f18ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be691e5b-c5ab-466b-92e7-79ba882828aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14baf795-f883-414f-a664-985102ad9f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62df13bf-59f3-42a6-942a-ad7aa99b6cd8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921b83e2-285c-4d4b-8443-743910446959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c8a789-b7e6-48f5-a3f2-98162cbb2eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a043bc53-0c88-423b-b94f-c8bf7e3d7a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6570d0a3-0e36-417d-a6f0-7214ed3e9b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1522a3b8-91af-477e-b6d3-73b1cc2f16b3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc101f59-f036-4b91-bb20-8742da76e720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43c54f9-628d-426d-b791-401d84e1330e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6646797-0078-4394-a7a8-1cf39dcfa1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "942960aa-980c-40f8-a0d9-8ce05199f36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b790cc3b-67c5-463f-bafd-7a5caa214e54",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa0e4e8-e048-4079-ab76-56774c42c2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e04ffa4-37cb-417a-ab03-db6ef079cba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f6c83c-a486-4c3c-b05a-de7ba47a0c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af808c4d-c1d4-4625-ba2a-e6cd8e5dbe9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e50275f-c742-413e-8764-e82bd493f0f1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8daf859d-870b-4293-9dc0-db26484e3c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee59f06-a6a4-4024-8112-fe2151612137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35220648-0772-4215-94a0-9886bd9cda11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "089957b7-ddce-449a-a730-e3ca408dfd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc56087-fa74-4b3c-9ac2-da9a5344a70b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acd9605-8afc-4ec7-a59d-fbcd97a31832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205d36d5-853f-461f-9eaa-bd2ff7ea3c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c02b48-c621-41d6-8a5e-6b941020f121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8249452-ce87-47e5-a107-7d77d8ecdd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dda1f92-8920-4f39-a091-8e3637490e41",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05953c8-ead0-44ad-9dac-252d6bef8e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79285c5-0148-41ed-a851-3afe548fc038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a9be33-f7b0-40e9-9627-a412a1aa3ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e92e94d8-8e98-40f0-b2ea-f5ba16108124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0808653a-2b9f-41fa-a23e-4572305715a6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ab1da2-da67-4b9f-a5fd-d9bd26cbcb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192f3a35-38ef-4dfe-9b39-1f08d66baf60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363016f3-003c-43f9-86cf-7cc6572412e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3fca58f-6820-4bcb-a088-d3425fb61f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52357b4e-f63a-4717-893b-99a1eacee29e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e4c134-9704-49ee-b6ac-b68eb27c3950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d5e444-f398-48b9-9a60-876cac43d0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e2ffc3-0e68-406a-9598-b146c35c39c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b15d1d90-8fe1-4017-a55d-e90b51e8ce14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b75f7b3-2a75-4035-8680-6da46bf23229",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a13855-9091-4c05-8d3e-cf85d2e0f675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159ceb14-d088-417f-a742-71a13b978b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953ecb72-7229-4df0-b304-44020e542310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0535c5d1-d5b4-4f89-8ad6-880032acf5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c05538-ad96-4140-a426-58ed00e0405f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e874be68-79c1-4e2c-bb77-9b346b82de7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc9f478-f160-44d6-9717-c28375355dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862e4cfd-5417-4c00-8391-78203b7c6a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e43168b-9bae-4632-b201-73a7f6242785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f0500b-9b3c-48b6-88e1-13baf2b02e83",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378d97a0-3d81-4b22-9dda-71a211d4c6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11635158-25a2-4aa3-9d44-fc931b4f84e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c46b34-d89a-4fd3-bbcc-6216e540694a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d31be3c-d58c-4317-8b6c-51782f592f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a9edb3-b580-48af-9342-9589a0525e04",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5588e26d-25ba-4e14-a0b5-828350232080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230ea2c8-b7f8-497f-9dda-f55a08c133e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f207da2-13f3-414f-b3e6-7c76314dd5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e58fe344-ac05-42c1-944c-015f2f0ff077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc811d4b-b88e-4406-8755-56d6c44b7110",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e16c90-83b5-4149-bd93-7c1909ff7616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504d0af6-b16b-4377-89de-c137aa60c230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd72c0a4-d76f-47ed-b2ec-47a35f19af8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb0d93c-9d78-4be1-a253-ed7274bb8b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07744e78-d8c4-42ee-ba2d-4d5930aef392",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d477ffc-e47a-44f5-9323-ae0cfb71f923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bfd4c28a-1aec-4a93-b86a-c5f64ca12d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf3ea58-2741-45bb-a869-495cb14b7208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1743d3-e722-4701-9554-fcca11dd6ad4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6eb85467-d3ff-4514-a531-c19f70694452",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fe31179-ca03-4a19-a222-82d354768d06",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1860e670-d998-43c5-8b84-c244eec4706d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b335fb03-e8a8-402b-bac1-423a1e8577c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2424bc-2fa8-471d-9829-973fc1a9f183",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "427a6ba7-1a4a-4e19-a737-c4605bc2aa1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e0e2a2c-e81e-4b52-9ccc-2da7ae943c15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "884a4640-42e8-4469-95f8-a3d0b937ab50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d1d6080-4908-4049-8efb-515d255c9f14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba820ea9-224c-4069-a55c-0b8a43c8eea3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "135abf62-bf57-4351-b231-ae636536982c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a1ad5a5-237a-465e-ac95-b147888adf14"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e02b317e-bead-498c-837e-3165b22c917e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "229fa513-373c-4a80-acc8-556215d31fca"
                }
              }
            ]
          },
          {
            "id": "4988d866-51a2-4769-a781-0d442644c07c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f915a6e-a4f2-4282-b1f7-4862560eebd9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "25a20d09-4c2e-4887-b3ae-c381d732b37c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1740cf3d-12cc-474f-86ec-432c7579af35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "872dce58-4f4e-4383-bb0c-e7629de52e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea45259-4c64-40c7-b84b-cdb36802394a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999ec555-5ba1-4fb6-bed9-7a6b3f48fef1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3e23b252-6187-4866-b200-6239a11317a1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb1da61c-9800-45eb-a7cd-4a3746c94e7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12beb8d3-5b4f-4309-a1a6-83c2c205d21c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03390a0f-dc64-4e8e-9d0a-13d48845bdae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4ccf25d0-1c4d-4525-828e-9f06b25089cc"
                    }
                  }
                ]
              },
              {
                "id": "c4bd51e0-d684-4a7d-8246-7e87f6405102",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0778be38-6d6c-4d5f-92e8-584f5f96882e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c848e78c-4589-472b-b3ac-96f991cfcfca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1b22a80-7c59-45ac-ab9b-0bac65a95e78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "992fb441-7509-4e67-b108-4124dcf15443"
                    }
                  }
                ]
              },
              {
                "id": "a456efab-d72b-4c79-b9b0-c311ff2a6c71",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a402e364-8571-4268-a40b-b0a651cbb355",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "955723c7-4c93-4a5b-91f1-5508507736de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5f912e6-1dc5-4145-a0cc-833be8d81d9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd0676b8-6c78-4cb6-8899-faa3a3087ff5"
                    }
                  }
                ]
              },
              {
                "id": "a4217a86-e85b-482a-b830-cc18589b6d3e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "334aedef-ca97-4d16-b3ce-62fd3a8b2c0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "047a4e00-bb58-4af2-8b43-c878b9dad8e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecbdb9bd-7792-4d03-9f30-03cdcd8c729f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "01ca9792-a4fc-4b4a-88c8-f0a168957b84"
                    }
                  }
                ]
              },
              {
                "id": "372254e8-138f-459f-aa3f-517cfcd94f4b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5a4007c-92ed-479a-897b-674a129d0414",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "885d6c17-9afa-4bab-9cce-d223fd5f346f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16467868-4979-4bc3-899c-1ba75c47e80a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d1bfc4d3-888b-409e-85b4-6a8c4c33754f"
                    }
                  }
                ]
              },
              {
                "id": "1e145991-6761-4997-9414-8de4083d968b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b60ac2c0-879f-44d4-8418-2c2a18fae5ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c05fdb3c-3efe-404d-9a0a-39fc00bd8f3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "feba34b8-22b1-4ccc-b2f6-c032932bad4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "87c6fbfb-dde1-43b4-b11b-312a02f725d5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "92f95693-8756-4cb3-9386-8fd1e87b3d2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6d15744-fae2-4036-bd07-f27e747207a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e8fe9b61-c79c-454f-973a-48b1e1036135",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fb77031-1b77-41a5-a4cc-b36711ca4a5c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e4d11d2-d00e-4574-8948-79627b403af3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "68af4ce6-40a2-4399-a8d8-283014974ea0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d9d92c9-fb2b-46b1-9e9d-fd65d0806280",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c07de9e0-0759-4f03-9919-f8bcbfdf980d"
            }
          }
        ]
      },
      {
        "id": "de585c51-11d6-4b3f-9467-0814d95dc008",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2883dd30-7ea2-42cf-aaa9-e880f7880535",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7cc80f0-b001-4e52-9943-4c5dfc35c77e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "933d4528-026b-48b2-bc15-ea6b541cc471",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a40f53-bc93-4c7a-80cd-df61f1786975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bca8bfa-7f49-4a24-9a17-5244e82ed69a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecfd3f2-21a6-442e-91d0-c256e58d0586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "31b5f46a-d471-4fed-b65e-d60571e3acee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fe0f28-a0b8-462d-8b84-27df87ee3566",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519a8be8-1324-474e-b205-b338acb25cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9451e8-73e5-40c6-b54f-f8810048f7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90bad25-b173-4818-9c40-c841cacc59ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0219f0db-dced-41fe-8ca3-6e187ba97fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855d7ea5-e1e1-45b9-950d-d90d4690fb26",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1650012f-d4f8-4271-a836-83761406ea14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41964c6-a75c-494e-9f7b-f9aca8c3c9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39626186-e657-4d72-882f-1d890cd70eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57472419-0cfb-401b-93f0-c2f80b3262c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351a98dc-939b-404d-a0a4-051b510840ba",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794ceddb-72c3-4458-a355-ab9c952dd396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839e9923-5d10-4c42-91c4-d342ce376997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87aaeb3e-e4c4-4479-ad38-f2446f92dfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43ddd509-70f8-4799-9740-ba72c86e3a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3143b04-5ce0-433a-b9d3-5a59b0f8e53d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ef7f69-7922-4534-8303-5b5c068aeccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9218b8d-dd0d-4e3a-bb5f-6c566060b779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d475282a-bab3-48d0-af6a-beb42b418328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47fb8ddf-1446-4861-b168-758fa67945bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63875f04-24ff-49a1-ae8a-19a22eefc590",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c27703-6403-4d04-a33f-7e48df228d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e63bf6-2984-49b4-8a89-0a52716e9c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8ba8b2-5fd6-454d-b3b5-d10297aa9bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05b3aa3f-7348-4fe6-b57f-9b2444a5ee33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6ca267-cd1e-4ec1-bf8e-8522421b87d9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2f1cbb-14ea-47f2-8803-d09bc5b68118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2dbcce-3f3c-4fdd-9868-2741e6717518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630ec27c-ea03-4d5e-8e12-7915181b3756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "723f9f55-f1e7-4de6-8873-a0077db0bd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60177b44-188a-4edd-97f4-01a5553492fd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d48ce31-1b30-4f1b-b0c2-9c0aa6b0df7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7871907e-633f-4a23-92a4-8c9edf06e3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40651ca1-b83f-4267-90f0-ae4ae290e0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e03ab52-4c88-460f-84f0-8bfe2f51caa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0361bc98-f302-448e-84be-af2f46ac0a44",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbde3a6-498d-47da-954e-9fb61e07d56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd16e25-bdc7-45f3-8e85-d8f081708a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b1ac38-b6d1-4659-93df-9b71502798b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81c7c873-8fe6-483f-a5d7-2cb3161b67c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7b5ae0-09a5-475b-ae03-ac9199396edf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ec5f4d-fd38-44f1-b272-e443c2a64d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f420f858-ccbd-4029-b19d-f9a92e9c068e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf718bce-4870-4665-9b2a-2bd56c9f3272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec24223-0066-4098-a657-ffa7d6ac223b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56651a34-1eeb-4649-ae67-809c334cb6c5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c7d239-e559-4d76-87ca-f772ac9f7609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1b7af2-e7ce-4fa1-a853-5bb3d3362b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d669a122-1218-4434-ade5-d19507fe8f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1e840048-426a-4c7f-a37d-df3c7e3cab53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce946a1-24dc-4a96-80dd-45ae0a42d77a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a572e3fb-917d-4ce1-957a-ca2947917255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a8cec2-278c-4bcc-b06c-9eb23aa45938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee6258d-4d1b-4d75-a2a1-7455b8ad82c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3b5572-abdf-4285-86e7-958950eb1c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b3d5ce-5e55-470d-bbb9-68c378f6e6fd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63566d11-54a5-4287-a9e7-0e5e105ae763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6b7d8a-4887-4d2a-b33e-60a98f0ab727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392041a8-aa90-4db8-bf24-814bf4ec02fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04de2eb1-81b7-4d47-9759-7f7dc20377e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2082f090-4f9f-44ce-a316-a280a2848075",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772f73c5-fca5-49c6-b42e-3d56c58b0014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafd23a2-a59b-412d-bafe-6d5968965fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c03e52-6f60-4226-97cf-265e9bc33ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca6a077-78a8-4bc9-b262-efda57dd86ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b437af3-1c42-4eab-8b57-d1d43abf3c4b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650e916f-8e09-48dc-bddd-3df7820b2bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b023c0-10cd-4735-a940-a30cf785c7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba11359-b8f4-4a5b-bb96-48545531f228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9db75d-0cfe-4ce3-ac73-af750b1ce0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b949185d-2723-47d2-bbb2-12f353c84232",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7025ac2d-190d-424c-aa30-6b6ddf622c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910aeb4f-7de9-4ee0-93ec-52ca0fb85edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b15378-e2ab-4ad6-aa3c-fb7ccf5ef739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "682c5046-f7c1-4965-b26a-274ce840f655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0821b5-c717-4eed-9925-0efe510102ec",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c8adbd-f6c5-4854-89d4-1fe1e284523b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9c2ee4-bb18-469e-b7a8-850d8e865a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f201caa-d0a7-4d8d-aa8c-d771d547d73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b83e28-5b9b-4089-935a-e041758e0814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97627624-63cf-4871-a5a6-d9575c020131",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2a0b4c-d687-44db-af3b-8caa5a7d4822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69efc3e-d2f9-4f9d-a632-7e7841abd829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1ff5ec-8c78-44c8-aa02-664bf3edd8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "560b68cd-24b6-47cd-832f-8f31d1be19dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e05780-f2af-40fc-ba21-c21ed02b975a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845a1ca3-c8a1-4846-b282-316fceaf3f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698614b2-c028-4cb2-ae7b-fe83e2462305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece7469e-1b94-4b7e-9f05-699bcdba2152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "241433a2-d710-4348-b1b0-0d8a664f6ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b062a6c-733a-4e8c-8053-34d77d59e1e0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bdfe16-deaf-4a7f-9243-cb8d498106ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a883f45e-04d9-4769-97e5-c7e9944a93ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5ae261-7c15-45f7-ad14-0604c4eda4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "423ddefa-0c0a-4aad-89fa-7d766275c3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c472a4-eab0-4e60-bf96-258ccd23c788",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800ad2f4-f4ad-4787-bd49-1c868ca63337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a19abb1-3539-4284-8058-072853b647d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc0c630-9a0a-47a9-af6e-20464a56e136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99c90cf2-a924-4e44-bd6a-79c1d6d3292b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507b3872-e8cb-4ec2-8a8e-ade7765b9747",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a87e726-ce78-435b-8227-a3dcd6876790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004480ff-72c7-446c-8c42-af7effb37883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dce210-e9a0-4082-8e5a-4f1dfc22dc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e24c058-55d4-4fe3-bbc2-bcd504317ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6be81f-309b-4d05-b653-290baa5edfb6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e958a841-9bf8-4da9-940b-7178d6324c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705b4e20-7b97-4343-8167-8dae023fb64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4d782b-9961-4d49-adae-29f10de5037e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "443eacfb-776e-43ae-8793-f6607681a906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5affa9-2d03-4233-9687-fc4fca046399",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8426546a-99d9-4699-ba02-af2b2077c2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d510f2e1-f02a-41f1-8de9-ca68544fd7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62639e18-0c00-4b39-9611-11f62c76bb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94bfd6e6-5083-41f6-9286-c8d0736c1849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb60c26-667d-402a-845f-438c63481841",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c5fd64-48a9-4e2f-a4cf-76bed58e5712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647cfadd-1c91-45d8-abe2-cffc660fb9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eef38f4-5524-42cf-b1d8-9f8fffe9a69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6138e1b-195e-4d5f-8c0f-b4c80896de5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3427bdc-132d-494c-bf66-794baa2fd92a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bd329f-dddb-49d5-9476-562c1935909f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e456e664-f7d5-47a4-8e07-123c11d4a6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0159838f-82d7-4ad8-b37a-942365ebd730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29b6c3b5-f0d1-4f37-a301-92701bb8b1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0b969a-4cad-4b01-b5d6-2a3cbc1b4b59",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2fa125-a22c-484c-8de3-f05b3c21ef8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1567cec2-18cf-4694-95c2-6cc3412e73d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1e423d-dfd4-4d55-8571-cd972c736037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d31894-0381-4c16-82e9-cb8a0e6cf9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c140f72b-0429-4b44-b850-e5767f846c18",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce2f923-1765-4df2-9a99-ff10d71df988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f6d9e4-3856-4aeb-a448-7d3e83eaba47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1f17e7-a022-421e-8322-30e92650a6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d1f327-501c-41ac-ab2a-00cbc200d59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e6acb9-030c-4bfa-9135-2f56eb35fbf8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22267b0d-1753-4e95-b6ca-e283cc67e054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a4eacf-3895-44ac-b789-357d8ba53694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d70875-df6c-4a73-a09e-1cdbed2be6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5980dd-87d5-402a-abe7-c60ea81e9d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bfe1e1-f448-414f-9b07-e6c86a6ed202",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcffe00a-40ce-4b0c-8b70-52656fdfedb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30699e3d-420d-43f3-a8f0-aff60af1f925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8073c1-51bf-41f6-9cb1-76598cb450c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c63683a-991e-4f3c-bf7d-b90548b5791e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b3aa01-4053-4538-a731-0e5f9de35cca",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0929a4e7-f883-4ec4-bb4c-57d5c59415fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b00a0f-d7ec-4707-929a-ef16b29575f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9866fc3-00df-4ff3-84f0-3801bedb54a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "257f0105-bdeb-45c4-9473-6a9b11704322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cf16c3-5bda-42b0-b981-b499950900ca",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1570ded-5c8e-403c-8f8b-3e72489f26e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7428abe1-c87d-4cfc-89f2-defad1f3120c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1045b2e6-d27f-433e-864e-06e79392d55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "549efd29-cfd4-4477-a6c1-7b2185aea8c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ef6b2c5-d65a-4849-8f3a-8cef97b5af6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "981f3820-bfc7-4ba3-954c-8f5669d9e21d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05f3c66-7465-4edb-9bcd-d50f46c78976",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "394f7868-d2d2-4177-bdc8-2a54b4ced7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc98b32-33fc-40ef-bf44-ea0c484de3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd5fd66b-e5e2-4b45-9f23-79a8d65135d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ea3050b-89f6-4115-b12e-eb59966a09e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f3f48a8-ac08-4df1-85e2-a07e7de9cba7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89724df7-8e7b-4fcd-be57-2291ebcfcd5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8df14b0-b1f1-4cdc-bf16-5c4ec3a15386"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfc7bbf6-e7b0-473f-aa6f-9839dbc8c8be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8931491a-4d3f-46c7-b4fd-8a3cb6d35d5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c804ba58-f0dd-496e-ab8d-a852f35b49ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67a09026-4a65-442f-8c62-fb8ee4628b60"
            }
          }
        ]
      },
      {
        "id": "b3fde46e-e472-41ed-927a-9962ecf03f5f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d0f67e69-9e42-4ee8-8f30-97b73fbf167c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e5e752a-a59a-478a-8747-9d176b614c7f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6455db01-ebb5-455d-acdd-e91eea2b22fb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29d52e4-1e6e-4c57-a4d3-9a564b2a6a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43549ee-3234-48ff-9772-b86d341bbf73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb403930-86de-4f86-84bf-5a8225e921c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2202d118-4aaf-4866-8c44-b87c55ca800a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e5d3d1-70bc-4b39-aa98-54eb460e39fb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038c9770-1cf6-4e72-b63d-b7085365480d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01a2c7e-e997-44a7-9a36-a80bffed398f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd10292-c87a-4942-a586-8523e14217b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04642f48-6125-428d-9f51-006118947d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a156d39-73e1-44f3-a59e-edc067ba896b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c4d754-d653-48c9-98ed-0631d62aa7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a52b8d3-6683-4c06-ad40-d9292a5021f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40eef767-c76b-4816-b0bc-e3bc560bc1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e62ac3d-4b46-4149-acd0-65e3d5ec3e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c740d9-99aa-4cd7-b460-609ee29ca2bc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226f162a-e8d5-4126-b30c-41329ca1541d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b068f564-4fe6-4f97-8f83-5aed574d6f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4c67f3-91d7-4e9a-8b69-55906229eaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0996efd-0778-411a-a4b9-e201f271283c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cb9a97-2920-4749-9bbe-0256ae2cf31e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edbca76-dfb9-4a71-af68-16de061cb27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7b72d8-7080-447c-95bc-50c8683a3bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b87695c-b025-4113-92fc-23964541d9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65dab905-bc8b-4ae5-b812-e560da0c143d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce48282-4b98-438e-b136-ade047394a2c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741ebe9a-a814-443f-b17e-8b5e3e1fd752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d756d67-e473-4cd4-bc26-9375067ae3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b987593a-fa31-4e8c-ac16-a278e9a6c4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "249f6a2a-67fd-4e21-a483-46fd7804801c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbeb6620-f43f-4306-bbbf-c9f01bb5f3de",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8b4aab-75c2-4da9-8ae4-20fd3ed76d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e951989-fe0f-4d58-a61d-695e0e8436a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8b2678-4a9b-44ee-9317-37fe130d5e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5ea48e-0a7e-4cd9-ae32-c0fb5361dc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f173b1b2-f177-448b-838b-575c1edef4b4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8ac077-b1e7-48fa-b530-fba6d2f1a45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6ab69b-fadc-42cb-9922-bdb84b328fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e73b5b-fe5c-4686-8649-0aece111759e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7475c975-1bc6-466e-9a28-4cb13d606741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42a1dcc-2998-445d-8639-73ac3ba5a113",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f458c2dd-1f6a-4fba-9eb7-4330b15b0d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53585787-e541-4e79-8d73-c74fe42802cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ab383c-ee2c-4ca6-8042-7945dce38d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcba7081-e5f6-4d01-972e-8103e8c50b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c02767-d6b2-430f-93b0-d13ae6fbe80e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa27a20b-2f0e-418d-990d-baa04a1c34b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ca78cb-793f-4066-8e1d-3388bbb5e29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bcbcd1-a7f4-4e45-b6f2-fce444afa2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ee508d-cde9-43a3-89b2-943f15a985f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c6e8b1-2c8b-40f0-b345-918bc7c44b6f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3f0a77-f5bc-4993-83aa-ae146df8c2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc694f55-2e7d-4257-a1b4-b3507f1ac8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a4ba98-f2c2-4308-be21-0ac8aa67c931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd26ec2-976e-4cf0-b8f6-c400b1552faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06dd3af9-024b-4e3b-8ad0-0a77fb6d1681",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86265967-35c8-4748-9716-efa9d570eccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d1c7fa-8bc5-45e9-bd8e-2f2e4d0322e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baccfc6d-8aeb-4dc4-b964-9e4fc946028d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "560ca478-c80b-4c68-b259-d268e67502d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8304378e-e3b1-496e-ac2b-fc821e478644",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867b840f-07fa-4f17-9655-6f8666a79930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7dd13b1-6613-4690-97f2-0c79eebb1262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0528f5f-67f5-40f1-b11e-e0b9c5667116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b5f9b9-05b1-4031-b176-d1adb7751165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef5d5f2-1296-4794-b42f-502e55a1cf52",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d271a6ad-e1fa-4481-8f0d-6e9036e65527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f1cbd1-433c-4a90-99c4-b7a269f755e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665bf26f-7728-4159-901f-5750218b0b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "19b053ea-ebec-4499-918f-59d1e301735c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4655ca-965e-48a5-8222-12dd354a779a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ff989b-dfab-46ff-8324-bceee4d0700d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493c3e05-a655-4eb9-a14c-920db388f2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8039c6-a415-439c-9c81-58252365063e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "69d6dad1-2203-42e9-9e51-457abb97ce28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a79001-9aa2-471e-8288-60a79b263e14",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddb2fc7-e6d0-45b0-85c4-98a1287c8a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddfc104f-2232-405d-a561-ee0c5e3a5e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddabec1-b9a9-4696-90ea-3062cb021276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "91455c3f-f237-43c9-85f9-25191600dd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf04596-a0fe-4164-bd32-cdebc7be7ee6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1e14c3-ad4c-4a29-9472-f8adfbd24f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2379c3c6-243a-47b4-a568-c581be2dca10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edb2a5e-2b8e-400a-8217-f44439e989c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "74a57a21-26c1-434a-a0ed-665d22bda958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00200e4-02d8-4dea-b118-aad2575f1423",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52d5a18-dd34-493a-99af-0bbfe0d0fb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89feba24-fa8d-4381-925f-fa55af113f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92da69e5-f30d-4028-967d-ca3d01966d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "276d6660-7cfa-4b7f-9972-132953cb9cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6721a1e0-22a7-4bbc-8a95-d8f6929ce163",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cd5de7-f950-4935-b99b-0dc1d74f9311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6989301c-5bfb-4738-b301-76aaba611cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cf6498-4707-4b18-a4a5-201af4de1a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51f75305-c0db-47fa-8188-2fd9037d6a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5eb002-9df6-40ec-9b43-fc9b79e81eb8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ff7ae6-e80f-4219-9a88-4f76dc31de4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe24044-8790-441b-8be6-6925f50b9adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eecdfc9-fc24-497d-ac94-4276ad968333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da08d77e-838d-4a18-911a-c40a8a8e55f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0cf6d9-b70d-49ac-8d77-60e9bf7af84d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498c81e6-fd35-4e74-a76e-f13f98d43a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd616fee-a2e6-4b08-b267-1afbb7a2c805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79ce2a2-21b4-446b-8523-f5570209cd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e448c73-81a5-4102-b65a-a493aa5d5291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65263a7f-3f6c-4349-b08d-766df8a80777",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c3a2d3-81cc-4ecb-bb05-9247f4bc4b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d58db6-1674-4e79-b671-dd93b4aaa565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cefdca-d158-41e9-a8d1-44dfc45a67bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e10503a-b851-4ecd-b09b-e448f1da02b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f540b0-98f8-4983-b485-596075a27eed",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9b2e42-8417-44fc-8b16-3ccd36074fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4604745-2d16-4b44-881d-27c1a71d0907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df21c08-d745-4163-8dda-96633ad9b574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f23ed47-d068-48e5-8a94-5683fabce5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2c143d-4829-4f22-9a38-d188965f3d18",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7103f155-18d7-40d4-bf38-832e80306f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7492ed6-cba4-4587-8a8e-3fdf648454de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2c0f97-b56b-4397-a39a-ca92f298add3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded4fa43-a9f2-4c43-9c0b-ca6cade676da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db01b537-7e26-4f54-a3db-7d3c6d8b545f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1273a3a5-5d3e-4868-b23f-383a23f2d863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c82057-6b49-44e8-a10f-933df7e35e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf506c44-6f04-468a-b55d-9721da6fe7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35ab6180-961b-4f42-af3a-e8b20762a70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35e5b08-08e9-40db-8c90-542e434c40dc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb58487-1fe1-46fa-82a3-0b6cb903e7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d61b8a-bfba-4358-b4ca-886f716fba6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad462ab6-922a-4b89-8f53-7a14d257ca0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0cc71a-f249-4542-b3a7-a98df7ff75ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ade76a-b0d6-443f-9fb1-eded02964e48",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879302be-21ca-4b3f-bdbf-ca79a4b4ad96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b268a7b-4315-4de3-8e51-6b61bb48061e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3868ff00-89fd-4bed-9484-39586dd7b4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43478879-6d73-46f0-be87-a258cbeb51d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b048b2-519d-4dfa-bb2e-878c5462564e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffbd64d-9757-4ce8-9497-6c8778b51e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f861a0ab-e275-4638-9433-8dd5b9f1570c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb584e19-a917-45f7-bb5c-96b0131bda0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aebe5f4e-8337-4aac-bbe5-5f1500ba2ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77a3fbc-66d0-491a-88b0-9469f34ae647",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c162e3d-0fb0-4231-bc4c-942c14fb822f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1c2562-10b0-4c21-8488-07c956b3fb87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115cf696-fdad-43f4-a254-f82e19a8d247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e52066e2-9ca2-442d-bd81-c2847ef2b9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bedd55-6b1f-4a03-9155-ed6a3ff278bf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33ebbf9-90cc-4046-af47-c2e5f7b432b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc721d52-35b8-468b-a6f1-86cf32299a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bea4e88-1e6f-49c9-a498-8001e9ad4e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a37b2c0b-069a-4f42-97fb-ae857781f7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e0f727-72e4-45d8-befa-a2d717c11fa1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c166dfe7-9fcf-426b-b14b-2b91d59ca965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d54641e-5238-4d7b-8efc-76fd04985eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c617d4-24e9-42a5-bbc6-4a588d833853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b129834-58ac-4a17-855d-10ae2adb1b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e0c03a-4a44-4f58-95b8-d083b0c5bb69",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373651a0-19a3-4b49-ab5b-832c509c6865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3217f0fe-644b-45e9-b5e3-6c0502d23183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0194bb8-0e9c-40f3-95ff-7c00a01e8006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b68604-8cb1-4c53-bdd2-0b6ad6a5381a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83df9b04-ec3c-49a3-8129-6ad1b624d284",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf578a5-c077-4e99-b96f-de751ba3d57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f66d874-3a6c-4e55-a8fa-efe5bc01e263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1ad1f4-d6e0-4641-8ef1-e8742f415182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f511261-cfc3-4161-a421-a5602199ba0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8793918d-34e8-4317-930c-298022108141",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9452cb3f-0c74-431e-95f0-949526cdf0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b017eb-7a48-478b-b35f-59769a18210a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca33e856-66b7-4bcc-9ef7-0f88b77dee1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6194b60-31fd-4910-88b9-0cc7d6248197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c84ec1-67a9-49d9-a705-e88d296719f4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a038fd35-7f1d-40f8-b5c1-7e9b33ee0f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba4664f-4e7f-49a7-bbcf-24118f063422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773b95f6-63a1-4ade-9fb3-7aeaa5b99208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e7e776-98d8-464e-9262-526f9b42c1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e0072c-e4bb-42bc-9783-0d632cae2012",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9469bb4d-1459-4482-ae6d-d53b2875c246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb83295-3afa-42c4-871a-06c0bded380c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f2c3f3-43d6-4aef-bfe5-7677bcadf3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "209acfa0-c1f5-40b9-8e3c-0116afe6dbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1363efc-e3d5-4874-9063-a007e126685e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428faf43-ad11-47fb-82ff-c8fdeb2074fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3414dbfb-9f59-47a9-9a58-aac035508e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c39f89-1fbc-4f3b-bfc6-b1c82d61e057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d14ebc-d26e-4f85-9900-b5b9bdf9b179"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "44185f54-8c0c-4f9e-8b8c-8f1440d90026",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "083b7213-2cbe-4a91-bbcd-d313a14fe9b1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d887a3-f2d1-4342-b951-60084f0f9996",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f652a779-4ddc-47d0-af4e-41a94bf971dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a40f6f9-60fd-41d6-9dc7-827deccfbc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "997511ab-5dfe-4224-a4ff-04f436a30880"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d50ba910-e8d9-4bb6-aec4-b85198603198",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "363bbdfe-5a0a-417a-8925-effc707dffec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e525b53-6663-4e86-83af-f4341d0ef823",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9c502ab-a5df-4c99-9963-e1966f92c299"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e79b2eea-264c-494e-af66-104e67bb1d7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50b09bf0-4163-4caf-a9a4-d78e4bdbbcad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69f4660f-dcd7-4610-ab33-6497a6b13f92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4923373a-2f38-4ac0-9ff5-f7c47da6c25d"
            }
          }
        ]
      },
      {
        "id": "ee091625-8e21-48f1-a316-3f893277d188",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "998771dc-93ea-4c54-83aa-fb50cf265b81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d91e956e-df5f-4407-93e1-699210f50211",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8490acb7-80ce-45cf-9487-13b7c55e5121",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5a43eb-0c9c-436b-88ea-9ea0f42eb733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a2795e-7a50-49a0-8af2-1d1d7517079a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc67772d-e166-49a8-8b78-5c98f3b7021a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb42c117-b438-4863-a1c4-c58067d43b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f435555-5019-4e95-85a4-d2fd29c2350b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5f0d28-8a7b-4a5b-b1f9-9cb2385e2865",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c3a381-9a3a-4061-8f0b-e788d20bc3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d0bffc-fbf4-4399-b24c-d6ba43077b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5e2105-07d3-44b5-a654-279dfcef185b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da2bb61-c047-475c-a47d-9670a37fbab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd445e2-5eb7-4eaf-b5ee-ff427f2e6ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33cb8b8-ba46-45fd-9bf8-25ef782cf5ec",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0726269-ed49-41bb-a4de-d1d211875f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f072468-4ca5-4dc7-8375-eb93bc8995e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db710a23-ca49-42f5-adb7-2e9e8f5440fd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2f0f77-c02e-4ff9-8dad-2200bdc15035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a535d94-9a0d-4a5f-8f2c-ce7d2bfcdce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bec9d4-56f5-4717-992c-b315fa93f898",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcad8639-2171-40b3-8a5c-447a5314aa4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d31415-c31a-4d85-ba58-c84269b9fafc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c75da76-c85a-4d37-92bf-b1fed5ab7d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974955fb-feb6-4271-b4b1-7e2949a02d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d092c337-6023-414d-95ae-1219336e36a2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b964bd0-516a-4f2c-a4f9-7ae90f4a1272",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc9d16e-2c23-4181-b069-9e38d5534145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35d57b9-3748-4776-ad7d-5d2e33dc9247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e6a801-a261-4499-9f97-221459e1c4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfcb959-f2fa-4873-9e97-2300aca95c49",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719cee4f-f36b-4af1-a928-1cf3f6b2c70b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe47b00-8b46-482c-9cff-785d6bc8b808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01e0782-30c9-42ee-9af3-49de9a5a941c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb56c90-72a3-4d5a-a782-cd3674d017f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c35f773-48b0-459f-8295-e88489f7a822",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea45a76c-9f64-4a3b-8e6a-a2a2d19e06dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f01bd77-64f4-4f63-a1e8-24045b02ac8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea7560e-b389-4c75-a24a-06c8e4e0b4f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6508b0-8f33-4e89-bf44-ac07ad78a9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1abc111-089d-416f-ad85-a9e3a3861f50",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0ffcd3-09a2-4733-b010-b80a5b7242ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288b1b73-465a-48fd-8f91-e9fb8f8fc4f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47101fb6-64c1-4ade-9fba-61bc557ba833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03784f2-1527-40ee-b99b-c963b7a74d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128dc92e-a932-46f8-b6b1-a3d949867f0c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac67f54f-4253-4987-bf66-5b2c12735cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efdc5393-9f31-4e3e-8305-7068463b1860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa38e185-f5ca-4c36-a09b-cb81bbed34c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59b5416-5b39-42c9-b1ef-211bc4b41f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3eaee4-5e0d-4bd3-8e83-63b0c0c96854",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdf41b8-f960-4f9d-b65a-69b8e39b1c2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66cc1029-48e1-4f3d-b348-d8d5ee66de02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab476dc-26ab-4735-9833-0fa50fe30256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d389f3d0-de6a-4204-a3b4-ac5fa43400b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efa2336-8549-4216-86aa-52e3c64491aa",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a541091-e77f-40f0-88d7-ce1c57e0adc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9c44dff-0d6f-44ce-b503-f52efb70fb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d4a7bc-753e-4e33-9e04-4d86f1095784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41cff528-df0d-4650-8069-9c26203dd26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52397ed-05b2-48be-9de2-6dfa7dfd0f7f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671a7676-a896-4da9-9645-92e6f69da5cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c95f6580-7dd0-48db-8711-bd44e501f3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30093a47-5ef6-45c4-bcc7-77e130f486e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c38b2b2-2ac0-49bb-b017-fa1a0bb0515a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d5bd9b-12fe-43d5-8bed-7bcec12afaa2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488b0ab6-6e59-4125-9d50-4e1abf211425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69a2711b-0a4a-47bb-92ba-229c9a5a6127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dd7e32-b6ac-4e11-8e08-257abd73737c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1595928c-94e7-4605-a2bf-53680751f797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09604fa-2832-4483-9257-ca616d312294",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb15fbd9-797d-40dd-a1ec-a775efcc60d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f420308-10c2-44f3-9bb9-33d955324636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3e75c4-815d-49a9-b572-fc8838dd1a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4000749-d395-48c0-bcad-d1c83f1cfd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b460d9-5f80-4cd7-b4e3-f42161abc951",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf5095c-746e-4b26-a50e-ffc58c332278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce9330b-3c06-4129-b205-965ab85bf391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40380bc8-c9b0-42ca-8f03-76305cf864f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dae7b6c-2e3f-4211-a64b-957aa453e5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c004cd-040d-4dbb-95bc-8511c6fa9198",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8246636a-8b88-41c9-935a-de0db2702687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe16a807-798d-4bfe-8c89-e4e33adbf7db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61a78e7-55a1-4e20-adb0-c3942c78be1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b0522f-2fc9-435f-8ff0-69138e231f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46334334-dd88-4518-b2a8-fa5103cd9535",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d52932c-67fb-4f13-97d9-0201fa9df961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231eaa04-78ea-4f71-b9e5-c57b23de1409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadfe270-9390-4676-a2c4-c6ddd93b0a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdf48f0-0217-403d-a5c0-427b8b6e26ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38b4f0d-c10e-455a-8489-fcbf326db02a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483b0c84-1b23-48ac-9c1f-4a1d86a4a8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387c4375-f281-4e3e-8ab1-1ea3b06b5569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7ef494-f248-45f1-80eb-13f2843c0544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631f261b-80fc-4b30-ae4b-7ca2e7692f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa86c03-0e87-4d88-9b24-462e7cfba000",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f23b55-3a7b-4d93-a001-5d55eaba971c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d32711-7a27-4b53-8302-e625e67fb982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6ed694-fc32-493d-9c8a-46a6c495c148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ea0e36-0c1d-4ec7-b002-bfbe7bea4043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95475c8d-6d02-4bf0-8a0d-e7f5bda36702",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7f10bc-be88-4bde-b61a-d18f99bbf862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1ccc7d-7f3b-48a4-be07-8f45358ed7be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58eb6cfe-4fc9-475c-866b-5365b461c7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35bc837-aaeb-427e-a94b-20ecdc8de7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e9fe8a-ae40-499f-b93a-02c1a2967d2a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad41cce4-82c8-4500-aa4f-027bda432e74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd37564-1a86-4835-a298-1757c3d4b8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8247e9f4-909d-4ec7-95b8-4d7cf218a4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011a5821-567c-40f9-8072-c40e55ccceb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a368003-61f6-4dbf-8db8-fe893cfbe3a0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b542cd6-de05-46e6-8f20-1f0b961c0fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce0e0695-64ea-42ff-8232-9b5bf514630d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ad5acd-b7e9-4e57-81f8-86d6592d3ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf2a86e-8575-4e11-8162-48be4b96722e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa0887e-2ca0-4ddc-abb2-2563d010d053",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19a17eb-1a54-472a-ab66-f2a49689b1e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "988923e9-8a29-4957-9492-97f4e30032e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17db5a6-84aa-45c8-ae28-cb83c1de2a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2531419d-c1ea-4640-98c2-4388ec4919bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f92d486-d829-46c9-8770-2e3f6b7966c4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958bfea3-c903-42e3-9fe7-03aa3471ae4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4acc9aa8-3063-472e-aa6c-4f42628b38e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96c1701-e9b7-4f70-8ba4-742db19d3140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7ec9ec-ef80-4bc1-a638-386747def9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de07cf6a-2e9f-4b98-be64-29c71f73c336",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96601d4-06c5-4add-8026-c4e7d2007f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b060326e-39a8-455f-b83f-a84ed795f7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "930f6d1f-a47c-4898-875d-f61ae981d02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc5450d-3443-4538-884d-6660e0a02716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bfc77c-aa69-4191-8341-5b787e37fdfc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef984f20-b86a-4230-b729-ad389ee7f347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f67ba9d5-794e-4ca1-bfc4-96dbdc555465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766cd8e2-1305-4da4-9b8f-30adec82c5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e493bb9a-51dd-4509-922f-af845c6a2a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3bfd96-b71b-4fd9-bae7-19d696cc14ac",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5016e6-1190-4e83-b03b-58b038d096a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f078e1c-96d7-4f92-9c9e-88a3f254d3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95f19d4-8051-4033-9537-0193974b4b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddecfff-c8ad-4d45-bf42-0e6ecac57ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4288c26a-c7c2-4325-838f-5c83c3392b56",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da0d28f-4751-4cb8-a07e-21f148ef9b53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a49e545-4b37-41b6-8859-fe02b4e487a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed22ae5-8172-4bd1-bfa8-761fcab6f8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbf9443-a57b-4ded-b98a-3c240ac90acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2b623f-af37-45bc-8a4b-eaee437dce7b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997e95fc-7778-4ef0-a9a9-82713a835426",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e054bdb2-38d9-454b-a245-c7b6c34fdfa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3259397-eb1f-4179-b7ae-d3a315ddbec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4178843-d9b5-419a-8b52-03ac63520e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6af883-da08-4846-a342-70e96970c815",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8b5b0b-8648-441c-bb11-54477889f1ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97dd239f-bd6a-4614-94a4-e020072be9cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87eae2e2-9e59-4acd-b07b-e27b03ed1500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfa5c24-380d-41de-8522-5f367b3a4a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6329b7ac-af16-4f1f-ae64-78e285840177",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f93f3b-4073-45ef-9bf4-aedf46b24a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27ed0503-f69b-4199-95b8-f3c7d01875fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247ec11b-4496-4460-aa3b-db97e62db50e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca9896d-9200-4c76-a18f-0f6bf9912220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2877a391-da51-4acf-a693-78d157af6a76",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51390851-b079-443c-a886-fb8d7d83a1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa11163-0862-44c5-90c1-eebde1e88eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755e71bd-167e-4a1a-b8b6-58e81638a171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53092125-a564-4303-ac12-2e7a92bf0004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bc74a4-d59f-4ce5-bf3a-8f81180402aa",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5206ca-58e3-43a8-9ecc-81de1f08609f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baea497b-6d0c-45f5-9390-b46781ebc0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112a9829-ba4d-4365-9a0f-717e0935a02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e1af19-e373-42a4-a551-e45ec5c98e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b5925b-ad11-4df5-b531-e32b244cce64",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11c937e-1d22-4bb0-a5ac-46136b5cde28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32989231-f794-4caa-936b-20df2af77e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2af5b61-5032-4589-9b3b-69ce98bc04fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c3f055-8654-4e6e-b5b2-b8321dc53bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87490d99-b431-4feb-99e0-2a17429cd345",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3b3945-e9dd-4e5b-a843-be1e85b114f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac2c9b8-cae2-4c27-a864-067cef8fb96c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a381f1a-4997-4c46-844d-fa0e27bc2f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce609af0-1aad-4b8f-91d4-4fa9178416ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea94abcd-5160-4c86-b69b-37029cf92973",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439506ba-2336-4299-a94f-aefe2072de8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2544e3b6-ee24-4406-9e7f-e74b4029530a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f861998-aa9e-4aed-8a07-c95f8c33a297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d7e787-373b-4686-9259-aec16fa337c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f57c677-190f-4c1c-90c7-4f1db1669583",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f13d85-7afd-41f1-b7ab-80974831bd7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "460738c4-6612-419c-9537-dbb126e024d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e63bd36-9316-4c8b-9b43-3aa1169c60e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a9f3b4-e8d8-4993-aba3-1014591ef39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d7e08e-6b16-4f6f-88e3-90f01a91dcd1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c59ac1e-7582-4048-a396-09f26f367af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a37d3b-d774-40cf-908d-c7a8cf8b8db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "784bd35f-44e3-45b4-9f39-0484ccc10800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b47c5b9-64d2-463b-8e3f-3d5e33b9d45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fe34e1-83c2-4892-b131-a2c30019c7c0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e3ab2e-71e8-4b08-8219-6ba0e3f7b4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155d462f-5757-4f04-aa99-94604088027c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace73659-633c-46e8-893f-d050be4ad760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc00ed8d-6635-4127-a582-209a0ca67836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8debc614-2c95-43a5-9f7e-43555bb0e6e3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671036a4-3ad6-4298-8bd6-41c88ea2b867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0756334-caea-40af-b44c-407cb41a85ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6d9911-8d2a-40b9-bf97-73e2479a023a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71fd316f-e5bc-4ab7-859b-70715c1bea39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d110d6e0-3f6d-4151-9459-890768bbf3d9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55ab17e-eb51-4e23-8ec0-47c17e05c28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5482ac28-aee2-41c6-ac4b-c08d0ea3b823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e55b8b1-c438-4bef-911c-bcd4ea656238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ae14a5-e3ef-432d-9cf3-d449aa3f30a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6869a5d2-9bc9-4f09-8754-b60457cf7f01",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c766aeb-9696-40bf-a41c-ec9e54975ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657ca45d-5deb-4ffb-ab9b-0e56f326144c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dff1bb1-7dc4-4721-9e13-c0301e8808e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1305c1f3-efbb-4505-b4dc-c2bad29cf070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0344ae40-1e85-4b2e-876a-9d2ec3818c49",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41bd947-0426-45ef-bd9f-1527f48eb8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358413c2-1e5f-4a93-adb4-4e957e2e8598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab8444d-3eea-4da2-852b-4bebf56e4a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df12ad41-bbbc-41d4-8886-0f1349488a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ae00d4-c72c-4493-8df6-5003926c46cd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f48f66-e87f-4d75-ba17-fdacade1f59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8336f3d-7b09-4f81-bdb0-b86db818b003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3292180-3bf6-4db2-8191-337e0912d42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b44b60-2cef-44ea-8334-f3d31209267c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487f3578-3967-49ec-9c86-f1eb8e198c99",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5008ef3-6124-4917-b429-197822a3088d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540de6e5-174c-40e7-9dcd-9c4ada59cfa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2dc1a7-0a72-4a0b-a928-fc2d1c9b72fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297c1fed-8814-46f9-bc2e-37b055e15fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f808a0-795c-4bd5-99e1-ff839de7003f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebd4ec1-0498-418a-a424-a12b8ea77b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1645f17-719e-4818-ab38-0510f7f7b5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6361091a-5e64-4fbd-bdf8-63a917ab7a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08e8d8a-0da6-4478-b484-18f101af1e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a36084b-4d73-499e-a256-b544d6e08d98",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa47c2b-5165-43d3-ae24-dd8e53b14510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530d32d9-7896-4357-bd77-8d3364683d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8dd74f-dd93-4905-99dd-96a82b0fab73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3c4bd8-f6af-46c9-aa7c-49e4e07caddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cb8322-2bf8-4265-b295-43fa23170b39",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b7adc9-40bc-4f04-897d-9b2e6b1e3ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9986cf21-d962-4796-9c41-b01288a9b30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eebf67c-a9a8-4528-9a0b-3abd4666b2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc3f419-ef5c-4630-ac94-684190d32fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653309da-b978-4ad9-ad13-9e6e1b7edd00",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c0ec8c-6d22-48b0-8722-5f27fd211421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a24f68-8f05-447f-a403-054ca9a082bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b4ea58-a196-493e-b531-312ac485ca56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7908d2c5-62a7-40af-8e49-f439c1b0d1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa49024f-6ed3-43d6-ba7a-7efcdce0c365",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e112080-e1d3-42e2-bbd7-0ec763ffeed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d69426e-8184-4140-b4f2-81d0f6c5e445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2041b625-cc9a-4f04-9d63-a71b216c16dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93634009-8594-411e-b718-dbc61cb280dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53301379-3ccb-4bbe-a6dc-d1c90838d754",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef9a792-17de-4575-9d1b-e03ee250d0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665349d8-bf97-4c95-8622-2430cfb72ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fd834c-691b-4e69-9e38-f81aeca5509a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01fc5e3-b8c2-4662-b8c6-bffc5d149866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da10267-cf11-409a-8f0d-b68dd92891e0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6468bf1b-d7e6-498f-9467-ae88e9a57b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5a263a-fb6e-4e64-a747-cabcf0d2f701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe1446d-d758-4774-b40f-736c57ef96f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6ef310-3c58-45b8-9a95-17f3527f845d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5454e4-8021-4900-8279-9dc89c567334",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3328372-a100-4446-97d9-44e5658d0bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73360934-c100-43f5-8144-eca32d9554b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d713cbd3-e046-4943-99f3-834ff2d31768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b639bb-fbdb-444e-a4e1-9cef466d5825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a26d2f8-6b4a-44d8-a996-c9fb7b6d6537",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ffe302-ff11-4fa2-a975-97241cd41d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3c802e-0c09-43b9-aaa0-381347244198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969fab47-71b3-47f1-968d-aa53cbbcfbfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee102f25-7953-47e4-a6fb-d2adf47bec3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eafb78c-7765-458b-952c-d7f1afb51f10",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6628c26-9846-496a-9ecc-28679a6a2ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6bf6e8b-7559-42a0-b416-386d172a387d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7aff55-14da-4719-a874-39b311c2b8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb61628-298c-4f57-96e4-561b3035e36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e3ebbd-a5be-4a50-89dc-af39692837a8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05279f8-35e0-4772-834b-704a4e5611e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facfe148-2dfc-4f30-8b57-6941d92ccb3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28459bc4-aa5f-45c9-b591-63592e53004d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aed41e8-b022-430d-8080-d3b1e08020af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5083e859-ccd9-4b31-811b-31e2c9192217",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0060ae68-ec41-4eee-a554-ad94249454b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918d0e14-2a5f-4704-a55f-aabb492a2416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d307b0ac-daef-488a-9bfb-00d40965bd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4931682-3105-471e-a191-0053f2fdde43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8928d278-4b9e-410f-aacd-c0633cdca1af",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23850087-67a0-49f4-8aef-751dcdf5a57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7059f8f2-ef65-4847-9f4d-299f53511fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e88201-db80-4188-a2eb-48235412c83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892d039c-8897-4868-b6b8-b8d406c1154f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd5716f-5f82-492f-aded-c36650de245c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b2a816-0cae-4d48-b568-70879c4b5b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4d9dd8-5a23-4217-b414-4e125914c432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7811bfa-05c5-4fa0-ad87-b0de0d22a34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235a3a20-e0c3-43f6-9cd2-553da1ffd4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b014d57d-4a01-4db2-a247-9f718e2f39d1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809446a8-2a12-4a0b-a270-a37a20d24235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126ebee9-4d8f-49a5-a585-bdcb01f41f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b86b02a-69ee-4c97-8ca8-71d0126717ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9a8f8f-78a1-4dfd-a198-8cbf408b6401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1ba993-e061-48ff-87aa-9d974d3b997e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6827bad-e52e-46ec-b1b3-885eaf0cdc3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d4e858a-aa19-4cb5-8b4b-3c402187de1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705ccbbb-cb93-4e40-afe4-18dddaecfe68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3cb2bff-f5fd-4dc0-bd65-ce3f8ff06fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0905c83a-7940-44bd-83fe-444d63be2772",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f4f7e9-a71c-4203-9353-9aa4eb6b6083",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ea9f60f-8c00-4088-bb0d-85c65a9f297f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39981fe3-af3b-4751-acb3-7fbc2b5d8240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10a4416-910e-4aa0-b921-ac6dd2660764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040f1a04-0f4a-4b77-b36d-de4f10b33509",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b75197c-6b4a-4e8c-bb54-5639f58333cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f74988b6-9875-4eab-9df9-1ff7c3260da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b410c375-b574-466c-a42c-e4868d48ce23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d37613-9c2f-4389-844b-01c8030d8b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f07d3e-7d69-4f00-aee3-6a408649de17",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b43319-1a5e-461f-8f4d-19aa0ba39d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63d9086c-00b8-4a0c-a72b-fbb335e52810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de23ba3-8d34-4dd5-816e-b6bee81b971c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8254f1e5-feb0-43c6-b398-478f4e02bf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f12dc44-0545-42c4-a8f3-61c739b50747",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bb139f-4f5b-4dbb-8c7c-440e33f953ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0d2705-c63b-4738-ab80-72e93916157c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8d65bd-cd57-4b7c-9ff6-5856ed5bc817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8cc08b-50fe-4b3b-b369-930b4f71368e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b840d3-cdfe-4538-8d2d-6a8e2d31ce3a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1ab4c1-27d1-41a2-86db-061023409a73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb8fd2fa-014c-4af8-bd95-35f7ee357f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06949c9a-306c-4043-9406-9b12fcc60ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628ca20c-d5a4-4421-ad4a-a72ef9b5d060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf1a713-5d72-4d9f-9e57-bce80edcfe0c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d107911-b86e-44f0-8a42-0c7fdadd24ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b10f3466-c479-4c28-b6b0-0f9d32b851fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ceefe0-8025-4614-8154-65b7a5664083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dafd087-5cb1-47a8-9998-f87e52e7e005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1294f824-e03a-4b2f-a59f-243b6882bedc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a71f481-60ad-4f38-aee7-296eabfd77a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "400949ab-ce35-4136-a290-9270b913b551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a836163-5cda-4932-aba8-1665707fd49c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91d2e7b-acfd-4e54-992c-30c95b77cbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d607ff2-bfd6-4459-b12e-27ddc31d0e93",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e20a00b-87c9-4a1d-839d-aa6c2adb8873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d1122ac-e38d-4316-acf0-843cf57422c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc54340-0f86-4746-9273-14327afc39b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1051b28b-e11c-4021-8918-ac76ba634ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5524e7-5038-49cc-85f3-bbf515a3a4d1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e875b77-3d79-41ba-9bcf-b2d7b24f401a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc90e8b-b355-4890-851a-5e842c1bcf33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13322715-b783-44b7-a806-c384ef3c7cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0372fbad-5715-4fde-bd92-7b7acba32ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea255017-aaf2-4044-95a1-d827ebb3e0fa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14adcb5-f579-482b-a034-f18e3138250f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bdf37ed-7a6f-4b8f-a0e0-d24d7fe55fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a66e43-b21e-4d7b-920f-34b6b572f35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d057340-699b-4bac-ac0e-c5db5c58e46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbfe339-a3ff-497d-9127-57e9e4ac0891",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f182e7ec-f39e-4e9f-b217-b8958d676180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd0911da-eb72-4612-abc4-07ee40f6c86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c2909c-2196-4973-9239-8045eeef7247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3da18b-c96e-498e-921b-8d809ae0ac42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae27bcb-7892-42b6-9093-879d623a8955",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcf58e0-4e8a-444d-beec-190565b73680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7c2612e-09cc-4b56-8fec-6d3ebdc383e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bbb8eb-dd02-4da4-b962-309a0b400734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ef8d98-022e-477b-8801-b77de37b76f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaea7ce1-1b4f-49ca-a93a-3e274075d3f8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c728de-69f6-43f7-833e-93f2d8ece09a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e8aff1-0de1-470e-b7a7-9e699422b9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d66404-3d36-427b-ae81-e677ea047f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319de848-509f-4f8a-be07-cf1c8c292973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bf1e2e-9b42-4939-ac03-ca883d87e68f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b594e904-26a7-48b6-badd-2fd6d7750621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d41222ba-2332-483d-95c7-7fd541ed3cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69af573-21b5-4fdc-ac36-65300006dff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074d9160-f69a-4c10-b5e9-bcd2a8faf4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d2c581-d8a0-43f5-bd6e-3f6feda70d9a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbb75c9-fb20-4899-99f9-de89250ae9fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7363e22b-bcbf-478b-8ecd-a90ab3e781fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad67ff0-4bfb-46ab-a752-b43fc5b6d2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c278d0b6-015e-448a-91b4-16d9194ff050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48c82ff-cbb1-4bd9-9e22-520f4a1f2707",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf256da3-5539-4f8a-9741-05dc402a29fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "156a25f2-96c4-40ee-a7c1-9232e5f8f546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf92a1c-9d0f-4b9d-a7fa-afaf70791d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f137fdba-57de-49c8-b210-bab318fd0808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e042887a-4827-4d46-97a8-75b0b921fe7c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a8a50f-155b-46ed-ab6d-741bd66f6732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e4db9a-52bb-44c6-aea0-55ea66de6048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d03ea5e-72b2-422f-9001-2b82e19842d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e053e6-9c86-45e9-af7c-e021b4ba70fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991e5201-9698-48b5-9b35-fdcaeb9f073f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f332bcea-4089-4445-b0dd-bfec7df569ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efec7c7f-4d48-4e19-af7b-e5501050aa03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32401e7-33d8-4a72-8d2e-b67d20d25138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587b2e6b-50bf-4c2b-929a-7abfb3cc24eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ec6cf7-d45f-48bd-9b53-42ce1224e01e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2b0109-d059-4ab2-9df8-55c10b48015c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "931cbef7-321c-4760-9c83-78cb1426e2c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b328696a-b3d0-4fa7-b441-d29c170042e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279e66d0-e971-40f5-82f7-cd9bd3f41540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e801d2c3-1e9f-442b-ab86-c2f5343149c9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f66507-acc0-4c6a-89ff-d6d08cad9b48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7171092d-787a-48d4-97b7-c1f9a21d2083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e854301-cf23-4870-bf10-ea4e9420613b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039dfb44-0171-439f-b03e-ba1b694c72ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420aab71-a3a3-4a62-b398-8a761ffe0761",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5ae528-8db2-4b1d-ac01-c1b60c598a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26212dd5-5584-454d-95bb-58b3d30b3dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e34f8b-fd46-408d-8c7c-f54c7eb52bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a75095-c172-4f4a-9fa8-69996019dab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32c5c0c-8f6d-41cb-a86a-28f24ce48883",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2832b25-d3d9-40c8-9294-f73743a7686d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "261cf5c5-afcf-4eef-8b03-cd2743105936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc50c4e1-43d7-40b9-819f-32d1fd4047af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48113251-7f69-44b0-8a29-6f79500b109e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57527211-a765-4671-b33f-6aaabcae1d31",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ea9b2d-8627-4275-8d41-d064a1ef9eb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed58de63-bf8f-428a-b38f-92283a5345bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d786103-af6d-4466-a580-9f2adf4ed3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b229bf0-4d1c-452e-ba0e-4aa68010a84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c1cd43-dd6d-4c61-b558-18b6a5355edc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48cf264-5686-43d6-9704-d99214c84e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc1cc0f-8b91-4d03-be38-e36c146a2140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e72a3fd-7a55-41bb-bf3a-15d190a88a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41de03b-7981-4d23-a70d-f24850381cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315ad1b0-6a69-477f-a6d5-54e5769a8610",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448407ea-cbba-4f37-9ad3-c17f174fa88b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24cc201a-0670-43d6-aee2-f966533d1ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d1d30b-0f5f-490f-bc54-b6b2d8bc95b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690de5d9-78b2-49cf-8be7-1b4accec6230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6a2b86-42e7-4ed7-b564-ffd4f2db1cf8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57ae67f-a3c3-4024-be72-5e065dbd059e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f49b32a-26c3-4cbb-b6b9-e95722ee29bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd95cf5-3d48-4978-823c-e2594e15aafe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81f46f5-2b35-4b99-96d9-02ad9549c342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f63ead0-4919-4e36-80bf-0663ba2a0a0a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d3a280-eca7-4080-9503-017c5fced5c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b115b64-aa55-4714-933c-2723297f7406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20b12c3-e232-4629-b56d-24240e5658a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade8d876-23eb-4c8f-90ee-238e2d4a41ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f90b18-02c5-4a1b-957d-d28a6caf81fe",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf4e0ea-3cb6-4da7-86de-645298f412a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db4680bd-7af2-4fab-b1d1-ae1c77c85c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd19cb08-813e-4f4b-906a-4215bd20adea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a58bbf0-5256-4acf-928b-239776d66122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e8fd32-61fe-4d07-871c-4c5cb0b10bf9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6cbfdb-8368-415b-9023-7e68a931a4b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "079ac449-6784-4f26-8c19-ba2c79e65b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a943c12-4430-494c-b950-5c142dea6d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7066902-3a2c-47c7-bebc-b0674e36a4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006304a8-8bcf-4cfc-b95e-28f48f02d628",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48ea0cb-ecfe-4f11-a7dc-097ba5ac9f9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7d4ba52-0324-4617-b651-0a5bff0f3ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d065eed0-0576-44fc-aa6d-bb7b5e0e8f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592c5c66-e9d5-45ca-acc3-a0f3a4f3d80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3a1ac1-5af1-489b-b8e1-42835f72178e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e338ca1-7871-4228-a880-547d1fc7f90c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efe06aa4-ba78-4ac0-8139-4441a3b678fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6353348-c7ab-421d-a339-815e312f6866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2cebcc-1ced-42f8-999b-4ee8be807ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887fed22-e638-4de0-b88c-e30d65332271",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5576e9-a28b-4e44-9ebf-c9d2f518c021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ecc978d-2d5b-41b8-88a0-1b1fd17ac7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f6a530-579a-400b-95c7-1d7a9282a430",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290b8bf5-13de-4865-9caa-d1729dd1da4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30da681b-029d-4366-8309-ba7bea8795da",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefe1392-d0cb-4978-8835-964f269e0afa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50be7bfe-8c3f-4b99-8749-9337ae00d057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0559d76-5aae-414d-a492-0804eade5abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223b70fa-6c0e-4607-8f90-c69d22201049"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38d7fb19-269f-4eb1-845c-1ecf9cf29a50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89b0eb7f-c059-412d-8ac3-14a2cdede6fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1760c7c5-301b-4c9c-8a1a-1fe5406fe786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1761cff2-712f-4080-8649-5b74192e3b71"
                    }
                  }
                ]
              },
              {
                "id": "6a46d8b6-bfe8-4809-b4ae-172a49e7dca3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdd69029-c7ff-405a-8939-ce30418def1b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d21bf4a-8018-4192-bdc3-ba8c0028e1ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8752d235-77fc-4969-bb4e-0a4ed7f8272c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c93ac5-ae1e-4c61-b833-529e4c130fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74cac6bf-9f12-4e67-978d-0da9b194e812"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c7992bd-c3ca-487f-a1ef-68351d6a048c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebfae1ea-d3bc-4b2b-b00d-ea84bef4d664"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c330818-eb03-41d6-93b2-02ec3c8da200",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a198b4d-4890-4293-9baa-bd1da68f3a02"
                    }
                  }
                ]
              },
              {
                "id": "b14e84e8-d8f3-433c-8751-6b3e7b3feee3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ed225ccc-409b-4e4d-87df-f0d2d65d07bd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcae7595-55b3-4a42-bc81-5c9e66abbee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "10d60e9c-915b-4fa3-8312-29cf1f820e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb152ad-d69a-4b1e-8c1e-b8644d3429ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4624b6-5124-4c39-8a9d-66e79d05d1a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "95bdeb68-4402-4611-8b52-6c50ed0087d9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "af368dbd-f603-443f-b05d-336674b389a4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0e76ed7-cfcd-4ad9-b64d-f41b8a4f47f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cac843f7-d270-4d99-8e6e-56a10b061a51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "808d8063-c8f5-4cd9-9d0a-efb6a53070b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa41027c-9c32-4ab3-a9f1-50bafc6cc4fb"
                    }
                  }
                ]
              },
              {
                "id": "fc218127-cfe3-42c9-b4a8-859a88d32477",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2dac648-5491-493d-b5cf-2b4a260a8958",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d75e27ca-89e6-4b93-a083-ef9a5475a93e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e15146d8-86ea-4675-89e1-2f7c9d25888e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "557b2168-3698-498f-8041-46b033743e0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea09224b-1e4b-4101-8b9e-09bd47c06707",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6387b639-aadf-4c82-9486-b00ec03a813a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78d5d68d-0116-4d07-b232-6007a80b195c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2f6bb9c-6c52-415d-9efd-e109337403b7"
            }
          }
        ]
      },
      {
        "id": "ac34bdbf-eea7-4580-8dd6-432f37b1682b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1999ae48-46c2-42dc-a60c-c5a4e5a8226d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "086031df-fb08-4ac9-aa91-6c50410e7955",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d76cbf53-60f1-4703-91a4-5ebf13a4570e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000a395b-7560-4a98-8e5b-6b055806969e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "11f6d338-ddb4-4ce7-a020-85bd61b37b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b27ca1d-1820-4b57-85d5-03b30e61dbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f3a4fae-b33e-4610-8341-3c8007eee66a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c20eac3-fa7b-4486-8d3f-84d9fb2c909a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97928d84-9bfd-49a5-aec8-3eccfa94e433"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "058e5d55-e586-4501-a38d-e76b9fe99ab9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8a47904-4b3f-4127-b088-08541150a000"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ba0a67c-4335-42d8-947e-227fd0ffbb18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "38455f48-85e1-4ef4-a0a9-ebd017b41d54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "938ddea6-78a4-4388-bb5c-989dbea6562f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7661f0b-516b-4dc2-bef6-2fae8cb83103"
            }
          }
        ]
      },
      {
        "id": "7ed01341-05d2-49d9-8270-8491da46e231",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fc4b144f-993e-4e9e-a03a-9bfbc10f8b6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed28d192-578a-4907-b1d3-40f26257ee0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "188d0c4f-12e1-42a3-baa7-316853de5fed",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef201c0a-4361-4d81-b91f-d48fd8daa639",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f106d19-a4f8-4f54-81ce-bc0b4b36084b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dd3add-5193-4114-bbda-4ce42f3358de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36ec9b16-d212-4731-b82b-41f3f65eaff4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd177499-f1cd-4fa8-8feb-ff4548f23964",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b056c14e-de99-4fa7-9864-98aab978cd4b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9789b0d-28ec-4f40-a214-7208c7e5ef51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6602c047-9b92-4ae4-9401-3a896d277ffc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "503cc6f6-9510-416e-9106-c54a11ca71b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6c436156-f696-4f02-a2a7-f3c572c69f1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "badcdcfa-301b-4e25-bf17-f28ecfc4b707",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efe3f5e1-1657-4600-ae4d-edd0ffdf5174"
            }
          }
        ]
      },
      {
        "id": "68bd3d20-4369-4daa-970b-3a604bae02d2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "455d3a16-1f61-4447-9b68-68b44c1cc958",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49b81802-9ffa-4a16-985a-297f6b434401",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee2ac71e-fb3e-492a-b252-20b21a1495bd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588aab03-6075-4f7a-9dcd-70f4755c9a64",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00459ba5-f07b-4fa9-923a-f0bbd74ff687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c302e570-6760-4a8a-aa7f-0a93b95e8742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0743ceeb-9201-4405-938f-571b4baebabf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb2fea06-2e06-4eaa-8424-3283147d96fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a513bb15-2fa8-4fe4-8027-0e2df27ccf7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21f0b8cc-9916-4444-82cc-dc689dd07390",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf6aa92b-b682-469c-b3c8-2b41ccf6199c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4495492f-81ed-4675-a498-7c773050c246",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "756a4904-88dd-4c3a-a966-9c650af204a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "932c523a-08e1-4ba3-bb77-85ca7acf99e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7ff3177-c58f-434f-9d85-1164ba198569"
            }
          }
        ]
      },
      {
        "id": "8a9b1e6c-9f10-4b55-9a7f-f8361dfe15d7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d767ebdd-4b85-4c27-9c3a-e93cac11d9c7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29450db5-89ab-425d-aec6-c2736a1750fe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6b5312ae-a641-4744-ad84-40e77dd800b6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6c2989c-f21e-4d92-8dbc-d123bba556bf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a576029-6b7f-493b-8311-c303b614bb21",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.915789473684217,
      "responseMin": 3,
      "responseMax": 277,
      "responseSd": 19.003783459623,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698366780848,
      "completed": 1698366798182
    },
    "executions": [
      {
        "id": "1bb94261-26a4-4529-877a-3bc25c7a4325",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "00a266ee-1a62-4c1b-bab6-3d41243cc6af",
          "httpRequestId": "3184bc84-8179-4a24-ab2b-205009f10d27"
        },
        "item": {
          "id": "1bb94261-26a4-4529-877a-3bc25c7a4325",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "970d274a-05db-4610-8083-251a1efabf75",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 0
        }
      },
      {
        "id": "bb119681-5024-4cfb-ab53-30a97df1d90e",
        "cursor": {
          "ref": "cc8778ee-a532-44e8-a26b-7d84d5b16789",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ba9077c0-25bf-4442-9610-c9fded45ac64"
        },
        "item": {
          "id": "bb119681-5024-4cfb-ab53-30a97df1d90e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c7be7d56-6cc7-4138-bb85-b1255162fffb",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "f3c30332-de89-42e3-8111-ecbe866f048e",
        "cursor": {
          "ref": "dff1f19f-d364-4eb3-ab86-4f5bbec95f7f",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fdfefbf0-cffe-4d38-8d27-eeed8f27a900"
        },
        "item": {
          "id": "f3c30332-de89-42e3-8111-ecbe866f048e",
          "name": "did_json"
        },
        "response": {
          "id": "0957daac-84f2-4f7d-aefb-4d4bd3bf1be7",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff7aadc-0b5b-48cf-a83d-61b5e7816c8d",
        "cursor": {
          "ref": "358b0d78-0f83-46fe-84de-a61711d14f28",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6ada5e72-5876-4433-af99-6fe658a74c88"
        },
        "item": {
          "id": "8ff7aadc-0b5b-48cf-a83d-61b5e7816c8d",
          "name": "did:invalid"
        },
        "response": {
          "id": "46620ce4-ce4d-41b1-9d71-3f41859f6c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff7aadc-0b5b-48cf-a83d-61b5e7816c8d",
        "cursor": {
          "ref": "358b0d78-0f83-46fe-84de-a61711d14f28",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6ada5e72-5876-4433-af99-6fe658a74c88"
        },
        "item": {
          "id": "8ff7aadc-0b5b-48cf-a83d-61b5e7816c8d",
          "name": "did:invalid"
        },
        "response": {
          "id": "46620ce4-ce4d-41b1-9d71-3f41859f6c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7eaf03-f1a8-4efb-a056-563332f46d67",
        "cursor": {
          "ref": "c7728b19-47ed-430b-9db0-77be9fdbfa23",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9d93b741-dfe9-421b-8b2e-76df2b0c59bb"
        },
        "item": {
          "id": "8e7eaf03-f1a8-4efb-a056-563332f46d67",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "88682aab-5505-4bed-ba13-30cbb3ae37ad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b92480c-71b9-4b6a-a89a-c706f9ecc837",
        "cursor": {
          "ref": "d6b3ba22-8805-4f1d-95f5-9711398dfdfb",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0f60e819-5fdf-4fff-9aa7-3e62b98fcc61"
        },
        "item": {
          "id": "8b92480c-71b9-4b6a-a89a-c706f9ecc837",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a81014cf-f778-49a8-bc44-65f59b901ca8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a93a6cd-b95c-4cd7-8097-9750e9f6e432",
        "cursor": {
          "ref": "8369c204-2244-44df-808b-b61f538d605e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d1aadadc-134b-4edb-a8c7-8b6592350f6d"
        },
        "item": {
          "id": "1a93a6cd-b95c-4cd7-8097-9750e9f6e432",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0ad3557c-88ca-4b29-9630-f47911e65d47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425a43d9-cb98-420a-8d85-e6e086866761",
        "cursor": {
          "ref": "3e1fbd9c-9acc-40af-8f9b-06ed6a3f9024",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9060a36b-a0cf-4d0b-b670-e677e7253945"
        },
        "item": {
          "id": "425a43d9-cb98-420a-8d85-e6e086866761",
          "name": "identifiers"
        },
        "response": {
          "id": "00b524a6-f518-4ab1-ae0d-fa0dbadee935",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783b5383-518b-4705-a4ec-538c52e43d96",
        "cursor": {
          "ref": "fc6d2760-c54d-414e-bcb6-06febf97fb05",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d1464124-a751-4c58-a3d9-ef79ca3ea8bc"
        },
        "item": {
          "id": "783b5383-518b-4705-a4ec-538c52e43d96",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4fba1ac9-ece0-432d-bd56-f8d6db2bcd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f308af-2fe9-44b1-bed4-2c04c703bd6b",
        "cursor": {
          "ref": "050643ea-2724-47d4-b312-ca5247eb0ad8",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "12c4bc6c-b754-4b50-9b66-4cb59978988b"
        },
        "item": {
          "id": "31f308af-2fe9-44b1-bed4-2c04c703bd6b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "483dff0e-60c4-448b-9d9c-1f51962aee22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c6d401-5f9e-4286-a0fc-af807ab4d528",
        "cursor": {
          "ref": "9144c86c-0cce-47d8-b65b-dbf67a5a1ed3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "da05b837-e782-4d2a-a665-a98e8dabb23c"
        },
        "item": {
          "id": "c2c6d401-5f9e-4286-a0fc-af807ab4d528",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "86d153f0-30bd-4e5e-803e-6d47b23ed93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1b2be7-29d8-4a51-b09d-43a30eebe1cb",
        "cursor": {
          "ref": "64c3b4df-4b2c-4f22-9bd7-a07c8447f95a",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "28d8dc93-c925-4f37-8f07-9705e4841863"
        },
        "item": {
          "id": "ca1b2be7-29d8-4a51-b09d-43a30eebe1cb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4eda76e4-0bd7-43e2-82e0-301c24f9bab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67972fe-6bc3-44b6-b181-6f0a989864df",
        "cursor": {
          "ref": "1ab59991-c9a8-4405-a59d-6247f4823e5a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4ec274e9-51b3-4ce2-9c93-b5046b28c0f9"
        },
        "item": {
          "id": "d67972fe-6bc3-44b6-b181-6f0a989864df",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "14c2ab83-71b3-4281-8b96-780a3c4b2576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362942cc-8be0-43cc-9075-a6ac8e22acde",
        "cursor": {
          "ref": "b0ddc074-f9ed-4c19-98ea-dbf376bcf449",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "28d496d3-c4e3-45a3-a127-33a66003d1a1"
        },
        "item": {
          "id": "362942cc-8be0-43cc-9075-a6ac8e22acde",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e1777298-b3e8-4bea-a992-102fcef2b55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97640e1-e14d-41d5-95e8-7d49f27de360",
        "cursor": {
          "ref": "3959039e-0c14-46eb-b2bc-e6db5e8b5bc0",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6da5ce93-7b0a-4993-aa4e-797e5de8ff24"
        },
        "item": {
          "id": "e97640e1-e14d-41d5-95e8-7d49f27de360",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c84cfb2a-1178-4b5d-b6e1-cf3b08842f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16db3f7-215d-4af9-926b-19f5fbbc9cdd",
        "cursor": {
          "ref": "4d54abbf-4cc1-4cb6-8224-a1f75f5f0e08",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f72d0929-40d7-4fb2-a6a7-317e668d4689"
        },
        "item": {
          "id": "f16db3f7-215d-4af9-926b-19f5fbbc9cdd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "caf8acab-ab14-4387-80ae-14aa4523a953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa58226-d0ab-41a7-9851-5f8892dbfba6",
        "cursor": {
          "ref": "ca447cf4-fd3b-4fe3-acf3-4e110a2471bf",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "04474682-7d9c-473b-b3c6-a83c4feb87a7"
        },
        "item": {
          "id": "caa58226-d0ab-41a7-9851-5f8892dbfba6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "540c363c-0adb-408e-83e4-e2602269cb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb18fff8-9ae0-4f6a-9a8b-58b516ea6a08",
        "cursor": {
          "ref": "5725e71a-0163-4eb7-9514-998d4b92d3e2",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "415294af-ce71-4e33-b27d-99307705f97b"
        },
        "item": {
          "id": "eb18fff8-9ae0-4f6a-9a8b-58b516ea6a08",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "76cc9f72-a5a0-41f0-af75-f05227ad40fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5772710-03f8-4bcc-a302-a0585d8e9519",
        "cursor": {
          "ref": "7d64cce0-5b84-447c-a03d-3979d6ee510d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dd64794b-c6e7-4d5a-80d6-996d772dcbdd"
        },
        "item": {
          "id": "b5772710-03f8-4bcc-a302-a0585d8e9519",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2022e56a-1e68-4a0e-a1a5-f6c39cb6dba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c471a23f-9748-4465-be99-cdb32ed53060",
        "cursor": {
          "ref": "4f881af5-3249-4e6f-8b0c-be1ed1a160a1",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d731e99d-e3f9-4f6b-90f0-36994db190c6"
        },
        "item": {
          "id": "c471a23f-9748-4465-be99-cdb32ed53060",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "479a807c-edbe-4704-b40b-f495e55ec4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed78441a-49a3-4aa0-8252-d2edc641112c",
        "cursor": {
          "ref": "05dcd5c9-f40c-405c-8d53-1d505f9b1742",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0137d955-209c-4c07-8405-1b2a55d4c492"
        },
        "item": {
          "id": "ed78441a-49a3-4aa0-8252-d2edc641112c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "44ccaf6f-e826-49c7-b316-3cc16f399da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b5ebd0-60f1-4d65-be62-b23c3a880646",
        "cursor": {
          "ref": "7ef7700a-785c-456e-8a3e-70a27f53647e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "90dc1b2a-b6c5-4424-bfe1-d30dc695d3f0"
        },
        "item": {
          "id": "29b5ebd0-60f1-4d65-be62-b23c3a880646",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a213a52f-9a73-4696-a0a5-614a3f2a33df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49ca708-fefe-4d70-997e-ebf26737baf1",
        "cursor": {
          "ref": "db4bbe60-db33-402c-9a57-b2b7bc356d5e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f8112777-bef4-402f-880f-a1e723a493bb"
        },
        "item": {
          "id": "d49ca708-fefe-4d70-997e-ebf26737baf1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bd6e4578-94e0-4146-9a40-588a7bb0f669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013a5b94-e494-4d9e-ad63-d1ca2dac8f91",
        "cursor": {
          "ref": "298457a3-a9cf-4955-9bd8-96e776d3b893",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "75d8632a-10fa-405f-abe8-d46c5ababcb6"
        },
        "item": {
          "id": "013a5b94-e494-4d9e-ad63-d1ca2dac8f91",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6622b2ea-e43b-4c83-8267-9dba7c546c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b9ce2b-cb3a-42a6-be5e-9866a1aa8713",
        "cursor": {
          "ref": "4a9e3d40-3a09-491b-a8d9-9dcde8e671fa",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "34ee13fc-5488-4a03-b65d-3694b7b7f00e"
        },
        "item": {
          "id": "92b9ce2b-cb3a-42a6-be5e-9866a1aa8713",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1f28b4cf-178b-43c8-af7e-1a785ecc2587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40302e3a-11b1-4a29-8122-c8968ee828fd",
        "cursor": {
          "ref": "f61e72b2-ff8d-4f27-9675-835951e8b611",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3f38e3e2-e379-480b-8ffb-ed272f51f87f"
        },
        "item": {
          "id": "40302e3a-11b1-4a29-8122-c8968ee828fd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ae54ba77-9f45-4bcc-9b02-3060385f80e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8f76cd-03f7-441a-be16-29f0537fb67e",
        "cursor": {
          "ref": "4afbc931-f3cf-4921-b4a7-772eb721ccf9",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c6996805-8e07-4fc3-bcc0-af29a935bc82"
        },
        "item": {
          "id": "3e8f76cd-03f7-441a-be16-29f0537fb67e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "683f6961-1b4c-4ba8-bf3d-6ad85b22b98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81913ab-5edb-4993-9e56-4f0662594193",
        "cursor": {
          "ref": "71e85c58-5fe6-4550-b308-d4e1b474a6b7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7b5f6ca2-4882-45be-aa5d-8b6f6e253e7b"
        },
        "item": {
          "id": "a81913ab-5edb-4993-9e56-4f0662594193",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cfc2ef24-0b3f-4b9d-a364-025444b6090b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4d6759-bfec-4484-b7fa-732924804289",
        "cursor": {
          "ref": "fa441b64-12d4-40c3-8a05-8e9f9b307887",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cd5f5091-1971-448f-b73e-61e058e87679"
        },
        "item": {
          "id": "7a4d6759-bfec-4484-b7fa-732924804289",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f26ddd23-4a54-4fbb-bb3e-1102172df431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdf229c-ed16-4c44-9a5b-29de69757a33",
        "cursor": {
          "ref": "38ae7344-6810-4cd5-b9ea-da3714338127",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b958a24b-cd0f-445d-ae67-8b02c8ff5615"
        },
        "item": {
          "id": "1bdf229c-ed16-4c44-9a5b-29de69757a33",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0cc521c7-c7dd-4448-9acf-bd6058f1e053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b81e32a-13e6-49d2-b41e-d54b20725ad9",
        "cursor": {
          "ref": "0d66f8b8-0756-4ffc-99da-630e3bf93fac",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d80f23d5-8337-44c4-b9b9-26583fa42f59"
        },
        "item": {
          "id": "8b81e32a-13e6-49d2-b41e-d54b20725ad9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2f18599d-87ad-4c64-81f8-75764f244af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91766c2c-31a8-4871-8a19-ddd12b7546a1",
        "cursor": {
          "ref": "cfe2d2d7-6914-4ec7-bb46-9a96e0275a89",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ea49627d-a804-4506-aea0-7f1d6c540450"
        },
        "item": {
          "id": "91766c2c-31a8-4871-8a19-ddd12b7546a1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6725cd6b-fd62-40c5-a242-ec07a9692a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db8f6b6-4a86-4cfc-b1f3-39a62c3a0a93",
        "cursor": {
          "ref": "5f0a13ef-090c-4f54-9ece-5a3c19129c68",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d7a031e9-5852-4c2f-8850-eeaa3b2698a6"
        },
        "item": {
          "id": "2db8f6b6-4a86-4cfc-b1f3-39a62c3a0a93",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "77023b60-a042-4787-8fc3-5450cdb503fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ea34b9-9f32-4c97-bafa-82162ceca4b4",
        "cursor": {
          "ref": "f8537313-f470-4e8b-a610-0792653fd211",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7fae9784-8d3e-4f9b-b214-4a8a7ab3443d"
        },
        "item": {
          "id": "93ea34b9-9f32-4c97-bafa-82162ceca4b4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6ece0723-4d84-4857-912f-ab4244030853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e040d7fe-eec2-4583-94ae-07d3159d8e3f",
        "cursor": {
          "ref": "bb3932e1-4bdf-472e-ac4f-313ebf316cff",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7b77787a-43dd-4056-8c43-4dbd990b333f"
        },
        "item": {
          "id": "e040d7fe-eec2-4583-94ae-07d3159d8e3f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "196cda98-e318-423a-b8a2-c03d612e0ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a413bf-8f22-4451-b832-2f3180266385",
        "cursor": {
          "ref": "54c48b75-02cd-4557-a501-0fd51c429852",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6c977419-3e30-4b49-b340-7b0bf1502c18"
        },
        "item": {
          "id": "36a413bf-8f22-4451-b832-2f3180266385",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bf7f15fa-9909-4d66-8e2b-f842c3c8d842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e893d817-1671-42c7-81d8-18783fc6c6ab",
        "cursor": {
          "ref": "dc881a0b-e5e0-4f1f-aaa9-1dc4c55fa7ce",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a3b66e4e-f078-43be-99d8-8056ba41e0b9"
        },
        "item": {
          "id": "e893d817-1671-42c7-81d8-18783fc6c6ab",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "edefe63d-f1cf-4b49-97e4-3e4143a5262a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b778d4-2101-4fef-b143-f713ba4cac64",
        "cursor": {
          "ref": "1db4180e-2d21-42ca-b70a-1b72bb096fd8",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9bdb98e9-300b-42ae-a26d-205cfee6a892"
        },
        "item": {
          "id": "71b778d4-2101-4fef-b143-f713ba4cac64",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5066a21d-7d22-4b33-b2f5-278c2e82b669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18fb33a-6099-4510-a7da-6835a1253f8f",
        "cursor": {
          "ref": "ac2b130d-d08c-4949-8abc-70147f4a07aa",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "429bcab8-2646-4241-8b02-96e78b29f3b7"
        },
        "item": {
          "id": "f18fb33a-6099-4510-a7da-6835a1253f8f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4df03254-30f4-4e39-8bd6-5b5eda298db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706a8c1f-6b30-4e85-ac51-5e148cbf85b1",
        "cursor": {
          "ref": "e0685ae3-29df-4084-bf26-418aefb89d07",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1b282ca1-782b-49f6-980b-6f8d872860de"
        },
        "item": {
          "id": "706a8c1f-6b30-4e85-ac51-5e148cbf85b1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b0086d90-4a1c-4dd1-9d3b-5cd7c78a582f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44de198-a695-407c-b34c-dd0b48144feb",
        "cursor": {
          "ref": "f44cb207-4167-42bb-a688-eea6b0a6fc00",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2ae419b6-c5aa-422f-a279-0ea056081913"
        },
        "item": {
          "id": "e44de198-a695-407c-b34c-dd0b48144feb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b82bf9fd-cdbd-4474-848d-6065d4494764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae002df6-b34e-441f-87e3-b98ae3ef77dd",
        "cursor": {
          "ref": "0088bfd1-834f-4bf6-8b6b-cd72898a7726",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6317757a-5647-4496-b350-1ee6d78b0719"
        },
        "item": {
          "id": "ae002df6-b34e-441f-87e3-b98ae3ef77dd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f0b926d3-787e-4b87-bec8-63241d4265cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c428128-22d7-424f-97bb-46b5f8602110",
        "cursor": {
          "ref": "e0405ef4-29e1-4831-bfe2-8885622c2a5c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e7de37ab-8e8d-4d88-bfb1-64684120f637"
        },
        "item": {
          "id": "0c428128-22d7-424f-97bb-46b5f8602110",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c7eed9ec-7ac0-4805-863c-5a2db3c5bab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2aa7177-4ac3-477e-87b3-6e0d3ddf4e3f",
        "cursor": {
          "ref": "7fd19b47-732f-4277-a90e-ac503bc5ee5c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e31cd5e0-0597-4705-9261-5d33c664c6de"
        },
        "item": {
          "id": "f2aa7177-4ac3-477e-87b3-6e0d3ddf4e3f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "456d74b3-304b-405d-819c-be9598efccbb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 28,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b6c4b7-472d-4511-8983-eb35b5a80220",
        "cursor": {
          "ref": "1c4dcb8e-fe76-44b3-a5e8-f9ba00a4bffe",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7216d644-a419-41b6-90d9-aa09a2bcd63d"
        },
        "item": {
          "id": "05b6c4b7-472d-4511-8983-eb35b5a80220",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "03a32fea-3097-42df-9486-b8b57f2561ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848f3ead-a940-464d-a0c2-b4ad7a4276cb",
        "cursor": {
          "ref": "0b76a23f-b5cf-41c1-9b4c-a5a0134dec99",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d9401de8-3080-4988-a281-79462680a626"
        },
        "item": {
          "id": "848f3ead-a940-464d-a0c2-b4ad7a4276cb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "81c08fdc-c442-460c-8281-b5651251faf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06156060-8556-4e0c-b9f7-78f89d1d6de2",
        "cursor": {
          "ref": "acfff8c2-92bc-4b6f-9d53-fd7500743691",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ea596e04-6b97-46b9-bf9d-3bfa960f3a58"
        },
        "item": {
          "id": "06156060-8556-4e0c-b9f7-78f89d1d6de2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ced0114a-444f-4e23-8fac-482f901b7253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b29086-2999-4f28-a90e-47749894c754",
        "cursor": {
          "ref": "f940963e-5589-4a10-bda7-5089cbf211b5",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3c7028a4-239f-4238-b844-b7ddcd8bec16"
        },
        "item": {
          "id": "94b29086-2999-4f28-a90e-47749894c754",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fe00be25-373b-4cff-be31-f5278c6e5d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8469f0d2-77a5-46a1-a133-89bc430034ab",
        "cursor": {
          "ref": "2d536c43-ad75-4ff9-a896-5df5c4757572",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fdd784c2-206a-432e-a588-5b9194394761"
        },
        "item": {
          "id": "8469f0d2-77a5-46a1-a133-89bc430034ab",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3335f0b5-6ae5-48aa-936b-0bb7c9ade508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0cd2b8-e2bb-41f4-a90d-98f141d65b5b",
        "cursor": {
          "ref": "e5edaa7f-ff2f-459d-825e-9d88ba5e82f0",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "75f21575-6f8d-411f-98cd-455c6a6b8322"
        },
        "item": {
          "id": "4e0cd2b8-e2bb-41f4-a90d-98f141d65b5b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "070d2423-1cda-4747-b58e-0f0eeade3219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fce217-7dee-4e55-82d3-cfbad594e410",
        "cursor": {
          "ref": "d3ee4510-5813-41ab-a822-a9998710ee39",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "68855836-b95c-4b50-a21f-51a854005421"
        },
        "item": {
          "id": "10fce217-7dee-4e55-82d3-cfbad594e410",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0b76e7aa-6011-4f3b-bc15-6501be5d2fed",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b825aca8-2fc8-4cbe-815b-aebc623cc2e9",
        "cursor": {
          "ref": "83608bff-fa0b-448b-a5a1-a368036b2e46",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "24c3c658-cc15-432b-98cb-33cebe3d26ab"
        },
        "item": {
          "id": "b825aca8-2fc8-4cbe-815b-aebc623cc2e9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0f7c03d5-9764-40ce-a0a7-c31d697919c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e57944-ff77-4db8-ba05-6e7323081f47",
        "cursor": {
          "ref": "997e9879-035b-4b65-9d32-1695cfeda553",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b382f657-2715-46ce-acff-145ea83dc87e"
        },
        "item": {
          "id": "26e57944-ff77-4db8-ba05-6e7323081f47",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ff01c7bc-4425-451c-926b-c9c809175c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773f6dd6-23d2-4f66-84a7-6c432203a690",
        "cursor": {
          "ref": "291e6ac6-acf1-401a-a536-e9ddbd00b4cc",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4844c4f7-0e2e-4251-8958-39becd6417d8"
        },
        "item": {
          "id": "773f6dd6-23d2-4f66-84a7-6c432203a690",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "442211d5-c947-4631-8948-aad299ad0bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f578e4bf-eeb3-4eef-98ff-8fbb533edafb",
        "cursor": {
          "ref": "5678c2c9-11d3-4466-9a28-cf6c77a6d343",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "21630a55-52ec-426d-aad1-79b75b771e98"
        },
        "item": {
          "id": "f578e4bf-eeb3-4eef-98ff-8fbb533edafb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b1826bd2-864f-451e-bf1a-8c4764eb238b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889681f3-3817-4855-8ca5-6a241d7858b9",
        "cursor": {
          "ref": "8c1e5d17-b7e4-424d-a13e-58b504ca6c3b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "37f48064-bf88-4cf6-8589-eae304c00ef2"
        },
        "item": {
          "id": "889681f3-3817-4855-8ca5-6a241d7858b9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d17153ad-e43f-4cfd-85bb-918210c1a990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb07267-059c-4a44-8372-88e74e178f0f",
        "cursor": {
          "ref": "c0fb32d2-b403-4bf7-a514-3a2881f77adc",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aa35e85f-4f4b-4ac4-9456-39e21dfed391"
        },
        "item": {
          "id": "2eb07267-059c-4a44-8372-88e74e178f0f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d628a8f2-3212-4431-88cb-bdaf18fe2ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc18b28-531c-4923-ba7d-c961925b4622",
        "cursor": {
          "ref": "dcda5413-52e7-420e-ad57-c0c2563302e5",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f51bf23e-f208-4805-bcc7-2aaefae31954"
        },
        "item": {
          "id": "7bc18b28-531c-4923-ba7d-c961925b4622",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9a595cfc-dd86-4f29-ae15-3fb6f2f05302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67417a04-371c-4bc1-9650-c9c56a0d902d",
        "cursor": {
          "ref": "bcee91ce-5ecd-4315-8ef4-786b79aab177",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "493a8a1d-ae97-4c1f-902f-8d858e309c30"
        },
        "item": {
          "id": "67417a04-371c-4bc1-9650-c9c56a0d902d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c5f2e1a8-5a54-4678-a838-c99ffe28d941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c89289e-7cc6-4eae-8c6f-294f3ffc7f33",
        "cursor": {
          "ref": "9c4f8326-534f-47e4-a93a-d76c18168b66",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8bfc6f0f-2c2e-4371-942a-11a4c118aabc"
        },
        "item": {
          "id": "7c89289e-7cc6-4eae-8c6f-294f3ffc7f33",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5368ff81-7657-4df7-a8de-91fa16aa7ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a1c26b-b7a7-4384-b5ad-a65b86c577e0",
        "cursor": {
          "ref": "5abf1c57-4efd-49fe-91db-3826a07ecf17",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "74f6e55e-2309-4e7e-9fec-673e17664bf5"
        },
        "item": {
          "id": "d9a1c26b-b7a7-4384-b5ad-a65b86c577e0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "52dadae8-f2c3-4be9-a39b-1673566d3a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ab39db-309f-4f7b-afe4-21adb4e37106",
        "cursor": {
          "ref": "11475732-a224-4f5c-b5e8-92de3994505c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "644368a2-eaea-4dc7-a556-81b2ce651531"
        },
        "item": {
          "id": "55ab39db-309f-4f7b-afe4-21adb4e37106",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "70422d85-71f9-4f10-b56b-fb9870f11de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f642fbc4-de3d-49f8-b54d-a262ca5de3ab",
        "cursor": {
          "ref": "231b1e36-2151-4324-9c19-608e376b33f3",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7ea113a4-3175-4bdb-96d3-ebd1afd2e6f9"
        },
        "item": {
          "id": "f642fbc4-de3d-49f8-b54d-a262ca5de3ab",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f71ae601-c1d8-4dc9-96d4-5c9d0875e55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb851de9-cef8-4cc7-94bb-c1bc966d6bc2",
        "cursor": {
          "ref": "fd934711-a98d-4dce-9291-cc2f793e28cd",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "70cbab80-0026-49b1-a083-a24020352fcf"
        },
        "item": {
          "id": "bb851de9-cef8-4cc7-94bb-c1bc966d6bc2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f10a4130-167a-4a0b-86a0-dabd13375d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54cda69-74f0-4a8a-b17d-8a3a9f6034fe",
        "cursor": {
          "ref": "c54f5149-8617-41bc-aac8-9647a6e05033",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a1d1b562-211e-47a8-80b5-102da39ffc43"
        },
        "item": {
          "id": "e54cda69-74f0-4a8a-b17d-8a3a9f6034fe",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "df076733-fb7b-486b-94e5-83df9f731415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531f097e-3952-4d30-82b9-044fe7532523",
        "cursor": {
          "ref": "12386cbb-3424-4bd4-93da-e93bc17fe91f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "01a1e85f-bd9a-428b-af2f-35f70f29d1be"
        },
        "item": {
          "id": "531f097e-3952-4d30-82b9-044fe7532523",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8e7cec9c-48d2-4e3c-8650-d6de9bdc2c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a0b143-abd5-4421-ab83-bb9999d3c20d",
        "cursor": {
          "ref": "d20bf5bd-673a-48a1-80a9-f3b469b5d158",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "86fd4058-0269-4414-8e83-e0ffd3e182ef"
        },
        "item": {
          "id": "61a0b143-abd5-4421-ab83-bb9999d3c20d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f407195d-6942-4c61-99c4-9971a9469054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0714da3c-cbfa-415c-b99e-1ec2310e9751",
        "cursor": {
          "ref": "27283acc-9413-44b1-ad7d-95abc5d1c343",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "523b3496-dcf0-4ad7-88eb-1f87f3bc7f46"
        },
        "item": {
          "id": "0714da3c-cbfa-415c-b99e-1ec2310e9751",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "14137809-9b1a-4ed2-99bf-0dbf77e16fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652f46f4-7850-4583-ac96-9eb87ce27fd2",
        "cursor": {
          "ref": "d6df2934-0f26-4d13-8fe8-308fe1a6fa44",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e0349f7c-43bd-457e-8653-9101540ef038"
        },
        "item": {
          "id": "652f46f4-7850-4583-ac96-9eb87ce27fd2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f4b4055e-bb80-4540-b5dc-7f5483371b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3089a353-045c-421d-bd6b-79d22af9b494",
        "cursor": {
          "ref": "148f4097-4bf7-47d0-ae66-503198e29175",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ca47d909-a504-42c5-bf09-b5f1bf853308"
        },
        "item": {
          "id": "3089a353-045c-421d-bd6b-79d22af9b494",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "625ef3d2-09c8-4707-8516-2792f96c4307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73268c5a-b455-4f65-a4e1-a3a2c75d2dbe",
        "cursor": {
          "ref": "3afeb0ee-f0c9-4919-be0e-b76edc324547",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1f780890-972c-499a-b0f5-3d6cd7bc9d01"
        },
        "item": {
          "id": "73268c5a-b455-4f65-a4e1-a3a2c75d2dbe",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "35abb021-bea0-48d9-865f-28d2ea7296af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e75b8dd-7689-4f9d-87e7-5c51a7fddb4c",
        "cursor": {
          "ref": "59018fcf-e70a-4625-9800-e7d39aec2bd6",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "04e93c34-58d9-45cb-9723-91b67ed5d0f4"
        },
        "item": {
          "id": "8e75b8dd-7689-4f9d-87e7-5c51a7fddb4c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "41133535-1b65-4f59-9462-28e0a74dc675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2bbd97-7fac-431e-87f5-765c3392cbf2",
        "cursor": {
          "ref": "06327809-42ac-4733-818a-dffd9dcc8a7c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d10c2753-85de-4077-a02d-0c886a361e58"
        },
        "item": {
          "id": "6b2bbd97-7fac-431e-87f5-765c3392cbf2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b780481d-ea03-4b63-a298-30eb95441a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599272a6-eb87-4f20-9c7f-76e6cad57026",
        "cursor": {
          "ref": "40e70206-b0cc-436a-bbf0-ebe93764ba39",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b16a28e9-1c79-4d7c-b991-3a594d417f3b"
        },
        "item": {
          "id": "599272a6-eb87-4f20-9c7f-76e6cad57026",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6dc667a7-14f2-4aae-8437-cd5e38b6804c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8433f5ec-b80d-4119-9b0e-26333c911a12",
        "cursor": {
          "ref": "600e963c-0ad1-4ae5-9636-5f1ba4460eff",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "edb4966d-c2bc-4390-a23d-1760330401a2"
        },
        "item": {
          "id": "8433f5ec-b80d-4119-9b0e-26333c911a12",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d807453c-4bfc-4a9e-b549-5dd9c15d74e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a84c93-5303-43ca-8351-2d96148b351f",
        "cursor": {
          "ref": "84e64615-275a-42db-9ad9-03bc63ccb597",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ae0e0615-f92b-4ede-acce-6f1156c57eca"
        },
        "item": {
          "id": "88a84c93-5303-43ca-8351-2d96148b351f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7af1ddf7-027f-4310-a697-835093cf82de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c54af4-d93a-46af-bab5-9e394c43f3cb",
        "cursor": {
          "ref": "2105f5ec-cd4b-4eca-8348-8e2ee81151f2",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c7949ba5-d692-4a4f-8bb6-07d75706469d"
        },
        "item": {
          "id": "71c54af4-d93a-46af-bab5-9e394c43f3cb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f044b5fe-5486-4236-b471-c6217565fd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b26139-a159-4b3d-a8aa-c3075228056f",
        "cursor": {
          "ref": "eb4d3450-fae1-4ce5-9adf-289c1e62adc2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "eb5dfbb5-dfef-4e93-8cd5-9615868dc33a"
        },
        "item": {
          "id": "c3b26139-a159-4b3d-a8aa-c3075228056f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b1321218-d399-4934-91ad-acd2235bdd04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b335bcdb-a17e-4d3b-8c3a-2b99cb5b6f21",
        "cursor": {
          "ref": "a115a40e-98c6-4b69-940f-43699458dd06",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ee778819-25d2-4bb4-aec0-2a4ee60455ed"
        },
        "item": {
          "id": "b335bcdb-a17e-4d3b-8c3a-2b99cb5b6f21",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "181fe5b4-286b-48fb-ae78-8d2c9b7dc4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c5f827-b1bc-4df3-9fcd-694f54c62dc6",
        "cursor": {
          "ref": "c524ac31-bd9f-4ee7-9248-955aa0147518",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "84df80af-8a78-49a2-8e45-b493edf738ef"
        },
        "item": {
          "id": "17c5f827-b1bc-4df3-9fcd-694f54c62dc6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7f59181e-9374-47a0-96fb-1523d3869df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904b9ccc-1e07-4619-99dd-1325e251a52a",
        "cursor": {
          "ref": "8092cc67-8449-482b-8aca-db49092733c3",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "055644e3-5e19-4b51-aad2-4ab4add141a1"
        },
        "item": {
          "id": "904b9ccc-1e07-4619-99dd-1325e251a52a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "51b2f876-6ab3-469d-8046-19716f610ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ca8273-4bea-41ca-894f-6502d0eb7a7d",
        "cursor": {
          "ref": "4384c46d-d84e-49b1-87d5-ebfbbce49a48",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b9622d6f-b0df-4efe-aba3-f2eba0c24717"
        },
        "item": {
          "id": "e7ca8273-4bea-41ca-894f-6502d0eb7a7d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8de56c9e-17ca-4d87-83e7-7ce523f03d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d843be-8593-4e73-87b1-564fe1ac30ba",
        "cursor": {
          "ref": "75911d39-7b31-47b0-9745-988e623a61d8",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2bc7cd00-998a-45a6-84fd-e687be447fdf"
        },
        "item": {
          "id": "44d843be-8593-4e73-87b1-564fe1ac30ba",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "161766fb-b6d6-4821-bd6f-924eea1b8356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe27dab2-6818-4ef6-94bc-affef1384b0e",
        "cursor": {
          "ref": "630f42ab-0ccf-4db0-a58c-f7e101fe6b95",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "42f82fbc-776b-4036-b3ce-09414da70408"
        },
        "item": {
          "id": "fe27dab2-6818-4ef6-94bc-affef1384b0e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b3e80e00-c1de-4cbb-b907-84d54c8695ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0378239d-65d2-48c5-8665-d545b4301ce6",
        "cursor": {
          "ref": "9a3203ce-260c-4437-acda-2d535efbb67d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "01a86f28-c5bc-4464-beed-081386b39006"
        },
        "item": {
          "id": "0378239d-65d2-48c5-8665-d545b4301ce6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5be7a368-c42b-4516-92ce-16df6fa666f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ebaf19-9d56-4bc7-a276-3b5bdf952311",
        "cursor": {
          "ref": "9f2d3317-f117-4b75-a374-031e5a1d4cef",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a6e2d247-662b-47cb-9ff8-d673125706f9"
        },
        "item": {
          "id": "d9ebaf19-9d56-4bc7-a276-3b5bdf952311",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c39be70e-6605-4a90-96df-21c5732407b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62df13bf-59f3-42a6-942a-ad7aa99b6cd8",
        "cursor": {
          "ref": "7cfb8169-3ecf-40f4-a2c5-8c54bda7c7ba",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "44c86d54-2822-4aa0-beb3-27f5ae5a4cfd"
        },
        "item": {
          "id": "62df13bf-59f3-42a6-942a-ad7aa99b6cd8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b0614b50-5ff5-4893-9a8c-5b66f0587965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1522a3b8-91af-477e-b6d3-73b1cc2f16b3",
        "cursor": {
          "ref": "5c504feb-d98d-4fc7-b4b5-b12b1a71131a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7c08fb47-419b-45f0-9a3e-dae5568d77d4"
        },
        "item": {
          "id": "1522a3b8-91af-477e-b6d3-73b1cc2f16b3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c84e8956-4c9e-4ea6-a59a-a6d77f321fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b790cc3b-67c5-463f-bafd-7a5caa214e54",
        "cursor": {
          "ref": "07fd357d-6441-4e44-bac5-715c97b22610",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7d872e8d-12b9-4279-91eb-cf574974ccb7"
        },
        "item": {
          "id": "b790cc3b-67c5-463f-bafd-7a5caa214e54",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "824a0af1-4e5c-4505-bb93-82205c4edef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e50275f-c742-413e-8764-e82bd493f0f1",
        "cursor": {
          "ref": "3dceac6b-a190-4d35-89b0-914f5487c7f1",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fba3059b-de3b-4310-947f-8a2699ebd0ba"
        },
        "item": {
          "id": "4e50275f-c742-413e-8764-e82bd493f0f1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e2208127-4911-47b9-88fa-939241fa29d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc56087-fa74-4b3c-9ac2-da9a5344a70b",
        "cursor": {
          "ref": "b5fd38cb-44c2-4b07-b3a1-bacc85e0f8c3",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6f0d98ce-8899-48ae-89b3-8495129d62cd"
        },
        "item": {
          "id": "cdc56087-fa74-4b3c-9ac2-da9a5344a70b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "174b5348-04bd-4245-8b9f-96c9a526e167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dda1f92-8920-4f39-a091-8e3637490e41",
        "cursor": {
          "ref": "e40bd01a-ebee-4f5c-91bc-933fd097b5f5",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "669e0c14-24c2-4bd2-92ae-e376a2f76d80"
        },
        "item": {
          "id": "0dda1f92-8920-4f39-a091-8e3637490e41",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "501e9605-21b7-4d96-8354-d919d981449e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0808653a-2b9f-41fa-a23e-4572305715a6",
        "cursor": {
          "ref": "7fd2dd96-8179-4e66-bed5-b14c9ec51ec7",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2be00087-a00f-42d6-9e12-b3f895e8328c"
        },
        "item": {
          "id": "0808653a-2b9f-41fa-a23e-4572305715a6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "21ef13d7-0ee7-451d-a333-a1c8c1401e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52357b4e-f63a-4717-893b-99a1eacee29e",
        "cursor": {
          "ref": "907c8ec6-9ecb-48f8-b86a-13a10c18b387",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4e2682ee-b816-4b52-801b-d96cd9b61d8b"
        },
        "item": {
          "id": "52357b4e-f63a-4717-893b-99a1eacee29e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "edfe863e-8584-486d-9e8c-610fc8435034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b75f7b3-2a75-4035-8680-6da46bf23229",
        "cursor": {
          "ref": "2628ed37-cbed-461e-9cb1-c8b595e22f28",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "54ab118f-01f1-4754-9481-e0d14289ed89"
        },
        "item": {
          "id": "0b75f7b3-2a75-4035-8680-6da46bf23229",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "98d13105-d19e-46ee-8964-60bd4c655999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c05538-ad96-4140-a426-58ed00e0405f",
        "cursor": {
          "ref": "a351bbf3-c86c-40d3-ab14-b7c87cb894ba",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f4e5ded8-a017-4f73-ab9c-c9d670fa23a6"
        },
        "item": {
          "id": "23c05538-ad96-4140-a426-58ed00e0405f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "de26a880-b1ec-4cfc-9815-1ce818f1aaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f0500b-9b3c-48b6-88e1-13baf2b02e83",
        "cursor": {
          "ref": "668717d6-69a4-4f94-972e-a44ad8f3ce1a",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8752aade-4122-4703-a16a-699ede6b7ef1"
        },
        "item": {
          "id": "77f0500b-9b3c-48b6-88e1-13baf2b02e83",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6ec84276-a0ce-4622-addd-01bd3833add8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a9edb3-b580-48af-9342-9589a0525e04",
        "cursor": {
          "ref": "67625c8a-b5ed-488f-8f8c-9056b046951f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "52e16254-a9c2-4753-9e72-4ebae435ad25"
        },
        "item": {
          "id": "09a9edb3-b580-48af-9342-9589a0525e04",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "703e146f-4f6c-405c-9ecd-99bd15fb35e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc811d4b-b88e-4406-8755-56d6c44b7110",
        "cursor": {
          "ref": "35fe03f2-5714-468e-8d10-8b05d713bf7e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "30b1b216-217d-45dc-beed-647409b1036c"
        },
        "item": {
          "id": "dc811d4b-b88e-4406-8755-56d6c44b7110",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1b167663-0710-4ff8-bae4-ba3ed8977e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07744e78-d8c4-42ee-ba2d-4d5930aef392",
        "cursor": {
          "ref": "ecb79b33-1e3d-4b94-a25d-746cfdba9e8e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "eb8fb42d-567f-4cea-9192-723647c88c12"
        },
        "item": {
          "id": "07744e78-d8c4-42ee-ba2d-4d5930aef392",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "484b676c-145b-41c1-9614-85423d0abb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe31179-ca03-4a19-a222-82d354768d06",
        "cursor": {
          "ref": "c816f569-aa02-4d95-a7e9-936e138e8950",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "eb993df4-9752-42a7-916a-699f028f7241"
        },
        "item": {
          "id": "2fe31179-ca03-4a19-a222-82d354768d06",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9de5e683-abe6-488f-a489-e26e54a8268d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a20d09-4c2e-4887-b3ae-c381d732b37c",
        "cursor": {
          "ref": "df9a22e5-d6c0-4dee-905b-c41a14b546a0",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b7b44b7e-2c6c-422f-918f-b90784e7d0c2"
        },
        "item": {
          "id": "25a20d09-4c2e-4887-b3ae-c381d732b37c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5b8e0488-c9db-4a8b-9577-36b3cf542927",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e23b252-6187-4866-b200-6239a11317a1",
        "cursor": {
          "ref": "b64af26a-6f5a-4773-8882-70cf2fd761e3",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3fc42659-3d7f-4d03-b6b3-4b8ed84ce9e7"
        },
        "item": {
          "id": "3e23b252-6187-4866-b200-6239a11317a1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f93782a3-ad7a-4e12-b286-c0cc11122b09",
          "status": "Created",
          "code": 201,
          "responseTime": 77,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bd51e0-d684-4a7d-8246-7e87f6405102",
        "cursor": {
          "ref": "3556540c-8d40-4e3a-8e47-cff682e763bf",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "43756a48-afad-47d2-bc39-51590a235dd2"
        },
        "item": {
          "id": "c4bd51e0-d684-4a7d-8246-7e87f6405102",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "267d62ec-79d3-413e-9797-ae28a7b5d1b3",
          "status": "Created",
          "code": 201,
          "responseTime": 100,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a456efab-d72b-4c79-b9b0-c311ff2a6c71",
        "cursor": {
          "ref": "745c058d-4680-43ef-b3f3-1fab645b5e42",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "24237834-e3af-4264-a517-8b33d4710d04"
        },
        "item": {
          "id": "a456efab-d72b-4c79-b9b0-c311ff2a6c71",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5c0eac23-06dd-4e23-950d-9501bd27c959",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4217a86-e85b-482a-b830-cc18589b6d3e",
        "cursor": {
          "ref": "a8521034-7109-4292-a90f-e764855be7e1",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b5a9c433-6b04-4a0b-86be-61d540a7aa7c"
        },
        "item": {
          "id": "a4217a86-e85b-482a-b830-cc18589b6d3e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "979ab91f-4faa-485d-bf90-67894507bfb2",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "372254e8-138f-459f-aa3f-517cfcd94f4b",
        "cursor": {
          "ref": "d3ca705f-168c-4ba2-a3cd-69f1791fe29d",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d3ceea4a-061a-4c18-bd41-c076721981fe"
        },
        "item": {
          "id": "372254e8-138f-459f-aa3f-517cfcd94f4b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0dc513a6-5252-4b2b-8186-856e8c69be22",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e145991-6761-4997-9414-8de4083d968b",
        "cursor": {
          "ref": "67acb68c-1e8e-4319-9068-686eb423ff6c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3a95be4c-0087-46e2-9a54-d9406566bfd5"
        },
        "item": {
          "id": "1e145991-6761-4997-9414-8de4083d968b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f8e12db5-268e-40dd-8da9-275fd1cf7fb4",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933d4528-026b-48b2-bc15-ea6b541cc471",
        "cursor": {
          "ref": "7f006c58-2102-456c-b264-538a1c6ce505",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a0f608ed-b3a0-4f95-92b7-ec6de9409848"
        },
        "item": {
          "id": "933d4528-026b-48b2-bc15-ea6b541cc471",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2fdda7ca-3a47-4da3-b594-5426a2462dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fe0f28-a0b8-462d-8b84-27df87ee3566",
        "cursor": {
          "ref": "ca7485b1-932f-4182-8144-a5d28762aa66",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "236bd1ca-0e10-4857-b338-9788118d746a"
        },
        "item": {
          "id": "67fe0f28-a0b8-462d-8b84-27df87ee3566",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6bffb3d4-fa3e-4547-bcb2-c8bc0d3af4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855d7ea5-e1e1-45b9-950d-d90d4690fb26",
        "cursor": {
          "ref": "deac2a59-71f8-43cd-8ce7-a8610ce5fe6b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "585ce2e4-d5b6-4478-8bd6-0ad9d793da61"
        },
        "item": {
          "id": "855d7ea5-e1e1-45b9-950d-d90d4690fb26",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ca860510-1a9d-47ac-83ff-25bd541e93dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351a98dc-939b-404d-a0a4-051b510840ba",
        "cursor": {
          "ref": "b6697507-2548-43a4-96f9-a138aa1ee9a0",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "702dded3-6923-49ef-b86f-4c8d56bc5355"
        },
        "item": {
          "id": "351a98dc-939b-404d-a0a4-051b510840ba",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c7029674-d3e4-48ba-ae75-9b6eb3c296a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3143b04-5ce0-433a-b9d3-5a59b0f8e53d",
        "cursor": {
          "ref": "ab6d1081-b194-44a3-a3c2-b454b266adad",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2d10ba7b-2069-450e-9122-2d5bb8cdece9"
        },
        "item": {
          "id": "e3143b04-5ce0-433a-b9d3-5a59b0f8e53d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e0448ca2-68f7-45d2-8a76-5872b40049a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63875f04-24ff-49a1-ae8a-19a22eefc590",
        "cursor": {
          "ref": "12648fac-20ba-44cb-8f7c-36c78a9f5f00",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "aa81ea2e-cdec-41ba-822c-6fec39b41383"
        },
        "item": {
          "id": "63875f04-24ff-49a1-ae8a-19a22eefc590",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1c8092ac-66e3-4c08-9e9a-1a305f95f52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6ca267-cd1e-4ec1-bf8e-8522421b87d9",
        "cursor": {
          "ref": "1f9f449f-ded6-4ffe-a95c-3050240a3601",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "796644aa-86f0-4813-91c5-906da7d624c3"
        },
        "item": {
          "id": "3f6ca267-cd1e-4ec1-bf8e-8522421b87d9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8b88fa3d-9263-4ec0-a9ad-3d2ed973f5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60177b44-188a-4edd-97f4-01a5553492fd",
        "cursor": {
          "ref": "3d6aee7d-346d-4e57-bdf8-18cd4c369cf8",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3869da19-adaf-413c-8cc3-cb75f3f6456e"
        },
        "item": {
          "id": "60177b44-188a-4edd-97f4-01a5553492fd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b89509fc-6af4-4710-8851-8660fd409684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0361bc98-f302-448e-84be-af2f46ac0a44",
        "cursor": {
          "ref": "7766b6bf-43ca-47a5-807a-738ffaf04487",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4cea0729-687c-4a26-9acb-ec9f043f222b"
        },
        "item": {
          "id": "0361bc98-f302-448e-84be-af2f46ac0a44",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c12d7167-7344-4d10-bbbb-7939e1a9cb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7b5ae0-09a5-475b-ae03-ac9199396edf",
        "cursor": {
          "ref": "c300714d-5087-4478-93a4-636fe6a56216",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3e0d5fb7-f0a4-42d1-b005-2f9aab4e4dd8"
        },
        "item": {
          "id": "ab7b5ae0-09a5-475b-ae03-ac9199396edf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fdae2203-6b50-49e9-b517-afbb9eef16e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56651a34-1eeb-4649-ae67-809c334cb6c5",
        "cursor": {
          "ref": "b0d48a70-a16c-419a-a4c8-7dcef2b6e5a6",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c2bfaf8d-8543-4d4f-b355-2c3f87bd2c4f"
        },
        "item": {
          "id": "56651a34-1eeb-4649-ae67-809c334cb6c5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "12f5855c-eefc-4dbf-836b-76f1fc64098f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce946a1-24dc-4a96-80dd-45ae0a42d77a",
        "cursor": {
          "ref": "304fe15b-4cbd-4396-9eee-d2b0e5ff219e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c793d6a4-b0c6-4988-a185-735d7d1d5067"
        },
        "item": {
          "id": "4ce946a1-24dc-4a96-80dd-45ae0a42d77a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dd07ae26-a187-4285-a3ef-bdffe266415f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b3d5ce-5e55-470d-bbb9-68c378f6e6fd",
        "cursor": {
          "ref": "6ccf8471-9afb-4459-b44c-3d425c3775bc",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8daa44b1-b305-4ffb-8691-71e88ca315f5"
        },
        "item": {
          "id": "a9b3d5ce-5e55-470d-bbb9-68c378f6e6fd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "85485005-a27e-4a8f-9b33-13552103c2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2082f090-4f9f-44ce-a316-a280a2848075",
        "cursor": {
          "ref": "edc4858c-c4db-45fe-b8e1-66ef729c7f40",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d9cb0779-5cc4-4160-8c8f-2d70e9a71153"
        },
        "item": {
          "id": "2082f090-4f9f-44ce-a316-a280a2848075",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bd5d75b3-d144-49bb-93fd-a8f230fd5820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b437af3-1c42-4eab-8b57-d1d43abf3c4b",
        "cursor": {
          "ref": "45fca3e6-fa5d-4180-9df8-1ad476af2775",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4359bd08-b60b-4183-8072-a3f2e901594b"
        },
        "item": {
          "id": "0b437af3-1c42-4eab-8b57-d1d43abf3c4b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b3c65063-461f-4843-a4ec-abcb8d0d7958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b949185d-2723-47d2-bbb2-12f353c84232",
        "cursor": {
          "ref": "5ee63306-5d9b-4f3c-882e-b5dd23fb1e6b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "131908e8-8e1b-4a53-8d58-2f63101e5213"
        },
        "item": {
          "id": "b949185d-2723-47d2-bbb2-12f353c84232",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "57aed3ee-5cf6-4b30-9fa1-acfcb335c07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0821b5-c717-4eed-9925-0efe510102ec",
        "cursor": {
          "ref": "f8258cd3-2504-438c-afef-196c699a459a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "18880691-eec0-44ef-b21c-7edd357d2a80"
        },
        "item": {
          "id": "ef0821b5-c717-4eed-9925-0efe510102ec",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d49c1d77-3268-4313-a162-bb0ecb7c42a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97627624-63cf-4871-a5a6-d9575c020131",
        "cursor": {
          "ref": "cd885b40-e781-4458-af1b-93c26a378592",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "30f7b5f1-d988-47fa-a01b-df8f91a43a7b"
        },
        "item": {
          "id": "97627624-63cf-4871-a5a6-d9575c020131",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f4199454-81b2-4d96-9b52-f1776601a103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e05780-f2af-40fc-ba21-c21ed02b975a",
        "cursor": {
          "ref": "0589a272-ea51-49e9-8fee-bf78af8af95e",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e7ac000f-2f75-4a9d-922f-754805a451e6"
        },
        "item": {
          "id": "87e05780-f2af-40fc-ba21-c21ed02b975a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6e502bf1-6406-49d3-a0c6-c07137b88fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b062a6c-733a-4e8c-8053-34d77d59e1e0",
        "cursor": {
          "ref": "6a51192e-2dc4-432a-8569-65ccead9f30c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b512df6a-f474-4d26-921f-fa3e75a96986"
        },
        "item": {
          "id": "7b062a6c-733a-4e8c-8053-34d77d59e1e0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d61add27-8747-449b-8204-b4a51a9ee639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c472a4-eab0-4e60-bf96-258ccd23c788",
        "cursor": {
          "ref": "5f7807a2-7672-4249-8818-042eeb3466cf",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "eda74fb6-c4fa-4811-b4e4-391867b4898e"
        },
        "item": {
          "id": "08c472a4-eab0-4e60-bf96-258ccd23c788",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "876e7a6e-1e71-49be-a9aa-69955b91e7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507b3872-e8cb-4ec2-8a8e-ade7765b9747",
        "cursor": {
          "ref": "c24b731f-ce24-4ce5-9ffa-eba0d50b7c85",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "85a45601-d2ad-4cef-b75a-3c37584aa830"
        },
        "item": {
          "id": "507b3872-e8cb-4ec2-8a8e-ade7765b9747",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "13236eba-1ed4-4e23-8fa8-a814063848df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6be81f-309b-4d05-b653-290baa5edfb6",
        "cursor": {
          "ref": "38f94af3-fe6e-4a06-92b4-c23f24444cc4",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5b51766d-c03e-430e-a922-c6b1e3ac722f"
        },
        "item": {
          "id": "0f6be81f-309b-4d05-b653-290baa5edfb6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ac18e930-7ceb-4129-bfd1-5ff0cc3e4b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5affa9-2d03-4233-9687-fc4fca046399",
        "cursor": {
          "ref": "7e337e10-f661-4a72-ab25-c6fef2db7d4b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ad43a7ec-c8a2-43da-8882-479e5d364316"
        },
        "item": {
          "id": "dd5affa9-2d03-4233-9687-fc4fca046399",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c67dcb84-eb0d-4981-b910-52d652cec31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb60c26-667d-402a-845f-438c63481841",
        "cursor": {
          "ref": "88b6845e-1c82-4e0d-b32c-1015583cbd55",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "02921f1a-c10b-4e68-8423-49f6a574213c"
        },
        "item": {
          "id": "5eb60c26-667d-402a-845f-438c63481841",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bb10b094-550c-4132-a61e-8b4fa20660fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3427bdc-132d-494c-bf66-794baa2fd92a",
        "cursor": {
          "ref": "2206236e-63e6-4065-a639-8dd977e67d71",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "851f24c2-1f42-4819-bef7-4d37deef3736"
        },
        "item": {
          "id": "d3427bdc-132d-494c-bf66-794baa2fd92a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6e042bc6-bf99-4f20-9f8f-8e2d7a5c95b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0b969a-4cad-4b01-b5d6-2a3cbc1b4b59",
        "cursor": {
          "ref": "c014f604-a803-422c-a734-f1c80a6cd152",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5695080b-5841-4105-8c5e-ddce40764869"
        },
        "item": {
          "id": "2e0b969a-4cad-4b01-b5d6-2a3cbc1b4b59",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "742ab09a-1449-41ea-8ec6-f7ceb0cb80ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c140f72b-0429-4b44-b850-e5767f846c18",
        "cursor": {
          "ref": "cf315f06-cc4e-49ec-ac40-b9465784780e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c1e33237-547d-4e79-8b32-5afb6c2ce248"
        },
        "item": {
          "id": "c140f72b-0429-4b44-b850-e5767f846c18",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b66ae81c-cc6f-49c4-82df-c31212b30d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e6acb9-030c-4bfa-9135-2f56eb35fbf8",
        "cursor": {
          "ref": "b5322879-3ff0-4c97-a87e-49e874c9db2f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "24c82309-5f22-486e-a8a5-c18e59482cbf"
        },
        "item": {
          "id": "21e6acb9-030c-4bfa-9135-2f56eb35fbf8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "de58ef3d-1fd4-4f21-abe7-b8fd97039d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bfe1e1-f448-414f-9b07-e6c86a6ed202",
        "cursor": {
          "ref": "f8a93d6d-ca0c-4800-a330-2e9ae2a0975e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dfdf0416-3f5d-4b61-a265-6cd270970591"
        },
        "item": {
          "id": "05bfe1e1-f448-414f-9b07-e6c86a6ed202",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9c8b2e0c-dca5-4959-9809-c562b412a530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b3aa01-4053-4538-a731-0e5f9de35cca",
        "cursor": {
          "ref": "14b3dcb9-873c-43ff-bcb3-0b0607aa7a79",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a927d26c-db59-497e-a855-23ac1d94461b"
        },
        "item": {
          "id": "79b3aa01-4053-4538-a731-0e5f9de35cca",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ebbac5c1-2609-4ddd-b352-e90acc1b8ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cf16c3-5bda-42b0-b981-b499950900ca",
        "cursor": {
          "ref": "0cfa58f9-00d0-422f-b196-ff822e99c687",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e1f23a68-741f-4e32-9df0-32c4759a926b"
        },
        "item": {
          "id": "90cf16c3-5bda-42b0-b981-b499950900ca",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ae6efd9d-4ab0-4d81-bf6e-f640c60802b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981f3820-bfc7-4ba3-954c-8f5669d9e21d",
        "cursor": {
          "ref": "b4285e9f-c0ca-4fc6-bdd1-f6bfba43e968",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c7713b6b-401f-4c9d-b8d7-86fc7aa234f2"
        },
        "item": {
          "id": "981f3820-bfc7-4ba3-954c-8f5669d9e21d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bcad0146-6977-48e9-b500-e270a0c7b250",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6455db01-ebb5-455d-acdd-e91eea2b22fb",
        "cursor": {
          "ref": "f41ec1db-360b-45ed-83ad-567450e0a4ff",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "36c5da9a-34ff-45ac-b031-c9a0de3361c5"
        },
        "item": {
          "id": "6455db01-ebb5-455d-acdd-e91eea2b22fb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "67e2d8db-746a-43ac-88a1-33796e659c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e5d3d1-70bc-4b39-aa98-54eb460e39fb",
        "cursor": {
          "ref": "14964f9d-ed74-4ff9-bf2d-a5d47430da5b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1fc2e6fd-4627-41bf-9a56-7f33ce7b8d38"
        },
        "item": {
          "id": "12e5d3d1-70bc-4b39-aa98-54eb460e39fb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c032b7d5-04ce-4ed0-ba4d-3ae55cd149e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a156d39-73e1-44f3-a59e-edc067ba896b",
        "cursor": {
          "ref": "2005d55b-7138-4fef-9d8b-e8d5e10d62db",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "82a638f3-59f5-4da3-a785-8deab48d135b"
        },
        "item": {
          "id": "1a156d39-73e1-44f3-a59e-edc067ba896b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "faeecfdf-e364-477a-a714-f7997624ee93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c740d9-99aa-4cd7-b460-609ee29ca2bc",
        "cursor": {
          "ref": "995709e9-2b04-4e69-aedf-d8b116b83a17",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "119eec0c-f965-479d-b526-8bc09029b0be"
        },
        "item": {
          "id": "76c740d9-99aa-4cd7-b460-609ee29ca2bc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "63f7c436-087e-4aa5-9bb9-8e5c18f46229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cb9a97-2920-4749-9bbe-0256ae2cf31e",
        "cursor": {
          "ref": "ffc37e32-bafc-4a3e-8e02-9248c0fa620b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a383c0dd-1034-4f8e-a3c7-20e677cb6215"
        },
        "item": {
          "id": "a8cb9a97-2920-4749-9bbe-0256ae2cf31e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f4081ddb-66ae-4e27-8209-cd9d4fc7477b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce48282-4b98-438e-b136-ade047394a2c",
        "cursor": {
          "ref": "55dd64be-6210-4a9c-887d-c42fe0a9407b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "95f1dc20-975c-4c03-b732-9214c5fc1cb2"
        },
        "item": {
          "id": "0ce48282-4b98-438e-b136-ade047394a2c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4615fbe9-283a-4318-a736-ee8da44247d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbeb6620-f43f-4306-bbbf-c9f01bb5f3de",
        "cursor": {
          "ref": "5e66dda3-377d-4337-90fc-e13316efb1ce",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4a966295-980b-4cb6-b174-18edf33b01e9"
        },
        "item": {
          "id": "dbeb6620-f43f-4306-bbbf-c9f01bb5f3de",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fbac29b3-0d3c-47e3-95af-7e0860c4aafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f173b1b2-f177-448b-838b-575c1edef4b4",
        "cursor": {
          "ref": "afd82789-2d09-4773-80b0-246f301853d4",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "aff8c7ad-c19d-420b-82fb-01c8e07398e4"
        },
        "item": {
          "id": "f173b1b2-f177-448b-838b-575c1edef4b4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "00f993d0-18b6-44a7-9c72-26cae66a2835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42a1dcc-2998-445d-8639-73ac3ba5a113",
        "cursor": {
          "ref": "1488a491-0e6a-475b-bb7c-3031ef1d758b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2e46fcc1-8c0a-47ac-9f61-31a85d7ebad0"
        },
        "item": {
          "id": "a42a1dcc-2998-445d-8639-73ac3ba5a113",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "eab836a2-1752-4cea-b852-7972f3a04223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c02767-d6b2-430f-93b0-d13ae6fbe80e",
        "cursor": {
          "ref": "fe18808e-2b13-49b6-8e44-8a32da35eca3",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9318b827-cc69-49b6-84a4-75763d83239f"
        },
        "item": {
          "id": "53c02767-d6b2-430f-93b0-d13ae6fbe80e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c413f8d6-2f8b-4533-80bf-dfda31bce4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c6e8b1-2c8b-40f0-b345-918bc7c44b6f",
        "cursor": {
          "ref": "073940f3-c362-4911-b4fc-1b1969485b96",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7789a74f-473b-433b-9fcf-f1b3cb91bfad"
        },
        "item": {
          "id": "c4c6e8b1-2c8b-40f0-b345-918bc7c44b6f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bbf12de1-e774-45db-91a7-a2c419abe943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06dd3af9-024b-4e3b-8ad0-0a77fb6d1681",
        "cursor": {
          "ref": "5f8f5392-b4bd-4718-9207-7b37761633ea",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "49c6b0d1-e00d-4240-ad60-b9b5fd8727db"
        },
        "item": {
          "id": "06dd3af9-024b-4e3b-8ad0-0a77fb6d1681",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "94836619-de7d-4053-9fb4-1a3afc5b7703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8304378e-e3b1-496e-ac2b-fc821e478644",
        "cursor": {
          "ref": "9d45c3bb-7c67-46e9-b930-1bf9d0db68c8",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "44cc5aa6-9134-4481-96da-eca71f2f9835"
        },
        "item": {
          "id": "8304378e-e3b1-496e-ac2b-fc821e478644",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9c577c01-a389-40f2-b8d1-d1cc5d8a5246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef5d5f2-1296-4794-b42f-502e55a1cf52",
        "cursor": {
          "ref": "3866dda7-7788-49a7-90d6-c2e78a8d26c3",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b0453d20-d7e6-4b3d-887b-ff2b5ef41054"
        },
        "item": {
          "id": "eef5d5f2-1296-4794-b42f-502e55a1cf52",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "121893ee-4297-4639-b6bd-894e8059647c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4655ca-965e-48a5-8222-12dd354a779a",
        "cursor": {
          "ref": "4358506a-3b34-4919-8879-e211200e5a7f",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "aa2f2684-3223-467a-93b1-f34394bf97d2"
        },
        "item": {
          "id": "bb4655ca-965e-48a5-8222-12dd354a779a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fd2d2c74-e6b7-4a73-8ecd-14080c656d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a79001-9aa2-471e-8288-60a79b263e14",
        "cursor": {
          "ref": "52599eca-9d20-45ba-9b38-2d03ca19ca79",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5d4b96db-2548-4e54-81c6-3723997c23e4"
        },
        "item": {
          "id": "94a79001-9aa2-471e-8288-60a79b263e14",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4cc7c653-18fe-44fa-b83a-e30c0795eaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf04596-a0fe-4164-bd32-cdebc7be7ee6",
        "cursor": {
          "ref": "2908b1be-6314-461f-9020-8b8581af39c5",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "345ea359-d9a6-4628-a6dd-d9a7a28defbc"
        },
        "item": {
          "id": "7bf04596-a0fe-4164-bd32-cdebc7be7ee6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8b9f6538-5b3e-4c39-b023-e5aa8cb413a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00200e4-02d8-4dea-b118-aad2575f1423",
        "cursor": {
          "ref": "081f85ae-5f9e-42d8-b745-55fd7775d449",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "67c54128-65a6-4738-8d8f-1eee5d8349e2"
        },
        "item": {
          "id": "b00200e4-02d8-4dea-b118-aad2575f1423",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "743a6fe1-1004-46fa-bd0b-331443f79042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6721a1e0-22a7-4bbc-8a95-d8f6929ce163",
        "cursor": {
          "ref": "4cb957b3-d343-4c17-86be-aa2d83633d05",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a8c51ecd-eca1-47f1-9fca-b13a0eb5d59c"
        },
        "item": {
          "id": "6721a1e0-22a7-4bbc-8a95-d8f6929ce163",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3ba082c5-de50-4044-8f05-2f3abaeb7b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5eb002-9df6-40ec-9b43-fc9b79e81eb8",
        "cursor": {
          "ref": "f1facb9a-3f01-479b-af5e-66145d67f38e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a46964f3-ef73-4f8e-bd71-a48bbf145a1d"
        },
        "item": {
          "id": "8b5eb002-9df6-40ec-9b43-fc9b79e81eb8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "788ed160-570c-4057-bf84-f5c688565027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0cf6d9-b70d-49ac-8d77-60e9bf7af84d",
        "cursor": {
          "ref": "adf29d49-c113-45f3-a370-3deb5913d01a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "589553d6-d3bb-4beb-80f8-6571a3fd810a"
        },
        "item": {
          "id": "4f0cf6d9-b70d-49ac-8d77-60e9bf7af84d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e0fb8515-75cf-4774-879a-3cc019583e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65263a7f-3f6c-4349-b08d-766df8a80777",
        "cursor": {
          "ref": "77948a0a-1411-40df-b15d-0248bba90746",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "94504352-a28e-4a95-9377-5177b1c5745b"
        },
        "item": {
          "id": "65263a7f-3f6c-4349-b08d-766df8a80777",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1044bc0b-2a4f-4240-b5f2-4e8c10b3d986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f540b0-98f8-4983-b485-596075a27eed",
        "cursor": {
          "ref": "7365ef1c-35e0-4066-a578-bc19fb8bfafe",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5fd4569d-26df-47c4-80c1-437e004a0616"
        },
        "item": {
          "id": "91f540b0-98f8-4983-b485-596075a27eed",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0d252b33-9f36-4916-bd3f-af2094862e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2c143d-4829-4f22-9a38-d188965f3d18",
        "cursor": {
          "ref": "6d6c5d55-84aa-400e-a16d-fb337880ebb3",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "256b432e-cc61-42be-8cc8-8d90a279226d"
        },
        "item": {
          "id": "2d2c143d-4829-4f22-9a38-d188965f3d18",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a7939225-4054-48ac-8b6c-0f84343b0135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db01b537-7e26-4f54-a3db-7d3c6d8b545f",
        "cursor": {
          "ref": "a28b9e0a-c115-4bf2-b9fb-169f832f6368",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "de4689df-5a4c-4c80-acdd-f9dd8035f698"
        },
        "item": {
          "id": "db01b537-7e26-4f54-a3db-7d3c6d8b545f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "62bd6eb8-22ca-4c9f-83b4-cd048bd60d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35e5b08-08e9-40db-8c90-542e434c40dc",
        "cursor": {
          "ref": "625bacb3-f094-4eb6-9fdd-d298140754f8",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "364f06bd-29fd-4421-889c-9e80bf7db895"
        },
        "item": {
          "id": "d35e5b08-08e9-40db-8c90-542e434c40dc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "02d0f865-8f1a-4d1a-a813-41ccbd061061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ade76a-b0d6-443f-9fb1-eded02964e48",
        "cursor": {
          "ref": "4b861078-23c2-48fe-aa71-9e174ff70e6f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e11a1f3d-8a10-4179-a82a-185d10610639"
        },
        "item": {
          "id": "08ade76a-b0d6-443f-9fb1-eded02964e48",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "124c5d0a-db35-431e-82ac-374e6f657850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b048b2-519d-4dfa-bb2e-878c5462564e",
        "cursor": {
          "ref": "87b41d69-d9c5-4952-bd3c-53e0e49be5ec",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f76e06ae-2e1b-4040-9098-0a89925a46d7"
        },
        "item": {
          "id": "83b048b2-519d-4dfa-bb2e-878c5462564e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bc20fe5e-451b-47b8-9d9f-676702403e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77a3fbc-66d0-491a-88b0-9469f34ae647",
        "cursor": {
          "ref": "04082592-1ef6-4c16-80a9-fd22ddbff441",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "363884c1-8554-4b30-a75e-8176a626da10"
        },
        "item": {
          "id": "e77a3fbc-66d0-491a-88b0-9469f34ae647",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9fcca53f-d2d3-4664-8c29-87d5f00d3f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bedd55-6b1f-4a03-9155-ed6a3ff278bf",
        "cursor": {
          "ref": "9fe7054b-529b-4476-a7f2-9f8b4c81ea6c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "57c92239-3228-4ec1-a8f6-00ef06a61a21"
        },
        "item": {
          "id": "99bedd55-6b1f-4a03-9155-ed6a3ff278bf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "64fb1c9b-36b7-4dab-9518-dc88dc75f7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e0f727-72e4-45d8-befa-a2d717c11fa1",
        "cursor": {
          "ref": "acfa0b56-c322-48ec-a15c-7d0e25eb8ce9",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "10f86b8e-ad98-4a24-bca8-7e511a9e7369"
        },
        "item": {
          "id": "47e0f727-72e4-45d8-befa-a2d717c11fa1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a0ed5aa7-da45-43d3-9e8a-57051afe1051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e0c03a-4a44-4f58-95b8-d083b0c5bb69",
        "cursor": {
          "ref": "528c335a-dbe2-491a-964d-cd1978439bf1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7da853c7-4900-4d9c-8b7c-e240426ccfac"
        },
        "item": {
          "id": "79e0c03a-4a44-4f58-95b8-d083b0c5bb69",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9d9a3865-b9f3-4010-b2c5-1e60916f04b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83df9b04-ec3c-49a3-8129-6ad1b624d284",
        "cursor": {
          "ref": "9ab2d509-f089-4454-8752-abe3faa5ffd1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bd1248bc-7405-4139-b3a2-d1fbe0636a3a"
        },
        "item": {
          "id": "83df9b04-ec3c-49a3-8129-6ad1b624d284",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d3668a97-125c-4b65-bf35-f60cb44918f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8793918d-34e8-4317-930c-298022108141",
        "cursor": {
          "ref": "794ce097-95b2-43dd-84b4-29c8eb6d6716",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fa3e4e4d-47c5-4528-bacf-e23e23e4a64b"
        },
        "item": {
          "id": "8793918d-34e8-4317-930c-298022108141",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "95ed6ee6-cf33-4069-9d16-94fc645c5a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c84ec1-67a9-49d9-a705-e88d296719f4",
        "cursor": {
          "ref": "68bed6bf-c2f7-49bd-b5e5-b53517f76b9b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b227a5f1-7bd1-4cc2-bd52-6dec7ea2abda"
        },
        "item": {
          "id": "c7c84ec1-67a9-49d9-a705-e88d296719f4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9f3372fc-ebc3-4f35-8530-c93681be8061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e0072c-e4bb-42bc-9783-0d632cae2012",
        "cursor": {
          "ref": "2130ce32-4fed-48d4-b57b-0af44dbac1cc",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "965e993c-03d2-4372-92e1-55ed5f7d0f32"
        },
        "item": {
          "id": "c7e0072c-e4bb-42bc-9783-0d632cae2012",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2d443c83-7f3e-45bf-80c9-eefda558dff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1363efc-e3d5-4874-9063-a007e126685e",
        "cursor": {
          "ref": "119ad670-cd35-404b-ae90-dbbd77442c3e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9917b46a-eba2-4b38-a5f8-b43dde367c74"
        },
        "item": {
          "id": "f1363efc-e3d5-4874-9063-a007e126685e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8191ff70-c852-4608-af0e-378fc70ab063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083b7213-2cbe-4a91-bbcd-d313a14fe9b1",
        "cursor": {
          "ref": "505fe449-1e29-4e4d-ab80-a6b3566c226e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "205d433a-7b53-46f3-b446-1299e91e551f"
        },
        "item": {
          "id": "083b7213-2cbe-4a91-bbcd-d313a14fe9b1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "12563ff0-0b58-48d9-ab32-316b63596aeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8490acb7-80ce-45cf-9487-13b7c55e5121",
        "cursor": {
          "ref": "14326cad-681a-453e-9208-76846a8bc31d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ef62766a-8c8e-4841-91cc-771f098c4469"
        },
        "item": {
          "id": "8490acb7-80ce-45cf-9487-13b7c55e5121",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6fcc874d-721c-4644-864b-3fec21ef2b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc67772d-e166-49a8-8b78-5c98f3b7021a",
        "cursor": {
          "ref": "a6d3ade2-e2c8-419b-9b50-f2ad68dde703",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "03daa10e-3b53-4f7f-bab6-90b90c1bc2d3"
        },
        "item": {
          "id": "fc67772d-e166-49a8-8b78-5c98f3b7021a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "00c27e24-cc86-4158-9816-fe0aece36807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5f0d28-8a7b-4a5b-b1f9-9cb2385e2865",
        "cursor": {
          "ref": "c4405987-5d98-427a-9ab5-fd4ab8d55417",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "88ad9e22-f52a-4883-8382-e83e74f6fc66"
        },
        "item": {
          "id": "ae5f0d28-8a7b-4a5b-b1f9-9cb2385e2865",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d3fe9091-44c9-4385-bd79-9f70b1023a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5e2105-07d3-44b5-a654-279dfcef185b",
        "cursor": {
          "ref": "bc396b3d-f7de-4f30-b815-d30255a25541",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0f55a004-b54d-40b9-95e8-1acfed551b4a"
        },
        "item": {
          "id": "eb5e2105-07d3-44b5-a654-279dfcef185b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "56d99504-e8c1-46a2-ace7-03a9f8fdaf32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33cb8b8-ba46-45fd-9bf8-25ef782cf5ec",
        "cursor": {
          "ref": "768af01c-b725-47e6-b048-548f7d3e5a27",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a001b178-53f7-47b1-a203-6211fe2d431a"
        },
        "item": {
          "id": "a33cb8b8-ba46-45fd-9bf8-25ef782cf5ec",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8068461a-97bf-4b66-ba89-47a9dd248de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db710a23-ca49-42f5-adb7-2e9e8f5440fd",
        "cursor": {
          "ref": "237784df-cb3d-4744-8562-c24e8c2bd37c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b92b6145-7378-4d5f-94d5-095394ab8d64"
        },
        "item": {
          "id": "db710a23-ca49-42f5-adb7-2e9e8f5440fd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fd24cb96-5f3e-496f-a99e-70a3145de61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bec9d4-56f5-4717-992c-b315fa93f898",
        "cursor": {
          "ref": "a2bce47d-4623-4d84-98fe-c150f12fc5c1",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b32ed7c8-cd03-4c7e-8261-68eff18d9ad9"
        },
        "item": {
          "id": "e3bec9d4-56f5-4717-992c-b315fa93f898",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f647692d-c5bd-480c-8f43-6b9b1ff4b907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d092c337-6023-414d-95ae-1219336e36a2",
        "cursor": {
          "ref": "68597527-2499-4645-99c2-b19411fd5a07",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6b2e14b3-1798-4625-91fc-b53c26b278c8"
        },
        "item": {
          "id": "d092c337-6023-414d-95ae-1219336e36a2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8c2b425c-ce7f-41ac-8fcd-5fac18af0347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfcb959-f2fa-4873-9e97-2300aca95c49",
        "cursor": {
          "ref": "bf62895a-db7c-4cf6-b0f7-39366927870e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b610620f-20d0-4652-aaa1-67cc06889446"
        },
        "item": {
          "id": "9cfcb959-f2fa-4873-9e97-2300aca95c49",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c28c2c92-25f9-4274-aa93-b0973e630fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c35f773-48b0-459f-8295-e88489f7a822",
        "cursor": {
          "ref": "d7e381e3-8fcf-407b-b461-b9aae071b625",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "90665fcf-4cfd-4ec1-a3a0-8a369b07b1b0"
        },
        "item": {
          "id": "7c35f773-48b0-459f-8295-e88489f7a822",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "372aeca4-bc33-42bc-b0a4-a70b8fb92925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1abc111-089d-416f-ad85-a9e3a3861f50",
        "cursor": {
          "ref": "6a8c4a2f-fc40-4897-a7f0-3d44138aa32a",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "67be8060-81df-4813-9b1f-0a448078afde"
        },
        "item": {
          "id": "e1abc111-089d-416f-ad85-a9e3a3861f50",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7a0cb3d8-fe7f-4342-b3b6-ad3eb64f1234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128dc92e-a932-46f8-b6b1-a3d949867f0c",
        "cursor": {
          "ref": "43fdb257-1321-4b3a-b060-a2b906b627cc",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a938bdc7-00b2-46cf-ab4c-126a3e0c7837"
        },
        "item": {
          "id": "128dc92e-a932-46f8-b6b1-a3d949867f0c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5a223550-f43e-436f-b7ae-c41f5eeb193e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3eaee4-5e0d-4bd3-8e83-63b0c0c96854",
        "cursor": {
          "ref": "77e17a30-8984-4e63-ad45-5c2512b9edc7",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c88c5b2b-59ab-43e6-bfce-4fc8c23091c7"
        },
        "item": {
          "id": "5d3eaee4-5e0d-4bd3-8e83-63b0c0c96854",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a3365c49-6242-4862-88b1-cc1c5d6c6a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efa2336-8549-4216-86aa-52e3c64491aa",
        "cursor": {
          "ref": "bafd8c91-6549-4121-82cf-e23a4fb92fea",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fab1fa9a-1000-480b-b0cd-c9ee84beefbd"
        },
        "item": {
          "id": "8efa2336-8549-4216-86aa-52e3c64491aa",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ca35c72d-52b1-4ebb-98e1-aee63184946d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52397ed-05b2-48be-9de2-6dfa7dfd0f7f",
        "cursor": {
          "ref": "368e3058-6718-459a-91ab-f1676ed0163a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d57c5cb3-c1a8-425b-ac8e-58e9e647eb0e"
        },
        "item": {
          "id": "c52397ed-05b2-48be-9de2-6dfa7dfd0f7f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3543679b-bc0f-40ff-b98d-096f5514365d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d5bd9b-12fe-43d5-8bed-7bcec12afaa2",
        "cursor": {
          "ref": "ff05f44c-7841-411d-9a61-aa529bb0f57d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e7beb566-cb20-43fa-b8f3-20cbd136e111"
        },
        "item": {
          "id": "98d5bd9b-12fe-43d5-8bed-7bcec12afaa2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "391b8356-19e6-4a4c-a7d9-894da7bfc6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09604fa-2832-4483-9257-ca616d312294",
        "cursor": {
          "ref": "30d81f6a-4c31-408b-a816-da21b4c5461d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2b6b9997-f0f8-4e4f-acf8-46c1a350e028"
        },
        "item": {
          "id": "b09604fa-2832-4483-9257-ca616d312294",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fd6d2625-e673-456f-ae59-a41c35aad7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b460d9-5f80-4cd7-b4e3-f42161abc951",
        "cursor": {
          "ref": "a2be922f-9d62-41b4-a6db-0be6f34f18af",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "aa1686ce-1769-4ac9-af14-8f1162ab1c4e"
        },
        "item": {
          "id": "32b460d9-5f80-4cd7-b4e3-f42161abc951",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "394bc96b-659c-464c-bbd8-a593358d52bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c004cd-040d-4dbb-95bc-8511c6fa9198",
        "cursor": {
          "ref": "0e8b2687-9028-4636-8b1e-afca201a29d4",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3ac02083-f084-4175-adc9-99ba3888f873"
        },
        "item": {
          "id": "a4c004cd-040d-4dbb-95bc-8511c6fa9198",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "27b1cc8c-e04c-4805-804a-24f116e3fb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46334334-dd88-4518-b2a8-fa5103cd9535",
        "cursor": {
          "ref": "27875b66-88b2-42a3-8076-77e76123fb3b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5c11de95-e97e-4dff-ad27-f48ccc61c405"
        },
        "item": {
          "id": "46334334-dd88-4518-b2a8-fa5103cd9535",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "18fe5eaa-fea6-48bf-a974-f211697b86ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38b4f0d-c10e-455a-8489-fcbf326db02a",
        "cursor": {
          "ref": "66111027-5555-4cd6-8b7f-5dfa82336ccc",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cae00aed-f09f-44e9-91e5-b905ac1e57c1"
        },
        "item": {
          "id": "a38b4f0d-c10e-455a-8489-fcbf326db02a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9e198e1e-07aa-414d-888c-092f61b2254c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa86c03-0e87-4d88-9b24-462e7cfba000",
        "cursor": {
          "ref": "6d1497b0-0559-49fe-ac1d-a355c3e6141f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1788d31f-d1ab-46de-9dc4-2dfcc1c1f7c4"
        },
        "item": {
          "id": "9fa86c03-0e87-4d88-9b24-462e7cfba000",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1b5e17fc-d6b8-4931-b230-974d6376ade0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95475c8d-6d02-4bf0-8a0d-e7f5bda36702",
        "cursor": {
          "ref": "9dade9c6-87b9-4603-aecc-dbe4f54fb43d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d99913bf-c646-45a8-890b-a4bf834e2ec3"
        },
        "item": {
          "id": "95475c8d-6d02-4bf0-8a0d-e7f5bda36702",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "eafd2400-1ab0-4bbd-bc57-70afd5aaa300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e9fe8a-ae40-499f-b93a-02c1a2967d2a",
        "cursor": {
          "ref": "1b9dd86a-b05b-4169-8f94-d3b7fd62199d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "84bd065c-1cec-4136-87e3-41a136b18d8d"
        },
        "item": {
          "id": "39e9fe8a-ae40-499f-b93a-02c1a2967d2a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1f1c3548-81b9-43f8-a325-81c9e973a052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a368003-61f6-4dbf-8db8-fe893cfbe3a0",
        "cursor": {
          "ref": "2fad48e7-d5eb-49b1-90b7-072b64e19fd5",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7a5af990-8ea9-4e85-930e-ea32b33689a9"
        },
        "item": {
          "id": "4a368003-61f6-4dbf-8db8-fe893cfbe3a0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b11691b4-cc20-4716-ae59-c4b925de0fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa0887e-2ca0-4ddc-abb2-2563d010d053",
        "cursor": {
          "ref": "de764602-3130-4ed6-b0bd-0f3cb4418671",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "511a4af5-38e0-4d63-a080-202046ee0146"
        },
        "item": {
          "id": "5fa0887e-2ca0-4ddc-abb2-2563d010d053",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "63214dc3-d709-4641-9dd4-9a576caf524f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f92d486-d829-46c9-8770-2e3f6b7966c4",
        "cursor": {
          "ref": "b9ecd683-8b63-4cf7-b5ef-1bf3070e09e4",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8c40c6f0-316a-480e-8793-cec98a1bc1b8"
        },
        "item": {
          "id": "5f92d486-d829-46c9-8770-2e3f6b7966c4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3a5cfe7c-b6f1-4926-87fe-eb89ff279b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de07cf6a-2e9f-4b98-be64-29c71f73c336",
        "cursor": {
          "ref": "d0a652bc-e06f-4675-90ba-805fa9385ce2",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6628bdf8-9655-4a2f-898a-2b8db3fadd1e"
        },
        "item": {
          "id": "de07cf6a-2e9f-4b98-be64-29c71f73c336",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5c2f1fdb-b236-4635-a237-b5cea3b9b0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bfc77c-aa69-4191-8341-5b787e37fdfc",
        "cursor": {
          "ref": "72f96c4c-13aa-4d8f-924f-6c3fa8f40bda",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9e26dd56-9fdc-4169-9a92-b65c0af1983b"
        },
        "item": {
          "id": "e8bfc77c-aa69-4191-8341-5b787e37fdfc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "136fb45f-6fcc-4dd2-b747-ce4202150b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3bfd96-b71b-4fd9-bae7-19d696cc14ac",
        "cursor": {
          "ref": "9c2fa430-d1fd-4d2e-b6f9-dab38cba9b18",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "59260b34-2938-4516-aff3-1dbfc6d311b7"
        },
        "item": {
          "id": "0c3bfd96-b71b-4fd9-bae7-19d696cc14ac",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "18e0adcb-a9ab-4601-a054-7bed02d7e005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4288c26a-c7c2-4325-838f-5c83c3392b56",
        "cursor": {
          "ref": "93f1088e-67b2-4e34-8bfe-f3b2170333c0",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "de9317a0-fed8-47e0-94e8-a41efc1fa42d"
        },
        "item": {
          "id": "4288c26a-c7c2-4325-838f-5c83c3392b56",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b56f43b0-8f2a-4a19-b9cb-685fa16d23c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2b623f-af37-45bc-8a4b-eaee437dce7b",
        "cursor": {
          "ref": "99f90134-e0f8-4694-843d-b8d525399a83",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4ac098b7-604f-4e45-9cdc-713f3a71e235"
        },
        "item": {
          "id": "1d2b623f-af37-45bc-8a4b-eaee437dce7b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "632dfb2b-2c00-4892-8e6c-3fbef72162ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6af883-da08-4846-a342-70e96970c815",
        "cursor": {
          "ref": "11521e74-8e6d-4936-bb10-827b4fe2b79d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e3c65559-bc36-418d-bf9b-af1e30fb9ed8"
        },
        "item": {
          "id": "ce6af883-da08-4846-a342-70e96970c815",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9aac6432-ab52-4a52-93e4-b80aa2fbc722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6329b7ac-af16-4f1f-ae64-78e285840177",
        "cursor": {
          "ref": "6cec97b1-a4bc-4dd8-b539-656e0233d5b3",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "26a41074-3016-4a65-907f-c5a3cdf5eeb0"
        },
        "item": {
          "id": "6329b7ac-af16-4f1f-ae64-78e285840177",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "71562317-a31d-4348-8d9e-a6ee4d59672c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2877a391-da51-4acf-a693-78d157af6a76",
        "cursor": {
          "ref": "757800eb-38e1-46e7-9841-4dbee779eee9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "60e6aa24-821c-4036-a6b7-706e616c4841"
        },
        "item": {
          "id": "2877a391-da51-4acf-a693-78d157af6a76",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "461908cc-2768-4bd4-bbf7-913446741954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bc74a4-d59f-4ce5-bf3a-8f81180402aa",
        "cursor": {
          "ref": "5a535591-2ee4-44e6-bc03-8d48c94a577c",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cfb16abf-8670-4440-bf22-6d101dce1a06"
        },
        "item": {
          "id": "55bc74a4-d59f-4ce5-bf3a-8f81180402aa",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0c83b11a-919a-49c9-b4eb-f142856617dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b5925b-ad11-4df5-b531-e32b244cce64",
        "cursor": {
          "ref": "4a1813db-137e-4264-b959-c91e4924d823",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f6227116-6395-4ef8-aca4-2664cfd71a9a"
        },
        "item": {
          "id": "d5b5925b-ad11-4df5-b531-e32b244cce64",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5b1b6ac1-499b-4cc0-a92b-26429be5fa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87490d99-b431-4feb-99e0-2a17429cd345",
        "cursor": {
          "ref": "13c8e63e-bb8f-43db-8b94-a03526f0c550",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9281914f-1525-4d7f-b310-5f96d942c822"
        },
        "item": {
          "id": "87490d99-b431-4feb-99e0-2a17429cd345",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8a0117b6-1aae-495e-9576-9afcf4219d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea94abcd-5160-4c86-b69b-37029cf92973",
        "cursor": {
          "ref": "dd9e1173-b16c-4b66-94ae-41c0d914918a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "722bc1a4-8e31-4232-8777-c13c71ecad4b"
        },
        "item": {
          "id": "ea94abcd-5160-4c86-b69b-37029cf92973",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "591119f6-6e97-474f-b307-ab7e6262a827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f57c677-190f-4c1c-90c7-4f1db1669583",
        "cursor": {
          "ref": "bc617042-eba9-48e3-bc94-2a4d5f11e9d2",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9e66a327-dc41-4ea3-b1a3-8f5e186239ec"
        },
        "item": {
          "id": "3f57c677-190f-4c1c-90c7-4f1db1669583",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e767745e-a402-4ce5-89be-74766aa0eba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d7e08e-6b16-4f6f-88e3-90f01a91dcd1",
        "cursor": {
          "ref": "e7d0d01d-fc1d-42d7-836f-c3b45d852312",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "204933f4-1bad-41e2-8385-a367130aabe4"
        },
        "item": {
          "id": "38d7e08e-6b16-4f6f-88e3-90f01a91dcd1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ff92c4bd-034d-4638-9f15-e939bd505d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fe34e1-83c2-4892-b131-a2c30019c7c0",
        "cursor": {
          "ref": "a43dab97-b9fd-4bb1-abec-0babb026b941",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d2ef435c-eb7a-4077-b4ad-b3a46515155d"
        },
        "item": {
          "id": "a5fe34e1-83c2-4892-b131-a2c30019c7c0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d8f4e7a5-1e10-4c06-b29b-233f56123871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8debc614-2c95-43a5-9f7e-43555bb0e6e3",
        "cursor": {
          "ref": "52f96350-bbf9-4efe-a8fa-be18ed72ac2f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "63108f56-7eb4-439b-863a-bc438f33aa2a"
        },
        "item": {
          "id": "8debc614-2c95-43a5-9f7e-43555bb0e6e3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9217ed83-1ca1-4525-8064-43a933ccbe54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d110d6e0-3f6d-4151-9459-890768bbf3d9",
        "cursor": {
          "ref": "e5a1636d-81b3-48d6-b64d-f9348493972f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7d1996fa-62a4-4394-bba5-de216a386d06"
        },
        "item": {
          "id": "d110d6e0-3f6d-4151-9459-890768bbf3d9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f2204ad2-5b0a-461a-97be-c56600215a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6869a5d2-9bc9-4f09-8754-b60457cf7f01",
        "cursor": {
          "ref": "6b6488f6-2e35-4260-9880-d67d782a47fc",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ee60bc12-1555-4a6d-b03a-54eb250be0fa"
        },
        "item": {
          "id": "6869a5d2-9bc9-4f09-8754-b60457cf7f01",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "566baa71-9954-4052-97cf-baf07369df64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0344ae40-1e85-4b2e-876a-9d2ec3818c49",
        "cursor": {
          "ref": "dbe66a2a-6e2c-456b-9cd8-f57320df1e32",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b104127a-b3bb-491c-9b94-ee544eaf16e2"
        },
        "item": {
          "id": "0344ae40-1e85-4b2e-876a-9d2ec3818c49",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "98521418-9cc4-4b42-a8f2-384008b54d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ae00d4-c72c-4493-8df6-5003926c46cd",
        "cursor": {
          "ref": "9a01d8f0-4948-419f-b407-3341c636d25e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8e493fa2-bf19-45f1-b51c-601b319d2e65"
        },
        "item": {
          "id": "82ae00d4-c72c-4493-8df6-5003926c46cd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ae37697c-479e-432d-9381-6993b65dff16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487f3578-3967-49ec-9c86-f1eb8e198c99",
        "cursor": {
          "ref": "856c6435-d530-45dc-ac86-80e5695d3d9c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1b181b9f-bdad-4c00-acd5-791aede3f5eb"
        },
        "item": {
          "id": "487f3578-3967-49ec-9c86-f1eb8e198c99",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "41a1f16b-b96e-4658-8420-ebaefb271d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f808a0-795c-4bd5-99e1-ff839de7003f",
        "cursor": {
          "ref": "4e8c7d0c-1424-43a6-9986-9da36b82451f",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1c527f93-ec6f-49b5-b289-2f8c6af661fe"
        },
        "item": {
          "id": "54f808a0-795c-4bd5-99e1-ff839de7003f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bde2615a-7597-4fe0-9ec5-82ab1df59236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a36084b-4d73-499e-a256-b544d6e08d98",
        "cursor": {
          "ref": "ca969f04-213c-495d-9123-00a2cc4e7f2f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9b05df68-33a7-4192-a5d5-0859f4a091ea"
        },
        "item": {
          "id": "6a36084b-4d73-499e-a256-b544d6e08d98",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7be61f99-d34f-43f1-865e-d979867c4fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cb8322-2bf8-4265-b295-43fa23170b39",
        "cursor": {
          "ref": "4ef620ee-dc45-4c06-b62e-3ffebc216794",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "16c7ee91-c18e-4dbd-bbd7-76462af0ed34"
        },
        "item": {
          "id": "43cb8322-2bf8-4265-b295-43fa23170b39",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "508987db-903f-4964-a9c3-8a3554f9bbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653309da-b978-4ad9-ad13-9e6e1b7edd00",
        "cursor": {
          "ref": "d60c326b-33d0-4cb4-bf37-6a8693c56512",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3d89ebff-53ac-4efe-b0ca-232e7995e9b9"
        },
        "item": {
          "id": "653309da-b978-4ad9-ad13-9e6e1b7edd00",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8053995f-a8b4-47dc-be69-ca69550be6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa49024f-6ed3-43d6-ba7a-7efcdce0c365",
        "cursor": {
          "ref": "c039ae85-e369-4cc0-8848-4b6ecf4a8a6c",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "64128879-c291-43d0-9eaa-69b1303011a2"
        },
        "item": {
          "id": "fa49024f-6ed3-43d6-ba7a-7efcdce0c365",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "79499fe7-c2a2-43da-a61e-7a1159550b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53301379-3ccb-4bbe-a6dc-d1c90838d754",
        "cursor": {
          "ref": "4d452fcb-07aa-4a61-a4fc-47297a4395c1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "571ea6b4-8bad-4abc-8464-da31a42bf80c"
        },
        "item": {
          "id": "53301379-3ccb-4bbe-a6dc-d1c90838d754",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e324466d-45a9-4435-87af-3895b8266f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da10267-cf11-409a-8f0d-b68dd92891e0",
        "cursor": {
          "ref": "a23e2c8e-5f15-49f4-a1c4-dc8645842e83",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "acfea2ea-cb98-48f2-9526-f6b3f133f6ad"
        },
        "item": {
          "id": "7da10267-cf11-409a-8f0d-b68dd92891e0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "340df626-b683-475c-a2ce-3abbe00f44f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5454e4-8021-4900-8279-9dc89c567334",
        "cursor": {
          "ref": "079b7438-c93b-431b-8bd1-a581c428e190",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "256e841a-951f-47fe-ba97-17b569e6d0bc"
        },
        "item": {
          "id": "ec5454e4-8021-4900-8279-9dc89c567334",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "836a446d-fcec-4611-a837-74ee6ef87d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a26d2f8-6b4a-44d8-a996-c9fb7b6d6537",
        "cursor": {
          "ref": "7046d9b7-7cb8-4bb1-b9cb-27dee9c14921",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d91ef125-843c-46c8-becd-ecb68e17391c"
        },
        "item": {
          "id": "6a26d2f8-6b4a-44d8-a996-c9fb7b6d6537",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f50b7af1-5434-475b-9617-001e24807056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eafb78c-7765-458b-952c-d7f1afb51f10",
        "cursor": {
          "ref": "612fec48-b7b5-4cb3-a61f-4cde1621e3e3",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e48d6038-4b2c-4f89-9e57-4e22d60d5903"
        },
        "item": {
          "id": "6eafb78c-7765-458b-952c-d7f1afb51f10",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b725be73-516d-424e-8b00-b4f48acc382a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e3ebbd-a5be-4a50-89dc-af39692837a8",
        "cursor": {
          "ref": "bf4aa403-9d33-4f9c-8fab-a99668d63b61",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e30ea54a-5d89-4846-8aef-ee2137ed0921"
        },
        "item": {
          "id": "52e3ebbd-a5be-4a50-89dc-af39692837a8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8029d9ef-b184-4462-ab29-dce295e67d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5083e859-ccd9-4b31-811b-31e2c9192217",
        "cursor": {
          "ref": "a6bd912b-bab1-4d30-a8a3-c5e80c9b2012",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9e58a719-5055-4b3d-a1bf-fc9c759d4646"
        },
        "item": {
          "id": "5083e859-ccd9-4b31-811b-31e2c9192217",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "350f83f7-2d31-460e-be47-51a14fc4edd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8928d278-4b9e-410f-aacd-c0633cdca1af",
        "cursor": {
          "ref": "af670505-766c-4b62-8b77-71c7277aa2c4",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7e11e28c-91c3-4a57-a9e9-9bbc69982660"
        },
        "item": {
          "id": "8928d278-4b9e-410f-aacd-c0633cdca1af",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "79f655c5-4f70-49bf-8986-630f11fe07e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd5716f-5f82-492f-aded-c36650de245c",
        "cursor": {
          "ref": "77ceed9f-7e19-4a6d-a658-044b61cef9d1",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "489eb651-63fa-4e40-9e53-4bc7b6cd1d98"
        },
        "item": {
          "id": "6bd5716f-5f82-492f-aded-c36650de245c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ac35d84c-9b17-4b62-8a4f-d24edeff1ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b014d57d-4a01-4db2-a247-9f718e2f39d1",
        "cursor": {
          "ref": "fa923ab5-0215-4c7f-9af3-8d47619741b2",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ec030b0b-19cc-475c-91a4-be873b388c6c"
        },
        "item": {
          "id": "b014d57d-4a01-4db2-a247-9f718e2f39d1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5fc81951-f645-4417-8f49-8b2948d7faa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1ba993-e061-48ff-87aa-9d974d3b997e",
        "cursor": {
          "ref": "37279218-7a8a-402d-aff4-b7b8d6b696a8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d755e63b-d627-46b4-956b-46c8481b5dd7"
        },
        "item": {
          "id": "ff1ba993-e061-48ff-87aa-9d974d3b997e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3c8fda0e-a9e8-43fd-b0af-3073e0e8c90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0905c83a-7940-44bd-83fe-444d63be2772",
        "cursor": {
          "ref": "5ec6b6d8-f7cc-4941-b069-0bed193391ba",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3dcfe53c-63ef-4625-8411-57c4393b3bc4"
        },
        "item": {
          "id": "0905c83a-7940-44bd-83fe-444d63be2772",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a8a271c1-7189-4a90-bb24-5b3ac40c72c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040f1a04-0f4a-4b77-b36d-de4f10b33509",
        "cursor": {
          "ref": "1302b1d0-7463-4557-b648-18518d64008b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c7004b71-05be-42e6-b1a0-2cd00b77ac24"
        },
        "item": {
          "id": "040f1a04-0f4a-4b77-b36d-de4f10b33509",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "61b9837f-62b3-483a-9212-e0c732e026c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f07d3e-7d69-4f00-aee3-6a408649de17",
        "cursor": {
          "ref": "a66f8022-95d1-4d0f-9265-6254164bdd6e",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "886b2044-818d-47b3-b1e2-c7c08a876aa1"
        },
        "item": {
          "id": "43f07d3e-7d69-4f00-aee3-6a408649de17",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2d5ded7f-86de-456c-bb55-77242e5b72ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f12dc44-0545-42c4-a8f3-61c739b50747",
        "cursor": {
          "ref": "fb2edcfd-0f10-4808-8983-e4d2a68ac0a9",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "05eee5e1-0b9b-46d1-a05f-5bc62e03c841"
        },
        "item": {
          "id": "7f12dc44-0545-42c4-a8f3-61c739b50747",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f370a3f2-c3d8-48b7-b8c3-62eb80026714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b840d3-cdfe-4538-8d2d-6a8e2d31ce3a",
        "cursor": {
          "ref": "c6c74c82-02e7-4564-bf2a-082e0ca42824",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "845b4163-34e9-4124-acc8-0fca25bcf296"
        },
        "item": {
          "id": "92b840d3-cdfe-4538-8d2d-6a8e2d31ce3a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cb9c802a-8c50-4b07-9647-784da837b25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf1a713-5d72-4d9f-9e57-bce80edcfe0c",
        "cursor": {
          "ref": "55126fd9-3c21-4cef-9627-a07a6e525e02",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1769f47b-18c5-4e6e-a41a-c526b539f0a9"
        },
        "item": {
          "id": "dbf1a713-5d72-4d9f-9e57-bce80edcfe0c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4c179726-b6b0-4b23-acb9-12635e65498f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1294f824-e03a-4b2f-a59f-243b6882bedc",
        "cursor": {
          "ref": "dd29e4bd-8f2f-4260-89d1-065cf8b3058b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1b3214df-7767-4a53-a869-e1b3902b81ac"
        },
        "item": {
          "id": "1294f824-e03a-4b2f-a59f-243b6882bedc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "60122f18-0f49-471c-adf7-8e1a9dd206e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d607ff2-bfd6-4459-b12e-27ddc31d0e93",
        "cursor": {
          "ref": "30bda0d6-2ab7-4b07-b862-793a77aa26e2",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2a47acb6-d5d4-421f-8a8d-25a90cecb569"
        },
        "item": {
          "id": "7d607ff2-bfd6-4459-b12e-27ddc31d0e93",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "17de00c2-37d3-4678-85f3-a6a507c2b233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5524e7-5038-49cc-85f3-bbf515a3a4d1",
        "cursor": {
          "ref": "7059d10a-c757-49b6-8ac1-6626aae67c9b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1d9d901f-062e-4384-b9ad-2263be6596a3"
        },
        "item": {
          "id": "5b5524e7-5038-49cc-85f3-bbf515a3a4d1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e89ed940-e60c-4dfa-a218-72db42bb391b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea255017-aaf2-4044-95a1-d827ebb3e0fa",
        "cursor": {
          "ref": "75fa082d-0b54-49c7-b956-d45a5c1dcb9c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e3837e4e-4c3e-44e7-9604-cf8aaa8e536a"
        },
        "item": {
          "id": "ea255017-aaf2-4044-95a1-d827ebb3e0fa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5d7e34d9-134d-42d6-a037-9634588ab2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbfe339-a3ff-497d-9127-57e9e4ac0891",
        "cursor": {
          "ref": "d5a976ac-329d-4378-875b-7e2b34a8f4ca",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "730ab891-a97e-4c5e-8948-d421df8be08d"
        },
        "item": {
          "id": "1cbfe339-a3ff-497d-9127-57e9e4ac0891",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f4c3a975-1385-45c4-bb28-4ca9a59f630e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae27bcb-7892-42b6-9093-879d623a8955",
        "cursor": {
          "ref": "dd98aade-4f0c-455e-a0a0-684a9116c480",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "71d3ee2e-a767-4b2a-9171-0688225f8a7b"
        },
        "item": {
          "id": "1ae27bcb-7892-42b6-9093-879d623a8955",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c1cf4748-6618-4ec0-b4d7-2b0821efab43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaea7ce1-1b4f-49ca-a93a-3e274075d3f8",
        "cursor": {
          "ref": "71fa8f74-80b5-4741-89c5-1602c2f0e7d5",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a9815dbe-f804-47e5-b0df-748c9f1c23f1"
        },
        "item": {
          "id": "eaea7ce1-1b4f-49ca-a93a-3e274075d3f8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e356258b-acc3-441f-b167-570d7fc0e65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bf1e2e-9b42-4939-ac03-ca883d87e68f",
        "cursor": {
          "ref": "dd71dd8b-6d7a-49f4-b50e-495065d7e081",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8fa670c1-55e5-4208-a194-cea08dd4ba8d"
        },
        "item": {
          "id": "f0bf1e2e-9b42-4939-ac03-ca883d87e68f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2114267a-0538-429c-8afb-d68745431731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d2c581-d8a0-43f5-bd6e-3f6feda70d9a",
        "cursor": {
          "ref": "4f45c6e4-a973-476c-8900-ea7f39fbdf61",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "30091e23-19eb-4549-ba45-c2c36f87758d"
        },
        "item": {
          "id": "11d2c581-d8a0-43f5-bd6e-3f6feda70d9a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e4d1a295-9f41-4200-a68f-0557387b7b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48c82ff-cbb1-4bd9-9e22-520f4a1f2707",
        "cursor": {
          "ref": "a4dfb2e4-ff26-41b8-973e-89a0d24d7065",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "34da4480-21f6-4a84-90da-bdaf9d253637"
        },
        "item": {
          "id": "b48c82ff-cbb1-4bd9-9e22-520f4a1f2707",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ffe3acbe-d506-4b74-8ed6-b7d6cda7caac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e042887a-4827-4d46-97a8-75b0b921fe7c",
        "cursor": {
          "ref": "2f2da021-ced5-49e0-9279-0f2037b28849",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e7f4f70b-aa09-4cac-94fc-9cefe1040608"
        },
        "item": {
          "id": "e042887a-4827-4d46-97a8-75b0b921fe7c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6c21dc89-6f26-4804-b119-daac9dc3db33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991e5201-9698-48b5-9b35-fdcaeb9f073f",
        "cursor": {
          "ref": "a9635432-f6ed-424a-9c33-5edfa457077b",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "bc6f247e-d552-4d23-956f-a1f2cd10e19d"
        },
        "item": {
          "id": "991e5201-9698-48b5-9b35-fdcaeb9f073f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b7885491-2ce0-4050-98ea-164e0f9d9e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ec6cf7-d45f-48bd-9b53-42ce1224e01e",
        "cursor": {
          "ref": "4a8a6890-29bd-4a77-8771-c66d79ae2270",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8d3f0f22-8f9b-4834-9b64-81f04b256eb2"
        },
        "item": {
          "id": "63ec6cf7-d45f-48bd-9b53-42ce1224e01e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "41a183da-df21-4f46-affa-575e866383e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e801d2c3-1e9f-442b-ab86-c2f5343149c9",
        "cursor": {
          "ref": "9b3d6886-757c-4084-9cf8-a68eae226397",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "37ed2f23-2568-4ef6-b396-5f9e6817d861"
        },
        "item": {
          "id": "e801d2c3-1e9f-442b-ab86-c2f5343149c9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7237fa28-c2bb-4188-bd2b-eb87cdb2d611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420aab71-a3a3-4a62-b398-8a761ffe0761",
        "cursor": {
          "ref": "11b66cac-13c3-4ebb-8ce9-c551868ace41",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9de30b93-b5ef-49e7-8668-7eadca5b9519"
        },
        "item": {
          "id": "420aab71-a3a3-4a62-b398-8a761ffe0761",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c9945d95-d6e0-4aeb-bf7a-bc5272a49935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32c5c0c-8f6d-41cb-a86a-28f24ce48883",
        "cursor": {
          "ref": "fc09944d-059c-4e86-943f-e331956ddad7",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "300522a1-6b73-4b4a-b7a2-b2d9f91a78f0"
        },
        "item": {
          "id": "a32c5c0c-8f6d-41cb-a86a-28f24ce48883",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2e6be36d-821a-40ff-a4c3-00826f86b6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57527211-a765-4671-b33f-6aaabcae1d31",
        "cursor": {
          "ref": "8bb08ed4-bb4a-4dd7-b37c-7f114ae25038",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "32942a9b-cf03-497c-b049-4173841fada5"
        },
        "item": {
          "id": "57527211-a765-4671-b33f-6aaabcae1d31",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5cd910b7-b3ad-4b32-a74f-d9ecab29b945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c1cd43-dd6d-4c61-b558-18b6a5355edc",
        "cursor": {
          "ref": "a91854f8-d521-44df-bc9d-9179a5a50094",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "25107c9e-ae43-4714-b473-57bcb42cd4ff"
        },
        "item": {
          "id": "27c1cd43-dd6d-4c61-b558-18b6a5355edc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "64a7637f-7cd2-4ad9-b252-a63c9c940ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315ad1b0-6a69-477f-a6d5-54e5769a8610",
        "cursor": {
          "ref": "7f37b5c9-b73b-4a53-bb65-0110fd496f7c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5fc603f0-2577-4646-90d1-ba4997f01629"
        },
        "item": {
          "id": "315ad1b0-6a69-477f-a6d5-54e5769a8610",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "076ede6f-eac0-4f87-a252-9e912110e9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6a2b86-42e7-4ed7-b564-ffd4f2db1cf8",
        "cursor": {
          "ref": "eccfdd2b-ccaa-4b01-b30a-8096bd65bfda",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1b9dc07c-f7a5-42ad-be82-8a962b9da9c0"
        },
        "item": {
          "id": "de6a2b86-42e7-4ed7-b564-ffd4f2db1cf8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0772c193-e897-4ded-95d7-6e20026a6384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f63ead0-4919-4e36-80bf-0663ba2a0a0a",
        "cursor": {
          "ref": "41290147-df96-48ac-a3b2-815478f049b1",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "15248fec-639e-4d6f-88e6-7e31e84f4a00"
        },
        "item": {
          "id": "2f63ead0-4919-4e36-80bf-0663ba2a0a0a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "14a3c6d6-2220-4564-8d64-8c7cba1fbc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f90b18-02c5-4a1b-957d-d28a6caf81fe",
        "cursor": {
          "ref": "de70ac92-4cd0-431d-a5a1-7327787a3ef8",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e5dcf392-38a7-4d6d-bcb3-30cf5622f365"
        },
        "item": {
          "id": "b7f90b18-02c5-4a1b-957d-d28a6caf81fe",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c691f0eb-d2dc-4081-b340-3a994d2d87a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e8fd32-61fe-4d07-871c-4c5cb0b10bf9",
        "cursor": {
          "ref": "54e11c83-77bb-4849-8774-7ce607347f7e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b732ca00-7080-4075-bad2-41f7430ee721"
        },
        "item": {
          "id": "d0e8fd32-61fe-4d07-871c-4c5cb0b10bf9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "07fdbdf2-817e-47b4-accd-1ca4b8ded118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006304a8-8bcf-4cfc-b95e-28f48f02d628",
        "cursor": {
          "ref": "d096faf4-2ba5-4ea7-833c-8b4673e9380e",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "51c5b65b-fae0-436f-9bdb-4b490c46f7c1"
        },
        "item": {
          "id": "006304a8-8bcf-4cfc-b95e-28f48f02d628",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6575d575-9cdf-472a-a22b-13c974e9e6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3a1ac1-5af1-489b-b8e1-42835f72178e",
        "cursor": {
          "ref": "08bb9714-61e2-490e-9637-6b7d9b1940b1",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "acbbbb0e-01e2-4b0b-9f93-1f182f22c09b"
        },
        "item": {
          "id": "7b3a1ac1-5af1-489b-b8e1-42835f72178e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "045763c2-be92-4544-a565-4c5b6cdd0135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887fed22-e638-4de0-b88c-e30d65332271",
        "cursor": {
          "ref": "ec4a268f-8a0f-488d-9d28-3f64f9e0a925",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8ce7fc63-d5f4-4cf3-9dd4-efa4c27a8966"
        },
        "item": {
          "id": "887fed22-e638-4de0-b88c-e30d65332271",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b51aeee9-7002-4420-81cb-bbebb3b9bc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30da681b-029d-4366-8309-ba7bea8795da",
        "cursor": {
          "ref": "aa76acf5-f485-4527-9fcd-136e90b40514",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fd266814-3c1c-4000-8a24-3b9851a2ad33"
        },
        "item": {
          "id": "30da681b-029d-4366-8309-ba7bea8795da",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ec9b60ab-0528-41f7-a7f8-24d57dfe6144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd69029-c7ff-405a-8939-ce30418def1b",
        "cursor": {
          "ref": "9107a3f8-e3f6-451f-911e-58d6bd20247e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b1389555-8318-4d97-a972-1658fdef9c37"
        },
        "item": {
          "id": "bdd69029-c7ff-405a-8939-ce30418def1b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3bd9263f-b27d-40ca-8701-c7708e067af3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed225ccc-409b-4e4d-87df-f0d2d65d07bd",
        "cursor": {
          "ref": "53f582e1-c01a-42c3-8eb1-65008c6a162e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e2a63668-1b7b-4b4a-b7b8-faab76b4ee01"
        },
        "item": {
          "id": "ed225ccc-409b-4e4d-87df-f0d2d65d07bd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e45f96de-ae92-48f9-9bee-27eb0e3fd77c",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "af368dbd-f603-443f-b05d-336674b389a4",
        "cursor": {
          "ref": "df7522df-50c9-45b0-8ce4-cf71d27f9dc6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "80aba3c9-0e11-478a-a6ab-da0f7e81b092"
        },
        "item": {
          "id": "af368dbd-f603-443f-b05d-336674b389a4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "88dc9133-01e0-47cb-a866-e501830bd15c",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc218127-cfe3-42c9-b4a8-859a88d32477",
        "cursor": {
          "ref": "7d3942b6-866a-4136-9e0a-58de5400d54c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "44237ddb-ae51-4055-b7a2-a250ac306612"
        },
        "item": {
          "id": "fc218127-cfe3-42c9-b4a8-859a88d32477",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "99086a90-dbf7-4a75-89e5-223665ba4407",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76cbf53-60f1-4703-91a4-5ebf13a4570e",
        "cursor": {
          "ref": "c29547f1-a434-4857-9f57-97a86a680650",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "230b9bd1-23b3-47cf-b3a0-f23a5b034234"
        },
        "item": {
          "id": "d76cbf53-60f1-4703-91a4-5ebf13a4570e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ddcff1b8-3137-40ac-ac83-dc0cae8e69dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76cbf53-60f1-4703-91a4-5ebf13a4570e",
        "cursor": {
          "ref": "c29547f1-a434-4857-9f57-97a86a680650",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "230b9bd1-23b3-47cf-b3a0-f23a5b034234"
        },
        "item": {
          "id": "d76cbf53-60f1-4703-91a4-5ebf13a4570e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ddcff1b8-3137-40ac-ac83-dc0cae8e69dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188d0c4f-12e1-42a3-baa7-316853de5fed",
        "cursor": {
          "ref": "25b6c463-7c2c-4934-bc9b-4019ba60c724",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ff6f3696-03bb-485e-9b2b-10a350e7fa91"
        },
        "item": {
          "id": "188d0c4f-12e1-42a3-baa7-316853de5fed",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "abba88d0-2355-4a4f-bbbc-d342a45cdc60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2ac71e-fb3e-492a-b252-20b21a1495bd",
        "cursor": {
          "ref": "7cc718a6-b5cb-44fe-9d0f-e5b4a045fa94",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "722bc18f-3b7d-47a8-9c9a-e8c4226af265"
        },
        "item": {
          "id": "ee2ac71e-fb3e-492a-b252-20b21a1495bd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c652084b-72cb-4c1b-99c3-b47baa104313",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}