{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "74992d67-bca8-42f0-9611-4432d28f3f8a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2219b419-9d11-4b30-b873-bd591911f611",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d14eeb79-dc48-477b-b9e5-4892483b94a6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f3e40ea0-e3fa-4a0b-9534-36805928d23b"
                }
              }
            ]
          },
          {
            "id": "4550b464-336b-411b-a816-669aadeb027e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07dee3c4-054f-4cad-864e-dd4580107c20",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d9d02dde-869f-4cb1-9eb0-a9a34304fd57"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "462c1dcb-eff9-453a-9b51-3ebb70ee337a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e0e5db46-d478-4a2c-a2e3-0e8e6c6d5582",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01829ce5-b46c-48de-ac73-30703d8c2448",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3af399f4-142e-400e-8934-64b3d31a94fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9da9fb1-573e-4a3a-85f5-93c5fa1300ac"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48abee18-b837-4e8a-8a3d-f29893d96b57",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57372837-e936-4627-8dd0-038c8ab90a81"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9229444d-e66c-439b-8ad7-b7d4c2d91545",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd03589f-e62e-4ba4-9c2e-06138a215cb0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42345ff2-9351-4817-b93d-7b5d57f0cef1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f543db72-adb2-45ce-af6a-ef345b1b0cc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65cabbdb-a5b4-4649-b270-d1ccb1b13137",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b447dc65-3057-4c3e-8b8e-eb86173c93df"
            }
          }
        ]
      },
      {
        "id": "8d20d318-67f0-42a3-ab40-d66f72cf3450",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4123187a-ba12-4865-b374-342eee416790",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6ddc069-21f3-41e6-adcd-236c43e32ab9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8793f9ac-8eed-4091-bb8c-7956bb5ec044",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddd0425-260e-4855-8ed2-4929c869e80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8ba853d-bf8c-440e-bfca-1ffefa9122ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5049c706-77cf-4022-8de1-53008c3df442",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170f866d-3533-4aae-a590-8e318a60e948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9c17758-f1db-4421-b5a2-41944ba36541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a9e316-1f71-4190-ab96-5becd753f082",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0543598f-e669-4f98-bd12-ba91a1538904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3e3f84b-436d-4125-8d1b-bd26f5c17be3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee47313e-3095-43b2-a19a-87fff01addb3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c62d86ab-8724-4115-a74c-3f8d497efbea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69743832-975c-451c-86cf-6dc5191e16e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee2dee91-c363-46a8-831e-9ce69481746a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157bb7e4-e161-45e7-a923-15afadf6e2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716809ef-ec39-4b25-9958-4debc1cc7b1b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f6cd9629-8a11-495b-b6c2-c422a63d3f5f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a77cd00-5ffe-413a-9558-ff1affbbe571",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed6bfc42-a27e-4f45-b165-350e7c9c8cc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3e96ba96-76e7-4990-833e-e931a73c679d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4af6af23-cf40-464b-89b2-a0525a6cb7bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0d8b4128-a762-4ed6-a634-74cd7ee1c7ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e7bc798-91bb-4d3c-a47c-7ef7a6992ba5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eea86f40-3136-4a35-b7d3-ba3825219a4e"
            }
          }
        ]
      },
      {
        "id": "bc48a5c4-87d0-4bc3-aa28-e0220e999ad4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "452275b1-a7e6-449d-b21b-40167fe42201",
            "name": "Negative Testing",
            "item": [
              {
                "id": "356e1e8a-3bca-4433-8c98-5008a8d9af10",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "85d93822-bc9a-4a5f-a0e0-52e4d69f77f5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00b522e-c8d6-44ec-9943-f64285748797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3715a1-36d1-40bd-8933-0da1ca7e366e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078f54c1-bd5f-4d03-8578-42b20fecbaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e0f9382-7112-4a2f-8a75-a05570899ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd63c1cf-3be5-4f0f-8452-41b606d455a5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b83e09-e009-4097-a0f6-aaea7de2a280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54517cf9-2133-40f4-9173-e12c1c6841a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48714ad1-f75a-4a54-9f48-150a81f33542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3775b09f-0758-4dd6-b151-f202385e8c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3449de4a-0b60-4779-8c47-66172dd66388",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e001c2-e3be-4aa9-8295-8482b8c01b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5785ff-609a-462d-bc84-f98f95ba9e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8085b86-6521-4618-aaf9-e6f53b936407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9692fac-2765-4c0a-bf43-2214a46abd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3465e565-fa48-443d-8653-60426ab08af4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d613fab-9aac-4ecf-a350-cfec16581a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434ec663-073d-4380-89dc-23b7d1bbadac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075e7abb-cd09-4fc6-abdc-bd041cf930eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb75d265-d173-4a61-bbd7-0bb8e46e1e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57493a6a-744c-4693-bf73-89d1cfb2bd45",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75b9c3a-2ec8-41b5-a063-6e141b3d36ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac84b61-1fea-4830-9f5d-98a02ea8403c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66f150a-f4d1-490a-8968-5230fb456fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "643c90d9-1a7e-47eb-8c7f-274118933935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8043826-6b5a-4c1e-8837-3a0b3c2d5f6c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd0f03f-8c67-4cd2-8382-0bf42f9abdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1751918f-326f-4e4b-925f-ff9eec9c1d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5646e6-8c79-40cb-84e2-391a74613c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fdcee93-0e92-45b6-a6b2-6614d1ff750b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26705bf7-9dcf-4dc7-9d2b-44a89fd3ae3b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8e4c0d-f53a-4135-a34a-ad6645c97263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425a0317-2f1e-4130-b053-67178e9014f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abb6903-aca8-41ae-9e63-20c518b4f98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e930f473-6cad-44e9-a4da-62dc13643df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af76b3e-a641-4f86-b4ee-3ed158755ee3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e98a46-1392-4cfa-96fc-a17b48848b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3048af90-07fc-4869-8a80-46f20d9cd6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98782bb9-7dac-4e6f-a20e-24884b374932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfa46489-2b09-43dd-a83a-5ca43e9e2657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00914206-0751-47dd-8f71-3b6030ebdced",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543f5a0f-d9ae-4442-8837-c9245ea88f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6469c4cf-69a2-4104-8024-a18f0e97e844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2145eb2-ed19-41cf-be53-db8a171411b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29027b60-7adc-4fe9-9dec-240dd3c17a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e234e58-1dcb-40e3-acb5-e12b1b663717",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b392d3-0d43-4bd1-a6fc-210a78ec8a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3f663e-c294-4100-88c6-4d8a8df2e550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87b9e2b-76c7-4eaf-afc1-b81933c0bf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6737bb6-7bf7-45e2-b4e8-557f2199bc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b1c5d8-91bd-4102-bc01-630a027ea67b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4327fd7a-f45c-4bc8-a7ad-04b2ac979a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c07c37c-87a4-4cf1-b43b-875afabf2672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07324e91-f50e-4ee7-b8ee-529428063677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5949345-96bc-4376-8576-67ea379288f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1e9a2f-4124-4bcd-8668-231d985e5220",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f0087b-edc1-4a8a-ab53-2614fabf5652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cd50c2-3411-4df0-a603-7aa9665c27b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5663bf23-cf1c-4103-9767-5150d719dfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ccadebe-ab9b-4fd1-aa7e-69474e0021d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f3bff6-898a-40d3-b233-2ee2a0aadab8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a46c86-1b22-42f1-9171-4d8fa9088863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a29ad78-a5fc-4ec3-859c-2139fad978d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a701c4f5-e065-4aea-863e-5ad5f20b5c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54dd4af2-09cf-4cc4-ba8e-81d4e130c366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5073d23e-23b2-4f7f-b4b4-f55d73031980",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752b6ed0-a2ca-4aa9-82f5-5bb6ac9ef80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c05e40-28f3-4871-a4d5-01fa0af1fa35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4217364-55ff-49d2-811d-ebae0a8da5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29bbe066-ea5e-46a5-8d21-9cdd61347680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bf8cd7-edd6-4959-975b-6456f1f51c1c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae53f1e-bb9c-48ca-aee0-b0bfa58f8724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28942043-3890-4ecd-9cf3-f1670498c403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca72fe0c-96c0-4010-95c4-507ecadfa73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33499320-9d41-45e7-9e55-2ef0fbc67d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647cea5f-068b-4a1d-800a-78db7b95e0c3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab015be-9197-4f18-9790-b654a3d37612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436eb058-cfe7-40dc-bdbf-0af0f391f79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3637d4-0d76-422a-82e6-bdf56bb1e32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4a87061-720d-4eb2-b82e-7ca761febd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a55951-8f75-4f3c-8b88-d92da9f8388e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeafdfd5-37d4-41df-bea1-e6c9af64ce1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1db05d6-d5fd-43dd-9db6-82630b68114c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec187df9-0a5c-42db-9bae-b06e9ea8335e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd606ea8-68bd-43b6-80c3-258c03dcd63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532e83c5-0467-4915-b89b-14f115744437",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329d2884-7e98-46f9-9b6b-b60734de8f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eeeda3e-8da8-4935-a9fe-9b273c6ceb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e6c6dd-260b-4dc7-9367-a2f66d5b6cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c832e5c-dff2-4164-87d1-31aeb61d7912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7611cc77-252b-4dd7-8705-4645ea020064",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270b7e91-ce63-4686-b986-31a8dc4c45f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc1f616-9a33-49b0-bc26-2009f20a11c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0593df6b-3c10-4bdb-8fdd-8174394ce5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d902352f-f61d-4093-826e-d8063788fa1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf74517e-f5fc-4e23-8f0d-ad7f9925be33",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c8d6c8-626a-4821-8085-72fe3e85ad92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be985e2-a571-45bc-b8de-4dbee607aa74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddec3ad-7fdd-4b81-a0a0-3e060f663370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ede01a2-48bf-4ea1-b543-e3a045e5985e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8605f78-e1e2-4e6e-9489-b657968c389a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c83f017-1989-4b55-9fd6-19dd1cc54127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9f8110-a983-4506-8518-63f8b63afec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e2f5d0-8b65-424a-b413-87f22680e273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f479a165-f9b3-426a-9c8e-82267db87413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2a8204-edca-45f2-b2aa-98c0230cf172",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac2802b-6e40-4102-a915-e3b25d2879a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd800f2-3f89-471d-bed8-9ada0ca48ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321cf8b3-5034-4896-9bea-299030ed12b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6c05a5-614e-4840-be53-0516903115f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28925ee5-45af-4c41-980c-5c50c4e7b63b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3575f6d-c56e-4ed6-8b3c-92a8149ed495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0656e699-4862-4f72-be41-07a2fc2d68b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9a4249-4add-4339-ae38-78b4eb975917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "137b9de7-2a4a-47ef-85ed-b5569bda7ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc023e7-6ee0-4f28-9c8b-b401b22a8c40",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac4b51e-3630-4b8a-86ad-4bb483f4a6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078823b7-0254-42a0-8165-1cc586f1db52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45c8072-8b83-415d-a8c3-1b0637aa2527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c5a6a9-b175-44c8-8473-86a15ec59502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21612121-763c-4f67-8622-0c15ef4a0460",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2444ae5-adcc-42e1-97ab-a02f4f722df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac86d70-2118-4c1f-8828-8ff74b524296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71246192-4e29-4213-acf6-163867a78ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27dd8273-2e1e-4205-adfd-72d481776e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1eb617c-b278-41bf-9b0f-3178d2fbb185",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1886e8-0852-47f2-b638-3940a53eced9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81559b51-8e79-4a2e-a72e-a655419cee7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdf3fe4-e0a8-4747-8049-b36d78868c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f875e8e1-0978-49fd-a7b3-15739f66bdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e664ba-c8c6-4bb8-87e8-f328296ba0cd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f264b6-54bc-4912-8c58-6735f423eb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fda6bf-483e-4389-a04e-82a2ec290cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdfa07e-c950-4e0f-8b1c-6c51021c49e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "810612fa-807c-4a77-a6ec-def4606b93c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f8fc28-6bc2-4ee1-83eb-acb0b92d5fb6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc6a88d-8114-4bf4-961f-930ddf60dea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de88fece-fe8f-4f20-b2c7-b66d7681bba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c797005a-9cf9-48aa-83e5-b8d95c6ee73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05d254c9-48f7-4c0f-9576-5b034cabba69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed6968c-a95c-4c21-819d-ba722533003b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395092d8-0c7e-4794-bb8c-230608d1aa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859bd65b-e572-4070-9e6a-0d12f39b2f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7beeba21-377b-44fa-bb09-0853e8e172ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c9f888-d23a-4fbd-b2e4-44fd69823525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c3ceff-8e15-456b-8da5-2d64e7681076",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54c1864-4fae-4f65-acbc-b4234ef08744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bc2fc5-d98c-4eb8-95c4-b1ff411c1e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b317f7-7dcf-43ce-9635-4e3b699663eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "de1b810c-3625-455e-a9c2-f0a10b93643c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fae0f8-1183-4a88-ba97-51d83760bf73",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb94b806-3c0d-4573-b10c-b582c2851899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa82130-198a-4c0f-b793-3250b11147c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed604b9d-1260-4afe-8847-4803239bf608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b232c8-3d3d-4b76-9efc-74fc66bd889e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5deb3b-7b90-4beb-9dac-2e51665083ba",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353b4a7c-0d41-496c-a037-60eb63df6606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9268bba6-fd77-4f58-8f8f-5e44230bae71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a0594e-f6c3-4bf8-8305-412cd29c21c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1abf8f8c-04d8-4478-b420-12792c955737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b62a36-94fd-4dff-ab54-df0b8a396678",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2bdb5a-236f-4402-86d7-7c0dda439375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea61b01-3947-4364-911f-3ec6419a9679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6e741d-52d6-4a5a-b25e-32785d2db50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e06cbb1-55eb-48f0-a9f2-281a1d3c2ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2ba5d1-f66e-4d02-9454-5b9b83ab2da9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d06f48d-734a-4bbf-9cd5-a56d70e55bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7f68ed-31c7-487c-a6ce-e3f9578ca389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a895198e-0ee7-4c99-9285-4d0759042a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e006621-7478-449d-b69a-9d3d943033ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7afd00-a373-46e1-aa7b-7944680a53de",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc69f01-7221-4b12-ac75-f4c3178fc1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4036f0-7ba5-4bb9-a776-8739a5e090c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a317a0-e2de-40a3-a073-c1237566d7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "459e02f1-3874-4d42-a191-afbc91fcc9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c34c0e-fc50-4960-b1f9-1f8ea8dbe6c7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448ddc97-1d7d-4472-88e4-ca6ae9dc2359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25b49229-da94-45fb-84bd-a17bd88b270e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b857e42-d9fc-49b5-b9ae-2db233b99a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c03e4882-3fdf-4100-bedc-d833f520fdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de73a64-5902-47de-b3af-116527bcaf35",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f4ec08-005c-470a-b050-10ffefa6fac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581c787e-c2a9-48e6-be38-2f9778728bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413846c5-457c-4b50-85ed-0a7910d9a9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a2b595-0d02-497f-b1c1-7e2446869b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b751ad58-d423-4c6d-90d5-a2f1a0fb4035",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76357f0-4569-4b33-a9b0-840235af7e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa44ccaf-51b0-4e4d-b7fb-17ff2defdf6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e91e56-2ffc-4f44-8cbc-8ddecc745037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c377e03-a497-47c5-b270-3cdf81f26e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c4c8c6-0781-4fd2-9af5-ec4e59f178ab",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a450c1bc-9489-408c-ba33-b3d3d022c8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ca55c6-cccb-4e7c-992d-a7f7ffeaae14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f202ea-b1cf-4fc1-8a88-6d5bdac1bb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6ac87f-32f3-410c-b7a2-acd51bde11f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9964a0a-51da-4503-9fa3-5110a847ec8f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a67441-5fba-40db-aa7a-6ed12dd72e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f802b8-0be0-4cc3-8877-09cc7e4c4ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd5593c-30ac-49b0-9a7b-c46180fb54c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6539c776-24c4-4ef9-9f62-62f9bd500668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbeeaca-10a7-40c8-95f1-e647208f6d65",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb832e8-df46-4d74-a983-575ad343c337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f33f20e-6d93-471b-8d23-8b93624a7429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2394ce3a-1a6a-4f75-8164-83ad9b9c343a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d182cdc-1356-4780-a2f5-f6ede4528b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a00ea41-6e40-4020-9ea8-302ba268cebf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99284a14-7d54-4cc5-b171-f5f6386925bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b31840a-c98e-41bd-8efd-8e902064b29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b43206b-fa8b-4b3c-9586-db7c0b4920ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ea0a16-0506-4d7f-a8da-e5cb654f69e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05f550e-fbf7-4654-978c-93fbfba52bdd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a56a2b5-635d-4523-b4f0-1a8faee98e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1511f9-e18f-4cb4-b3a2-3fdb821c31e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5653ff9d-01d3-4213-8fef-7e0ea652c9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "76faca32-d550-4549-be60-7ba5ae7cf1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff33aa07-73e5-4a8f-8c0a-d1cdd6bdbd7f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16748a66-49c5-4f16-9f28-5a5396ba2b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f948d8-5dee-4118-8f0a-5f01dffa6feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b453e1f-7115-441d-89ea-cbc05f8121f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f27507-8f6a-43a2-aa8b-7a2d67e51b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9eec6f-39f3-4652-964c-a211c23f77c7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbb29c1-9d13-4247-9d22-331c86209ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa82e1f-abcf-4d83-8e71-5ea6659f4a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4effad20-b4e0-4ff0-8d8a-993cbc06b661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23493bd-0915-4263-a43b-ae1050ff261b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3268aa-e3d5-4e5f-ba69-ac85db1384c0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d878575-71fd-48f5-b8b8-496b43f614f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0242821-09c9-4313-9983-a047e00068c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f036ac0-c0ed-4b41-898e-fcd47ed9a3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3eebf9-1db6-4703-a625-835c87ef8ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4943d39b-8909-4513-b448-c70deb36594e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a28335-576f-44f2-b9a5-5a5f4ddfb385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8b1646-f40c-4e94-ac23-cb1df5f92e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e572a0-2bed-43c4-9baa-b39024e0a282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0433329-0fae-42e1-a1c3-ecd499451eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb534cb5-fe6a-40e8-b461-f0609207ecea",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752c7f2f-fb29-4bae-a2d6-e9c9e0281235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27aaa665-a773-4813-9abe-664bfca17567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fa9218-859e-45d1-86a5-5ac209552774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61047b4c-8fc9-440e-bf90-cc7c025dbb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491babc5-68d7-4174-b007-7a65199396fe",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8e20e0-d6cd-4ad8-9256-88854717b0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b9f960-06c7-444b-81c3-d713827a2aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feed6999-22c8-4180-b61c-46dfd05cfeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6642ee7e-c9b1-4fce-b716-0580109408b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaeec12-e9bb-47bc-b1b4-22dcc090c9e0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcdd6c1-62cc-4f3d-b4ee-67938d7ccad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7857d73-b5bc-4f3b-ab54-eb5e414f4844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51dc82bc-1eb8-48b5-a130-f065c3521a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3fb1f50-fef7-47e8-9bb9-b2af87237680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d543e00-b67a-47d5-85f4-aec5e15b446f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2917350-d3e7-4032-9098-a71257803dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b319dc5d-50bc-4d33-a6da-e8b6b68a23ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6876bd9-ad56-4c61-bcc7-c87d5b2bbb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1274ec16-9c86-4079-beea-0a4895bc3ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf19d79-dcae-4dfd-8205-cbe6a25a8862",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbcdd5a-6de9-4a77-b089-46d41c3ed675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9e63dc-013b-46d4-af67-cc2fe1e5ef5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9272e9d9-647e-4acc-9273-7ae2e78f0ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b02624f3-a3f0-4955-96e9-50888593ab7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdf5f87-c751-4134-9356-515f4a0b070d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4c0df6-10c2-4882-9f4b-a02261a3e2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c3e061-62d9-451a-865e-4a81c653bfbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051bd2e9-de2f-4082-95ec-15c11f4950de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3828f4c8-51c0-410e-9537-8a26e668a49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70924d8-2ec3-44f5-a68d-40fe24570fa7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d96ca3-4520-4822-b686-270f3585bf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129de74c-5096-41ac-8cf6-ed4baf06c555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a43d2e2-cb86-4973-abbc-d35698f77035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6647d8f7-5e3e-494b-af40-ce7f4d5c8c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d93aca-fac6-4063-9793-57d713d9e30b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258e7f92-d88a-43fb-8595-04206ce37004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf46d7a-c5bb-4cec-bbca-488b84c8f12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55998f94-c473-4304-b6cc-3a014f92ef29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d46034a4-2801-4eb9-a130-d8d5cb9888a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21900d33-4ad2-445e-a54d-39b341353ea2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24ac293-2a6e-4f7a-8f6f-0dff08da930d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d447c682-780f-486a-acda-cffc866b7f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38771195-44af-41cb-a8e9-265ad6a7aa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f5a980-af5b-4e23-921b-00a90ad113cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7f7903-56f0-4acf-a1af-90d57f52d148",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e890bb-1e17-45b0-88df-98f03842653e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8388f6f8-1fe9-4b7c-9e9c-4591d58bc59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f19a98-9a80-4ae2-a553-7cf9b96ff5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa6ed13-437c-4fd8-b7df-f3474dbdd60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ab20f1-7bef-48c2-a8e8-7da07d0dead2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d76815f-0e46-4b0d-a0d5-8df77b2094cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a7bb3c-ffad-4519-8452-5b7a8ab22952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70ddb9c-0faf-4220-a651-187b66540653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "afc81041-9248-4f54-81a4-555487c0ac09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76afff39-a2a4-4963-a622-ad80da5c186f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a322e11-e738-4cfb-bc1a-08a355a8e89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b8a059-6353-420d-b03e-036395289bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769bf020-fd2b-4f3f-8726-f2db8e556712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4edcd661-614e-4c7e-ab46-34c45d3e8e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c43957-1db0-4921-abfa-029bf684f662",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e814d914-87bc-4303-8176-660c442f0bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f859405-7a28-4268-9b01-4ed094120da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b441217-177a-4171-998e-0ef18566cf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef826e4e-1ce2-4bf9-9233-6c030d101aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca94678c-6b14-419e-abab-252791fa04fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955dde37-36db-42be-bbd6-70752f0db25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9ca7f0-739b-4fe3-98bf-f133af132db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e05c22-f7b1-4fc5-915f-f5b097d6d311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "892a324a-f444-4c23-8b25-31d320e043ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bb96ef-a5d7-4c13-a3bd-d3ed28bed364",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798370ea-e34f-46b6-bb79-249de304353b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c01cb4-d215-4d3b-9e2d-fb6192d5f322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343fcb9f-0c70-43f3-9467-4b58c76bfd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30bde83-e3af-4362-b363-16fb6cc18acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b12971-e799-4dcb-9d2f-6d1de1d010d2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a32cb45-032c-400b-9196-bb88367e9b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba5498f-345f-4d5f-a871-c957a39ef13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45741ddb-700e-49fd-8296-1e549f0badbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ef821c-7f9f-4115-9ec8-fa9ec2fe2797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69b4da2-9393-4045-a8b8-2afec3034715",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8339374d-3b39-4dc3-a31d-5bf838153a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa144ed9-1ea5-4325-b3ce-e424665d3e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac495c2-0e92-43ba-8cfd-ba4df5ce7b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fafcaf7-b7a4-472e-8d3e-52d90e52ebe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e96aaa-a875-4fa3-9c4c-48b63b254e1b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17666190-ec72-44a2-96c2-888dc8e9d9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2606b08f-ed87-41bd-b1b4-7358115ca31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fb04d9-2156-41fc-b5b9-944f10f7a950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7d9e92-b090-41b0-8e92-8ef2f502c472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067e102f-1c67-44d9-8fed-8ac88838caf6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9625c2f8-13e1-49e6-a43a-4abb29b6b915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627051e0-b212-48e7-a7ca-c665f7ca9273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41988c59-c1fd-439a-b4ab-84a336c283a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f85f361-c243-442e-8f8d-a03ffa1fb975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f692e59a-4a9c-4358-bd83-a11a5ca4ccf8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9df0d77-91a4-497a-bf76-493266129eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff3c40d-010f-4484-ba7c-741c24d5475b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8bb0f9-d626-408c-b6bc-3447e0608620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07e98828-c15d-45cb-871b-6b914e27cabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af2e8a2-b01c-4d0d-badc-c8d1377ea44e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96bdc49-6d68-4b6c-bd07-eb2dc152e9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a33bed8-1ad9-4c76-98b3-0a244e6d6fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de1d709-68d5-45ef-ae6a-7359d6d0f0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dba4f3a2-7f18-42f3-922c-74d79d443c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cc0b48-51f8-4102-a35c-559fba048d1e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03a4950-e049-4ce9-8fbb-34fd49781d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834eb434-4b7e-4be9-96e3-00c502092ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4b8662-2a45-4984-bc16-559095b2e5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdc7165-651a-4ec8-8faf-08acb8345624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd39999-abce-4f52-986a-31021d21d027",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e635a7-f468-4f75-b982-a8cd2e99676f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ad39bc-67bd-4258-9554-c614bb62719b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19aa389-6c05-4ed2-ba56-d2bae0221ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "557e349a-28a2-4c7c-b838-b86040f8f394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51417aee-b950-437c-8c13-b06025d1bf3f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6e4328-16ae-401f-9ad6-9e9938726fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0320d85-2de4-4266-a04f-ca9b016db7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae2c2b4-de55-4146-ba9a-b7e5bc8e6b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae58d897-4b8b-4c18-97c6-3fc0c223af34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff4cd74-0418-49b6-b71a-7f7389411d6d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e309d08-2b38-4d30-b710-d8417d96da2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845ba451-107d-4445-bd45-f20ac23171fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd06d7e-103d-404b-aff2-4f92b8053047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdee77ca-19ad-4974-891b-24619a77edf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011c7135-14fb-4cd4-9cff-5d0c1c3a52c2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331cfa6d-ee9e-4e0d-873c-a5364cad91ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aec0aa2-f11b-48d9-b82a-c2eb77c26c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec231ae-0f69-4ecf-a5fd-97f0fd742c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a99ce2e7-ebd2-4dca-bf7e-cc58cbd46afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6052a5e2-42c9-4eb6-84a5-89d4e40c6096",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80fe0b0-dabf-4d88-9b5e-99b0f19f4cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ec9bb0-08f1-40a3-aa1e-90bcaca63cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b226b1dc-955b-43a6-8d68-e10a318dc3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f431a2f-a804-44c6-9d08-1c2d7b163801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664326b8-d779-4a34-b50a-6da88af7af60",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd86b499-6fd5-4d32-8dd8-7213ef2ccfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29664acd-801b-48ee-9e96-0495b29440a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b32d40-bdfe-4907-b94c-f707210e92f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a30e1a77-49dd-4a6e-b92e-0e1d6c42d25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31a4d9a-bf38-447a-aaf9-5b9bfa5cd640",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca6070f-b764-43b8-8271-e25936c001d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04de5d9-f4ca-4541-8a86-531990b983ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4086b76-ff61-4b55-96ba-66d03921dc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20a401f2-5a5d-4fdc-9f17-741bf4338076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07d0e56-e1e3-4504-9519-f602f9b72210",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c56b72-e8fb-4c0e-b4f8-3816cc3e27cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b1b8e4-c04f-4203-b76c-5e439fadabbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cde799-eb67-4676-af53-1a3de20e98e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c8c7d8-f080-411c-9c9b-f77ac8900068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc888659-f646-49bb-afe7-de48d1280040",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a41fbf7-24a1-4aed-bd79-7cbf49587602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc965854-61e0-4b10-8050-2c33e038b94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd571283-b694-4fd7-acb4-7fa56ebf4cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1799f6-f959-4325-b19f-c6c55114e965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5ab4e6-0d71-417e-b646-4387007b8b27",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3fdd23-eb56-4273-b888-d1ef978acc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c2fdc9-e3c7-46b8-b406-8b37fceeb07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776b652f-42f1-4db8-9671-3ae85a824948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5576ee00-8795-4724-89ed-6e3fa8049228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c9c086-a2f6-41c0-9235-ddf719c9c3e6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a5e196-2244-4942-abf1-792f4d5c3f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8ab540-36e5-4c7a-8891-937e9cfe5952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797ba09d-0e5f-40d6-9470-5b3dbd6d7e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f67ce86-1c13-4fdf-b291-a21ab2da551e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e558bb-9ef8-4866-95c0-df44388022d2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4bd27b-7430-4ad4-81dc-aba32db42a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c20bbf-9fe1-456a-861f-adeb835b6ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067b8911-a95e-4a75-9e11-5dda8e05ca88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a32443c0-39a8-47fa-a28c-32e4f3fb1123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2cdb8c-0f01-479e-ab72-f41a1409aded",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d13b1d-1f7f-4c5d-b5e3-aa35c061f614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0eb77f-bc13-4287-87a4-9b610abcabb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4293c0ca-64e7-4e5b-829d-b8e36a62cec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14d84901-a119-447e-8ed9-da4b5e05484a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd017ded-cc37-4255-9a1a-29c906995d73",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab33836-2b6b-49b9-b4d4-52b10ed26173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e111a1a5-6782-43ee-85cf-d4ca90317088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d738da6-0cf7-40e8-8f97-1d3ff5b6b15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e79428cb-b238-4bfc-aa4d-52eb0cb05ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6c253e-2659-4e83-82f0-79179b64555e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68931091-8cf3-4e71-a2b1-5da207f0bad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fddc8688-368f-4c1e-a46c-b4da0eaed5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942c47b0-c62c-4b2e-a286-6f6f5b59e20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f87ac906-a339-45f6-915c-83ae7954f86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8ef470-7aeb-43da-9617-52fea7a56d52",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0897a12b-01a0-4ddb-be83-548cfb66cc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a89efc-65e3-4c47-b243-d9afeb91932e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e207ad8d-4b02-4dfb-ad63-d8567c41a982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c33b111f-8d37-43c9-8f95-2d23e942b007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf373b4-1e81-4775-95c9-755f145280ae",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d134b7a2-f9e8-4907-a456-8d2550744d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9218b07-edbe-479a-95a4-2cc5c1a275e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c415ed33-7617-4aa1-a2ad-0756c64cf1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80e5dcc7-b1fc-430e-a4a3-16c6196633bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d1bca0-8ebb-4912-9535-14ab293b3e55",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded509f8-d797-4459-a895-b58dc51be896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282c191a-0348-4c96-87fc-5ecdf0797a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3665039-49bf-450d-8a83-71548acd9ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15a47025-68cf-4677-986c-01334f68758f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e533bb79-4c0d-4082-b851-aede61e8fc2f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3026d31e-2e29-41d9-b00d-614532046270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0c11f7-0d9e-4e52-8d56-6f9017a89835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd3553c-2d34-4b17-aaa8-4e4577a00630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2de66fe4-c22f-41c0-b80a-bec18149bb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6898ad74-bb1a-4c62-942d-6c6a8a97b618",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d441ced1-2c9d-4809-8c6b-a2992af1d1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba68a0c-31b4-4b69-9ce2-bd149aefc036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83297e36-afc6-41e6-81c7-b8aaa7b34ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "04255a29-5790-4fa3-bb69-07278650a0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb2c6fa-975b-4623-a5bd-3c44b9f9ec89",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108b1c3f-c2d3-4ed0-834f-85c8ae6ad4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0a0f9d-d686-47f6-8d2b-f13e980fd15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b254154d-4611-4da7-a1ea-b32cf8ca3fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "955241f6-4774-46e3-a16e-28dadf95b1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad45ddd-c882-4b7d-a97a-87b902f0f954",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440f1517-7842-4b26-93de-db47a2bb7739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c9ec5f-df63-4bf9-be5f-d5c54f9fe2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eebe810-e74e-4fe8-97dd-4435175235f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d3c0e5-174a-40b1-b455-70fad041c2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144cb79c-ab0c-492d-a169-7e5287e3d09c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f75042f-6da0-487d-bc0e-90594ab92a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5624c2ce-0658-48fa-94ab-bf704017d45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fdcc10-0adc-4950-b531-c590e791fb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "02d9f2ab-11d1-4330-9f87-20abdf355c04"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e5de6075-f333-4537-9f96-fd7a6cc0bf6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9d2b0f9-a9b9-4721-9b59-804d9c7102bb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52314e1-5833-40e8-bdff-c4f39f42e17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fbc6509-28c2-450d-a11f-b27095210e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7846c079-1944-4170-9092-b16552c83a8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8801d575-b04c-423c-b776-7351950cb2dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a35f3f34-5e9c-4a70-ac1f-faa6c08c2e7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0525b488-8c0e-42f9-8ab3-776356dcd1ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4d67fdc-63b2-41f4-b67d-526e564b32bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42b0f863-a398-4229-8eac-b931558d1fe2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "328a08b2-7ab2-4c67-acbe-a58b74e76ebe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12829b00-6bf3-4c0e-a0a6-5384d552b95a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e79474b6-1c4d-4f6e-9b86-1509f6fb9894",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c8967f6-571c-4a95-984e-8b22ecb3a0ed"
                }
              }
            ]
          },
          {
            "id": "69f78612-752d-4b4f-b13b-f72c0c0d896a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f05c57a6-f9e5-495b-ad50-a36498a3558e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0c8dcd7-6070-418c-995b-44fd6c750711",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd952670-5366-4545-b988-de91f6e17afb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a48259fa-36c6-4821-85f2-9b15f2c64026",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ace7585f-e9e3-4aa4-b32d-44f394d20c82"
                    }
                  }
                ]
              },
              {
                "id": "046833e5-cd95-472a-b868-3d45aecdf214",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9cc6600-4b56-4bfd-a2f6-ec7b7fd9268c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d18ade09-7107-4bc0-be81-ec442ef45c74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e50b04df-d948-417c-9fda-316d1eacf796",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60f13ea1-c732-47ee-b799-b6f5a43f4cd0"
                    }
                  }
                ]
              },
              {
                "id": "d87dbe95-adbf-4e5f-a738-ffe403ce06a1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cb5bf5c-563e-4620-9c2a-97ad1f558111",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab6b4cba-1844-4e1a-ae45-57cca7d068cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5646ea7-4080-4609-8c62-163cedb5fb7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eec82418-ca11-480d-87ea-7673cc6f27bc"
                    }
                  }
                ]
              },
              {
                "id": "a0dcc8ef-6ce8-461b-991b-10fa8fdc453c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46c6e518-35c8-4e0f-b50b-c5885cf11ff7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6d4a3c0c-be27-4765-8304-2ae4a913c41f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce6bee3a-3516-4872-bf22-cfbc650b75b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9f7898cb-3109-40ae-9f02-bf5436c83c1b"
                    }
                  }
                ]
              },
              {
                "id": "4ac811e4-2fb8-4d71-b240-9dc8423aa960",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbbec7eb-d548-45bd-a255-e37a35cfc1bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe71298b-8174-442b-91c4-66cd4510151c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "049c2aa6-e524-4e4a-912f-95b7ead98548",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "79be79af-60d4-44a3-aa9f-0d5f94628dde"
                    }
                  }
                ]
              },
              {
                "id": "b2176091-4d2c-4c54-b6a1-c5078bf15c91",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60592280-7dde-4202-9f06-c1b9b4287a8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e6e376d-f1aa-4d6d-9098-9083413c4eb2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f2121ca-c59a-4775-9598-417313e49325",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "192a4d1f-e18a-45a6-943d-2cf292148998"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8085ff93-d2e7-46f1-bb4a-4984472abd92",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20774cbe-7f0c-4395-aa9e-a8189c6732c7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "549e7b83-b198-44a5-ae8a-facf0ba18f03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4ca8ffc-6e49-4a36-810f-e3bf53be91fb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fcc3cfdd-c1be-4d2c-93c0-25209cbb9231",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "52344d40-47df-4597-8f03-09c84090035a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37cab864-7f8b-4a8b-9343-3f9f64d8504a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b092951-4ee4-4d9d-9783-84e7572a2787"
            }
          }
        ]
      },
      {
        "id": "8f2a223f-9c0f-4126-b620-3aeb95f8200d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "41381651-5c29-40f5-b3e1-183492a0356c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "474c4913-4f5a-4fbd-8e3a-1b2aa55623ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be53e74a-ff39-4285-b52d-f3c793a37faf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658cbec2-d260-49fa-99af-a677332c9ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c88df7a-77f4-4e41-b8d3-4595d8e37b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13ff194-9350-44a7-9c61-3313753c3ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef35942d-6bdc-4a59-8e9a-050a5caaf97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f51af36-d807-4d33-8cca-038098bccd22",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed13338f-3930-43a2-987e-bf26e4ee13b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23da5851-cb83-48c4-8995-b051b50e47f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb80209f-ae95-4b48-b80c-bf8fa87b4acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f478393c-c4d4-4947-ab85-0a977a625ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56825f39-6e29-47fe-8a37-3ce56e3337a1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8231296-babf-497f-922c-84537484612f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4baead-77e5-44e6-a47b-9cda5f7e58ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaf126b-99c5-4c2d-925a-c92eb8336c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb6c354-92bb-4280-9857-36aef98d4f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07965f7a-4edc-4ba5-90d9-4d8899e4c732",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f135e90-d8f4-4b2b-85ce-a78619d2e050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7efbe6-339d-4791-b8c8-6aeb6942a25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb27233b-ad33-4aa0-b6f8-3dfb4765b152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23b002d5-5b33-44c8-b92a-995688e10a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e47893c-77b1-4d52-b3c7-5b0d91ec22d0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c164c0-6262-4cd7-a050-066e2c6225b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d28543a-68f1-4b7f-bc49-c2b85959f939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aee5f89-54a0-4653-91c5-646666b7e835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d59f8267-db6b-4367-b274-c955c2adfb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8e8a37-7142-480a-ab9c-694f41d1d91e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5631bac2-bcc1-4f62-af1b-ef104052a0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7db0a11-f481-40cf-894f-7f8c6d547dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53da7095-d278-45dc-b623-5dfe8d5906f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc15b12c-acb8-4de4-9c8e-4f8631497020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d1565c-f722-4d2e-9e87-dc5876680ddb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00163602-3640-41b3-bc09-db7fb2b9050b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4141a538-a3f3-4c42-bdfb-fd1d51981254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af5319c-826f-4f97-81f8-1dffdf7f9ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fcb2459-ada7-4861-8260-649dc2eba240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f9c7a7-4db8-47b0-8a96-a13bb7b1b906",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f1de75-a886-45a6-a43d-38c067b4d865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bef817-ef86-4aa8-92f3-68ba1c2206de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77cedf1-0ead-494a-ba9e-c067dcbe5dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a44e360-04b9-4117-85d0-f73228ba3b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a6e4ce-76d5-49bf-ba81-39e4bc1d861a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b35eff-f564-4cf5-9480-f5c22abb6660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55f2d12-245a-4557-b93e-bf02f6c4070b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a36a4a4-285a-45e2-8971-b568126936a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dee46791-d657-4ec4-a966-6f4163091249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f870106b-1ab8-4f4b-b71e-61c9c17b6449",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0efb540-dd1b-41dc-a958-f7a5892473c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fd1563-c26a-4ff8-8a05-773d226abcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380f486a-2a99-43f8-a715-e4dea5d9ac32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "660a5904-e305-46d8-b3b2-2a46e20cb4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab44910-774c-4af3-8633-f1516ac6b875",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa959dd-3f48-41a3-bfd8-226874803669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3851a903-0235-4bd4-9362-b0722ef2db54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f657e6-4833-46fc-a4d6-a72e8caa88ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f7135e-c8a7-49b7-9390-9fd964dced90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fb26ce-f94a-44e9-82d6-15591d4c98b4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73921cec-bfa4-44b6-8fc9-5c89dadb2f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445808ba-def1-482e-abd4-07bcfda5e1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb316ecf-8e3c-4837-9825-aa2d99b7e88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7de9c00e-8a46-41b8-b967-0553de27a75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44891787-ea84-43d2-8866-439665ee04ed",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b688ca-b3c9-4eed-83d4-8262bbc3fcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38bef68-e47a-46c8-8bb8-14fb2317d486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838f7485-6317-44cf-9d3c-da7f85b234a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf7c2c1-3781-418d-b9cf-7774a1580de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c07700-ad02-4444-ac07-13ab87f969a8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc60c2ab-7012-455b-b958-65ed240af02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b2a038-bc30-4c9f-b10a-876c237d06db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cb3806-e9d1-4ae1-8cc5-6922f2033e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "515ca3a4-4ff9-4692-b3b8-dd36073bb616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254bf72e-26cb-4d2b-80f0-def309ca2e61",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5447222-6ec7-4d02-a230-cf09fa56dbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd363b0e-23eb-4a98-ba65-b100d25c2b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8685014c-6033-4ec1-ae76-6b006f4563a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "146b4416-b981-4a8a-9f50-b2fd62cd119e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3f70d3-9443-4508-8ccf-4db0e5d5bde7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f738050-edb3-40ce-8cdb-0d8c55f0182e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191d9685-0e21-4fd3-bf61-c0b24eafd9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a367bab8-5db9-476f-a5ff-a4004f05becd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7682e9-7513-4d04-a62d-18116f8defe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351e5935-a457-4da4-8c6e-204ee07de4bd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66e4ea2-5de0-450d-8eab-15e7711270e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c739a1aa-edf3-4529-ae34-1feef8faa268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6ff3d3-3267-4519-baba-a0df1fe99a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa6f21d-f63d-4d15-8f9a-d9381ede16a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351dd54d-e591-4fda-8089-6f3c577b1840",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae162135-bb2f-40e2-a487-b06f6241a904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38001e7b-d009-4018-b721-fbd1675ae35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02224b1e-59f4-455a-8e7d-55bb509b7dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdc9024-b0c2-4cbe-bf47-0a2ca25b2def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d400df14-41cf-4b09-8b57-1f1dfcbb7b62",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbfe56e-4b09-4e0f-b196-4a304ee294a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff6020f-8c06-4ced-a1b6-891a301aea47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11bd9fe-5a3d-45ed-a643-f51a42601364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5e3885-8966-4d78-b200-2da1ac73ded0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efcf4d2-5fcc-434c-a8bd-e6ec6d36bead",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d577614-19c3-4193-89b6-9f389b9ce8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a4ea4d-8eb3-4a4a-a2eb-9417f6b14b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8656dd-fba8-455f-9c7c-eb95db0efd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f580961-6fbc-4c3d-b96b-73ac865509d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b0c4ef-26e8-496d-a361-ed5798595969",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ceca5f6-34fe-4682-b338-2627f224a544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee08cbf-a736-427f-9a11-0b77ade98f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f66f115-5739-49be-ba98-33b1210839c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68b1177b-b709-432d-8d7d-2f6b09f04026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e30d4b1-dc5f-4725-a74c-754b2fb65a73",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8592a8d-7af3-49bf-a5e1-7057d2b896d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2955ec-7692-4b57-97e6-9a04687a9e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f153fd-88cd-4ae4-84b9-66c439dbb04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc6fe60-b629-4a27-a6dc-ebe46be4603e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba7860f-8a55-4280-803d-d6a662c41788",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a599b8-1e53-4af6-ae10-5fa1b059f647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e2a835-9df0-4c46-b2e2-8ca07c212fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ea1fbb-c745-4c4c-a317-56f2053193f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b82574-3638-490a-b497-9dfe37e9b6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ca222c-d401-4809-89f1-f1278165038c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b983c1d-0196-4b86-b85e-8176fa509402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ebeee9-7e13-44d2-add5-9a749aeb489c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92ecda1-5f56-4ade-bb50-6d787f0cf403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea98488-8056-4096-a449-f30857648dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370ff8e2-40d4-4824-9d4c-f1ffbd02ae0b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782e9523-0b87-4bd6-9b96-f33e06203a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1349285-e634-4d1f-9fd7-da80d2d917b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bced6a0a-7b87-4668-9e00-60fe369d8169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c084f2fd-0157-4fd5-8245-6444abe55111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521e651d-d82d-4791-afb2-b53d9347bdc5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0740aa7-ab89-4b80-82cc-7c9aa1cc3153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b14bc51-bf7f-4fb2-9036-658e80df737c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70576df-a7f4-4d2f-9640-9864002e1d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7326484c-fb72-4073-8f13-5e29872fcb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d9498d-f24e-41a1-a3de-ef39be95e4ca",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdd02ec-fb6f-48a6-9b40-c76fba96b7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3058553e-e1b3-4dca-bc50-bf632c88f814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa47c2d2-42c6-4c77-9f75-b03f7892ce2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7cb941-b4d8-486a-b888-310a4e21f11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a43e4f0-47bd-4fff-9e59-3b734d856634",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0090ee-2844-4940-a51d-a748a24e0620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9185996c-a0f6-4cd1-bcd6-360b5a66a59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20af7bd6-797d-4b92-83f1-d9814bd0d85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e44062e-fa31-40b9-ae14-77640621b242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd22056-7295-4dda-941a-21443ea7fe74",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d62bc1-4ab4-40e7-bd46-0cf4a535b30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c8ae63-5085-4bed-9e47-9191c695c2c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5c373b-4b28-434a-9d88-15d56f327250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4d969c-56d4-4199-bd14-6ff682d669a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fc62fc-d9fe-4dcf-b67f-0063dfe5f8f5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2caa2dd-f8be-4a63-871f-359bdb9d0e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2348845-8d1b-4ccc-815c-815df1f9f4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e343b9a-7106-4a10-ad2a-3f65b2cbf2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b36e22fd-6793-40ce-bc51-11b61c4dce90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4515fe6-cc7c-41f3-9456-48d67dd4300a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0c7d9a-4fe2-4a89-977b-976a5632e830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22aa167-9a7c-4fd7-a367-a23c3067e8f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960be973-c0f0-4526-bbc1-a4c42cd57de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb4ccf0-e82d-4dc9-aaf1-8eba185019af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9dd4bf-698f-4c6f-8a2e-5b7f1e4ef608",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ac509a-1ce6-4665-ba4a-6930471f35e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797463a3-2a5e-4056-b3c8-ce77ed8b6a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72beddd3-3a72-47e1-8608-071805947f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6ed4ec-0144-4cd1-abc4-7ea464cd0c95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8421a8d-663b-41d8-bc0c-ba33c0d5fa41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3bc26731-e930-4fdb-a24d-71fdd6501490",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40505623-26b4-43f4-927b-5dd4a74ba72d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "14173c9f-3b67-420f-8d05-1aed038a0c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3255b4-0ed4-493b-ab35-c65e5ce322f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33b5b284-4c66-4ead-b7e7-5929f722284e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3ccc43f-76d5-43d5-b10c-210ff1f54f27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52e5378d-ff83-4715-801b-0e0ae76ebea7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "636d6cc7-ffdb-48aa-93fe-d9e1d831ffb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac69229c-f997-4fe3-97e5-b5401212410f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cdf0f6a-6be1-486e-b2e7-4e62d1226b9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9c2280ef-a0f2-4d00-acae-fcda865c8858"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "059e921f-8a52-4375-9328-ee725bdf3582",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b63f4b37-b7bf-468c-990e-35d7034b3d4b"
            }
          }
        ]
      },
      {
        "id": "037ed796-85d3-48e1-ac40-ecf39c0a7c37",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7bc8c613-ba4e-4ea0-acca-ea96a8cb894e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3f98ca4-695d-4177-83f1-45d1d4cde111",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "32c70b8d-705d-4562-97b9-b756e7b3fb13",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa36c84-06ee-4c95-a539-d50d38d5c1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb8de3c-f604-40c2-a1f0-1b7d27ba24d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdfd6ae-2f42-4239-b90f-f179162fc777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc995578-d7bb-4f24-bffc-efc667f78395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e24b7c8-9ff1-4aa1-8e50-f4e83a3f20e6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7626385d-407f-4195-bebc-c7f94442a5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8431b243-9619-406a-ab4e-8c000dcd4a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7ff987-e8be-4f40-8af1-089a3a61ea65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "acebfc39-7341-4c89-a8e4-98a49bea9af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a8f6bb-9c21-493a-8320-017c12ead57d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4f6a44-e1b1-4477-82da-7928397f4082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504b8086-1fb6-4dcd-b069-16ed2f62450f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fb5103-92fa-488b-8976-538fc886507d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e82ba36-9379-424c-aa25-0a6925b8593b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cffa0a-2865-481e-89e6-4121ec244a5c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ffbf10-7abf-46fe-823b-fce6d4e09536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b7663d-9c1a-40db-a55f-8b1e372edb34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6173a7fe-5105-4a6f-977d-8fdbc3d55b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2755815-d3c7-4a19-860d-d08718187385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea3932d-5585-4d71-8beb-0bfec94fa686",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae8a403-003e-43d0-9160-621c1a76bdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6157f4d-6818-425f-b401-f05ccdda7618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e943f246-c8ab-4897-a7cc-9abf43beb845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d92445-a1cc-4671-9ace-ae2a4e234c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f45e3f1-7c3d-40f0-8c74-3c85a0c8a177",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b845f763-f48f-49ae-90f1-fed0b3c44f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7801281d-e7fd-4adf-9a20-3a4c75d00e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53783874-61de-4fb4-a4b1-94722496c974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8699c32d-d2e1-4ff3-b9ea-f4c8396cb75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728bf919-5c8d-4835-8706-fdd4f7fc4095",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a909566-5c12-402d-9741-527ae0f8c5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6593ddee-5605-4b59-8c9c-d101bd2baccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678ec0fe-11e5-4200-b747-0d528022b9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f699ad-31e9-474a-b86b-7228603da0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9e9f18-694f-432a-b83c-e0b567ad7846",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344edaf8-9271-4aae-be76-fbdbc5aa1d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86db190d-91be-4bca-9a42-19d3350bf3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a833af-04a7-4550-b5d2-0836fd3e08c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e8190e-36e7-457b-ad29-dbece780dd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ba5f81-3692-4155-b43a-1c61b7239951",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ec81d1-7a05-4f71-a1f7-2db5b84abdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfc1171-71e9-4248-b3dd-1111508b9bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ddc575-9970-4cbd-a2fa-1a942346d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b39edce-9b67-4c14-9fa6-338b3ad73212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cad2e1-a6ea-4e60-a0f9-22489ab80c46",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2538066e-cc60-48ac-94b5-0f9721d98315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38f1038-9427-452a-83ee-d127c3494117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a31beef-e932-4ce3-851d-1640cc040d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92965718-37f4-4cfe-9186-685f611427e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1625eb6-cbbc-4ff7-87c2-736f9ea38ead",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d841f715-d0fa-417f-8cfc-199655db22f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad992013-a989-4b26-adad-9148ca56a49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef51c9d-9ed8-4a9b-98d8-3b41e4f85f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c4ca4b-8517-401f-a69e-8c37f3866999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e378fe-a3ae-4c10-ac78-716dd0c90a3d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d705da-aeba-4cb1-8dc4-0c64af80e36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d499c7-e767-4bbd-bee8-7aa591afe4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f80ec1-f419-4bc5-b7c0-d2fddd9dda94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d58ccbd-49f4-4b12-9cfd-877ba7b1eae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc8046e-5bc3-44fe-ac99-60083ca2b56a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7393d04c-bf2f-44a6-a2e5-1bff5345be51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe2269b-7339-4d51-91ec-2ed550b1711f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904bf6d0-171f-49e7-b7c1-b4482d33c7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da4dd602-6792-475f-9ff8-e8a999b28063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfa1c9e-f05a-43e8-8945-3f1eef110c40",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e800a3e-6d42-46f0-a79a-fa54190547cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9302bd5-c497-41a9-8cd4-c8722f2dc607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84a540f-201b-4cd1-a215-e47f6c8e054a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d053590c-fa55-4078-93e3-3609083602ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695d0af6-6c03-4fa8-a4ca-c2321586bc34",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a16500-03e0-48ff-bce4-7004ecf426e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bd979c-467e-436d-b29b-eb00d3cfede8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5537e1a4-d07f-48ea-9d9b-c436ed3b60c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "58d856d8-5bd7-41b5-bf2a-52ae1b2dd68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab3d9ad-9ac5-4236-a57c-b9d6e9deb7b1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4bbbd5-3224-49e1-8875-7a77ba7079be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795f36d7-a336-457f-b971-e97b6354c931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6eb015-b990-4591-8bb2-79825735437d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac80705-7031-46a2-86c8-c33173f505bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0cdfb7-4950-4349-ab87-3e6bf5194d28",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da937ce-7163-4323-a625-a71fe2bc81d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a52ec74-e825-4e59-86ad-b2a5c7a929d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575f31de-b3d8-4157-b435-96f55639f49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5f3265-2cee-41ff-a25f-49cb0f68c7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae87064f-93d7-48d2-8482-909068c69cd1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9f0909-f443-4e40-9b98-6e6fb7c9d3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff8ded3-c086-4c8d-885d-ed9746e20f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7cc316-6561-4f5b-98d4-d6ef75ac9e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed0162f-511c-4a35-921b-e161fa3ad6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed25f5df-3e11-4fbd-8524-0f3cef90ebae",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039068d5-991e-4f4b-9658-6f1dd3a5ca12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28527a95-5cc8-463a-b483-c71199371f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6201db9a-5cfb-40f9-bcad-6f7747de3eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f6db1a-803a-4e7e-880f-6d3453c328b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce6cdc8-c845-4b6f-ab5a-c5e048680211",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e28b561-f6a8-4cf3-91a8-5f3fc5838692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2744a30-f267-4c99-95d3-e0454032df17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a141d48-1859-4c8e-ba8c-38792d4f1168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04cbf2b4-521d-4582-b0f0-5b55cbe1428b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e2bc6e-1ea2-41e4-b71b-f23173e37f4a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd202fb8-cf99-48b9-a21f-a221d5251c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbc856d-87e7-4df8-9814-112b0e0ff7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028d202b-c24d-4119-bb2a-2e1b70f6fd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1543a7ef-1f87-4dce-ad0e-d01d5238b11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319bac10-060a-4f08-b7d0-74696faaab40",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18491bcd-ae6b-4814-936c-34e1fa3c5196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8da4da-d647-427a-b4ec-329ba06a5202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d706d883-a8ba-4428-99ab-413839df703a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "929dc4c6-9a99-4234-85aa-377222c5be72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3dc9b5-7182-4893-9940-78e4919b14dd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b076e39-eeae-416b-864e-36c1f0a98885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ab8ec5-3a76-4627-aba0-dcc7044b4a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eeb7748-39d1-437a-975b-e85d7ebfb46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1b0cbe-4eab-4fc7-b758-8bc8ed540156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f82fd4-0e3a-4993-81ac-f3177bc41004",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a0cbb2-d861-40d6-8f60-930554271b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13af4d0-ee95-42e5-9d1c-2cce5382837e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf47ee2-bac4-4ca1-8644-df0287c8adeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d75db02-6665-4d13-93ab-f386fce0da67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c514d9a-a31b-49ee-a015-68c6cf63d544",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c1a44e-e5b1-4fab-8edb-ef309aaa28b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5984db18-c538-4c07-bad8-b05f5b23d731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9988a3-3410-4a02-a6ac-03a00e5384c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed63eeae-f0fc-4be5-89b4-7eccfb7dd4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b009d5-3861-4d52-8819-8e3ba6f76c67",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bea3a3a-78f9-4e18-bcd4-64d0329390c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ae85b4-957a-4e8e-ba3d-eb48ee0ef6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b952e3-450c-4383-9a30-75fdb4f30984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e67d392-ddc2-47dd-9bb2-fb9c1e7b7b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a068192-681e-4aec-9420-5c795c6c48f3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba171daa-dad4-4cce-8d2f-b7ff507f6b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1d140a-9928-4e15-a9c5-5f02ac9bffbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41610f4-bba2-4823-bef7-39e5bc26c694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e6acdd-5548-404f-bd6b-ec18be89384d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d155b5bf-9f1e-4abb-abc2-324d196c811a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccd609d-146d-4f05-812a-c6148457dc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9c42a2-7dbb-4a66-9c2a-3033ba3b7978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc579910-42b2-42dd-9105-ba46c8a4daec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "007bf11e-8b7f-4d9c-82b4-dd542adb7e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ee35d9-2f80-4e45-8493-a45b7e27e1ad",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d06097-e6c0-4759-bfeb-fee0536278e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf9320c-aad7-4657-bf2b-a06d69ee4744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a32912-df1b-4381-b455-5aecbebe15ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6360e4e0-8382-448f-bce3-93cbcbf957be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec0f374-2ef6-42b7-850c-52a17fecccce",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cea3ec-41e7-478d-b674-be8ad3d0a628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d1e51b-3b2d-4170-8f21-43622ee92d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908fe440-fad5-4448-bf11-31054e826587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb6b9e1-4d54-417a-ab69-926484c31a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fe5c95-5a81-42ca-8039-4e2a011af85d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe3c58c-da72-4f42-8d59-7486ca88a840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363a8560-b345-4687-9215-f9f7195b23b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab137f4-95a5-408f-bbd3-f4474d8efe79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80c7485f-efb4-479b-aea3-de856ddf4fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25537aef-fdbb-422b-9709-97b62d60ad5f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0cfa23-d8ea-452a-89d2-7b2d0cea2698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043a9a5f-5b6e-46a3-8551-3ba57c5a1e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46996321-7f71-42da-a963-f78634a09485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54cb696a-eb82-4d85-a407-0fc713967f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c622ab8f-38ec-4a9f-818f-9712daefb0ea",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d22168-f10d-45ab-9dd0-de690757cb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87bc5e8-8b72-41ba-9233-413152839204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe2e3cb-8710-4a04-8332-7ee4757fc726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5493c81e-4276-4388-839f-2855e22f5f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adf191b-32c8-4f9e-9692-afa001a4876e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c21be9d-3f45-41a0-908b-84502a0dbe4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca80740-ca4d-4c3d-839b-2718953ccf74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93bb37d-cb40-481b-a388-8c79160ea141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3cee7a-eb31-46f1-a406-1d99f098eba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89be906b-767d-437b-915e-c6ba30661680",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6285252d-c2a8-4d25-8daf-f040760a1066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610230ef-9407-4d94-9a3e-72118c736c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f48fa5-7444-4a20-8f21-6d21a47fb403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7be5a342-2553-415c-b8dd-4f625ef9f4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228f4a78-d8af-4e88-8180-e4cc7f8a814f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb20b46-20c4-407c-b620-abb06d0b1870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea47a5c4-cfd8-4227-a23d-cb384b31cbf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fcb635-61bb-4f90-80b8-907efe197bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37742780-3ae8-42c8-8e97-f9ed3f737254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a458075e-6a95-4830-84d2-16be0ca719d6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca29c8e9-784f-4f9e-ae45-13c2a30bfa0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278300ab-c37e-440e-9d6c-073149009b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdef83bd-b7f8-488e-8a61-a9f1f0c9f2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a612c3-ddc3-416c-b313-5a341b29a8ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a242debe-0723-4ad9-9f45-69c6fb45e1c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f9751f0-f737-4966-b99e-ba3f6f575260",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037d3f0e-c287-4c05-ae51-47c0b1ffd6bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2a57f925-1ac3-4130-8332-8ec8dab18ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e51050-43fa-4e3c-a7d2-5293f750e30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de9ccf76-122f-447f-8429-250cfd2fe8ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab6a05a9-ce52-4988-b1f9-183ef947a7ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d17f0c7d-700e-4f30-aa8b-add633848e83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78756ea4-1f55-4c61-89ce-82bf899a3357",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5b21310-f939-4d05-8741-aedfc5e55839"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1f51fbe-0fcb-4242-a92d-da79c416c827",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "374807f6-ef23-43d9-88d5-50fecbd8c989"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd2f5818-74a5-4ecc-a743-aefd38b27170",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "321c2429-66e2-4f89-a1ba-474cfa5e3910"
            }
          }
        ]
      },
      {
        "id": "825fcb6c-3a24-495f-838a-73691970dbef",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fc401f1b-6c46-46d1-bb41-28d79ff2da0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcec81b1-6ced-4ab2-b4bc-c0b7b09fb807",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3f457eee-230d-481e-9a64-30fff5c9428d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb810cdb-11d6-4275-92f6-56eccfe3723f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a61560f-465f-44e2-9029-e3fac77ab450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d25fb1-9def-4fb4-9065-2e879d846cc0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8387bc-fa40-40a7-9f1a-32ffb51b6482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae65f9b-030b-42a3-ae06-badb8d2e2639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9659cc1-6bdd-4357-8178-787013a7d186",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6e7253-2cc2-49a8-b0c8-bf26ab0d0f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4e5be1-c392-465c-80a7-701787e9da06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d19296-25ea-4ff6-9b5f-6b8660e214d3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217ad05b-50f5-4fc8-8d5b-d3c8b6d4abed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee17e74b-05bd-4833-a191-cec0220f972c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1f7673-a4e6-4f32-828c-3932d20c895c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda7b611-76ad-4fab-ad26-a7f0eb409ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec87acf-52bd-4a5e-8e70-3ece21a83f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237e7960-4374-4447-bed0-1a1a62440493",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f58d4b-51a0-4ff8-bcd1-4fc9dc861af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a34cea-1e0d-43df-8255-d9b5d954bc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35da5b50-6517-46ef-8de4-c15233fa93b2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bba1f86-f7aa-48db-8361-6bb1a27fb560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e77799a-cc85-4cd3-9911-ffe1c222caec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b7b452-fcc2-4480-8ec7-19b088e12c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8fbef0-dee0-4d10-ae5f-3d57930e9700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbbc6b6-6cb1-4880-9f1e-6907a485fd93",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99fbc4c-3a7b-4a8f-8ab1-a7f31c063daa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64a61abe-ac42-42a5-8a31-b5419f5635ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269844b4-446b-4641-9d7f-ac6c594baa23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a52318-b2fc-4449-ba53-61074b1f5394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06b1ec1-e665-412e-8f1c-662f13240f74",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a182a413-ff8b-4d4d-9c74-d9465bd7e443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82816bea-58ee-4dde-81b2-fcfb8da00d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a3b7df-3f7b-49de-9cab-44272c9e078e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b0189b-fcfb-4f98-bab9-abec26e2c333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d3dd4d-09e9-43b3-8406-078fa8361653",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0d8306-0889-4da2-af30-fc9e5620614f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ffd797-b28a-42b5-83dc-da929a438ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c196dec-774a-4756-8f3a-dc997391ca5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5386c0cb-a6b0-4983-9842-9bd8c30f2679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0711673d-8469-40aa-b7ef-efc5f6b0d618",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c4e07b-a08c-4fe6-9dd3-092a25c81852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030ade39-c811-40ce-bc89-728a7f4334f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b310b06-c734-433e-8d3b-d148b95a241e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27ec48c-2678-4de9-a820-adade38850e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abe6b25-855d-44c6-ad5d-f5dfcb55b417",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87295a9-7e42-48e1-ba5d-3079ecf4b004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec22b5e9-87c7-48bc-ab86-31ba54e8e14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd55e6e-d20f-4223-aa2a-fbebc83a87bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4692d93-9161-4686-9ca4-d389d3ac8c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa4f1a6-9b6d-4285-8df3-45aa1435ba68",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64c34ca-149f-4cb3-803f-1c856abe61a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4369cb64-32b3-4a50-923f-a70e984ed07c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63fc58d-712f-46a1-ab8e-7e0735fd675d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98567560-d363-4f1f-a09e-a104fa57bcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b88089c-8e23-429f-8dd6-097dbe47f278",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b59014b-ab56-44ad-a1f7-363ee3442bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86552e03-b663-478a-8440-83b0afa83702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafd961a-f771-4f0b-93f0-a0a231c88f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf90d55e-e895-4e51-8d33-2e6f7c67c987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b941ec75-b9e0-4dc9-97e7-73bc689ae76e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f149447d-204f-4b6b-ae92-43fba5387d3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c870f77-bf83-4933-9b4f-bb3e6b9d2959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c4c6d5-b631-439c-a746-78764be194bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc043414-ada5-479d-a198-b58316eb24f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb97275-60bc-40ac-a57e-862ec73355f0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ad8d78-8ed8-4af4-bec7-3d73148d631d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee2b12f5-1157-486d-be64-2308f5fc7fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec25188-4ac7-4a42-907f-5f855a05c427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6112130-5019-4996-81a0-5fee74c839d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d939c91c-f9fd-49d1-abcb-8e9592730a15",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3fadd9-22ae-44c6-993c-0dc41628523f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96fc244-4675-4038-91f2-79c0e4fbb6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3611d38d-536f-474d-92d7-c99c530d93b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d11664-c243-450b-9a0e-707f5c12dfb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6725113-64d7-4f31-9695-d52b73a738bb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f87d98-52da-4039-a0c3-3c368ed455c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24940dd0-f9c2-4a78-ab7f-5a907c0a7040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e3de3b-b6ae-48f9-a416-7da634b6ad95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8b3dc1-3d11-4104-937a-f029f0615239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6401a2-f5b4-4faf-a6e1-449abc39631c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88466961-d4f4-4daa-8944-e404feef2984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd974c4b-0c08-4c8e-8b11-cae98e52ff52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207469a4-b192-4a9c-8b2e-6d2b654e425b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63e857b-8fcb-4ed6-9077-1153b3c1a622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034bd1b1-1b89-45e9-8c5a-71c97ea820c0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a82230-d89c-4820-867e-2f98e6da03a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10cb2531-09ae-49f4-beda-d1acc6b9e9d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbafc87-2b59-41fa-aafa-2f8eaee0c174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f87447b-ed4a-4c0d-a158-350468114e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dc9cf3-d7af-4fb6-9ad1-3aa772d6bbf9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21af8bc7-c538-4312-b4ff-9099d5896add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea5b77e-4f16-42ff-9b80-056b1de7da6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb791b66-8e7c-4728-a962-32c63782f9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57d28c7-9969-45cc-b3b7-046454884dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3781ef47-078e-4476-8510-7827d9f62686",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300e92c2-9a7f-4d38-8f78-d62b6a7c5e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd39236-ca21-4709-bf41-e1bff4f00570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51424fb-5bd3-4fa8-b37f-4be8852ea548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15495408-9fec-444f-a563-ad27c1dcf153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cfa49a-2108-4baa-8c19-1f104f616055",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256f8392-8ba9-4263-935f-11e30626c070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec504b0-56d5-4696-a921-aca12abecee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074eeae1-63ce-45d0-945e-e0ad3a199502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf593817-c1aa-43ec-bd34-a28920877159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d892fb29-38ca-4924-b4b7-11b14cca4e9c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a97e917-7107-4941-bf21-30e42fd0490a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d269838-80e6-43d3-a6e3-ae245fa5a22d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5deb67a-e0ef-4f2d-a805-4fe06239108f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1934cc85-a497-49fa-98f6-5056dbf27888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbeff89-ea1b-462a-9cee-750185b247f1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff21f2ff-7292-4eb6-9223-214ea3b23684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9bcf745-4cb1-4512-bcf7-95537de871e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9b82b0-163f-4d52-b851-081789048be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b28635e-618f-4f76-82f5-7d7747cbacd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721da9da-9a99-46ab-ad34-70f3c10195d1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5443dc95-fd6b-4f31-b1bc-2bb18eb81512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c3bc21-dd60-4e20-8c10-a720a44554aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6a0e1f-2af8-43a1-92de-a2bcbc92873b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad8e9a6-1b9b-4ad6-9824-16e474d8570c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bded40c3-57e2-4f77-bf12-816d934fc77e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87c8953-f9a1-462b-b5ff-7945e1ea4932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7297d1cb-a32f-4e2d-84fa-7f81bacee9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc46c56f-a5fd-4517-81f5-5f35c4264546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8b70ff-3d94-45cb-857c-2204367ef9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f826c4-678d-4e16-8641-c36ea67bf794",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53d14fb-47d5-48f9-a735-3a30502e7ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd28c8c0-44c4-4589-b77f-75e6bfb7ac2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5193d203-ed8b-4234-9fca-d30ad8f104b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2589830f-d4d2-4ff4-9753-b23b94fd9b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9467a4f-6140-4209-aaa0-343261b349bd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a58e37d-3a28-45cc-99e0-a2150e61dc10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1f4752c-eabe-415e-b662-6665cab9b5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65ed92e-ba68-433c-b536-8f6b02daf708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07ec89f-0a2d-498a-a6d4-055c371fc1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1dc7d7-ee49-4bd7-8c1e-9a23a5ca4ab3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31808295-5358-49bc-9aba-f05061c0134e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bcd5dff-b6e9-4223-92bc-c0b0182cf15e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e38f42f-9cb1-47dc-8147-5bc398c5670f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289ba72d-5d97-4a54-8120-4d908437e710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20e7a88-b6c3-49d0-b49d-b9cf98ed128e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ec20cb-e83c-47a8-bc41-ddaf7f2d5b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "862b6f83-a7f2-4e41-b240-51cb27c866ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c35491c-152a-4e5a-aaec-9abf843aff37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56cb840f-5e95-4680-b76f-6bb3844602bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1cfa04-a64f-45f8-8538-6525a89b42eb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65e2951-2fee-445f-836c-c4706b7b9be1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ebdc3a9-1baa-4fd1-beb8-c359450f0cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bbe1fd-a3a9-421f-ac98-1dd912ea9d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1044de42-43c8-4643-bdc8-013d65babde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3a1b46-905d-455f-b906-dca00bd1ce2c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c668e3b-23b9-4b53-8bab-71e6615208b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3cee45b-669c-4c97-a6d3-de8c8ae033d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3e0e30-006a-42d5-ae52-f0d4be75dd63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112f61d0-3334-499f-8723-ac7a101f3a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2c358d-8ff8-4ff7-a80b-2d6250b8b857",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d560f5e-b81e-4fe9-834c-2b2dced3ca4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a94b6fe-be07-471a-bcd5-b1c8e4e15f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7999b3-7adb-4c98-ad13-bdd30bf7d642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147edc5f-2317-4660-b9dd-5d3fef07066e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6e0fa7-05f7-4ebc-aee7-22ef0717a244",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa65dc4e-4d2c-4886-87f1-b8576dceeb7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f4484d-b855-4f2b-b1bb-f4d9f839f9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8770eb-3d5f-4ebd-9fa7-09c0d0e071bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e91645-0a6a-4c1d-bbeb-0045eb7500fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60c8d60-69c0-454b-b94a-bfcb18ab435c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e286fa6-4951-41b6-a096-4ed583d09744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e135afa-4125-43e5-b91b-74493bcc1b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c71560-f292-423b-b6b5-6c69f1892178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25154438-ddc5-460b-9528-0aac21fce65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d81a52e-0182-4a7c-b886-df57a1db8f8d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082bb441-eca7-45d6-9393-dee226506dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b458497-8b7d-42d7-b74e-81da95021f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624980ce-230c-42c8-9a7e-ac0add54e962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ca9090-a84e-4fdd-95a1-384cc12e06d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5f8150-9072-4d73-8008-6706e36fe071",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd595c4-3a36-4879-bc17-71b72298bde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05323db-dfb2-4a56-8297-288e170559cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3bd7b5-d704-499a-9b8d-c13b9764bb89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b2d92a-8344-48bc-a0c6-7e74f57eedb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a827f6-c0d7-4ce5-8834-4fc4f66e08a2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fa8e59-1684-4385-9e3f-33652993922b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f375648f-4e38-48a0-adfd-ad980989c60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4591cf-6a20-4363-9119-71ff2123db74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ba942a-f074-441e-b4eb-2c19392dd20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e5ecaa-4651-4f74-8589-654a813be722",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb21e01-1f66-4869-a74a-ded72c9c0f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9eeac9-0bf9-4c84-888d-f15b9c0550e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8799bd2-992d-470f-accf-291a6b3b899e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958987b0-3c2d-44f3-9fd3-d56c802008fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cde946-9bdc-4e0a-a56a-69d202a9fc70",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5d6aa8-2afe-41e0-b6ea-d7a42365f00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9432a6-d694-462c-a488-f4d9443fb59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7dfac10-d005-4756-bc6d-be19578c21a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed864157-d77d-4cf8-a1b9-e62c9ee40592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126b4eb4-9ab4-446a-93da-026f0226d752",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515e860f-2474-48cb-8a5d-c417facc7d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6afed1c-7cf0-43e3-ab5c-dc8cab801d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d5e680-d329-486c-a991-020239faf15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b8218b-f991-4008-b622-bc2a8338d92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f66d2ca-6716-4976-a315-077fb6169100",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde6bf85-c15c-4e69-b204-e258344c147e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54651ce6-878e-413f-b06a-39cb0176f344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6294d4aa-f96d-4caa-aa5a-b98e03276725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb4dc76-3bca-458c-94e0-24ba992db6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51878c7-d8a2-4f3b-926d-89b41cbd7cea",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280a6f99-5db3-49a2-8d0a-a4f374457054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82adfe8a-b28f-41bb-bf24-1451ef0584aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52ef2df-8a4f-4285-ba02-781933eb502a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205ffbc4-f6e6-40e6-b662-fb868ad6e44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3197dde5-1261-4de4-9a9a-bf6c8d08ed4f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aac7be0-f562-4f02-9de1-594d47bc052f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ade8475-2d09-48d3-9393-f5571185a947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b325b04e-b5e9-4347-9d2c-bcf994f9bfc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80780250-8b43-4b05-991c-58a8be16aadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5776074b-3d7d-4a92-ba8c-4add8e7be49b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5a737d-1216-4948-a7f4-230703d8ad4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173c7449-fe3d-4b18-b3b2-c507a52fa5ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fbc7a6-ec33-477b-8e9c-e70576d13159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c34c75-3183-4401-8cb7-824f24d7ede5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7325179-4a27-483e-b41f-13d9e6214543",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68d7aeb-c483-4978-91e0-1d6cd2f9514f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f195cff-d3fa-4fac-8d26-5c55f2773b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc23a42-a581-46f3-b864-dd2a7c7aee02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c900124c-3e41-4155-abb6-158b87389a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e194cdd5-1260-4684-80e8-40cd8607a170",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bf0816-0d73-4264-8ac6-18c2f39a7e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790bddd6-8cba-4e90-9e1a-86d2864e11c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bfe68d-23b7-4c99-a296-84d893d740cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47da36ab-0d8c-4e5c-9963-f73ceb3227f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32b88f8-21ea-4069-af50-0b5341207d00",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb05155-7637-4089-9366-1538770b2d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4bd95c7-24fc-4be8-ba3d-eac8055da4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c32dcf2-4d3a-4e99-a6af-83c1e60fb5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120607a6-3d48-4830-b77c-4d36176f2be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ee4032-78b4-40d4-a49d-8ab73b34ee06",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea8caca-e397-4a4b-8fd3-8c924255528a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb390d8-3ca2-462b-a7ee-dc35d9497576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cfc244-5e8c-4bf4-a723-c373275a7b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b312a85-3d13-4032-8683-0d5efc1e2077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81789a56-c7c1-421d-9785-e0136444d489",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec6e0ff-2d8c-453a-892c-739116617296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3d470a-ec19-459e-85e2-d67ff6ba6bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb59f1b-9944-4b56-9590-ee5b541add6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1a8418-c1a1-49f2-8ea3-73f683a8e1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4924dd3b-3bad-47d9-9f80-f101cbdfc48e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad6564c-b02b-44c7-a9ad-419ad0ca8510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3d8094-fd3c-49ad-831e-2527459a0fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0accd364-7ae7-46db-9e6d-ab66bfc90192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e019a8-b4fd-4283-a98b-e50da49dd54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73760d8-6943-49da-b67f-c743ee9f07d3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcd38d7-3b0e-412a-89a0-be9eefc7568b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495938b1-2ef8-4593-bed4-3c4c7bf796e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "357458f3-9515-4946-b6c0-5fc9a024f264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d89cbd-7e49-40d6-bde6-f34d75d95783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b359ea42-3462-4d90-af33-af86302d2898",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56663da4-1226-4d50-a9f7-11f510d45b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75f440a-25f2-4c46-be43-ad8dd78b8d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7abbc6-e2d0-4807-86da-193769768db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936c39d1-4204-4f61-984b-718b9c7e7db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f4417f-7e46-41aa-a402-15a17b3931a1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c935438a-80b6-437f-971a-af940a02e569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed18d40f-2c26-4ff9-bb32-17fed5f7cba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429fee72-fd76-41d0-9e43-bc004337ec45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5860dc-db8a-4a72-86a7-63b558cb9b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4359c36e-159b-48d2-a5f7-c708d2a7f529",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e577613-dc93-4028-b0d7-089e204bdb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19bc386f-9258-4306-aa00-a9e0427e0dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098c76d3-765e-457b-88cf-294085f5730b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32616e46-d16c-4aec-8f8c-11def5c20d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1778859c-a94b-4890-af48-a31266e38e42",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc7ef6e-9c00-4bf9-8ffe-627f22a3e54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34719e33-b7a7-4dc6-bc9e-f0d5d1d21e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57866e41-421f-4144-9f3d-ac360436f427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d46507e-e583-4c80-8501-e944d045a266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbd5b4b-ec7a-4c18-a7f3-bfa89fd4eebb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f835a8cb-a787-4276-aa69-189562fafb9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0007808c-4a82-4539-9c59-806d45f92ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6d0d07-821d-4cce-94d6-658987653770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f6f9ed-d3f1-42da-a321-fbb176ce0306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a5119b-ffa5-4254-a408-c00e67c02d50",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca02184a-f31c-4788-9aed-5ef0eb263b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a6da98-f63a-42ed-be9e-e317752ed4b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "258caf3b-caf8-409f-a537-9f0ad72ba29c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca31d110-1ce3-427a-9c24-5b5c7acb11d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37bff69-60a4-419b-9fce-87e2454b7376",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71965e8b-f51c-4875-bbe5-98a87c2f31fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49376fa3-b206-4dfd-9b29-18ea28830065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c11aeb-ba56-46a4-a79b-ceaf56e240fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b9692d-d385-42ac-b9b3-6de6edf4f9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b708b8c-ac26-46aa-b45a-52d1c9909930",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07499a5b-761b-4f64-a540-5a57f045fae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ddc226-8125-433f-860f-180b5a3ee746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071a243a-bb1d-46e3-8004-f1022c687df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9683ad-4316-4fe9-b00d-aa67e46274df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e8991a-06db-4974-960e-1aa28ccd6052",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01feb7d-4aec-48d9-b3dc-50cf8cd55b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b640c62-00bc-47d7-9f33-554a79640d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3f8a1c-7ff5-459d-954f-3b8b4f53ecb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b579e458-b8ed-41e2-b569-6d5246b82260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75c1e96-d042-4492-9dc0-15557532b044",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2850e6-823f-4cdd-a2df-680516d69f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113ae08f-933b-4857-90c7-87535ae2241b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504aa59c-85ba-4bf2-976e-fa2ab974680d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57f5bd9-6c8d-40b7-8ea4-9d04ab08e610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3426a7-5e8b-4371-8362-3786965f4c2d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73709ba3-c7a7-431b-ba16-b1e9b366ed79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b77730-3933-4cc7-83ea-8329c049ecee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98b7202-6cac-4fcb-9655-f50c7dc0e660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d58911-81f2-4710-8a3c-482ac76cdad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2981528b-e75d-4283-b6de-59e73fdfaac8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be65e99a-ffa5-4f6d-9c93-13946e186cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "584bcdd2-06b3-40eb-b5e6-b6a3b56bc017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2702824e-557b-4f26-857c-af9ef65a5368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c575da63-c51d-4c3c-8d77-22e5aa509d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea3ece1-f862-4708-8942-bf66c4a08158",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2624f4b0-d227-414a-a983-11f9dc58844a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af15c77-82ab-46c5-8254-d105059e81fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14c58be-1132-4623-a66e-d4ef82e2d0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bec9938-f72a-4a38-b9cd-07b55f36e52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5273d2fb-4dd6-4633-bc8a-61643f4e120f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360b19e2-b04d-4b4c-b411-34c411aef1c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e493ee40-9e2b-4fac-9ac1-0837268ef5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27831512-5958-4bfc-a7cf-19257a1240ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cd1cb3-350c-40ab-9900-6ac270616462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ebc887-1b8b-4f23-8490-c60f573ab6ae",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021cd687-7120-44f1-b150-22bb3615c2f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e1bf34c-709d-45dd-a826-c6bf80af23cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cba8185-947f-41c4-8121-8a35d0105148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f2b8fb-3924-4c4f-98d5-2e041837956a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692ad5c3-8c5a-48c4-9f28-ccd069d325e2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0083af54-4fb7-43e6-978f-afc552cfaac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c6c6de2-1bb9-486c-bdcb-04a50c15eb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0dfbe6-a3e5-48f1-a823-c2335ab920aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14410eab-0850-43c8-acb6-590ac3d50788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b04cec-7f54-4708-9481-f6f909079e3e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037e6649-5f06-48e3-9cf6-6ec994eb894b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ae30d48-78d1-482d-8522-4b075e5636eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "203571e3-b84f-480d-a7f8-e138481ed694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a85eebc-021c-424d-9cfd-6d6acdacafc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b4e8bb-4ff0-4459-9d93-d4c99aa41701",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0ef6aa-ef44-48ed-8c79-87a701dd1833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "257e1452-7de5-48b4-8a2d-24e11e5c70c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76271b65-ba9c-45dd-9b06-7be1a6296b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8f4006-9685-43cb-92aa-1caeb4d19320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f78bf4-f542-4f14-bd60-00a7a770f9ee",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77923dac-cf8d-4f7f-9261-e6fe5732bb94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b44ba1-ecc2-4f57-ae08-3d58b54186a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a36ab2-2dc6-47a6-be9e-80b9a4c13c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2093d5e-e9e2-472f-a981-6fdb11a76c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89054da-5267-45ce-9f09-3e071ed128d1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76114c9e-cfee-4ede-9ec7-86b6458bb190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb84565-5f19-40de-ae04-a003f1029e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5d52b9-0974-4f15-8967-5b60a5bbb905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5429ffd-7be2-45d6-b846-5763cfe20e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21fca81-712e-422d-b751-3dcf89ade94b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1182dc5-9dc3-4db9-a240-149c0ad3fa37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6fcecb0-f9bf-4ed6-9f9c-55e84affd924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ae741d-75e6-4aca-aad8-fc30f3e39677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4e36aa-57d3-47ad-85a2-56bec15621e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58e4956-9c99-4a94-9e9a-bf759bd514f6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607e487c-2c80-4221-bae7-8c2545668795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c09eae07-0168-40e7-9e93-b5e50ad1a32a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e897df1c-09e7-44bb-a0f3-593ae7b2d49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456e6bd9-2a19-4e6c-85c8-1286a583bd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2500e7fb-c5d6-49e8-90ee-4138874d6af0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c7e2e2-fe9f-4f7c-936d-d154b1c8aae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "610c97f1-962e-4fa4-920f-d0949c411746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002e3f36-e2d4-4a29-a270-e89dfbab6080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54dde17c-d9a9-4b91-a7cd-33fb4f4a9556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04d49c2-770e-4835-a412-65f548a933ed",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135e1e14-c644-4a82-9753-bd092c9aa9c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dab027ee-bd0d-47a2-8de3-3cedb3328701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15277c11-02b2-4073-91a6-926d86cc2e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa2228a-524b-44ee-981f-7e6c93da3356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d26c95-e538-4e48-86d9-d234a5c99eb1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482e0c3c-161d-4bcf-bf83-e6717589bd20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11de53c0-7b56-47c2-999f-21a82c78e672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e2dfb3-78cb-4e80-a92d-15a24580f576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06838482-13a1-4cd1-b4c8-c39d3d8d2822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b8cd70-c37c-46e1-a850-890711f99661",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ef4dad-8c81-4af1-bdbf-538c29826a82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e719c113-8c3c-4d3e-b7de-d84715d3a58d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c42ea59-d797-448d-a7b2-1b1ef729d372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb0a705-1ba1-4529-b0b1-65f32ae338c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3526452b-28ff-488e-a7e5-eb2a5b20d42f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d03e0c9-6240-4c30-b806-82612edca43d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2fc7578-8fa1-4b9a-8ed3-4bf745cb422f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba56d2c0-3a04-4f2f-b635-c55376cec49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d2ad87-40e5-45f9-9339-05e12f99ae07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eaec500-f4a5-4dcd-b66b-ff525eeea38b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d01505b-9612-4249-9875-dfc8b1123043",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28167630-0d9d-4269-bb96-7ea1c514058f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ae41ab-2b9d-498e-a207-2aa2080928cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55f2a77-0cef-4bb4-a8a5-1276641f1ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9a180a-f68e-49f3-82c1-e35235845a22",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edab4b1-e963-4ffd-acc2-5da4d248efa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "796a7b0f-f0a5-450f-95b1-bec544935a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0934ff39-3f52-463c-bc1b-87bd60f3220a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dce2f78-0bec-4156-ab7a-baf982bfe435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4703179b-1bf2-4846-9f0f-4cfd95d76831",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001d1c85-634d-4366-bf4d-8648e7ced67e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d421a46-5ff7-4cf5-88a8-010667ffd9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08aa137-2570-428e-b5b4-01b963497acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f11811a-0053-4e52-af1d-8e72af4f2a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf2eba8-c5bb-45b2-a41f-c3f4e43abd88",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e062d713-d1cf-49c8-98d8-e36735c357fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86ec7a75-5d76-40ad-ba46-44d8a621acf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e298f00-77ae-4ad8-be01-3272d12e68ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0caf4d-e69e-4a7f-85d8-184e693b5fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2988234c-9835-42ba-bb09-1c0f9614459a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f8348e-25e2-4d64-a827-cde848ff9a52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb111ed-0fd7-47cf-8338-48ea0b0ce596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03d82b9-16ea-47d5-a42e-4dd0aabf5d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c764e0e0-775b-4672-9721-262cd5f5b7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c78bbd0-552f-4234-ae10-dc30b47e86d7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ff384e-6940-4196-9cfa-0364dfbb78d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45b6d6b7-1a5e-4388-8928-533be03d7148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15739eb0-74a9-400f-a9d8-56575af167d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31d2b9b-465a-4601-a69a-f2c5a69d595b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3327d584-a1ed-4550-aa70-095b25dd3a27",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30a8dc1-5172-4d91-ad81-8eb17666097f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa874157-73b4-47e4-89e3-b81f9f9ce05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad0a264-e22a-4a08-87e2-462bf0cd1b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81535d5-36a3-4f0e-9e1c-7244d065ed0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbccda23-2585-4196-917e-7dc3aaf1375d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad3e10c-cb87-4f05-a8c9-dd89ca65e50a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75f823ea-9d02-4d10-a8d4-127450b188cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be98a292-cc88-44f4-a43b-582c890d63b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab50511-5da4-465c-a03e-9acc0eaba3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b4a913-8806-4834-886c-757cc3af32dd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15f5e23-0809-4720-8fb1-cf80a65bc8c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5548488c-5661-4153-bb4c-e68bf00d3330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422e8f43-5623-4838-ad9e-728441e05b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75508a30-d0bf-4f58-8e9e-4314dadd7a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bbe6ce-8fd2-45fe-b0aa-899d492eea8e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6494507f-915b-494f-b6c5-1bd5fea88a7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2877ea41-35dc-46c6-bca7-d945a1f9f365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4183b65-6bc8-4245-be8e-7686cbdab310",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8052bacf-ecbd-45b5-91ed-49a3587f7c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a95ce8a-a4ff-4237-af54-819590b5a57d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1689fb4-e4fb-4962-9a18-ab83904beed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a1e63c2-eceb-4bab-891c-691fd0a4d467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4caa3fe-dcbb-47b3-bc77-b0e459c7c05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35293dad-5563-457c-9823-522b03b7ce08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce44fd0f-d8cd-45c0-91ca-356eb452086c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3d97be-34e0-467e-bb58-80fc2b09f67b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "836f941f-4d39-4ca2-8a1f-9440c79a909e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc52c58-f078-4040-b7f6-a12eb80f2723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ba4a63-d504-4117-9f88-8b15b4f5845b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00f4926-92c3-4a65-8c28-730b6f6a95cd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3a520e-bc90-44ca-9810-6b3e57dbdfc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c975273-d6b1-4148-983b-c3e62ec0af87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75707169-a8b4-442f-a282-79c852e43943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fd730e-6bdb-45c1-a596-fd3cff6ad070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f108f7a-3c24-4f44-95f3-35628bb7d7d1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0ebdc9-1389-47a2-a206-77941f816887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac9a6c0e-8836-4c95-a406-3f7e70854c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e54185-f52e-4a14-8c8e-ae7c82d3eb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562eb49a-aa89-4ab6-b902-7a9b917ad381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bec49e5-a094-4e99-9739-e66b8bfb2ae0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115dcf9f-2c94-4e8d-ab66-241ec5eced9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf3c568-ffee-4c64-bedb-ef929179dbfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2811e8a2-aa7b-46c4-b5e7-c882100be431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7510079-b13c-465c-9007-a1bc06ce527f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d8a632-8b97-4b8f-a4f6-c6818154035c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfd6898-988c-4332-b7bc-860009900bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82f9e9cf-9287-4c02-967a-26ebdee7f397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78da2f0-627f-46d5-b44e-5568697820e5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e8e72f-5f62-4801-8453-12b3e9e06ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9848e7a5-c66e-453d-8cbf-50312c82dbaf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40103b31-0008-494f-b85a-d604844c8574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1474ebaf-f34c-4cde-be7f-0641f95839ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de19fd98-a0f1-48f0-b4bc-85c5131b155b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf5b60d-8f4f-445c-b7b3-f0db91e9dfdf"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0461593-dfec-4caa-90da-2f164763ee0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76de1f28-518b-4ff4-9d6b-65584249b415"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95c7d285-09ba-431e-bb7b-868da2e6ff8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58027912-19c3-44a0-968b-b139a6dd1777"
                    }
                  }
                ]
              },
              {
                "id": "e0ba012b-7f81-4a14-af81-fa323cc64c80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5228d12-6924-482d-8a6f-9aece43360cb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ff98d8-f83f-4d2d-a8f0-2ab9e9a2106e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "41bf8995-d3cb-49ba-81c2-d36ccd61cf78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27048d52-e967-4b92-9aa0-e5f3343c2777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08d95cef-68d5-4581-a0fb-95b371766807"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c20bf5a7-7597-468d-b080-c458c5089b79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f3a2f4a-2c5e-4815-b458-63a01a2bf179"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f687133-28a1-4d33-8113-ad061575ebef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32bb4634-0d27-4336-900c-178da22ed095"
                    }
                  }
                ]
              },
              {
                "id": "4e67a29c-d205-48ae-8340-a1a8b3a6172b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "54c1ebf0-be3e-41fd-9a3c-2ffd62849a60",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d2ea33-1cd5-42b2-8651-cb6583f4e89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "76cca8e6-755a-46f8-8dab-2d1613962727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f31150c-80b7-4203-9427-08f0f0014a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd9d168-9bef-4e31-88e4-480ca5518581"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c36a6acf-05ba-4706-9bd1-68eeba79cfe0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "518d8fa9-2858-4538-9e11-313c5fe8f864",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63d1bdd8-3710-4bc3-ace1-7c0bcd2fd873",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "645285a2-fdba-4b97-b205-32f59808deba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d0f08c7-07ec-42d3-9ee9-2f4542764064",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ced3a89-0a09-4eb7-b27a-9fd1bec59f8f"
                    }
                  }
                ]
              },
              {
                "id": "22c3fc92-057d-4aca-988c-b8c4d9ad368c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f47897f-37e2-448a-9f73-cc972d6d2c4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eab04a3c-abf7-4e6d-b831-191b072763ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a3970dd-6e4a-4f74-b62b-c13862b6fae9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1aca346d-64eb-432f-afcd-458ab346c58f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "971e5d22-21fa-4dbe-aa74-2cd252601d6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e07a9ead-8657-4d5e-a179-59ef7701f97c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "996bab77-3123-4b46-81b0-fc09df5a3edb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06b46770-272c-4fa3-80df-f841fd90359a"
            }
          }
        ]
      },
      {
        "id": "17ae5be6-9d04-4067-b42d-987c87cc6aa1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bbe05804-364a-4a44-b3db-7e287b362f8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "def60f4f-2ece-4d75-a2a4-7e7b6a9fe7f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "805facdf-22f4-445b-ae8d-45ab1c35477a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8fadf6-c2f5-41db-8c98-d114b5aac12a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "63e2619d-cd69-4e3c-a48e-3f041061b082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4d687c-ca16-46ef-9f7f-f611a444881f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cb27f07-c0fe-42ac-b737-3c1738882eda"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3466f79a-6631-48eb-85f7-c824fc25cc22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ba19e12-4225-4bdb-8390-3e1a9b6e6903"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e6e8aa5-e3d1-4f93-adc6-3494adab36a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6469cce1-3616-4483-b8b9-5ec811694834"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e8460e9-0072-4f2b-a74c-b28a5091a75c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ec5342e5-eb1e-44b0-9fe3-0396d4e2753a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "941c9660-cfb2-4f03-86c9-037dfd1d0018",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e439ef5-9e50-46b8-a20c-a6acd476af8d"
            }
          }
        ]
      },
      {
        "id": "dc0e42a6-e93c-4702-a674-18555f91677f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e2043d8f-ba44-4429-b9e2-cecf19560123",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15854c18-b04c-442d-8f7c-3a103b483b58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6b84a64-3f63-4223-8910-4bf26ce3bf34",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20322cd4-480a-46d9-83ce-681dde73cf25",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92773df9-94cc-410a-b4b9-3c0dcfbeebfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b231f92e-58da-4c7e-9fe1-5900ab440823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb82aa0b-e38f-4b33-85fc-0e63cd782726"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7604224d-19e8-41d3-842d-ecfa1ce8ea5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e796b1cf-d9ca-486e-b1f1-98f1154d6a40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b2f3356-9e88-4518-afdc-a76733079e14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a75bffa-2e72-4bb4-bae2-01d075ca6269"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e55cb6d-fb57-4534-be96-9d292a817984",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dd26217e-7200-4f36-8cb9-b6dc98c46d3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8756fc9-0feb-488f-864c-3113956225aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "096d0d35-9836-4051-8a8c-798748c290d4"
            }
          }
        ]
      },
      {
        "id": "b60002a6-bdf0-4343-a425-a371132249f4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fceae952-a90c-4839-9d2a-b7b9671f617a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea7a1ba6-4faa-4606-92e9-009cddae877a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee357d55-09a4-4b22-ad67-53922acc69df",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61895021-90ae-4b8a-902d-522de158e79f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02066099-0874-478a-b589-ca87d51bac2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880148a9-a63e-4cf6-99f3-32c2d3455e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb452983-5306-4c9f-ac2d-a6ddb5d6c3dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0d96652-7f27-445e-974f-27a1a1ef3a6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b889caf5-2fcf-40e3-99ad-fbd7d41109b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1598ef52-4a65-4e41-bd51-aebc40ffb9f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ce196f6-1868-4ce4-91c3-0f6655279c69"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d0735ae-00db-45bf-813c-977b77035bb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "abe5fbbc-488e-4f67-b8fa-e9708a873f0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d943a3f-91c4-4764-92f2-7c89a430e721",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a09e1773-347d-47b3-927f-4658a321ca7f"
            }
          }
        ]
      },
      {
        "id": "f1f2b78b-2ba1-452f-9d00-2f5ab00a5bbd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e609b83e-2a31-47da-aa6e-b906071c9d74",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60b36762-f4aa-41c9-937b-8bebc2b80a3d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "40d03882-f69d-4a46-ae25-4c4ad0e2ea60",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50f483d5-fe2c-4aa3-a53f-53a74189bd3e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48719cc3-7337-4a67-b18e-a56d8f185335",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 415.59154929577454,
      "responseMin": 19,
      "responseMax": 8605,
      "responseSd": 1078.8805175718894,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695861210408,
      "completed": 1695861344632
    },
    "executions": [
      {
        "id": "2219b419-9d11-4b30-b873-bd591911f611",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3d81c573-2e6d-440f-9cc7-27d3130fb5e1",
          "httpRequestId": "66ff94ce-e109-4d99-a973-d81658a81acc"
        },
        "item": {
          "id": "2219b419-9d11-4b30-b873-bd591911f611",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0cec6a0b-cc9c-4357-bdb5-4a08238e1f73",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 0
        }
      },
      {
        "id": "4550b464-336b-411b-a816-669aadeb027e",
        "cursor": {
          "ref": "a66cfdb0-64f6-41ac-ab40-b54101118876",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "635be6eb-1dd1-4d49-94b0-0ab7e1c5c91a"
        },
        "item": {
          "id": "4550b464-336b-411b-a816-669aadeb027e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e6cfa912-b57e-49fc-a77f-a21a7e785767",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "01829ce5-b46c-48de-ac73-30703d8c2448",
        "cursor": {
          "ref": "2cb352c4-8661-4ac4-a0fc-511ba869a67f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "51d69207-27b9-4c68-a30c-f1778f3c1c18"
        },
        "item": {
          "id": "01829ce5-b46c-48de-ac73-30703d8c2448",
          "name": "did_json"
        },
        "response": {
          "id": "217a2cf0-ecd9-43dd-88d0-0754266b2be5",
          "status": "OK",
          "code": 200,
          "responseTime": 1513,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8793f9ac-8eed-4091-bb8c-7956bb5ec044",
        "cursor": {
          "ref": "4499afc1-22bd-4d9d-9e5a-143cfaaa9309",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "158c5c61-89da-4bc6-9239-dbcfd45f6347"
        },
        "item": {
          "id": "8793f9ac-8eed-4091-bb8c-7956bb5ec044",
          "name": "did:invalid"
        },
        "response": {
          "id": "1c10927b-8162-4e97-98b7-475edb3f4821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8793f9ac-8eed-4091-bb8c-7956bb5ec044",
        "cursor": {
          "ref": "4499afc1-22bd-4d9d-9e5a-143cfaaa9309",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "158c5c61-89da-4bc6-9239-dbcfd45f6347"
        },
        "item": {
          "id": "8793f9ac-8eed-4091-bb8c-7956bb5ec044",
          "name": "did:invalid"
        },
        "response": {
          "id": "1c10927b-8162-4e97-98b7-475edb3f4821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5049c706-77cf-4022-8de1-53008c3df442",
        "cursor": {
          "ref": "c4e0ac74-fbfb-4cbb-9eeb-efa40e2b8a48",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b9e97b23-3ed2-4ec4-96be-2103eabb16cc"
        },
        "item": {
          "id": "5049c706-77cf-4022-8de1-53008c3df442",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bf8cb4bf-0f6b-4251-b571-475f193e8772",
          "status": "Not Found",
          "code": 404,
          "responseTime": 348,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a9e316-1f71-4190-ab96-5becd753f082",
        "cursor": {
          "ref": "863fb0e1-944c-4b1a-b63a-0b47c1ce0a5c",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "397eb8c3-c038-47d1-8899-f6ada77954fe"
        },
        "item": {
          "id": "12a9e316-1f71-4190-ab96-5becd753f082",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ee675af0-2f18-4e89-88a2-2bd9ab0a748a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 344,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62d86ab-8724-4115-a74c-3f8d497efbea",
        "cursor": {
          "ref": "34e12d6b-d698-4b5b-b9e8-8112a79b2144",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "70932208-0368-4348-be7e-80226844e1e4"
        },
        "item": {
          "id": "c62d86ab-8724-4115-a74c-3f8d497efbea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5079b2d9-8e09-44da-8b9d-0a52ee3eae5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 198,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a77cd00-5ffe-413a-9558-ff1affbbe571",
        "cursor": {
          "ref": "7b0fe4ee-5aef-4df3-8835-00900bc3d43a",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "01f0262e-1618-4e16-a732-270d8c52b398"
        },
        "item": {
          "id": "4a77cd00-5ffe-413a-9558-ff1affbbe571",
          "name": "identifiers"
        },
        "response": {
          "id": "254bcc62-4abf-4afb-bc74-a6e45329bfb6",
          "status": "OK",
          "code": 200,
          "responseTime": 1437,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d93822-bc9a-4a5f-a0e0-52e4d69f77f5",
        "cursor": {
          "ref": "8f0ad32d-3694-4376-969b-3e519e3595d0",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bc9504c8-e9f9-4737-9cd6-37c3a5813a1f"
        },
        "item": {
          "id": "85d93822-bc9a-4a5f-a0e0-52e4d69f77f5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d2778d48-a8d7-46d6-ae62-879bae8155c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd63c1cf-3be5-4f0f-8452-41b606d455a5",
        "cursor": {
          "ref": "1795248e-14a2-40bd-8a37-2cc57e38e79c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "331843fa-77f6-42f8-9011-5157520826cb"
        },
        "item": {
          "id": "fd63c1cf-3be5-4f0f-8452-41b606d455a5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ba88d901-63dd-4fde-a64a-e55351d32dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3449de4a-0b60-4779-8c47-66172dd66388",
        "cursor": {
          "ref": "76c71b7c-486c-4751-9f45-971f2c711026",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a6297ae1-d972-4e1d-9cea-9f182be567dc"
        },
        "item": {
          "id": "3449de4a-0b60-4779-8c47-66172dd66388",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dfcbbe0b-c092-4fdf-82c2-8212f00a0e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3465e565-fa48-443d-8653-60426ab08af4",
        "cursor": {
          "ref": "786c90fa-a868-45d5-bcee-0eae4f658818",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2dd43956-3701-40bd-a94b-9435d7ef706e"
        },
        "item": {
          "id": "3465e565-fa48-443d-8653-60426ab08af4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "dc3a2b18-f967-4c42-8855-0b4dff99ef30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57493a6a-744c-4693-bf73-89d1cfb2bd45",
        "cursor": {
          "ref": "f9a0e48f-53e6-44a3-9aa5-b248667ca057",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "031b4f40-1e01-4abf-939e-d638b2d5b2d0"
        },
        "item": {
          "id": "57493a6a-744c-4693-bf73-89d1cfb2bd45",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "62612913-0e9f-43c9-8ace-219bb09a9ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8043826-6b5a-4c1e-8837-3a0b3c2d5f6c",
        "cursor": {
          "ref": "79a50ae2-5555-442a-b2c8-622aab45bee7",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ab8f7305-7ebd-4ec8-938c-859d6edaa2b6"
        },
        "item": {
          "id": "d8043826-6b5a-4c1e-8837-3a0b3c2d5f6c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bc4ba9ec-1a1b-453b-8676-baf7f9344463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26705bf7-9dcf-4dc7-9d2b-44a89fd3ae3b",
        "cursor": {
          "ref": "6af33e66-8ad0-492e-af56-3058f3758eb1",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "17c15c08-0f7a-4d2c-90f3-f53b81fd4123"
        },
        "item": {
          "id": "26705bf7-9dcf-4dc7-9d2b-44a89fd3ae3b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7aef3754-4386-46c4-9c84-15c76112791a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3498,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af76b3e-a641-4f86-b4ee-3ed158755ee3",
        "cursor": {
          "ref": "0f144d84-ff47-4d0b-8dcb-36257706ec8f",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "25e98531-f6fc-4df9-929f-03ebff1d4231"
        },
        "item": {
          "id": "5af76b3e-a641-4f86-b4ee-3ed158755ee3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "69b4a795-dbba-43fc-bb8c-43d8a4115fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00914206-0751-47dd-8f71-3b6030ebdced",
        "cursor": {
          "ref": "79b5621d-cdb7-4edc-9760-a1f3c5bccee9",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "adf4589a-eb13-4213-b262-6be0063cae0f"
        },
        "item": {
          "id": "00914206-0751-47dd-8f71-3b6030ebdced",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "671cd6f1-cb33-4d47-8ce4-8fd7e436d7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e234e58-1dcb-40e3-acb5-e12b1b663717",
        "cursor": {
          "ref": "45c912ab-6f97-4bd1-b725-dd74ac603277",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9c0a2730-b7d5-4c76-99ea-364157139b9a"
        },
        "item": {
          "id": "9e234e58-1dcb-40e3-acb5-e12b1b663717",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1c10bb37-3bae-4e18-81c1-30181fcd1ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b1c5d8-91bd-4102-bc01-630a027ea67b",
        "cursor": {
          "ref": "76bef511-f258-430b-b456-82345b426182",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a42ea579-74a5-4e40-bf0d-c1a462022d09"
        },
        "item": {
          "id": "05b1c5d8-91bd-4102-bc01-630a027ea67b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cc74d04c-378c-4e96-b693-f73d09537648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1e9a2f-4124-4bcd-8668-231d985e5220",
        "cursor": {
          "ref": "589e335e-7e0a-4971-8e3d-6d0631f26bfb",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "210a7cf3-01a2-4f52-b142-28bc22517d72"
        },
        "item": {
          "id": "5e1e9a2f-4124-4bcd-8668-231d985e5220",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8bb63b6c-2b2e-4e89-b41c-e4bdfc97e076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f3bff6-898a-40d3-b233-2ee2a0aadab8",
        "cursor": {
          "ref": "300b3d61-7437-47c2-ae67-a53cb65f758a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ce94e940-c656-47f6-9d1e-4e2e9fb5f18b"
        },
        "item": {
          "id": "57f3bff6-898a-40d3-b233-2ee2a0aadab8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "776be4a5-2737-4f1a-b6db-f29fc002105c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5073d23e-23b2-4f7f-b4b4-f55d73031980",
        "cursor": {
          "ref": "83beb434-23dd-43f6-bcb8-67e5a1c9e8df",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "91f52345-0daf-4941-9b3a-f6e56c1fe67f"
        },
        "item": {
          "id": "5073d23e-23b2-4f7f-b4b4-f55d73031980",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9dac2238-4ef4-4ad4-8543-bbc10376091f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bf8cd7-edd6-4959-975b-6456f1f51c1c",
        "cursor": {
          "ref": "6c67feae-e782-4521-ac88-8559d6ba17bf",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "85908b46-fc0f-4971-91fa-16099baf6f25"
        },
        "item": {
          "id": "c6bf8cd7-edd6-4959-975b-6456f1f51c1c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bf03e211-9dca-473f-9db2-04377b53701f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647cea5f-068b-4a1d-800a-78db7b95e0c3",
        "cursor": {
          "ref": "93d0c0b1-293b-4323-a48d-e3ccc438f000",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2fe9d0c1-560b-4a5b-9b34-ce8ced737558"
        },
        "item": {
          "id": "647cea5f-068b-4a1d-800a-78db7b95e0c3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "47ae7ac5-1687-44b7-a19e-2bc6f490097d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a55951-8f75-4f3c-8b88-d92da9f8388e",
        "cursor": {
          "ref": "a61faa68-5e18-4373-b2eb-d5cd2cfa39d2",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f465ab68-e0a2-40b4-b9ad-72eef7ae2e2c"
        },
        "item": {
          "id": "c5a55951-8f75-4f3c-8b88-d92da9f8388e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "df5c11d8-c21b-41b5-83e0-eda56f8cb313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532e83c5-0467-4915-b89b-14f115744437",
        "cursor": {
          "ref": "ef82fbec-e8b9-4c6d-863e-fd340dbcb036",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e5fd7b34-93dd-43de-be5a-5368e19a62e5"
        },
        "item": {
          "id": "532e83c5-0467-4915-b89b-14f115744437",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e965b16e-2183-40ef-b48a-a51abca6a35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7611cc77-252b-4dd7-8705-4645ea020064",
        "cursor": {
          "ref": "1ac1508d-d467-4c9e-9002-62c00d9fa8d8",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1b71259b-c281-429a-ae03-72af5074d205"
        },
        "item": {
          "id": "7611cc77-252b-4dd7-8705-4645ea020064",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3e2fbe98-40f6-4af3-b90e-84e068a4f4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf74517e-f5fc-4e23-8f0d-ad7f9925be33",
        "cursor": {
          "ref": "6ce46fdf-00fe-4229-a320-ce0ca5b468b1",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "692cffd5-045b-4ad9-bcfe-8c3210f8bffe"
        },
        "item": {
          "id": "cf74517e-f5fc-4e23-8f0d-ad7f9925be33",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e0fa075c-34be-4af2-87d0-1e90770fccf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8605f78-e1e2-4e6e-9489-b657968c389a",
        "cursor": {
          "ref": "f5f596df-c1d2-4927-bb33-14c495a89e2e",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "25846ef8-4139-42e7-ad71-3ba0792d3a2e"
        },
        "item": {
          "id": "b8605f78-e1e2-4e6e-9489-b657968c389a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5147f664-82f5-420a-8ddc-0e8260725878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2a8204-edca-45f2-b2aa-98c0230cf172",
        "cursor": {
          "ref": "fd651c09-9251-46d6-94c9-d24d5ea8c7d5",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3aaa1545-45b2-42f9-a6ff-bed2eba278ae"
        },
        "item": {
          "id": "2b2a8204-edca-45f2-b2aa-98c0230cf172",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bfbfdeec-fccd-47a5-83de-6261faf8b6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28925ee5-45af-4c41-980c-5c50c4e7b63b",
        "cursor": {
          "ref": "f5ac75ea-d16d-4a63-8980-0c78585a021b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "eadf0393-d14e-4e11-a0c3-d28d495541f9"
        },
        "item": {
          "id": "28925ee5-45af-4c41-980c-5c50c4e7b63b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2657573f-e7bb-4556-b6d8-bcb62a1f55f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc023e7-6ee0-4f28-9c8b-b401b22a8c40",
        "cursor": {
          "ref": "646f2515-3d2b-40b1-b80b-8d93e4950001",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "23135526-fb88-4d65-948f-89a1a81c8909"
        },
        "item": {
          "id": "5bc023e7-6ee0-4f28-9c8b-b401b22a8c40",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "50596d2f-2791-4907-8b9b-817c1d905f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21612121-763c-4f67-8622-0c15ef4a0460",
        "cursor": {
          "ref": "4ef48294-281d-45d3-ba68-ca79610c819a",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3d029c3a-0bf7-4cbc-906e-1cf0b21f5a98"
        },
        "item": {
          "id": "21612121-763c-4f67-8622-0c15ef4a0460",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0d95186b-3a1c-4589-b459-5ec27fd1a3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1eb617c-b278-41bf-9b0f-3178d2fbb185",
        "cursor": {
          "ref": "314a5395-4a36-4f62-81f1-c0acf01a4135",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f72b7ccd-c3fc-463d-b7bc-13254a057a34"
        },
        "item": {
          "id": "c1eb617c-b278-41bf-9b0f-3178d2fbb185",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d0b0dba0-2736-4da6-97a9-603ae3e8e88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e664ba-c8c6-4bb8-87e8-f328296ba0cd",
        "cursor": {
          "ref": "a9e0d79b-af13-4b64-aca3-c4ec5436a961",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "32989a70-6545-45e1-b774-3135d745e2f3"
        },
        "item": {
          "id": "31e664ba-c8c6-4bb8-87e8-f328296ba0cd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a3e61d42-2641-40f3-9868-7fe82931c389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f8fc28-6bc2-4ee1-83eb-acb0b92d5fb6",
        "cursor": {
          "ref": "9e714380-9bd2-43c6-913e-202eae6a62ed",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c0a0e1e1-d1c7-4490-ad38-c8913ae303de"
        },
        "item": {
          "id": "27f8fc28-6bc2-4ee1-83eb-acb0b92d5fb6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "694b0e28-b59b-4acf-bf80-cf1f74938a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed6968c-a95c-4c21-819d-ba722533003b",
        "cursor": {
          "ref": "7496f50b-c424-45f5-907d-a4abaec8a861",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6f853e84-7ce5-4d58-8e98-7e228c1dc380"
        },
        "item": {
          "id": "2ed6968c-a95c-4c21-819d-ba722533003b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "404c6b4d-d5c7-4a49-9031-4dbd545b9466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8605,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c3ceff-8e15-456b-8da5-2d64e7681076",
        "cursor": {
          "ref": "f886a31c-66d2-4e69-8398-1a0974b69dbc",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "300d19dc-b65a-472d-80c2-1fd451f7b20a"
        },
        "item": {
          "id": "f8c3ceff-8e15-456b-8da5-2d64e7681076",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "826d1b0b-bba4-414a-a6e6-1a19c0e12056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fae0f8-1183-4a88-ba97-51d83760bf73",
        "cursor": {
          "ref": "6decca9b-d439-42ef-aba6-2db7894789e0",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ae1652de-6bd4-43bf-9ee2-75a3e1433097"
        },
        "item": {
          "id": "14fae0f8-1183-4a88-ba97-51d83760bf73",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f0bfafa9-13fe-47df-902b-85b209e804da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5deb3b-7b90-4beb-9dac-2e51665083ba",
        "cursor": {
          "ref": "eeb8d7b0-7d22-47c2-aa02-f3ef9e5c8668",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7ecf93d1-4b9a-449f-8307-757600638745"
        },
        "item": {
          "id": "ee5deb3b-7b90-4beb-9dac-2e51665083ba",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "96c77832-2ea2-4878-aee7-d967d52ee961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b62a36-94fd-4dff-ab54-df0b8a396678",
        "cursor": {
          "ref": "31cbdca1-b46c-4212-af0b-fc973340f533",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8b441792-3570-4354-8cd8-8f5e81be3269"
        },
        "item": {
          "id": "36b62a36-94fd-4dff-ab54-df0b8a396678",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "950858cd-ce82-4bef-a520-d71f2d2dbb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2ba5d1-f66e-4d02-9454-5b9b83ab2da9",
        "cursor": {
          "ref": "ab88d775-67f4-4553-b059-a01ca0636ce7",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "47fd244c-5fe6-495b-87cf-d5b7573846cf"
        },
        "item": {
          "id": "5e2ba5d1-f66e-4d02-9454-5b9b83ab2da9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "464dd618-d496-4dad-9928-2fc38ea57514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7afd00-a373-46e1-aa7b-7944680a53de",
        "cursor": {
          "ref": "286aac5d-2620-4a0e-a38a-38a78548ac21",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b5bfe53c-ca59-47bf-8639-e7579fc9ac9b"
        },
        "item": {
          "id": "3e7afd00-a373-46e1-aa7b-7944680a53de",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f7b92b20-0072-4d62-a307-57ff6cc416f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c34c0e-fc50-4960-b1f9-1f8ea8dbe6c7",
        "cursor": {
          "ref": "39a2a88e-053a-48b5-ae49-ed81ef9df8ab",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "aef8abc8-f0db-4081-a4d7-ade9198cd85d"
        },
        "item": {
          "id": "69c34c0e-fc50-4960-b1f9-1f8ea8dbe6c7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1f99ea53-865d-4423-b9f5-c9498d89ce9f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 592,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de73a64-5902-47de-b3af-116527bcaf35",
        "cursor": {
          "ref": "5fca9c3e-34f8-4d3d-a8e3-f724122e77a9",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3c268a4c-e3fa-4461-aaf8-8718ab26649e"
        },
        "item": {
          "id": "0de73a64-5902-47de-b3af-116527bcaf35",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3a753a53-2847-4fb1-bcdd-ef9f26434b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b751ad58-d423-4c6d-90d5-a2f1a0fb4035",
        "cursor": {
          "ref": "7143d4a1-1358-4dfd-81eb-3b3b7e0edd96",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b16c1733-0f00-45db-b7b7-98351282e93e"
        },
        "item": {
          "id": "b751ad58-d423-4c6d-90d5-a2f1a0fb4035",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c2de3592-d062-4b47-b41f-78da97892a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c4c8c6-0781-4fd2-9af5-ec4e59f178ab",
        "cursor": {
          "ref": "619e22fa-9594-4137-ae39-6366837feb06",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1b12799a-aaf9-43be-8489-46507537e8b1"
        },
        "item": {
          "id": "c4c4c8c6-0781-4fd2-9af5-ec4e59f178ab",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "78fdacb5-7de7-4df8-bd5b-0d459e922bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9964a0a-51da-4503-9fa3-5110a847ec8f",
        "cursor": {
          "ref": "74a9ad89-816f-42dc-9513-e078e5019ea8",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b78156b7-70fb-4924-be71-396f954877bd"
        },
        "item": {
          "id": "b9964a0a-51da-4503-9fa3-5110a847ec8f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dfb19cbd-d40a-494a-9a79-5c668f153fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbeeaca-10a7-40c8-95f1-e647208f6d65",
        "cursor": {
          "ref": "866da93f-fdb7-457e-9ff7-9ae766c2b9df",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0fc8569c-af22-40c3-82ac-cc51214424d4"
        },
        "item": {
          "id": "9dbeeaca-10a7-40c8-95f1-e647208f6d65",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6db8bf2f-9781-48f1-bba6-95bec38a6dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a00ea41-6e40-4020-9ea8-302ba268cebf",
        "cursor": {
          "ref": "f9c0ea2d-ff94-401d-86bf-05a747b12be1",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6484b0af-ca0e-4aa3-a87c-8bb1b24f5c01"
        },
        "item": {
          "id": "9a00ea41-6e40-4020-9ea8-302ba268cebf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1bebb455-60d5-4cc4-ac22-e2ab8c3290ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05f550e-fbf7-4654-978c-93fbfba52bdd",
        "cursor": {
          "ref": "d84ad218-1dd6-4ede-b177-a3a09666b79c",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8161abfd-6bf9-4408-9fd7-ad1aca63e150"
        },
        "item": {
          "id": "d05f550e-fbf7-4654-978c-93fbfba52bdd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "30405684-9e45-407b-bc71-40ad74e4a891",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 587,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff33aa07-73e5-4a8f-8c0a-d1cdd6bdbd7f",
        "cursor": {
          "ref": "b6adf1ba-0111-4327-8d22-111de48d1c3e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5c37f17d-5215-4377-9af8-7ed7f60ded13"
        },
        "item": {
          "id": "ff33aa07-73e5-4a8f-8c0a-d1cdd6bdbd7f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d3678b37-0ec3-409c-be29-d8164c213bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9eec6f-39f3-4652-964c-a211c23f77c7",
        "cursor": {
          "ref": "3f416ef7-cdef-406c-803a-5a7803adc203",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c5da8cb3-3cc4-4593-a478-088ed4bfb2e3"
        },
        "item": {
          "id": "ce9eec6f-39f3-4652-964c-a211c23f77c7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a5ca4210-e8ca-4c25-8b83-9fca2cf5609a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3268aa-e3d5-4e5f-ba69-ac85db1384c0",
        "cursor": {
          "ref": "d7d6c607-22c5-4e0e-85ac-c271857ca0cb",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ff65468d-0f1a-40a6-8742-3ff3ef0e6e3f"
        },
        "item": {
          "id": "8e3268aa-e3d5-4e5f-ba69-ac85db1384c0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "aef68fb8-cb14-46d4-96d3-5c7506f4aac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4943d39b-8909-4513-b448-c70deb36594e",
        "cursor": {
          "ref": "9aec23a6-e142-4897-8402-a8fe9765684b",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4f7f2cc4-b103-4042-b163-040d44dffcb2"
        },
        "item": {
          "id": "4943d39b-8909-4513-b448-c70deb36594e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "12c722de-24b9-47f5-bc32-e4880bd7daf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb534cb5-fe6a-40e8-b461-f0609207ecea",
        "cursor": {
          "ref": "19493f4e-5aa4-4105-ba01-9c2844b6acc5",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fdcd3e38-9d24-4a20-9f18-55a4ffa6915b"
        },
        "item": {
          "id": "bb534cb5-fe6a-40e8-b461-f0609207ecea",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3879b09b-74de-439e-8204-9bf85c50597f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491babc5-68d7-4174-b007-7a65199396fe",
        "cursor": {
          "ref": "ae27276d-b725-4619-9305-39e8900c4f5a",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "295ea9c7-23bd-4d87-a2ef-b23936794b8b"
        },
        "item": {
          "id": "491babc5-68d7-4174-b007-7a65199396fe",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "de7c1aa9-03c5-4991-b196-9546049fb37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaeec12-e9bb-47bc-b1b4-22dcc090c9e0",
        "cursor": {
          "ref": "89cddf69-06e4-49cc-8cca-64ee1d643ce4",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "690ba556-69ee-424d-a2ef-e50397e2617b"
        },
        "item": {
          "id": "efaeec12-e9bb-47bc-b1b4-22dcc090c9e0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1c68ffc4-18cc-462b-a743-dcad74882c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d543e00-b67a-47d5-85f4-aec5e15b446f",
        "cursor": {
          "ref": "2c48b9e8-48b7-416f-b2ef-308a11440a27",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0c926fd3-aca3-4a09-b1a0-8651565810fd"
        },
        "item": {
          "id": "3d543e00-b67a-47d5-85f4-aec5e15b446f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e46e708b-efe5-49de-a74a-de136b96eb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf19d79-dcae-4dfd-8205-cbe6a25a8862",
        "cursor": {
          "ref": "f799e2c5-3845-49e9-9149-4e0ecb84722c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "76f7bd5e-254f-4789-97b3-afbdf83732dd"
        },
        "item": {
          "id": "1cf19d79-dcae-4dfd-8205-cbe6a25a8862",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "189ab5ec-b538-40bc-80c5-6a179bdc50cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdf5f87-c751-4134-9356-515f4a0b070d",
        "cursor": {
          "ref": "073e12d0-18b8-4900-a880-858fcfe8f0b6",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "10a4e04a-205f-425b-a80d-4d0e493cf67b"
        },
        "item": {
          "id": "efdf5f87-c751-4134-9356-515f4a0b070d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4fa99abb-1233-4d1e-a257-d3ee3e414e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70924d8-2ec3-44f5-a68d-40fe24570fa7",
        "cursor": {
          "ref": "54c3a693-33ea-4967-95ce-c968bd92f211",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "22634377-6dea-41b2-b8e4-60fa4ad59d02"
        },
        "item": {
          "id": "b70924d8-2ec3-44f5-a68d-40fe24570fa7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "eb088b83-2446-4d52-8a92-c7c02b92d16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d93aca-fac6-4063-9793-57d713d9e30b",
        "cursor": {
          "ref": "56b77e6f-f459-4626-8685-3b8c40a30952",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4789d4df-42b9-460a-b876-86dbcb2f68db"
        },
        "item": {
          "id": "98d93aca-fac6-4063-9793-57d713d9e30b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "673cbc13-dac3-4223-aa8a-b09c7bb7b53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21900d33-4ad2-445e-a54d-39b341353ea2",
        "cursor": {
          "ref": "ca0a85b9-54d0-4eb7-9d07-eaafd500623d",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bae3fffc-c9ca-4220-8ada-f53503436294"
        },
        "item": {
          "id": "21900d33-4ad2-445e-a54d-39b341353ea2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4de93686-29e9-4a7c-8447-3d251f3d6c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7f7903-56f0-4acf-a1af-90d57f52d148",
        "cursor": {
          "ref": "ccb83a5c-7062-47e1-8ae5-699c6719cc69",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d604bca0-1f42-4952-8530-fab5db0ffc78"
        },
        "item": {
          "id": "3d7f7903-56f0-4acf-a1af-90d57f52d148",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3c3b48f5-68e4-4497-afb7-83a1f3bdc75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ab20f1-7bef-48c2-a8e8-7da07d0dead2",
        "cursor": {
          "ref": "c465b785-6a04-471a-b7cf-dbdea8ba881b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6fa9a217-71d9-439d-976a-8963d4e63e02"
        },
        "item": {
          "id": "54ab20f1-7bef-48c2-a8e8-7da07d0dead2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f3299d20-2127-4a71-b7c5-1b0abfe5b706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76afff39-a2a4-4963-a622-ad80da5c186f",
        "cursor": {
          "ref": "3fcc00f7-4c68-46f1-8826-40caf80a5314",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "228d017c-8ac8-4e9b-b354-91731a02189c"
        },
        "item": {
          "id": "76afff39-a2a4-4963-a622-ad80da5c186f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "00348208-0d10-4cc7-af85-1cd67c64889c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c43957-1db0-4921-abfa-029bf684f662",
        "cursor": {
          "ref": "75e8cede-c9d3-48c4-b429-88bbf18fd7a8",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cf2424be-f5eb-4feb-bbf6-221826eac63d"
        },
        "item": {
          "id": "f1c43957-1db0-4921-abfa-029bf684f662",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4d85cbdb-d4fe-4fe8-b3c7-69b7eeecd02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca94678c-6b14-419e-abab-252791fa04fb",
        "cursor": {
          "ref": "91854349-283a-41d3-b100-4ff8a3c771b0",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a3828433-6a80-4c63-ad9f-5e81e355c0b7"
        },
        "item": {
          "id": "ca94678c-6b14-419e-abab-252791fa04fb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "48f5d18f-b528-48dd-ac6a-48b430d166a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bb96ef-a5d7-4c13-a3bd-d3ed28bed364",
        "cursor": {
          "ref": "c398530f-861a-4ef2-b580-5c3eaca2446c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "baca5cfa-1047-4675-8819-0775cbff5859"
        },
        "item": {
          "id": "e2bb96ef-a5d7-4c13-a3bd-d3ed28bed364",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "83267344-514e-47ef-b839-bd85d60ae934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b12971-e799-4dcb-9d2f-6d1de1d010d2",
        "cursor": {
          "ref": "10989e52-0662-4cfd-b524-6f14a4b51a62",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "52a4fe1a-3c85-4a03-ac0b-06d8cf0f82c2"
        },
        "item": {
          "id": "05b12971-e799-4dcb-9d2f-6d1de1d010d2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "33865e80-1bb5-4691-aa82-88e2fc81164f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69b4da2-9393-4045-a8b8-2afec3034715",
        "cursor": {
          "ref": "cfc42687-a466-4c77-ae04-df0abbe57d77",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6309b5b3-1b72-4bb5-9a38-fd567c414c63"
        },
        "item": {
          "id": "b69b4da2-9393-4045-a8b8-2afec3034715",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cd0fed26-bc6b-4b43-9498-463654b1764e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e96aaa-a875-4fa3-9c4c-48b63b254e1b",
        "cursor": {
          "ref": "5760d5a2-b61d-4e07-8179-3e21199037ba",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "14524960-caf1-445e-a299-6b6859619288"
        },
        "item": {
          "id": "e8e96aaa-a875-4fa3-9c4c-48b63b254e1b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ed9c88ee-344d-464e-9c87-37fa3d9f8893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067e102f-1c67-44d9-8fed-8ac88838caf6",
        "cursor": {
          "ref": "73981762-7af3-4b11-9b0a-0e9d0a5ea800",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3dee57dc-548f-479d-9ba9-4d25640e0117"
        },
        "item": {
          "id": "067e102f-1c67-44d9-8fed-8ac88838caf6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "eb9baffb-ef49-4fa6-aa1c-92464f005018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f692e59a-4a9c-4358-bd83-a11a5ca4ccf8",
        "cursor": {
          "ref": "5f446fd7-7666-4b77-a49a-463ee658b404",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8b0ca4e7-6a67-42b8-a033-5014fc38f960"
        },
        "item": {
          "id": "f692e59a-4a9c-4358-bd83-a11a5ca4ccf8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "eee5c0bf-f121-4b82-874c-d55e456e970c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af2e8a2-b01c-4d0d-badc-c8d1377ea44e",
        "cursor": {
          "ref": "8dd6ce30-b24b-4786-a460-a5618344857b",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "81d3f995-a156-40fb-8d76-7e0fec642ba8"
        },
        "item": {
          "id": "2af2e8a2-b01c-4d0d-badc-c8d1377ea44e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5926b0ca-29b6-494b-ae38-a54fd5b15b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cc0b48-51f8-4102-a35c-559fba048d1e",
        "cursor": {
          "ref": "b3f5d09c-658c-4f96-afa5-6d1cd0fc53bf",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a7e735f8-cd97-41de-bf22-30c58a3ab5d9"
        },
        "item": {
          "id": "a1cc0b48-51f8-4102-a35c-559fba048d1e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "12f51dc8-0265-404c-923c-34deffa59bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd39999-abce-4f52-986a-31021d21d027",
        "cursor": {
          "ref": "0032cb2c-68a8-487b-9d7d-8c4a035c6057",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1e77a776-bc1e-4eec-a6df-06f176e36f3d"
        },
        "item": {
          "id": "6cd39999-abce-4f52-986a-31021d21d027",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f9cb37fe-9614-42aa-b241-23e54729a4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51417aee-b950-437c-8c13-b06025d1bf3f",
        "cursor": {
          "ref": "800f6ba1-1768-495f-a1b2-881a7bee35dd",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4182d14c-f501-4d13-93af-62f697abb6f5"
        },
        "item": {
          "id": "51417aee-b950-437c-8c13-b06025d1bf3f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dc2c5cc6-1b60-4071-a643-be2a209bc1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff4cd74-0418-49b6-b71a-7f7389411d6d",
        "cursor": {
          "ref": "7352f8b7-6f14-4188-a39b-cb456e2fc9b5",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "416931cf-82e1-4304-aee5-eb5b4a44d5a3"
        },
        "item": {
          "id": "dff4cd74-0418-49b6-b71a-7f7389411d6d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1a34d2d2-90ad-4024-812d-fafc818a4a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011c7135-14fb-4cd4-9cff-5d0c1c3a52c2",
        "cursor": {
          "ref": "c7ef5b57-3594-4d37-8ea8-5aacdf55f466",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "75757e3c-95b4-4a22-80cb-9c111ab01ba3"
        },
        "item": {
          "id": "011c7135-14fb-4cd4-9cff-5d0c1c3a52c2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d0ea048c-8124-498c-b546-e4169db6c31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6052a5e2-42c9-4eb6-84a5-89d4e40c6096",
        "cursor": {
          "ref": "614ce4f1-4a58-4025-b7da-f2f52ce1c101",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "46a74217-bdd7-49e9-a9a7-8035c4331c21"
        },
        "item": {
          "id": "6052a5e2-42c9-4eb6-84a5-89d4e40c6096",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5b6a8169-43c8-4d29-93f2-fed89bd20212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664326b8-d779-4a34-b50a-6da88af7af60",
        "cursor": {
          "ref": "bf5b0465-b1b2-499b-96b4-a2c5e70ce88c",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d7bd7e44-9fed-4605-b87b-0212a9e40e98"
        },
        "item": {
          "id": "664326b8-d779-4a34-b50a-6da88af7af60",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2f2a496e-54fb-4bd8-ad1d-43e6cddde26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31a4d9a-bf38-447a-aaf9-5b9bfa5cd640",
        "cursor": {
          "ref": "67dbcbf6-4b11-4a00-b458-98bfaf6c5ba4",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d3ab3ea7-db77-4a52-a4b2-928f5be1cfdd"
        },
        "item": {
          "id": "e31a4d9a-bf38-447a-aaf9-5b9bfa5cd640",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ac595642-85fb-4909-be6f-cf0f3b1f4a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07d0e56-e1e3-4504-9519-f602f9b72210",
        "cursor": {
          "ref": "739a41d3-918e-4c73-bfec-7af728964478",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "711aa675-249c-4568-b4c3-3e82e9cb7bc5"
        },
        "item": {
          "id": "e07d0e56-e1e3-4504-9519-f602f9b72210",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fa68a136-5cb6-472a-9478-92e2bb0cbe70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc888659-f646-49bb-afe7-de48d1280040",
        "cursor": {
          "ref": "3a5e7714-9796-4558-a001-afc623ec55d0",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6bba7c32-97f9-47d6-9248-cc1ac9fbbd74"
        },
        "item": {
          "id": "cc888659-f646-49bb-afe7-de48d1280040",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b51cc2aa-d29b-43d4-8424-a2e9b00bb0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1182,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5ab4e6-0d71-417e-b646-4387007b8b27",
        "cursor": {
          "ref": "67827753-c70c-43b9-820c-1268ccc6d466",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "af536341-fdfd-4ce9-87cd-869d6f7fb16c"
        },
        "item": {
          "id": "3b5ab4e6-0d71-417e-b646-4387007b8b27",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9032bac7-9035-4925-9872-a7bf631792af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c9c086-a2f6-41c0-9235-ddf719c9c3e6",
        "cursor": {
          "ref": "2dbc2be5-64f0-453e-b736-aa43a27f1b6b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "949bdff3-b21c-4f2e-b422-e557c589fb6d"
        },
        "item": {
          "id": "b7c9c086-a2f6-41c0-9235-ddf719c9c3e6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9925c5da-bd4c-4a73-b524-72638b2fa4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e558bb-9ef8-4866-95c0-df44388022d2",
        "cursor": {
          "ref": "b1fad9a2-9883-46b1-9312-8b09a56c5095",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "50e2a762-f0b1-40d1-9342-09840ae59aa0"
        },
        "item": {
          "id": "54e558bb-9ef8-4866-95c0-df44388022d2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "51426c72-55b4-41d8-b8e4-b87e79798fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2cdb8c-0f01-479e-ab72-f41a1409aded",
        "cursor": {
          "ref": "9953216d-7d7c-46cc-bf44-ee2a961ddf94",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8b231efc-117c-46ee-8e2f-6b9198441b16"
        },
        "item": {
          "id": "1a2cdb8c-0f01-479e-ab72-f41a1409aded",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f8a15cff-0c37-4a6d-8390-d51d3d6730f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd017ded-cc37-4255-9a1a-29c906995d73",
        "cursor": {
          "ref": "eb800ec5-346d-4d0a-8c6b-065d6296f589",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "764f8b9e-0d99-4f7b-b223-f0cdc3b95b6c"
        },
        "item": {
          "id": "fd017ded-cc37-4255-9a1a-29c906995d73",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7b022f04-981a-46bb-a124-179c170a0657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6c253e-2659-4e83-82f0-79179b64555e",
        "cursor": {
          "ref": "c2a42c6e-803b-437b-ad04-9e55e7cdc6f4",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6f55e41b-a56f-44fb-9c0d-7e9299922d1d"
        },
        "item": {
          "id": "bb6c253e-2659-4e83-82f0-79179b64555e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "65398dde-20fe-4c98-aea1-6355b4efb0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8ef470-7aeb-43da-9617-52fea7a56d52",
        "cursor": {
          "ref": "83ccf7f7-f612-4f92-9683-cd228c83a064",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1dc32e96-9142-4449-a6b9-4d6430ff41b1"
        },
        "item": {
          "id": "ce8ef470-7aeb-43da-9617-52fea7a56d52",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f93b6e0f-f998-48f8-9fa9-deae9d8fd173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf373b4-1e81-4775-95c9-755f145280ae",
        "cursor": {
          "ref": "77be5249-24a0-4e73-81a6-d7fcdbada176",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "93b657e6-f905-42d6-a5e6-3561b4ca594c"
        },
        "item": {
          "id": "7bf373b4-1e81-4775-95c9-755f145280ae",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "687f64f2-0c39-4653-8da3-e8b18980dc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d1bca0-8ebb-4912-9535-14ab293b3e55",
        "cursor": {
          "ref": "648fd63d-7989-42d8-bc43-ba052b8c6680",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bc676f89-e3c9-41ce-a300-936bbb93caa9"
        },
        "item": {
          "id": "06d1bca0-8ebb-4912-9535-14ab293b3e55",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b80e23e1-a96b-4a70-bb08-bbb23e09424e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e533bb79-4c0d-4082-b851-aede61e8fc2f",
        "cursor": {
          "ref": "7e23d66a-168a-428f-9438-98ec779ebb03",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2b0cd795-e3f9-44f7-83e3-d880f661e99e"
        },
        "item": {
          "id": "e533bb79-4c0d-4082-b851-aede61e8fc2f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ace45c16-f04a-4ff4-ac5f-ca4a7196b2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6898ad74-bb1a-4c62-942d-6c6a8a97b618",
        "cursor": {
          "ref": "56098915-8e74-4bb1-a51b-a4496994bb0c",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ebe3e1ee-c553-4a34-b139-659f4333de0d"
        },
        "item": {
          "id": "6898ad74-bb1a-4c62-942d-6c6a8a97b618",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "177cdaa2-f535-4b53-9429-2b55f61f9aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb2c6fa-975b-4623-a5bd-3c44b9f9ec89",
        "cursor": {
          "ref": "28cb3b5e-6998-481a-a9b3-5ea219645591",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cd79b861-4a98-4df7-89f9-cec90c710862"
        },
        "item": {
          "id": "1eb2c6fa-975b-4623-a5bd-3c44b9f9ec89",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3045fbba-edc4-44a5-83f0-97bb3031f8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad45ddd-c882-4b7d-a97a-87b902f0f954",
        "cursor": {
          "ref": "77810fd2-01e4-4db8-8992-9fe89edd435d",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "26785acf-d122-4a4f-b091-ebf5bec6c69b"
        },
        "item": {
          "id": "aad45ddd-c882-4b7d-a97a-87b902f0f954",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5c2b3765-66a9-4369-9d87-9731c9a44499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144cb79c-ab0c-492d-a169-7e5287e3d09c",
        "cursor": {
          "ref": "da2091f6-d9b9-4e6e-add2-345fb97d96cc",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c16d304f-b7d8-4962-8cb5-2c7dcfc13f18"
        },
        "item": {
          "id": "144cb79c-ab0c-492d-a169-7e5287e3d09c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "56feea7b-a8d0-4381-b352-7ffd2f11984f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d2b0f9-a9b9-4721-9b59-804d9c7102bb",
        "cursor": {
          "ref": "431aa6d1-7ebb-4984-aebb-bdab3ba72d83",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0d17ca56-33f2-4d5c-80cf-a99a892f7686"
        },
        "item": {
          "id": "d9d2b0f9-a9b9-4721-9b59-804d9c7102bb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "12505f9c-8430-4c53-a39e-b8d6868718a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05c57a6-f9e5-495b-ad50-a36498a3558e",
        "cursor": {
          "ref": "75f85946-7cb1-4d9d-986c-4b76a1179579",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d7e7579d-21f9-4687-9846-05c39d887f2f"
        },
        "item": {
          "id": "f05c57a6-f9e5-495b-ad50-a36498a3558e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0f46f4f5-ccb5-46fd-bec6-ccea58adce1f",
          "status": "Created",
          "code": 201,
          "responseTime": 8168,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "046833e5-cd95-472a-b868-3d45aecdf214",
        "cursor": {
          "ref": "4aa38db8-fc05-4786-bbce-696027fdf15b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4320f370-afbf-49b4-bf1e-d2a14ca2ea99"
        },
        "item": {
          "id": "046833e5-cd95-472a-b868-3d45aecdf214",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9257e880-b7ad-4b14-bcdb-2c537c95062c",
          "status": "Created",
          "code": 201,
          "responseTime": 6369,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87dbe95-adbf-4e5f-a738-ffe403ce06a1",
        "cursor": {
          "ref": "583f99e3-0b58-47e1-8886-4efa315dda52",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "48e77fcc-49bb-4a51-9894-5a2f74261449"
        },
        "item": {
          "id": "d87dbe95-adbf-4e5f-a738-ffe403ce06a1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0173f851-0b77-46af-8bbb-8de99f5f1bf8",
          "status": "Created",
          "code": 201,
          "responseTime": 6731,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dcc8ef-6ce8-461b-991b-10fa8fdc453c",
        "cursor": {
          "ref": "64c661da-f2f7-4b6e-b1dd-72a2da657234",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fc4830e6-5485-4b0a-9c28-4b57520fbbfd"
        },
        "item": {
          "id": "a0dcc8ef-6ce8-461b-991b-10fa8fdc453c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b078fca7-9755-42c2-83f2-35605a59aefd",
          "status": "Created",
          "code": 201,
          "responseTime": 6882,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac811e4-2fb8-4d71-b240-9dc8423aa960",
        "cursor": {
          "ref": "ccd56723-9015-4f51-bc3b-f94792cb27d1",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ff9d24ee-9b10-4979-8c96-97f952e57e54"
        },
        "item": {
          "id": "4ac811e4-2fb8-4d71-b240-9dc8423aa960",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0b16e8e2-cb36-4f6f-aaca-69087ba5d843",
          "status": "Created",
          "code": 201,
          "responseTime": 7773,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2176091-4d2c-4c54-b6a1-c5078bf15c91",
        "cursor": {
          "ref": "a36ac854-aa30-4249-bb75-e026f66771e1",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4fe7b868-e28c-4092-bd9a-137a2360266e"
        },
        "item": {
          "id": "b2176091-4d2c-4c54-b6a1-c5078bf15c91",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7338dc77-ecc4-4232-a07e-e82f9a677750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "be53e74a-ff39-4285-b52d-f3c793a37faf",
        "cursor": {
          "ref": "9e47634e-18e3-4c0f-9bce-d4d73c11a6b6",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "65c4504a-bfde-482b-922a-60462fe4a43c"
        },
        "item": {
          "id": "be53e74a-ff39-4285-b52d-f3c793a37faf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "85b0946d-120e-4859-ac84-362e6b915483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f51af36-d807-4d33-8cca-038098bccd22",
        "cursor": {
          "ref": "fa491c51-69c7-4ef9-a309-e6b6b83ecb8d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7a89f48a-3f87-4e0f-b87c-d95d721811b1"
        },
        "item": {
          "id": "7f51af36-d807-4d33-8cca-038098bccd22",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "739a5373-3407-4999-8c77-642e1165c6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56825f39-6e29-47fe-8a37-3ce56e3337a1",
        "cursor": {
          "ref": "6bece6c3-fb38-4fcb-8ae5-bffca83d71e2",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "09a52cce-e9d2-44e8-9b64-fccd4baefd80"
        },
        "item": {
          "id": "56825f39-6e29-47fe-8a37-3ce56e3337a1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "18185dff-b1f3-4e4c-8609-e685cbacd552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07965f7a-4edc-4ba5-90d9-4d8899e4c732",
        "cursor": {
          "ref": "f52ec7fe-1a0a-4240-9f00-8c40d9d0ac16",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "075bcb13-62b6-48f4-a29b-d0767fba5e6b"
        },
        "item": {
          "id": "07965f7a-4edc-4ba5-90d9-4d8899e4c732",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4be6607c-e736-412e-823e-ba9d00ca0203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e47893c-77b1-4d52-b3c7-5b0d91ec22d0",
        "cursor": {
          "ref": "de6763ff-1186-4786-89cb-284643211470",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5839b234-5fc9-4cac-9183-44ea0b0b1a58"
        },
        "item": {
          "id": "6e47893c-77b1-4d52-b3c7-5b0d91ec22d0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f77ba83c-29bb-4d75-978b-ab41a3341948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8e8a37-7142-480a-ab9c-694f41d1d91e",
        "cursor": {
          "ref": "fb5123a5-d0c7-4134-85e7-0a5e7bd73ce4",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "95b9619e-9b6b-46eb-8bce-14490f329b0e"
        },
        "item": {
          "id": "1f8e8a37-7142-480a-ab9c-694f41d1d91e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "34199e8f-3bf9-4c05-9bde-d977a8d1ce28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d1565c-f722-4d2e-9e87-dc5876680ddb",
        "cursor": {
          "ref": "bad2a9c0-0d25-4e4c-b248-166195426ad1",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f23cb912-ee29-40c9-9afe-5aad26197852"
        },
        "item": {
          "id": "28d1565c-f722-4d2e-9e87-dc5876680ddb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e69ce5cd-e739-4fca-8bf2-b8238c88649c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f9c7a7-4db8-47b0-8a96-a13bb7b1b906",
        "cursor": {
          "ref": "54ff4936-9951-41d7-b1bb-ca52edf49a51",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c14f12de-843e-44a6-949d-3169f560c253"
        },
        "item": {
          "id": "d4f9c7a7-4db8-47b0-8a96-a13bb7b1b906",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "56d0e6e0-5759-4946-a79b-f4dc06546e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a6e4ce-76d5-49bf-ba81-39e4bc1d861a",
        "cursor": {
          "ref": "d40573f6-c421-40cd-a753-c62858e02ec2",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "62abbce7-0d66-4531-88c4-268cd020f7aa"
        },
        "item": {
          "id": "d1a6e4ce-76d5-49bf-ba81-39e4bc1d861a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6701eda8-d872-452f-9855-7f50904eb3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f870106b-1ab8-4f4b-b71e-61c9c17b6449",
        "cursor": {
          "ref": "81758089-2b8b-45d7-b384-e7fd97b2d3b4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2ea9f861-b32e-4572-81b3-6d3c99bdac3d"
        },
        "item": {
          "id": "f870106b-1ab8-4f4b-b71e-61c9c17b6449",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7e780174-e661-46ae-a9b9-612a6522e347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab44910-774c-4af3-8633-f1516ac6b875",
        "cursor": {
          "ref": "4bb53b87-58ca-4f50-aea2-eb06a71a7bf0",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "44e31ad8-e7c8-4c62-a050-6bc9b74e108d"
        },
        "item": {
          "id": "2ab44910-774c-4af3-8633-f1516ac6b875",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "19ff3384-5c6b-4c0b-81ce-15ff293c7d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fb26ce-f94a-44e9-82d6-15591d4c98b4",
        "cursor": {
          "ref": "25417b7e-5969-4fca-a8f5-f195daae79f8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e8fef75e-d1b7-4c2a-ad92-018a7ca0d64a"
        },
        "item": {
          "id": "16fb26ce-f94a-44e9-82d6-15591d4c98b4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "86184c3b-8374-40f6-994e-f7870bc08a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44891787-ea84-43d2-8866-439665ee04ed",
        "cursor": {
          "ref": "b86eafff-4cb0-4c44-bf77-a86d09158667",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "55f2b406-d6d2-4afd-903f-fa30d42db7ac"
        },
        "item": {
          "id": "44891787-ea84-43d2-8866-439665ee04ed",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "323a2bba-028e-4573-91be-116c26806178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c07700-ad02-4444-ac07-13ab87f969a8",
        "cursor": {
          "ref": "42852402-6686-458c-826d-e134be3fe618",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3b7ab04b-0613-494d-98f5-0ce4b26bb2bc"
        },
        "item": {
          "id": "a0c07700-ad02-4444-ac07-13ab87f969a8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3412fc7b-a1c3-4298-a61c-dd3709cb4b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254bf72e-26cb-4d2b-80f0-def309ca2e61",
        "cursor": {
          "ref": "6251d5f2-de07-4f68-970a-f05788beff2a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "934b6827-ca47-41ce-86c6-47681d041326"
        },
        "item": {
          "id": "254bf72e-26cb-4d2b-80f0-def309ca2e61",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8a23d84e-93ec-4159-b222-d0b207c0b634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3f70d3-9443-4508-8ccf-4db0e5d5bde7",
        "cursor": {
          "ref": "12bea008-11e8-4b80-9712-3386c0ae85c6",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "37cddf51-d43a-4efd-a7ea-47b3fd117b53"
        },
        "item": {
          "id": "af3f70d3-9443-4508-8ccf-4db0e5d5bde7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "eaf52780-9ea8-49b4-9c43-a1531e7d547a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351e5935-a457-4da4-8c6e-204ee07de4bd",
        "cursor": {
          "ref": "daedf8ad-7ca7-48d3-939a-4d8bb1603f74",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "79d63627-643d-4e85-b3ca-aff1b013af47"
        },
        "item": {
          "id": "351e5935-a457-4da4-8c6e-204ee07de4bd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "81a3bf14-0fc2-444d-9a53-4d65c0e8a3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351dd54d-e591-4fda-8089-6f3c577b1840",
        "cursor": {
          "ref": "316dda94-8196-428f-940c-30cfc772df21",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e9ffff1c-28a0-4bf4-bd37-367c0ee1475a"
        },
        "item": {
          "id": "351dd54d-e591-4fda-8089-6f3c577b1840",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "114dc212-2158-4e4c-87c0-2abbad9c91f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d400df14-41cf-4b09-8b57-1f1dfcbb7b62",
        "cursor": {
          "ref": "8b933dea-5cdf-41f9-97c6-29d283b58f32",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9eb670be-f7d7-46ff-bc7f-6afc0734719f"
        },
        "item": {
          "id": "d400df14-41cf-4b09-8b57-1f1dfcbb7b62",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "04cd36cf-592b-44d1-9fdf-09e2902fd451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efcf4d2-5fcc-434c-a8bd-e6ec6d36bead",
        "cursor": {
          "ref": "ce97d0cd-e88f-4077-b9b1-93427e0882d2",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "636797fa-8cdd-4fb8-951e-fcfa00127d89"
        },
        "item": {
          "id": "0efcf4d2-5fcc-434c-a8bd-e6ec6d36bead",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "335a61c1-ff5d-4e82-bc27-4baf698a15f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b0c4ef-26e8-496d-a361-ed5798595969",
        "cursor": {
          "ref": "f8ec8f25-5485-4e55-bda5-86373ca523c3",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0f0c4e3a-2fde-4aaf-80a5-994611c5cfcc"
        },
        "item": {
          "id": "69b0c4ef-26e8-496d-a361-ed5798595969",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2e3d6e71-fe32-44ed-beca-5d9a4e38f910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e30d4b1-dc5f-4725-a74c-754b2fb65a73",
        "cursor": {
          "ref": "b938e963-0150-4bd5-bc33-75342c8b3333",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e26e4741-46c0-43b6-aac4-a322166b02e3"
        },
        "item": {
          "id": "4e30d4b1-dc5f-4725-a74c-754b2fb65a73",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "11c1107d-89d5-4371-9439-e2a208910310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba7860f-8a55-4280-803d-d6a662c41788",
        "cursor": {
          "ref": "ef9c7171-fff2-4352-8aea-f37ea8c769fd",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3c33a778-80b2-43b0-8be3-e4116d243913"
        },
        "item": {
          "id": "0ba7860f-8a55-4280-803d-d6a662c41788",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4e8e7282-75b8-4389-bb68-9e88a3b85b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ca222c-d401-4809-89f1-f1278165038c",
        "cursor": {
          "ref": "bd888ed9-da0e-4831-9ca5-c512164af8a5",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fd00d179-ebb9-4513-bd69-dddb7812abe3"
        },
        "item": {
          "id": "a0ca222c-d401-4809-89f1-f1278165038c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "66bb30a0-85c2-4c0f-8c7f-949915803bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370ff8e2-40d4-4824-9d4c-f1ffbd02ae0b",
        "cursor": {
          "ref": "3c80b593-3144-46d0-8f56-c8681f85cb4a",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "72ff0836-c08d-4ea8-925d-38ba6259bf23"
        },
        "item": {
          "id": "370ff8e2-40d4-4824-9d4c-f1ffbd02ae0b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7b7a5395-797f-4067-bb58-85246b380f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521e651d-d82d-4791-afb2-b53d9347bdc5",
        "cursor": {
          "ref": "8940b72d-4b15-4c2b-86f4-a46b3dd4c43d",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "064ecbac-fcf7-4321-a5f9-c0e81a3577f3"
        },
        "item": {
          "id": "521e651d-d82d-4791-afb2-b53d9347bdc5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c3647d5a-c762-438d-84d1-14e41d1fb6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d9498d-f24e-41a1-a3de-ef39be95e4ca",
        "cursor": {
          "ref": "cbf445ad-4e9c-4b2c-bb9b-0919fead4767",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b428ff94-d309-47ea-ad0f-1c935d6a4ccf"
        },
        "item": {
          "id": "d8d9498d-f24e-41a1-a3de-ef39be95e4ca",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4301d3b0-7deb-4ddc-b2ca-f0ae72677b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a43e4f0-47bd-4fff-9e59-3b734d856634",
        "cursor": {
          "ref": "dca470cc-774c-4fb9-8765-a63b17c880dd",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fce93c85-a7b1-46c8-bc1d-00da23574e51"
        },
        "item": {
          "id": "9a43e4f0-47bd-4fff-9e59-3b734d856634",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "279b6cd7-5ef8-4923-80a8-0ddb6a7fb144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd22056-7295-4dda-941a-21443ea7fe74",
        "cursor": {
          "ref": "5d5b843e-71a3-4229-b0fe-9058261af298",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0431e729-dd34-41b0-8c46-047675e48941"
        },
        "item": {
          "id": "2dd22056-7295-4dda-941a-21443ea7fe74",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6826f3ad-9082-4df0-a590-58af6884fd5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fc62fc-d9fe-4dcf-b67f-0063dfe5f8f5",
        "cursor": {
          "ref": "a7981c8a-763a-4d31-8206-445e2ada03a1",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8545d961-2831-448a-ac9d-c15c06d3cbc7"
        },
        "item": {
          "id": "b1fc62fc-d9fe-4dcf-b67f-0063dfe5f8f5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5367c941-6dfb-4114-aad1-533b3aabcf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4515fe6-cc7c-41f3-9456-48d67dd4300a",
        "cursor": {
          "ref": "6ab74679-c827-4c12-bb82-94ef592eebf1",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9303d700-c4db-4424-9cfb-40b45919dffb"
        },
        "item": {
          "id": "e4515fe6-cc7c-41f3-9456-48d67dd4300a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0cafee95-2f00-4cfe-a337-159e1d763d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9dd4bf-698f-4c6f-8a2e-5b7f1e4ef608",
        "cursor": {
          "ref": "16f7b014-d343-4319-a0f1-624f6c17b45d",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "be80998a-54eb-414c-b399-c07bd5f8a3b6"
        },
        "item": {
          "id": "ce9dd4bf-698f-4c6f-8a2e-5b7f1e4ef608",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "eefc7a87-074c-4a50-a1ef-68a7d73e2ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc26731-e930-4fdb-a24d-71fdd6501490",
        "cursor": {
          "ref": "9c1de15e-4f3b-4459-bccb-13338e1b5ec3",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f495871c-1f34-4acc-ac72-c36eca34ef27"
        },
        "item": {
          "id": "3bc26731-e930-4fdb-a24d-71fdd6501490",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "af7ce290-e13d-45cf-919d-3c78a8d0268b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 197,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c70b8d-705d-4562-97b9-b756e7b3fb13",
        "cursor": {
          "ref": "75dfc5e2-ff5f-46e7-94ac-d890fa931a8f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "aa50f135-d66f-48ca-83d8-8ca21acc2021"
        },
        "item": {
          "id": "32c70b8d-705d-4562-97b9-b756e7b3fb13",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e44940b5-a211-4feb-9b4b-cda2c8562a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e24b7c8-9ff1-4aa1-8e50-f4e83a3f20e6",
        "cursor": {
          "ref": "19c3b64b-47c1-4032-954f-652495569487",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7bb348fe-a697-4de6-973a-d9ca51f175f6"
        },
        "item": {
          "id": "0e24b7c8-9ff1-4aa1-8e50-f4e83a3f20e6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "adf3bedc-74e0-4b3f-98b9-88eec61b3f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a8f6bb-9c21-493a-8320-017c12ead57d",
        "cursor": {
          "ref": "94e6eb60-d9dc-4705-9ef5-5c2e03d2f3f6",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "03c0491d-fda9-4efa-a9da-570200f30fa3"
        },
        "item": {
          "id": "99a8f6bb-9c21-493a-8320-017c12ead57d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0838a6b9-6b47-4bfc-8914-a992dd05ab8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cffa0a-2865-481e-89e6-4121ec244a5c",
        "cursor": {
          "ref": "80db9af3-8e7c-42c6-a3af-afd4bfe1beb8",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fe802844-7599-4de4-9ec6-701a0be8fb02"
        },
        "item": {
          "id": "95cffa0a-2865-481e-89e6-4121ec244a5c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d6a940d9-1e61-44e4-9bf2-1fa760406098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea3932d-5585-4d71-8beb-0bfec94fa686",
        "cursor": {
          "ref": "ea6bf05e-f412-414f-badc-d731b97f5740",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4ecad11a-db92-4a33-bfeb-ce4e82d38eb5"
        },
        "item": {
          "id": "8ea3932d-5585-4d71-8beb-0bfec94fa686",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "90f75208-bc43-4043-897f-f878f6aaa15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f45e3f1-7c3d-40f0-8c74-3c85a0c8a177",
        "cursor": {
          "ref": "087263dd-976a-40b0-a905-0e1f0e0a82b1",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a3240f81-53c5-44d4-a4ce-8dd8a2984049"
        },
        "item": {
          "id": "6f45e3f1-7c3d-40f0-8c74-3c85a0c8a177",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5b915ae0-21c4-4178-8494-b3e40be6b4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728bf919-5c8d-4835-8706-fdd4f7fc4095",
        "cursor": {
          "ref": "b21f644f-0b64-4665-b876-cf1f4528eb3a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4a0445ed-9ff6-41c6-8da1-ef0b68f1daf3"
        },
        "item": {
          "id": "728bf919-5c8d-4835-8706-fdd4f7fc4095",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "96c1739f-438a-4fcc-b7ab-a4590bba53ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9e9f18-694f-432a-b83c-e0b567ad7846",
        "cursor": {
          "ref": "64695640-b9fb-4098-8387-33dfbb3ea3c4",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d98e295b-ff8e-4b7b-855b-00f8bc500120"
        },
        "item": {
          "id": "7d9e9f18-694f-432a-b83c-e0b567ad7846",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "75221ec5-e18e-42ff-b741-370b1a43c968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ba5f81-3692-4155-b43a-1c61b7239951",
        "cursor": {
          "ref": "f1dce428-cee5-4fa7-a6fc-2a25ecf80571",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "55fc2cd2-8d22-4337-8576-73c4fd8ff2ca"
        },
        "item": {
          "id": "44ba5f81-3692-4155-b43a-1c61b7239951",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d09e0129-d814-4f9a-85c2-d756531873dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cad2e1-a6ea-4e60-a0f9-22489ab80c46",
        "cursor": {
          "ref": "0a32ea95-1ad6-47da-aad6-4043bf1819f3",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6ec8d406-bbf6-4e40-8261-f0fe47230a6d"
        },
        "item": {
          "id": "a4cad2e1-a6ea-4e60-a0f9-22489ab80c46",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a393ae0c-eb2c-46b4-9b8a-0b0bc6c27e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1625eb6-cbbc-4ff7-87c2-736f9ea38ead",
        "cursor": {
          "ref": "158fde21-fd03-472b-96a2-d8324946da57",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c8fc4caa-9e40-4c13-9a05-074ab16f0484"
        },
        "item": {
          "id": "f1625eb6-cbbc-4ff7-87c2-736f9ea38ead",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d26dfe11-1e5c-4e3c-9e84-489eaffb6b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e378fe-a3ae-4c10-ac78-716dd0c90a3d",
        "cursor": {
          "ref": "921ec8f1-2685-45c9-b8e0-d0d7d8f32f37",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "24f51ec9-da7c-40b0-a1cb-0712f1d5f8d5"
        },
        "item": {
          "id": "93e378fe-a3ae-4c10-ac78-716dd0c90a3d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c2d4fea8-4c26-45a8-8f0d-4217b874e48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc8046e-5bc3-44fe-ac99-60083ca2b56a",
        "cursor": {
          "ref": "d8f50caf-b82d-499a-807a-87756f86b331",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d0bb59a1-42a9-41b9-845e-bffcc8eca411"
        },
        "item": {
          "id": "ffc8046e-5bc3-44fe-ac99-60083ca2b56a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a404f272-cf51-41fa-b950-e3de799d66ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfa1c9e-f05a-43e8-8945-3f1eef110c40",
        "cursor": {
          "ref": "c3b4b0c8-e8b7-40b2-88dd-a3a6f571d2ff",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8cd13afd-7c78-4abd-8b1a-eae3e9b60e2d"
        },
        "item": {
          "id": "bcfa1c9e-f05a-43e8-8945-3f1eef110c40",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "59a7de68-28a7-432b-b863-1bbbd8b766ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695d0af6-6c03-4fa8-a4ca-c2321586bc34",
        "cursor": {
          "ref": "980c36ae-455d-4c3f-97b4-23d786be0cfd",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d2341ae2-292a-45c9-a7da-be762d4aca15"
        },
        "item": {
          "id": "695d0af6-6c03-4fa8-a4ca-c2321586bc34",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ea92e72f-100e-483a-90c7-c39d5b4a37dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab3d9ad-9ac5-4236-a57c-b9d6e9deb7b1",
        "cursor": {
          "ref": "5b5ea086-c02e-406b-bd58-5c7a0c8f89f1",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b2e24370-29f5-4f03-8754-cbcf04678524"
        },
        "item": {
          "id": "3ab3d9ad-9ac5-4236-a57c-b9d6e9deb7b1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6aa2ca5a-7281-423d-a268-cfc040f72fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0cdfb7-4950-4349-ab87-3e6bf5194d28",
        "cursor": {
          "ref": "502e8eaf-76c4-486e-8b69-5b330e502957",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d89fb751-1f54-464e-8c82-453f5e343105"
        },
        "item": {
          "id": "0d0cdfb7-4950-4349-ab87-3e6bf5194d28",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2ea7c0ec-b0a7-476b-9403-77899816eb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae87064f-93d7-48d2-8482-909068c69cd1",
        "cursor": {
          "ref": "0cca2d96-05b0-4f0c-b533-d3de09f64425",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9fb3dad6-bd2f-46eb-8f3d-74e33f29e5dd"
        },
        "item": {
          "id": "ae87064f-93d7-48d2-8482-909068c69cd1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2d3436d0-2103-414e-bc3d-6e8fb4993bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed25f5df-3e11-4fbd-8524-0f3cef90ebae",
        "cursor": {
          "ref": "9b53c1d4-5676-4287-9289-5c21ed25ab0f",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f79497ac-7eaa-4eee-b5e2-a5e6d853077f"
        },
        "item": {
          "id": "ed25f5df-3e11-4fbd-8524-0f3cef90ebae",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7e80ba7d-48f7-4090-b60b-d60be0e0b795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce6cdc8-c845-4b6f-ab5a-c5e048680211",
        "cursor": {
          "ref": "2d20f22d-a40e-499f-8eca-8cfcc31777c5",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "42641f9b-1cb5-4dd3-863f-0ab4c78fecf8"
        },
        "item": {
          "id": "7ce6cdc8-c845-4b6f-ab5a-c5e048680211",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "76c55337-133a-4dd4-8ec0-c503cd6816c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e2bc6e-1ea2-41e4-b71b-f23173e37f4a",
        "cursor": {
          "ref": "21527612-483d-406d-bcd8-1add7ae89da0",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "57383ba9-cf94-4503-a280-a35655a83af5"
        },
        "item": {
          "id": "55e2bc6e-1ea2-41e4-b71b-f23173e37f4a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d7b557de-3d63-4b8b-a1cb-fac37cbdf862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319bac10-060a-4f08-b7d0-74696faaab40",
        "cursor": {
          "ref": "fbb543ff-b054-4162-be3b-a6cf8407c2da",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cb132321-c42a-4e50-9d66-cd42ef41ed07"
        },
        "item": {
          "id": "319bac10-060a-4f08-b7d0-74696faaab40",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e98d8d9a-c63b-4d3b-b1a6-449c42b081f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3dc9b5-7182-4893-9940-78e4919b14dd",
        "cursor": {
          "ref": "08e7abed-6edc-43d1-abc9-bb02f5b0981b",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5e8bfbf9-1a48-475f-b8f1-38ebe1870f45"
        },
        "item": {
          "id": "bb3dc9b5-7182-4893-9940-78e4919b14dd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bf495c5b-f9f4-4561-9ba0-177a84f6c30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f82fd4-0e3a-4993-81ac-f3177bc41004",
        "cursor": {
          "ref": "e7fabc4a-7349-407e-bc1a-456f77226819",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2b341fff-62d1-4b75-a167-43ab1a2d157d"
        },
        "item": {
          "id": "42f82fd4-0e3a-4993-81ac-f3177bc41004",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "85605799-a504-4c60-a7bf-140960c08901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c514d9a-a31b-49ee-a015-68c6cf63d544",
        "cursor": {
          "ref": "8552567c-6a04-4bca-8867-9d88c18a749f",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5cf2412f-1a5e-4649-9be0-ea6b2ca2d145"
        },
        "item": {
          "id": "4c514d9a-a31b-49ee-a015-68c6cf63d544",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5d831767-5a32-4c2a-ba9b-2b80bce34197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b009d5-3861-4d52-8819-8e3ba6f76c67",
        "cursor": {
          "ref": "10412bd3-f971-47eb-9201-175a8b146fde",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8d13a5f1-bbb9-4f21-ac2b-cd6ad6333bd8"
        },
        "item": {
          "id": "50b009d5-3861-4d52-8819-8e3ba6f76c67",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "53194667-1071-42cc-ae6b-63f7595220fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a068192-681e-4aec-9420-5c795c6c48f3",
        "cursor": {
          "ref": "9c7a469f-7fb4-45aa-bb3b-01b91dea2674",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d97e460d-58ab-4f42-aee8-634ba38f700d"
        },
        "item": {
          "id": "5a068192-681e-4aec-9420-5c795c6c48f3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e4752462-5516-4b30-8a03-378c89271c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d155b5bf-9f1e-4abb-abc2-324d196c811a",
        "cursor": {
          "ref": "4c0e3402-5623-4cc2-8402-eea321feb9e9",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4e0c71b0-2101-4ac8-822b-d992660a5ec0"
        },
        "item": {
          "id": "d155b5bf-9f1e-4abb-abc2-324d196c811a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cbdbd784-4753-4386-980d-a97c7512921a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ee35d9-2f80-4e45-8493-a45b7e27e1ad",
        "cursor": {
          "ref": "60a9ef49-2f5b-480e-a5eb-18978b6e5232",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2f01c868-1f04-4af0-8942-c04c410f69ea"
        },
        "item": {
          "id": "a6ee35d9-2f80-4e45-8493-a45b7e27e1ad",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6bd06a3b-6477-4561-9048-c3e85e6dd1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec0f374-2ef6-42b7-850c-52a17fecccce",
        "cursor": {
          "ref": "f415ddb1-5e8f-4f5c-a7db-5e35b3a0fe0f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ce7ceae0-d0a1-449b-8bfb-3d26df879863"
        },
        "item": {
          "id": "eec0f374-2ef6-42b7-850c-52a17fecccce",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2c158b86-9b8d-4966-8f0a-ee12ef197f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fe5c95-5a81-42ca-8039-4e2a011af85d",
        "cursor": {
          "ref": "9386dd3f-c5a4-4bbb-8d5b-e9d003ee2d83",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a68b6007-02a8-4457-b6ee-6ad970337840"
        },
        "item": {
          "id": "62fe5c95-5a81-42ca-8039-4e2a011af85d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c4090f9f-7d01-4317-aba8-3e0069fc9b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25537aef-fdbb-422b-9709-97b62d60ad5f",
        "cursor": {
          "ref": "598d523b-7dcf-47ff-8379-64d0e42c2b81",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7423ba78-badb-47a5-ad84-c19e93f5476b"
        },
        "item": {
          "id": "25537aef-fdbb-422b-9709-97b62d60ad5f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8c8f1af3-6447-4d2b-be79-498163177b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c622ab8f-38ec-4a9f-818f-9712daefb0ea",
        "cursor": {
          "ref": "b4603889-2b87-453c-ad63-ab145f3c5b25",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "43cb6959-5f6a-4725-ba28-9f674d4eafc1"
        },
        "item": {
          "id": "c622ab8f-38ec-4a9f-818f-9712daefb0ea",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e5a36f58-6e9c-4d60-9327-78be2c7a4212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adf191b-32c8-4f9e-9692-afa001a4876e",
        "cursor": {
          "ref": "71616f63-0be5-4661-8428-7577c3f038b6",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "508fbd82-b3ca-42dd-ae98-ef4fe631dfcc"
        },
        "item": {
          "id": "4adf191b-32c8-4f9e-9692-afa001a4876e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "215a68f5-b56a-41d4-b7eb-d0ef53d0a9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89be906b-767d-437b-915e-c6ba30661680",
        "cursor": {
          "ref": "c9256a2c-d7cb-4dce-8be3-d69c590a0893",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f4194f40-31bb-4d17-a720-bb9608518d82"
        },
        "item": {
          "id": "89be906b-767d-437b-915e-c6ba30661680",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1b24344d-069f-4268-81b2-3f3e9e9782f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228f4a78-d8af-4e88-8180-e4cc7f8a814f",
        "cursor": {
          "ref": "07bce0c5-abe5-48f8-9e2f-fb0f0403682d",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4ba88700-d236-4d96-9017-eb90d82d2c80"
        },
        "item": {
          "id": "228f4a78-d8af-4e88-8180-e4cc7f8a814f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "dc83a9b6-a110-4ded-a4bc-2fcaaade67ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a458075e-6a95-4830-84d2-16be0ca719d6",
        "cursor": {
          "ref": "2b7f5f8a-94cf-489f-904b-d91907bdad62",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ade59dc1-c18f-4e18-99b4-bf6d976ed220"
        },
        "item": {
          "id": "a458075e-6a95-4830-84d2-16be0ca719d6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "91bad050-b989-4fb4-baba-4c84b1db6d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9751f0-f737-4966-b99e-ba3f6f575260",
        "cursor": {
          "ref": "719d912f-18d3-4d80-9ec2-27bd64688e19",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d694bf85-32a7-4fa5-9ad7-d7b2265b8c59"
        },
        "item": {
          "id": "6f9751f0-f737-4966-b99e-ba3f6f575260",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f9dab140-9c2b-4ce6-8ca6-3bfbd69edf5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f457eee-230d-481e-9a64-30fff5c9428d",
        "cursor": {
          "ref": "a161ac34-f032-4369-a9e6-ed0a240b94d9",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b11a321c-75d7-4978-85d8-38554b3ab531"
        },
        "item": {
          "id": "3f457eee-230d-481e-9a64-30fff5c9428d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e86c97e1-f952-4319-b17b-85dab6eb4783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d25fb1-9def-4fb4-9065-2e879d846cc0",
        "cursor": {
          "ref": "4b6a854f-acae-439b-b7cb-5497623b680c",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d8f3503b-b31b-4402-9a88-a238117478a7"
        },
        "item": {
          "id": "b6d25fb1-9def-4fb4-9065-2e879d846cc0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1acc7adf-9149-45a1-af19-bcb2044477ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9659cc1-6bdd-4357-8178-787013a7d186",
        "cursor": {
          "ref": "cd146971-7f07-45ac-847b-238145473f40",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9f06779f-288c-4adf-b80e-848e137b710b"
        },
        "item": {
          "id": "e9659cc1-6bdd-4357-8178-787013a7d186",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0ff9dbb4-3490-4bf2-82b5-92fdc63d894e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d19296-25ea-4ff6-9b5f-6b8660e214d3",
        "cursor": {
          "ref": "5f77edab-ddf7-47d6-a677-0523145568da",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e8370053-3857-41c0-a59b-e34d0243710d"
        },
        "item": {
          "id": "05d19296-25ea-4ff6-9b5f-6b8660e214d3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d3f031c6-470f-4932-85a2-b82cb2707bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1f7673-a4e6-4f32-828c-3932d20c895c",
        "cursor": {
          "ref": "e04fcd8e-7537-4475-9c1d-8d3547b5fb83",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f1f1d1c9-0983-45f0-b957-49464bffd475"
        },
        "item": {
          "id": "cf1f7673-a4e6-4f32-828c-3932d20c895c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1c614f70-9b2f-469c-8c7c-2030bafd03f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237e7960-4374-4447-bed0-1a1a62440493",
        "cursor": {
          "ref": "773316ba-0ef2-4fa6-bc26-4a7ab8e87bee",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "18f82476-c972-49f6-a04f-7e5840392f72"
        },
        "item": {
          "id": "237e7960-4374-4447-bed0-1a1a62440493",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7c1d9f31-0836-40fc-9aa5-cfa6d1e21a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35da5b50-6517-46ef-8de4-c15233fa93b2",
        "cursor": {
          "ref": "4f442b9e-0053-4119-9933-8695caa79dbe",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "22b2d5dd-34ef-42d9-bf1b-6d4df4f8a40c"
        },
        "item": {
          "id": "35da5b50-6517-46ef-8de4-c15233fa93b2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d8ae73af-4e22-4058-800e-f1d1b420c641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbbc6b6-6cb1-4880-9f1e-6907a485fd93",
        "cursor": {
          "ref": "9f5017a1-44f4-4fd3-9a67-39c2c676000b",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "13fc7ac1-2643-457d-b8e5-56e58c107556"
        },
        "item": {
          "id": "afbbc6b6-6cb1-4880-9f1e-6907a485fd93",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e11b32ca-4bbb-48d3-b05f-3f2ae9867045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06b1ec1-e665-412e-8f1c-662f13240f74",
        "cursor": {
          "ref": "e36de04f-cf29-4366-b699-a0371177e90d",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0f6d8e49-fdb5-48d2-9ef6-5a22a6237fb6"
        },
        "item": {
          "id": "d06b1ec1-e665-412e-8f1c-662f13240f74",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1efc6636-6d15-4f42-87e4-d799ed352181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d3dd4d-09e9-43b3-8406-078fa8361653",
        "cursor": {
          "ref": "0b472ba1-5115-4e73-b67b-83b3081e974f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9e1ae109-4efb-4f03-9a09-766d0cdff5da"
        },
        "item": {
          "id": "f8d3dd4d-09e9-43b3-8406-078fa8361653",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7ee7f16b-7fce-40f7-8b46-2be7ce966be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0711673d-8469-40aa-b7ef-efc5f6b0d618",
        "cursor": {
          "ref": "ce33bb13-3ff3-46c6-9918-365dda4a00b1",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4e174630-5127-45d5-bf17-21c9997eba00"
        },
        "item": {
          "id": "0711673d-8469-40aa-b7ef-efc5f6b0d618",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "75de5835-c3f1-4e9e-b999-e6d2bb0eed05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abe6b25-855d-44c6-ad5d-f5dfcb55b417",
        "cursor": {
          "ref": "433e2f87-86d0-4f83-a852-60e28b420fbc",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "09561b39-f9ca-4718-88b0-2de339466c68"
        },
        "item": {
          "id": "5abe6b25-855d-44c6-ad5d-f5dfcb55b417",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "760ca883-db86-4837-88d1-84b2854dcfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa4f1a6-9b6d-4285-8df3-45aa1435ba68",
        "cursor": {
          "ref": "55983eea-07d7-4fe0-bf78-387788383713",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8297de15-abdd-455b-88e5-e3de759f1f62"
        },
        "item": {
          "id": "afa4f1a6-9b6d-4285-8df3-45aa1435ba68",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a4ce52ad-d919-4c37-9698-0f5334f9eadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b88089c-8e23-429f-8dd6-097dbe47f278",
        "cursor": {
          "ref": "fbe305bd-db46-48bb-ae86-e398d74d86ff",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "576baab2-d101-4be7-8ce3-3a6046f07173"
        },
        "item": {
          "id": "2b88089c-8e23-429f-8dd6-097dbe47f278",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1d4405d8-e8ac-434a-bea6-54a5ef834146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b941ec75-b9e0-4dc9-97e7-73bc689ae76e",
        "cursor": {
          "ref": "92665116-62b8-4f41-91f0-57bc843d3461",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e5a0e2e2-80d1-44d7-b0d4-9044ce0e1454"
        },
        "item": {
          "id": "b941ec75-b9e0-4dc9-97e7-73bc689ae76e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2ec7e966-1fec-4432-b613-287b022ebb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb97275-60bc-40ac-a57e-862ec73355f0",
        "cursor": {
          "ref": "04ad5506-2679-4f52-82da-cc4dc154054a",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "105bcd76-31a6-47c3-961b-efcb23e7f8e9"
        },
        "item": {
          "id": "edb97275-60bc-40ac-a57e-862ec73355f0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e8823767-c38e-4921-b8a6-750ead410cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d939c91c-f9fd-49d1-abcb-8e9592730a15",
        "cursor": {
          "ref": "bb696602-d2f1-4aae-8bbb-90432955a8f1",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "353074e0-bc5c-45a3-a8ba-3b6142ca0b56"
        },
        "item": {
          "id": "d939c91c-f9fd-49d1-abcb-8e9592730a15",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "afcf6e44-2568-4cdc-b804-a81a262b70e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6725113-64d7-4f31-9695-d52b73a738bb",
        "cursor": {
          "ref": "859dc28c-3f8b-42fc-b913-c4776f859db0",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d1f06751-2ebe-45fb-ae2c-788951a290fd"
        },
        "item": {
          "id": "b6725113-64d7-4f31-9695-d52b73a738bb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cff1db38-3ae9-490a-be66-6e89641e979a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6401a2-f5b4-4faf-a6e1-449abc39631c",
        "cursor": {
          "ref": "eb13a706-7348-4f46-b5fe-895c4efd709b",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3455dfc6-37bf-406f-ac16-b48738fef479"
        },
        "item": {
          "id": "3c6401a2-f5b4-4faf-a6e1-449abc39631c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "31ba0b82-8dbc-467b-845b-4849e0c93dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034bd1b1-1b89-45e9-8c5a-71c97ea820c0",
        "cursor": {
          "ref": "0975e4ff-5be6-4c15-a399-cf8d6c4190b3",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "00fbe009-0644-46ae-958e-0ae8feabd50d"
        },
        "item": {
          "id": "034bd1b1-1b89-45e9-8c5a-71c97ea820c0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "64dd8567-13e4-4382-96d9-96575c36138a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dc9cf3-d7af-4fb6-9ad1-3aa772d6bbf9",
        "cursor": {
          "ref": "538d0797-6bfb-4e97-9977-5494cff3f911",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "032e9387-fa8a-40c7-95bd-b477eb7a271b"
        },
        "item": {
          "id": "b2dc9cf3-d7af-4fb6-9ad1-3aa772d6bbf9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3d732326-08a7-446c-83d5-e9838944b952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3781ef47-078e-4476-8510-7827d9f62686",
        "cursor": {
          "ref": "45f54288-fcdc-4626-a32b-eb2c10b1a3de",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "74a18137-77a7-42c5-a03c-483bd8ec2193"
        },
        "item": {
          "id": "3781ef47-078e-4476-8510-7827d9f62686",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2f4c6756-c25f-4877-88ba-b13202dd8130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cfa49a-2108-4baa-8c19-1f104f616055",
        "cursor": {
          "ref": "85e46228-4c75-48b0-81b5-5040a692bf66",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "86efcf66-4872-4336-989d-a97778c2bd91"
        },
        "item": {
          "id": "93cfa49a-2108-4baa-8c19-1f104f616055",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "680975dc-0fde-4a92-8c49-578f5743193d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d892fb29-38ca-4924-b4b7-11b14cca4e9c",
        "cursor": {
          "ref": "bf86de80-d357-47e5-b502-ee3843b121da",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "32703051-e689-4199-ba6d-3ade46258155"
        },
        "item": {
          "id": "d892fb29-38ca-4924-b4b7-11b14cca4e9c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d68b8d70-042c-4845-b72f-3471a692a040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbeff89-ea1b-462a-9cee-750185b247f1",
        "cursor": {
          "ref": "335319fa-3917-410a-8186-5e6219807bc5",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1411be53-11f7-4ce4-a256-70e4fd219ff9"
        },
        "item": {
          "id": "5fbeff89-ea1b-462a-9cee-750185b247f1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d2332d2a-b119-42df-81d6-b24ca39cad65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721da9da-9a99-46ab-ad34-70f3c10195d1",
        "cursor": {
          "ref": "bb493e8c-9265-42a0-b10d-0c27a8c82614",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "af4ce635-1170-4f76-bcc3-0f379d85ad98"
        },
        "item": {
          "id": "721da9da-9a99-46ab-ad34-70f3c10195d1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "40f748e0-f763-41ec-a3b4-99dea040334a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bded40c3-57e2-4f77-bf12-816d934fc77e",
        "cursor": {
          "ref": "0d340f13-85ea-4ddc-aec5-b6254ede69b8",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fc6089ca-2c04-4519-bda4-a0fd23ba6526"
        },
        "item": {
          "id": "bded40c3-57e2-4f77-bf12-816d934fc77e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c48d5d09-7a4d-4d31-a329-ed46a9328846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f826c4-678d-4e16-8641-c36ea67bf794",
        "cursor": {
          "ref": "aa870b48-b591-45d5-8288-32943de704d3",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ec62170c-2318-4765-8bf2-60e84ee08922"
        },
        "item": {
          "id": "e9f826c4-678d-4e16-8641-c36ea67bf794",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "01ecc930-d38f-4a6b-be16-06aa6fa4a1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9467a4f-6140-4209-aaa0-343261b349bd",
        "cursor": {
          "ref": "33cb5035-1432-41c2-88e9-81a7ed280338",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a242d314-bf9c-483b-891b-7e5763c8b3b4"
        },
        "item": {
          "id": "b9467a4f-6140-4209-aaa0-343261b349bd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "77a50e8f-1f44-414d-854a-49e27df3eb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1dc7d7-ee49-4bd7-8c1e-9a23a5ca4ab3",
        "cursor": {
          "ref": "50452fd7-7372-489c-8027-1e91a250e792",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2b0dca05-2603-49bf-9752-0bc06197fb63"
        },
        "item": {
          "id": "bd1dc7d7-ee49-4bd7-8c1e-9a23a5ca4ab3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "33a29050-0792-4e26-8b4e-f038aa62fd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20e7a88-b6c3-49d0-b49d-b9cf98ed128e",
        "cursor": {
          "ref": "9035b3bd-70bb-459d-b649-e4106317a00a",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "984adb3f-21c9-4362-8b24-2be15b54af4f"
        },
        "item": {
          "id": "d20e7a88-b6c3-49d0-b49d-b9cf98ed128e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "679d05a9-fe36-4625-afc3-65f5cc99bbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1cfa04-a64f-45f8-8538-6525a89b42eb",
        "cursor": {
          "ref": "6e529581-54f3-4229-b8c3-a1909d567271",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bdb87829-6413-403a-9702-a03e38376fe4"
        },
        "item": {
          "id": "6e1cfa04-a64f-45f8-8538-6525a89b42eb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "28a6fe0d-52eb-43b6-976c-fa00af7844cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3a1b46-905d-455f-b906-dca00bd1ce2c",
        "cursor": {
          "ref": "3723fde1-c315-4d56-a9c9-ab7904ccf52b",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "959a7b63-3f8b-435c-b125-08adf6006878"
        },
        "item": {
          "id": "7e3a1b46-905d-455f-b906-dca00bd1ce2c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a37287b7-0b75-4297-b1fb-58818239e517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2c358d-8ff8-4ff7-a80b-2d6250b8b857",
        "cursor": {
          "ref": "e4089ce7-152e-4937-8855-86d4e31e310a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ed7c34aa-a8aa-4c2d-8b09-5b4b236e5336"
        },
        "item": {
          "id": "cd2c358d-8ff8-4ff7-a80b-2d6250b8b857",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "60a64e0c-60e6-4654-927c-24d5a4fd3ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6e0fa7-05f7-4ebc-aee7-22ef0717a244",
        "cursor": {
          "ref": "30a1a3a2-e09b-4367-81a3-d09608aaae4b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c578e9c9-53c2-4a80-8a16-d6c94a971646"
        },
        "item": {
          "id": "1c6e0fa7-05f7-4ebc-aee7-22ef0717a244",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b6c34fc7-deee-431f-950d-b007de741885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60c8d60-69c0-454b-b94a-bfcb18ab435c",
        "cursor": {
          "ref": "68e6573d-6961-47a6-899d-2581d9fc8ca6",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "599d254a-cf4f-40ee-93eb-eaa70d52e977"
        },
        "item": {
          "id": "b60c8d60-69c0-454b-b94a-bfcb18ab435c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0814cf09-78d8-4349-b56c-146045cb749c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d81a52e-0182-4a7c-b886-df57a1db8f8d",
        "cursor": {
          "ref": "62776ce4-6354-4b42-8134-59d2e2016a10",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5b1da3ee-6220-4cce-b760-1acdce3474e6"
        },
        "item": {
          "id": "5d81a52e-0182-4a7c-b886-df57a1db8f8d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1dfc0be2-e565-4378-bd83-429c3e8641e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5f8150-9072-4d73-8008-6706e36fe071",
        "cursor": {
          "ref": "6d4857b3-596f-432a-974a-8512575b61c0",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b55de25a-e87f-44e0-af1b-bb990be755a0"
        },
        "item": {
          "id": "fa5f8150-9072-4d73-8008-6706e36fe071",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d78054dd-3067-4cd3-9ef9-513c9f5cc8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a827f6-c0d7-4ce5-8834-4fc4f66e08a2",
        "cursor": {
          "ref": "122ef6eb-3907-43fa-98ea-8e2ddda3659a",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e8637ed3-6655-41eb-8a50-82a0dcdc0fbb"
        },
        "item": {
          "id": "37a827f6-c0d7-4ce5-8834-4fc4f66e08a2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "05a2f1e3-ef39-4656-9241-889064e4f0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e5ecaa-4651-4f74-8589-654a813be722",
        "cursor": {
          "ref": "254e9d60-4fd9-4632-99e1-d734b4585829",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "095e050e-e355-4a89-84bc-367bd5a3cc4a"
        },
        "item": {
          "id": "60e5ecaa-4651-4f74-8589-654a813be722",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "127557dd-133f-4017-be43-86710617b841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cde946-9bdc-4e0a-a56a-69d202a9fc70",
        "cursor": {
          "ref": "882b0ebc-742c-4ab2-ade0-9dee6d365a06",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f6367fcc-4bfc-4351-a5df-fa3565867485"
        },
        "item": {
          "id": "47cde946-9bdc-4e0a-a56a-69d202a9fc70",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2279bcbb-f1af-4ef4-8c07-d5a9f251a068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126b4eb4-9ab4-446a-93da-026f0226d752",
        "cursor": {
          "ref": "60e7f792-c57f-421c-a650-19fd061a5b0a",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b3464813-89d0-467c-a9df-c23ca82107ac"
        },
        "item": {
          "id": "126b4eb4-9ab4-446a-93da-026f0226d752",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cfe4c85c-5551-47e4-97f2-6f44d95def83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f66d2ca-6716-4976-a315-077fb6169100",
        "cursor": {
          "ref": "9996611b-950f-446e-865d-c16f5ddd82ac",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1b977334-736a-4e84-99da-91cbd91c8101"
        },
        "item": {
          "id": "4f66d2ca-6716-4976-a315-077fb6169100",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "07c1a2d7-53df-4cd6-b36f-7941b3101c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51878c7-d8a2-4f3b-926d-89b41cbd7cea",
        "cursor": {
          "ref": "5dc1555b-24d0-4514-9301-df603f056793",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "dc24fbbe-d71c-444c-9892-b81011309107"
        },
        "item": {
          "id": "c51878c7-d8a2-4f3b-926d-89b41cbd7cea",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c7b07802-fa1d-4169-b41e-e3f37b686578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3197dde5-1261-4de4-9a9a-bf6c8d08ed4f",
        "cursor": {
          "ref": "f362cf36-b52d-4ded-8a88-9d4f0883e316",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "598e58bd-f897-43c7-83cb-4e806434a136"
        },
        "item": {
          "id": "3197dde5-1261-4de4-9a9a-bf6c8d08ed4f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b890952d-f7ac-4ca6-b865-91ed9ba38d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5776074b-3d7d-4a92-ba8c-4add8e7be49b",
        "cursor": {
          "ref": "6d8a2884-a837-4815-aa22-b4396ec5463c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b00d55f8-5294-4b05-b95f-ed178d24c49c"
        },
        "item": {
          "id": "5776074b-3d7d-4a92-ba8c-4add8e7be49b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "13caba15-97d0-4fbf-b784-ec32f9ebb95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7325179-4a27-483e-b41f-13d9e6214543",
        "cursor": {
          "ref": "c55879e6-273b-4fb8-bbd3-e1712c63b2e6",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "801e0de6-a723-4450-90ec-da94926173c4"
        },
        "item": {
          "id": "b7325179-4a27-483e-b41f-13d9e6214543",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d2ede8e8-8fbc-4ba0-aad1-6574be655c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e194cdd5-1260-4684-80e8-40cd8607a170",
        "cursor": {
          "ref": "5efcd513-a8c1-4f87-845f-04eb175c23b8",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4ebb6f97-9145-48c6-92cb-eb1237355beb"
        },
        "item": {
          "id": "e194cdd5-1260-4684-80e8-40cd8607a170",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "752e64ad-1f64-465f-8481-b5ed3cd5a91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32b88f8-21ea-4069-af50-0b5341207d00",
        "cursor": {
          "ref": "378ceb51-4ecc-480a-8b45-7cdc0681f401",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "78069d8d-0708-4c35-a881-9ae5a3eaff4f"
        },
        "item": {
          "id": "a32b88f8-21ea-4069-af50-0b5341207d00",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f55e3c51-089d-4efa-967d-07b41c3e646d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ee4032-78b4-40d4-a49d-8ab73b34ee06",
        "cursor": {
          "ref": "3c7f6d5a-16e9-48b1-9668-228d0c9eed79",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "aa1edf87-4fd0-4301-92ee-904a3049deb5"
        },
        "item": {
          "id": "40ee4032-78b4-40d4-a49d-8ab73b34ee06",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d0f4b983-b3b5-4cdc-851b-20307b104eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81789a56-c7c1-421d-9785-e0136444d489",
        "cursor": {
          "ref": "2c998f51-1e44-462b-9cd3-4156d6da2455",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "561a8265-9bf6-498e-b795-8d74c3167f49"
        },
        "item": {
          "id": "81789a56-c7c1-421d-9785-e0136444d489",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e09d86d4-0361-496a-84df-ab9088b7b16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4924dd3b-3bad-47d9-9f80-f101cbdfc48e",
        "cursor": {
          "ref": "212bbcd6-fa33-454f-8b3f-5b40165bd237",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d4fcd314-9c4e-42b9-a22e-5a76b924ba6b"
        },
        "item": {
          "id": "4924dd3b-3bad-47d9-9f80-f101cbdfc48e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4f63100d-f87e-4cc0-a298-81f4c03200cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73760d8-6943-49da-b67f-c743ee9f07d3",
        "cursor": {
          "ref": "43e47986-413c-4e75-953f-c4ded757e488",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "934f24ee-4d53-40f2-8879-54015dc81504"
        },
        "item": {
          "id": "a73760d8-6943-49da-b67f-c743ee9f07d3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0586959b-369f-41dd-a2f3-5154fb582fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b359ea42-3462-4d90-af33-af86302d2898",
        "cursor": {
          "ref": "966157af-9b64-4366-ae56-104455b95c77",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4fc47283-7681-4564-864e-a4d00fe62887"
        },
        "item": {
          "id": "b359ea42-3462-4d90-af33-af86302d2898",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "544e086b-afa0-447f-92f8-74f148b25116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f4417f-7e46-41aa-a402-15a17b3931a1",
        "cursor": {
          "ref": "3d1e4479-3bba-4abe-9909-1a944cc35bc8",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f95c80d2-3cb6-47fa-902a-7fea20fd1bb0"
        },
        "item": {
          "id": "b3f4417f-7e46-41aa-a402-15a17b3931a1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7809ccab-fc89-4651-b828-fbc61c9efeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4359c36e-159b-48d2-a5f7-c708d2a7f529",
        "cursor": {
          "ref": "11f8202c-da21-4927-b940-700c156e4c05",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4f94d89f-e864-44fd-a6a1-db8f1442c103"
        },
        "item": {
          "id": "4359c36e-159b-48d2-a5f7-c708d2a7f529",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "803cd01b-69be-428a-bba0-c2f679ccb861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1778859c-a94b-4890-af48-a31266e38e42",
        "cursor": {
          "ref": "0716d74b-0d7b-4140-a591-f7a67777cd5f",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "53b61602-716c-4184-ac7e-9097b5155029"
        },
        "item": {
          "id": "1778859c-a94b-4890-af48-a31266e38e42",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b5b26931-eba7-4848-8080-a3732fbf9e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbd5b4b-ec7a-4c18-a7f3-bfa89fd4eebb",
        "cursor": {
          "ref": "5cce2b8a-c7b9-423d-8a04-4c6a26bf8da9",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b16a0e7f-42fe-4785-8e71-40424f00117f"
        },
        "item": {
          "id": "2cbd5b4b-ec7a-4c18-a7f3-bfa89fd4eebb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "864c26e8-dd28-4d7d-8e8f-a48eda53e0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a5119b-ffa5-4254-a408-c00e67c02d50",
        "cursor": {
          "ref": "91111dd4-1cf1-4e71-9abe-239ea22c1532",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "236e8652-cab7-4f6f-ba0f-71e8dd378917"
        },
        "item": {
          "id": "e6a5119b-ffa5-4254-a408-c00e67c02d50",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "351bbfd9-13cb-455b-a044-e5904da9dd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37bff69-60a4-419b-9fce-87e2454b7376",
        "cursor": {
          "ref": "89c0851a-21ef-4ad0-bb54-49e25e687beb",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "aeeeabde-5fe4-4011-b6e8-811f70adfbac"
        },
        "item": {
          "id": "a37bff69-60a4-419b-9fce-87e2454b7376",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "64e500ee-c99a-4c4c-bbcc-a1a6d6d21849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b708b8c-ac26-46aa-b45a-52d1c9909930",
        "cursor": {
          "ref": "37e83dab-95ea-4c29-8a2c-fd4351ff1f85",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "545a3314-0fc1-4d51-a60b-6032e724d532"
        },
        "item": {
          "id": "2b708b8c-ac26-46aa-b45a-52d1c9909930",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4ba252cb-9b54-4d23-b751-e17bd96c2a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e8991a-06db-4974-960e-1aa28ccd6052",
        "cursor": {
          "ref": "a5f48687-642e-4066-9978-3f21880d2c82",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ffc8d0c4-c460-48dd-b6a5-ca9e9d4d4bcb"
        },
        "item": {
          "id": "10e8991a-06db-4974-960e-1aa28ccd6052",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "385e119e-c821-42ad-b983-41b5e0316cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75c1e96-d042-4492-9dc0-15557532b044",
        "cursor": {
          "ref": "7a002da6-4462-4958-bbaf-34e6038e3604",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "77c10e24-b872-47c6-a816-1ad8ee8a12a4"
        },
        "item": {
          "id": "a75c1e96-d042-4492-9dc0-15557532b044",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "304c4aff-6c39-4ae8-8661-450a39698762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3426a7-5e8b-4371-8362-3786965f4c2d",
        "cursor": {
          "ref": "44e41ca1-b603-4c85-b496-00f1c328a92b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "75c01d6d-461b-4188-9aa5-322fd596bce8"
        },
        "item": {
          "id": "1b3426a7-5e8b-4371-8362-3786965f4c2d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1cf3cdfe-b9ea-43cd-b1e8-9c2e548e4987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2981528b-e75d-4283-b6de-59e73fdfaac8",
        "cursor": {
          "ref": "798e43ce-51ea-4ee1-bf85-b77147859aa7",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "15057ac6-53fc-4323-af1f-aa0abdc39f26"
        },
        "item": {
          "id": "2981528b-e75d-4283-b6de-59e73fdfaac8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "37b10e8a-6e4f-4a0c-a38c-3a36b9965f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea3ece1-f862-4708-8942-bf66c4a08158",
        "cursor": {
          "ref": "deb71f22-feea-4839-9608-0a00ff6e9ba1",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "418f6ae7-66d7-4a8a-a28e-5c00404a05db"
        },
        "item": {
          "id": "7ea3ece1-f862-4708-8942-bf66c4a08158",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "efabe45e-18b1-4015-8a43-feee9db37525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5273d2fb-4dd6-4633-bc8a-61643f4e120f",
        "cursor": {
          "ref": "87b1b26c-8732-44cc-9bee-b9375c24af94",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5f2f96a8-b9cd-45c8-842d-f010ad1960b8"
        },
        "item": {
          "id": "5273d2fb-4dd6-4633-bc8a-61643f4e120f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3cd60ef8-6b0b-45cb-9f4b-2eefe49f02ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ebc887-1b8b-4f23-8490-c60f573ab6ae",
        "cursor": {
          "ref": "d567051c-b649-424b-ac0d-5196ec261d58",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8491ffa1-e915-484a-a622-be2ec334730b"
        },
        "item": {
          "id": "44ebc887-1b8b-4f23-8490-c60f573ab6ae",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "61987541-95cf-4b74-887f-83bb115a20cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692ad5c3-8c5a-48c4-9f28-ccd069d325e2",
        "cursor": {
          "ref": "d483893c-de75-41ce-84ed-31bcc704face",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4e5d149d-e371-4a3d-93a6-7243ebea95b5"
        },
        "item": {
          "id": "692ad5c3-8c5a-48c4-9f28-ccd069d325e2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8542544b-ac8e-4d0d-8243-04155b6e26c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b04cec-7f54-4708-9481-f6f909079e3e",
        "cursor": {
          "ref": "f3afc0cf-17d9-4360-aaff-1f9aabff4f47",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "51d44a64-de4f-4acb-b565-a83ae02a30bf"
        },
        "item": {
          "id": "c5b04cec-7f54-4708-9481-f6f909079e3e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7a7530d4-8f2a-4742-b160-a7857e972636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b4e8bb-4ff0-4459-9d93-d4c99aa41701",
        "cursor": {
          "ref": "c2969997-19bd-4d5b-90f3-64ffbc4f58d3",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b8368a51-9f10-4769-b9a3-ad9627ec919f"
        },
        "item": {
          "id": "59b4e8bb-4ff0-4459-9d93-d4c99aa41701",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b535a027-1344-48b5-99c8-67b8c797ca1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f78bf4-f542-4f14-bd60-00a7a770f9ee",
        "cursor": {
          "ref": "e717ed30-0bd5-4f08-9ab8-2776f302c97e",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d0c40e05-a917-4c0b-b8ff-8585cf98ac31"
        },
        "item": {
          "id": "d7f78bf4-f542-4f14-bd60-00a7a770f9ee",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a15a3182-6cfd-44b4-bdc2-e3119a00c17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89054da-5267-45ce-9f09-3e071ed128d1",
        "cursor": {
          "ref": "857b45b4-c532-4c11-93c2-655af586c8f5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c5bad4f7-8b67-4d78-8c5b-a71b4bc68522"
        },
        "item": {
          "id": "d89054da-5267-45ce-9f09-3e071ed128d1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d65c76b5-431e-46a9-9467-7001903ef48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21fca81-712e-422d-b751-3dcf89ade94b",
        "cursor": {
          "ref": "63037d54-7413-4428-8c6d-4d77d2504baa",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f8025b79-99f0-47bf-9706-b1d1656d6a11"
        },
        "item": {
          "id": "b21fca81-712e-422d-b751-3dcf89ade94b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ea1fd0f4-9020-47c8-8737-3b5781c2b67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58e4956-9c99-4a94-9e9a-bf759bd514f6",
        "cursor": {
          "ref": "f3e1caa5-bd82-4013-97de-e4b36c9d4a9d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5e8d47a3-c532-4164-a775-d8d1299c8594"
        },
        "item": {
          "id": "b58e4956-9c99-4a94-9e9a-bf759bd514f6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e41104f9-b380-432b-b47d-ccfff2763449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2500e7fb-c5d6-49e8-90ee-4138874d6af0",
        "cursor": {
          "ref": "6da71934-2ee4-48ff-809b-f8346c0e3a15",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c1867d0d-839d-4156-92c5-918b64c0374d"
        },
        "item": {
          "id": "2500e7fb-c5d6-49e8-90ee-4138874d6af0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6dcbb1e6-da18-4199-923c-b05ce157fa70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04d49c2-770e-4835-a412-65f548a933ed",
        "cursor": {
          "ref": "802851bf-9bf1-4836-a4f8-d559c4644e77",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5d8d888c-c424-4cce-9754-9f2cfb5c73f8"
        },
        "item": {
          "id": "d04d49c2-770e-4835-a412-65f548a933ed",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3ca3b1ab-a3f2-468d-908a-7b927f1fafde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d26c95-e538-4e48-86d9-d234a5c99eb1",
        "cursor": {
          "ref": "bbe7f635-c967-47d7-b6e5-e9e35cbd3b7b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "44c9a384-2b9f-4368-b816-7dd30cd3fca0"
        },
        "item": {
          "id": "86d26c95-e538-4e48-86d9-d234a5c99eb1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "79dc3f12-caa5-46de-9cd8-e863388fc204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b8cd70-c37c-46e1-a850-890711f99661",
        "cursor": {
          "ref": "ded0c1e5-a4b6-4813-8a67-4edd5988f210",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "82a2767b-2642-400a-931c-38331f76e508"
        },
        "item": {
          "id": "a3b8cd70-c37c-46e1-a850-890711f99661",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "acdeae29-5878-4f50-81b2-9aae2a2720fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3526452b-28ff-488e-a7e5-eb2a5b20d42f",
        "cursor": {
          "ref": "1985f43b-d5c5-4853-b2fc-a70ea6091383",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1ea29487-c58f-4702-ae82-fe25b5fe3f1e"
        },
        "item": {
          "id": "3526452b-28ff-488e-a7e5-eb2a5b20d42f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6358d94c-97a5-4d7a-bc29-7b079bed1c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaec500-f4a5-4dcd-b66b-ff525eeea38b",
        "cursor": {
          "ref": "0de305e0-982d-4cd3-bce7-cbd5578d8c0a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4e70b308-5429-4a26-95dc-ee743118b4d0"
        },
        "item": {
          "id": "1eaec500-f4a5-4dcd-b66b-ff525eeea38b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5815b3ba-197f-42af-8938-d49a4973974c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9a180a-f68e-49f3-82c1-e35235845a22",
        "cursor": {
          "ref": "66cad19e-ee2f-4b0e-9308-883533c866da",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5dc44d18-0b0b-41b1-9e7f-5e6f3022f9e6"
        },
        "item": {
          "id": "fc9a180a-f68e-49f3-82c1-e35235845a22",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7ab04046-6124-48af-b303-65d81e0e175e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4703179b-1bf2-4846-9f0f-4cfd95d76831",
        "cursor": {
          "ref": "58677710-623f-4387-8a86-4f3bc5344b89",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e97425d3-1e86-4a0f-b8cb-18915761cd0a"
        },
        "item": {
          "id": "4703179b-1bf2-4846-9f0f-4cfd95d76831",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "38842c3c-8d07-4c2d-9271-862cb8df07c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf2eba8-c5bb-45b2-a41f-c3f4e43abd88",
        "cursor": {
          "ref": "a110d532-e28d-43ac-80d1-00b56e58a2a3",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "670ab708-4689-49b0-a360-6e338886f827"
        },
        "item": {
          "id": "2bf2eba8-c5bb-45b2-a41f-c3f4e43abd88",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "de14d91b-e145-440a-b130-72d72a714030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2988234c-9835-42ba-bb09-1c0f9614459a",
        "cursor": {
          "ref": "7fcf809d-6abd-44c1-93ec-f66ce1b51ebc",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3421b1c8-69b5-48f6-8c59-b1558d223e9d"
        },
        "item": {
          "id": "2988234c-9835-42ba-bb09-1c0f9614459a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7f18111a-1dea-4b1e-8f03-60708495aacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c78bbd0-552f-4234-ae10-dc30b47e86d7",
        "cursor": {
          "ref": "9e463148-e97b-4135-8c36-00c08537dbbb",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9dc52738-b5c1-4118-9582-5a8a19085dbd"
        },
        "item": {
          "id": "4c78bbd0-552f-4234-ae10-dc30b47e86d7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bdff3c32-f20e-48a7-9eac-d61fee3c8a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3327d584-a1ed-4550-aa70-095b25dd3a27",
        "cursor": {
          "ref": "4a20f1f0-e3a2-40e0-813c-23a4497a6ffb",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "98395d8c-71a4-48e9-a109-0eb3d0f2d14e"
        },
        "item": {
          "id": "3327d584-a1ed-4550-aa70-095b25dd3a27",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4103ccba-f00b-4849-9c20-6b94dd265ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbccda23-2585-4196-917e-7dc3aaf1375d",
        "cursor": {
          "ref": "0d97c4d0-41d4-449a-9190-0008ef6e93a5",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3fec8109-8382-41f3-bf2f-6c6407046b1e"
        },
        "item": {
          "id": "dbccda23-2585-4196-917e-7dc3aaf1375d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4243ac61-d930-42e3-9448-2231fc63127a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b4a913-8806-4834-886c-757cc3af32dd",
        "cursor": {
          "ref": "b0c1daa8-9934-40e6-a951-eec311889b06",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d74d525b-dbc1-4c52-bd0a-13fa53927b88"
        },
        "item": {
          "id": "e3b4a913-8806-4834-886c-757cc3af32dd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d8c1988e-992b-41f2-a00e-da6ea77eb0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bbe6ce-8fd2-45fe-b0aa-899d492eea8e",
        "cursor": {
          "ref": "98d3baa8-b3bb-461e-8de5-c3c801efd6de",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "556da7db-1b97-40f5-84c7-53f5f4044899"
        },
        "item": {
          "id": "96bbe6ce-8fd2-45fe-b0aa-899d492eea8e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cbed5176-4466-4ee1-995a-29919c9dced1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a95ce8a-a4ff-4237-af54-819590b5a57d",
        "cursor": {
          "ref": "d169d0fe-3faa-4ea8-90d5-5f932bef938b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a5c2b240-e6f6-453a-a9b7-b5d1f02db577"
        },
        "item": {
          "id": "4a95ce8a-a4ff-4237-af54-819590b5a57d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9a755f0d-fc7a-4978-96ee-f91fec596992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce44fd0f-d8cd-45c0-91ca-356eb452086c",
        "cursor": {
          "ref": "1f25a89f-2f30-419c-bc8b-cdc56a5b629a",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6cacc343-18fa-4cbd-bc83-6abccbf66f23"
        },
        "item": {
          "id": "ce44fd0f-d8cd-45c0-91ca-356eb452086c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3daca6df-6e4c-4770-83c2-cd2530f7b0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00f4926-92c3-4a65-8c28-730b6f6a95cd",
        "cursor": {
          "ref": "0be7a6b7-628d-45f2-9372-00c2a48d2e06",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "233742b4-48d9-417d-a2bd-9a60109c6eae"
        },
        "item": {
          "id": "e00f4926-92c3-4a65-8c28-730b6f6a95cd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f1f1fd87-5469-4b6f-8247-c58530a5b6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f108f7a-3c24-4f44-95f3-35628bb7d7d1",
        "cursor": {
          "ref": "ca962608-7ff1-40b4-a78d-3b51878a33c7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2669c2f1-f3aa-4d16-8072-2c3023a7d61a"
        },
        "item": {
          "id": "2f108f7a-3c24-4f44-95f3-35628bb7d7d1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5c5769e8-f93f-45a9-9ccc-cd8126fb3a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bec49e5-a094-4e99-9739-e66b8bfb2ae0",
        "cursor": {
          "ref": "9a221a5d-7a08-445f-baff-4217d9923f0d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3ad0f261-0c24-42f6-8e75-5ea05e1e089b"
        },
        "item": {
          "id": "7bec49e5-a094-4e99-9739-e66b8bfb2ae0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5f883874-1e6f-410a-a361-8ac9f74680b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d8a632-8b97-4b8f-a4f6-c6818154035c",
        "cursor": {
          "ref": "2a94ba17-defe-4453-8046-d22451fa9cef",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1e06d85b-3836-4c64-95e6-f1cfe2fa2f2c"
        },
        "item": {
          "id": "66d8a632-8b97-4b8f-a4f6-c6818154035c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "04785037-006c-4ad3-8c0f-3c9bee8e8ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9848e7a5-c66e-453d-8cbf-50312c82dbaf",
        "cursor": {
          "ref": "bd15cfa9-5350-4063-9db1-30a5ef77cd3a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ea097c3c-9ff3-422c-842f-43f131c1cb5c"
        },
        "item": {
          "id": "9848e7a5-c66e-453d-8cbf-50312c82dbaf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "102e6057-f0fa-4cb8-b67c-a27b5f7f5773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5228d12-6924-482d-8a6f-9aece43360cb",
        "cursor": {
          "ref": "a3d35e1c-6304-47e5-8738-a6f87845b0d8",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "96a924d0-aae7-4e2c-9312-50db73e5fb52"
        },
        "item": {
          "id": "e5228d12-6924-482d-8a6f-9aece43360cb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ef4b0392-1280-4f66-9624-bf234dd557f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c1ebf0-be3e-41fd-9a3c-2ffd62849a60",
        "cursor": {
          "ref": "30dae5d6-0307-4a22-b339-44694cb411ba",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "53f5d914-919c-4bd7-9119-40c5579165ac"
        },
        "item": {
          "id": "54c1ebf0-be3e-41fd-9a3c-2ffd62849a60",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f1a26b97-58b7-48fe-a478-9daee25031f6",
          "status": "OK",
          "code": 200,
          "responseTime": 122,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "518d8fa9-2858-4538-9e11-313c5fe8f864",
        "cursor": {
          "ref": "7752f40b-d372-40d6-ab8c-b27321e0b93a",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a53c9d4f-846b-4a63-b9eb-644d9731099c"
        },
        "item": {
          "id": "518d8fa9-2858-4538-9e11-313c5fe8f864",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e25bb4d6-688d-425d-ad0f-88efae6ae553",
          "status": "OK",
          "code": 200,
          "responseTime": 1864,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c3fc92-057d-4aca-988c-b8c4d9ad368c",
        "cursor": {
          "ref": "77db0e2f-1bdb-4989-86c5-030bdb7540bf",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1c5911a4-14ec-4893-af8a-34e9c328bf4d"
        },
        "item": {
          "id": "22c3fc92-057d-4aca-988c-b8c4d9ad368c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "29da2851-7ecf-4276-95af-f80ceb28e71f",
          "status": "OK",
          "code": 200,
          "responseTime": 1702,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "805facdf-22f4-445b-ae8d-45ab1c35477a",
        "cursor": {
          "ref": "b48be5ff-4e91-45c6-972d-c8004e0f319c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7e3ac2e5-e4af-4f2a-ae23-c3c05f9b884d"
        },
        "item": {
          "id": "805facdf-22f4-445b-ae8d-45ab1c35477a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "20c8b978-d6cf-4f93-a9f4-f644e985df52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805facdf-22f4-445b-ae8d-45ab1c35477a",
        "cursor": {
          "ref": "b48be5ff-4e91-45c6-972d-c8004e0f319c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7e3ac2e5-e4af-4f2a-ae23-c3c05f9b884d"
        },
        "item": {
          "id": "805facdf-22f4-445b-ae8d-45ab1c35477a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "20c8b978-d6cf-4f93-a9f4-f644e985df52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b84a64-3f63-4223-8910-4bf26ce3bf34",
        "cursor": {
          "ref": "92f12777-17cf-47e2-85ff-f5023196ea71",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e316f357-da91-4175-8b97-88f696fa2520"
        },
        "item": {
          "id": "a6b84a64-3f63-4223-8910-4bf26ce3bf34",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fa21029a-6476-437d-bfb1-d3f8baa9c931",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee357d55-09a4-4b22-ad67-53922acc69df",
        "cursor": {
          "ref": "c707a707-d56f-4726-bbe6-5281b234fced",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f0ebfa6e-99da-4d7c-ae49-b7f5f0bb5075"
        },
        "item": {
          "id": "ee357d55-09a4-4b22-ad67-53922acc69df",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a6c53ab5-997b-4f47-a5c6-dc2ae917b215",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 159,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}