{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "24539ccd-3337-4c44-9681-80c6123d8476",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6004309e-d679-4915-9f2d-ec513a4112eb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78c9715c-e7c2-47f7-91c2-365c165051cc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "23d536ba-5eb6-42c2-9c04-3b3ce5f96b64"
                }
              }
            ]
          },
          {
            "id": "59d4c2ca-e4ec-4f7b-8c72-02b7a5f50d15",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "188d7fa5-f35d-40d7-a9d3-2c337686c415",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "361bebbc-126e-4407-8aaf-25bb871da4cc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c9e9c82f-ecfc-445c-8a78-a9a1ac95dfc2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "57ed67c4-f563-4f29-800d-a24ee372c00f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6c341cdb-3600-4944-a205-1dcfea419de7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27b16f46-7e3e-4ca0-bdf6-29a9d06c8053",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7dc50ad8-8b3c-45cc-a155-b885f7f38eb6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb43efa2-8ce3-4ac5-b23b-da1237167499",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d6a8706-0213-4ce3-b0f8-b1d005ddd48d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "42f35538-35ab-40c2-809c-e3dcc5886a13",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ed6e550-cd19-47a0-9035-9da391aa40b1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51dda94b-afaf-4b1a-b13b-ee275e683c7b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bc82c273-fb9f-4480-af04-70b2f532cf66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa1d4351-c7bd-4914-b7a4-8e46d21b49ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bee697d9-a285-4f0d-8875-bc8f206f4890"
            }
          }
        ]
      },
      {
        "id": "01be9430-acfc-472c-808b-6da301bd9e81",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1badbb5c-778e-4d56-a3d2-662cc37ca69b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "329dcd01-2ff6-4e80-b640-ad519c5ecb27",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d45c4b7-f7ef-4e64-bcc4-d387b9475faa",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c77952-f676-45b0-b77a-945689e18de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b767f3a7-65aa-4959-ac58-8d9aab5e4075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d98b004-e959-447d-9b6e-c1bf40ee67bb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16acd8d-0067-494b-af14-7329206f1710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89fd30dc-bee5-432d-be79-137d20bf4fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e9e970-6fad-4510-a38f-37f2c90df1a6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccc270d-71a0-4b33-8ddb-885a20d96a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29fb6532-dd60-4fbe-be71-0d124932ed72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22ea120d-7b80-4ab5-bbcc-c1e8e0d3d43a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73543fb6-6281-46a0-9a14-d733d91bd73a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9901e75-ecc4-43ad-a4e1-2b951275e9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20805359-daa1-4af0-8499-330f34c6f348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe9ee9d-c70b-45aa-b0e9-6200028b6bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeaf7988-e682-45f0-a8ce-a038e08d2617"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7a5ef136-9065-4b4b-b3be-c2ded8dcb86c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3840c785-3bda-401c-8e56-21f31fa123be",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65bbf423-b6a5-4513-8329-c5900de4f026",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c50a6745-3b02-43b9-b437-c4858a5718de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f20d6502-e700-4b6d-8119-0ee91b385d6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "073c35b7-aeea-4522-9558-ba12b90ac938"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06e5cdee-d60a-46d4-a93f-376989582b77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21aa0c43-69ad-4a28-a350-78b4aec73fea"
            }
          }
        ]
      },
      {
        "id": "da4ee8c4-77f7-4c80-8248-fc3d20d2a6ac",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d6248dd6-f117-4c15-bf01-d1d8d162aa6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9419b78d-2c59-430b-af5c-f49ac1db23da",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "560436f0-7fa4-4bb0-825f-511137291a35",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94725d47-a3db-450e-8163-509814ddfefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3adfb89-b429-4ca8-b1c1-53c28d1a3b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847093b1-dab6-4f60-9674-c44bdfb20c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acb4dd89-7685-4219-903a-aa88d43dfd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8eadb5-414f-4c7c-9f2b-49e6912dd2e4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf13d9df-68e5-4f8e-b1d8-c3eda676d7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf36c04-7246-48a4-8bfa-466854b84207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f3454d-2ab3-4719-a028-dac5defafc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34699aad-c342-4103-a9d4-568e0f6f2dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa089e9-8d40-4704-aada-04d1d75b4c06",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b5ed3b-908c-48ea-a311-82f56f9c4526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ae5e3b-839c-44be-b8da-82eb2e833dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a451ec0-7b26-4af2-844d-a2b60acf3bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aa66237-b95a-4577-be58-8f121f691c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55f453a-082a-415d-9515-03ec1e95d11b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c924d1-2b99-4b80-a4a3-d395b1ffdca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fc15cf-8696-4ce6-a283-a9ce03b58cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279f97b4-e035-4b77-8fff-cd56a886336c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "136bcb9b-2a16-4257-b506-174b2c5b094e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326c1aed-92b2-4509-b955-456678939a2b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec9959e-0885-4911-8033-072663af09f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51314c48-084b-4b07-a9e7-9b6dd980eed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f123c3-00e6-467c-98a4-ccbe89edc80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "821b5439-13c2-4a96-9170-ae1c21e93b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de467bc-e07b-4a32-9599-652ace12bdb2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065dafff-040c-438a-ad0a-f624aac7afbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9b58b3-44f3-4772-a85d-19b60edfc50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8d421a-8d50-4507-aba7-c17d9b82dd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f07bc46-82f4-4b2c-b6f8-89847168ee81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcaaa908-e187-4cec-b057-e59e0e4ce4e7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e636a94-f3d6-4158-9cde-aa1340976d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cd5f6d-18d0-430f-94d8-52772e8bba9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27226ea1-a84f-4528-ae88-0044818e5e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "125cdc36-24f8-4333-b492-4b56bacf70da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa86cd4-3d52-4405-bebc-817206d8f8f8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50381f1c-bdff-43f7-847e-bc3631ba8b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbcc049-d90a-4912-95fb-d0b6670da61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b728e4-ac95-4095-8458-1c210db5e9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa9c9794-1553-4241-a7ac-1476783eb286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfc0b3f-fe56-405e-a46b-4fb357f5d79f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05367068-e3da-44ff-8ca7-0327f69c0507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faaa202e-c289-4ed9-8693-5cdac49e1354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b43d87-fc62-4bda-aa3c-759beb16b2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e446570-344c-49eb-a37f-d12529e34a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7946ed25-8043-43a6-abe1-4816155b81c1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1744ca-7921-46e9-8375-301262032014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182a942f-7852-4a8b-b2c7-d6f0267b1118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9b5354-515d-417d-8b04-dbb39a855e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e55692b-0168-47b9-8e95-e551288be012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d4c6e6-5453-49d3-9cd5-11f33b035876",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d73576e-4afe-4a54-a4b5-29d46247f6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ec36a0-ae80-433f-ac7c-05be1b12d5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a6d8ff-2cec-4d08-8aea-b4c7fd285884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d86f72f-4684-44b5-ad4b-eb872ad30d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7679579-6bf1-475c-8ca1-14a8c27c9480",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fef4a3c-4f82-4dab-9aa0-91b9831321a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20372e84-93c4-4155-91f6-4811a4833101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be6ebd5-e702-41d6-a46e-94de2e0f5f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d52e9e0-5f1b-450d-8354-589ca9657fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f244876a-909d-43e0-baa7-4efb907209d1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1582ed-27ce-4b04-bc54-bf8cb4a772f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741b97aa-ac07-47cc-96da-100c0cca59e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356bd885-2a2e-4f93-9d4e-250205518cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a62dec6a-1abb-49a1-8c93-764cae5d549a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10a3713-713b-4f94-878d-db72bc153803",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0555ab-1192-4b64-b6f1-a50459415f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753fa41f-aa0a-4cc2-ba82-1a74e1b76ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0ea598-c79e-4b9b-a1af-435f0f1c9985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b523b4ba-e54a-4f00-9d8f-233aa91f06fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611e9703-c7bf-4839-8999-f8b7fe42d9f5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb2483f-5a25-401f-af8f-e54b6f912fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521cd04c-1b15-4a27-87c1-2c5db90d83e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6d4de4-23c1-46c5-8dbe-31a7059bed1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cccaee6-4303-4de3-8e58-37789614e0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12ce1a9-6f15-49e6-88cc-4dbc7c1af94c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4537d6d2-039a-49a2-887c-12e19790eb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49478592-1293-48ba-9f12-e719f1235f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178f7d8c-f052-4878-9e74-8c32a5cb2279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2b27134-b404-48bb-beb8-c9c171323ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b19ae31-df5f-4314-991a-ca8f42763fa1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62be6db4-4cf7-47b4-9dc7-08723bb75688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9573a9fb-3adc-4405-8a98-6b52d404a468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086d331a-6766-4fdd-9ef5-82f3bca4aed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "136c7e66-6f67-418a-a6a0-42e60a015d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a202bf-2fd0-4e6b-990d-23ae7681e309",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68947067-d6fb-447e-9e0a-2f245ec79f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f66ce69-0a55-4dfb-a8e9-0bacb1137840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70beb27-7362-43ba-b3a2-584546eae5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "087b2511-5d87-40e8-89f9-7f7c7ec72374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d918e9ab-7730-446f-9b0a-39a895fbafc1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43cb9c0-7b50-453f-a22d-35d3b53d54c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db5b104-4ef7-47c5-ad73-1ecdc0687abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c32da03-dae9-4d29-afc2-b217eafd0977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "348c4953-63a1-4e32-8c51-7eb439a8108f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e06045a-1555-409f-b157-0fea3214c14f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37238141-9600-4645-b355-8ecad8148ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e28e8e-4e1a-4e5d-95a7-6acce92178c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bee3d7-6fce-4d08-9098-e068c9e88b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ac2974-244b-4b03-a871-e833fe57e3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6ad31e-cba4-4e0f-9133-a8b8e15224b3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04defd21-0093-4b6b-a10e-8d57d6871265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599aa8cc-389d-4997-902b-bb395667956c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bc5290-db9e-46df-aa33-c079f94d3c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af994181-32dc-4d02-b9af-1ff6df24a1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcae91c-57e7-4c2c-91bc-9ec4e66f188c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9174d722-6bcf-464b-8a3a-c2d5b73714ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92eda0e8-1f35-45c8-9665-92842caa64cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a856f90-f8cd-4d5c-8196-7f355404dd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "434324b1-5b72-4d12-a413-441b2b9b7a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e1b299-cefa-4248-beaa-ce28f09bdf0e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01cc944-f21d-4cae-bf1a-fd512d7c230e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1a3716-d273-4123-9d19-762be6b895e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4698e318-04a7-47b8-9ea8-3088bb2bdf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a69a09ae-1ca6-4032-9cb3-c488eb0193de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0bd005-fdf0-449b-af6b-c9bc79d76e88",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7948e4f4-3aa7-406a-9eb5-0fca45593f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bbec7b-7acb-418e-9951-966ed5932eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b6627c-148f-4b15-bb63-4a7236ff8edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "10e2f87b-0940-4d23-91f7-c97490485ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ff4ab9-63f4-424d-8807-919bf047c848",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d96c5d6-cb6f-4f5f-8566-abd9f97843c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bef8b6-62e7-4cc2-9725-5115abdac46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97787fe9-a0ce-4e44-b697-ec792241aa44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "699f592e-bea6-4e48-98c8-4573bab3f16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c65a55-6948-4ffd-842e-614b76ea1797",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f67795c-5dc4-48b0-ab6c-38fca93f23b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c21560e-e99b-4f56-a717-2e836020c61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a329e47-29a0-4c64-8219-eacde0b75e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "282bca41-f92b-4d51-9688-138dd60a3353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e522b0e4-29d5-4b89-b778-a256faa9525c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcaaa6a-24ff-4a23-8a4c-19d18c0ffdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a50eb4-527f-4a8a-95c5-2e7490996f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401298e6-6d06-40c9-b0dd-94c27af3c725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d33fe81-7351-4300-997a-91345c712cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3210042f-1a83-4538-8772-27aa25f07155",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6850129-504c-4923-965a-e790110557d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed714ae-b0c5-45c3-b5a0-438769eabfd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1a3f58-f415-4be1-90eb-3402967105fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "205aeb26-caea-483e-a3c5-6cb30e6a38ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffc5b29-ae2f-4427-a391-5c20ab18bc82",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4851b6-0b41-497b-b98f-7d699cad524b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd1eb5a-4c49-4f2b-9f35-2f8fb25bc032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed464ce5-0b2a-495a-bf3d-4437b4102309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea4b134-e8d0-400d-af45-b0b55b8c48ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013b486c-4be8-4679-957f-afa527160849",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33644789-2263-4371-b0a6-dbd28c8321c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd745c3-97ec-41d8-a3b0-34e2c763ddaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3d52e4-080e-40ec-91b5-19aa3453bfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7772e524-774f-4310-a5ab-24f78905d0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd4ad56-0552-4491-b8c5-3696bf6c406f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d16710-867d-4091-9757-a5f611baf8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f1717e-344f-40e7-99aa-2899e1f6f596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ff348d-7614-43dd-900d-1bdab9705cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc6391c-9e56-4a8f-8df6-67df06aaf10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73683b87-fbad-4c74-a2e0-74a82c9cce33",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dab554-e5b9-4f95-8251-d2dd8860ffc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74d5720-e361-4796-9b94-28f123a354b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1c4d15-5739-404f-bf9d-6e0c8d7db728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2569a2db-23b4-4638-9fa7-758a9cd28485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5a10b6-8d11-435d-bbf1-c503e80830d3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c8f3fe-89a2-45eb-80a8-b0e5d659c98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6099d63-958b-4e82-af98-ff33da7e6bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c60b89-cb46-4c30-a7fe-61e1e9d2a205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d43d7ba-0a87-47d4-b4c6-c87137f27647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c37b6ae-f3fd-4eff-9a19-2210f676a546",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b655a2c0-5cee-4089-852d-fe480e0e5a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0115859d-2f9a-4765-9737-10956f7f2267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f86cf7-1dc8-469e-9e0e-c88c75afc74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc762b6f-1f4f-4094-84d8-daae149b63f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c0a554-6704-4f71-8356-a6a447ca8dfc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b24ac9-912f-4ff9-aaab-6ec0d0ec50ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf06e436-4437-452a-95e8-70cc1dbf63c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d9b190-3068-481a-aaff-f3d269e7c9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fefba19f-8153-4ef5-b7a5-1096335dfd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e0ad30-fe0d-49e6-9eb2-da4f0355cd54",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cefd10-7d52-4116-9bf6-7caabf6e722a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b193e63-cda4-4175-b8fa-1446e2d8446d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0604aa6-09aa-4eab-93ef-adc4a934e119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42ab06fd-0f24-4e41-bf1a-01569b69be59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e29e90-6187-4fb0-96f1-f746144e2255",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a225261-c469-472b-b6b7-faf94e50b854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aef00fb-502a-4424-8439-288e85e4f269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5a1b74-1f1f-4428-8973-afdc920d85b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2252b6bc-fe20-4bd9-9512-3ef2ecbef293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84cd3bc-15e1-494a-880d-f90df70c86bb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb8c0f1-cf7d-4ae9-be3f-de7d5284ea13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67bf76c5-60e6-4482-90ac-5610374f747d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ee0494-4d32-438b-acf3-ebb5461bd4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ec0fcf-e881-4a85-9c3c-baf99a281833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f74d61b-a1c7-413c-9cb6-659e6c9a9dc0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7eb40c-802a-4f6a-83dd-e4886a6b9532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e591ec-a51d-44f8-986d-f3cca2a4142d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d92dbc8-2efc-4893-8a71-e9ebed1d3879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b55bf637-ec88-440c-8b5d-bb756d3ba9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127aa2c3-4e6e-44b3-85cb-be22faf0b2e1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c5c0d2-390a-4a37-bea6-3b89de0137a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfdee74-73f2-4d12-b3ce-6ad6c960b92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20311aa1-be0c-40c6-b9a3-a959e7f6ee27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "04ddf202-adca-4493-8c04-c532b873d370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109d1676-1b27-421a-b521-c0f139e09528",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0966260e-c450-42af-95b3-14f920852262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4f2c24-716c-4591-95b2-054a038a6e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614a7818-4a7b-4fe2-8c25-f2f20feb45d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "48a809b0-9d84-4650-9cf5-8c8b1da6a090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60670d3d-4ceb-41ae-b877-7133077acafe",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadff179-bc73-4f9b-95b6-3cb07e7f468f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942e9904-1135-4ada-bb11-2299d2fe5221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403636cf-a75f-49b1-a7be-513774162086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3af96ed4-3408-4a45-ba38-96f45e87fa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6622b258-f46b-4df6-b17e-3a590d09fbf9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5634bdb-90f6-4aba-9fb0-2882dba6d76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b07229-b9ef-46af-be89-6e8b212bc037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4f228d-8d54-4830-b7e5-9803b908b309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb271253-a326-4e5b-9a42-0a170a5f8c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b720219-64cc-4d97-88b6-a9d19d8e50bb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f29478-b463-4a15-ae2d-3aa5083335c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b72877-79e7-4f87-ae8f-97a29cdd6e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a70d35f-90d7-41da-95a2-09d6634ebd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b80c5c4-f32c-41de-a04e-e5208d56d473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aff6d30-5e17-4c13-abcf-5bdcccd94892",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edccc58a-3cff-48ad-b51a-473037306c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe7a417-3515-40b4-a955-1324291accb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e328419-4451-4631-b8c5-26e9498fc6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e34e2f35-f98a-47f6-8ced-e0493822f07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10b891c-50ba-41ea-b47d-62f567c5587c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012e5696-fc27-4706-ac41-375599a15372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277e41b3-1871-4604-8b21-3717180bf1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a408d1-2e42-4e2e-b984-a77b34e08ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a890000a-daad-46f4-898e-4165b1af3bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d9b328-38f8-4e09-950b-0f5537589640",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d65a434-d24f-4fe1-ade6-270f33b9c1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649fbb80-fe47-466d-8016-a62c1d969ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af05b77-8e6e-4c00-aa79-e55aaee3bd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4d0572-6df4-47f4-88ba-d501d4f9e717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e7a154-5d6f-4e52-a622-78a8b0a68043",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12dfa67-d54a-4669-b9bb-a799d4617a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15adf489-070d-4011-a63a-3d022f35bd0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe7ca4c-3e70-4152-b840-4b7a53820574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f7f46b-bfd9-41e6-9aaf-d094200214ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70731ab-8d2c-4a5f-b064-57a7e942095c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5d26a9-5468-4927-b535-125ac720c427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd42bc6f-ff15-43a5-bf6a-b48de37ee219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0928ef0a-7988-460a-91d8-9b93890cee19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8b212d-bd96-4618-876b-ab2cf66a18d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5742e3-5677-4608-a67e-03d78a9cecd2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b10086-e17b-457f-a3d2-36c9202835b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e57ede-f860-4f93-9411-123e8807ff41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2341cda-f927-4b0d-aa77-8b66a340a37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e091dc27-4489-4fcb-841f-76135c2c5f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd16386e-3c01-4328-8ae6-8140b97ec776",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23141445-46a4-4369-b160-9e6d19733748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97cd6471-c4a8-461d-b8fb-79d094aa4796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f921b5-92ba-4198-943f-3590ace3b58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "57d04177-766a-4e37-b9ab-956439a3d830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5142e5-2407-42cd-b0f7-b42988c34e8f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5faf10e-36ca-4bae-9638-92ffc1de5e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d807674-88e3-4361-a4df-ca4adbcef580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c126ac4-6dd7-4c9b-b645-3c1796ca6fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "424ffcba-9f93-4b69-a4da-d5e46b16757e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c6dcaf-97a4-4f34-b4bf-e322f3a34b5b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae8dc15-5f9b-4c21-8efc-cc4963d4f47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c509d9-441b-4b10-86de-6012709b74b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accdb737-9222-48f5-a7de-ef475772a852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6862075f-d87c-4346-9385-5e74030c42e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f2e09d-585d-47ff-b5d2-f4de1010e2f4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7c490c-e392-4a7e-a04b-11dbe2f5bc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4388e4-5e66-4a0f-9ed8-6b998332fc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1a5939-4868-4d02-9960-790b3d424185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56eeb809-d158-4ee6-a5f5-7b77b224fb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd9087b-4db0-4c72-a666-6b5fd7e65e0c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d349b9-234f-41fc-867f-02c7ab474587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab69d4b-2ac0-4124-8ccb-4862d0f8635c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311e0af0-58a5-40da-a2c3-1adf564eb66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74c7e05c-252a-47ee-b9d9-5d5a41b737e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea205ef-865e-4989-902b-9194b187bc30",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff4b3fa-d03f-4456-a7c5-8db2eaa052a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec58605-4d6c-4b50-862b-b1ed4d45a315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb9b90e-1789-4059-b918-596cdd47f6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "860ea8b4-feab-4af6-979f-dd7fc562a6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2345369-3044-4508-a821-c9e462aef815",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d5e454-f482-4001-be9b-039bf35f9d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127f3d8d-eeec-4e98-9c80-94ff55b588f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3132a7f-7491-4900-9d64-643e2fc28eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef32fae-1a57-4e2b-8bd7-341bc6a2c2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30b1779-0842-43af-a585-af2e96daeb63",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672017ef-f57c-47a2-9f62-062431b21dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4638c595-2d47-4774-9b2c-0f8ad535b31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf7eb8c-8d31-4274-8169-f7e8d2e8fd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a718d58-7571-462d-8145-7c59363641be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92852749-1fb2-4a7e-9c2e-5973d3f804d0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9b02cc-d536-4057-b213-6f26fc143500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5203ae-9d24-4cdf-abdf-801353a08f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8867c564-1336-4b2b-b39d-b33a07838633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2863173d-8544-4786-bc62-9458cacaa9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7a3c70-9371-48a2-b2d0-0a4f8bd92298",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9117c4fc-8b2e-4333-84be-025580dac0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d2a13d-94bf-4e69-99ea-94a40197bd8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e8bc95-448e-442b-9141-ff0fe3d2785e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcce850-e524-45c2-8576-e72313ef996f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c88854a-fbdd-408c-83c5-9f6a29095d2e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad9922b-b4c7-47ac-be15-79bb2fee5de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4b6a88-3785-4fc3-95af-0bb3b89ca463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f721789-fd54-431a-b060-ee488fcaeabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8494ee-e83a-4678-8f47-79bfd0ca4778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422b954e-6d08-4ff6-bf0b-24b4e6b92c79",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d769ee-bc8b-43bc-a979-389238b62249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1755d26b-8e3d-4dd1-8fca-f095a4e32929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8960b9ab-2077-441f-bee9-2e04452b38c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4de4b2-d220-429f-a2ab-fe223fda6d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df91c7e3-aecc-46dc-a32a-a6db1a6e5fb6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad01196f-5c51-43e8-9d7a-73118d7e55e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0235d7a-6c66-4feb-a7c3-2f6857cc772a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15071866-5679-463c-a7ca-1e00e495850f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5443676c-c970-4206-a0a8-abac052feb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e68f536-3372-4c20-b6b6-b72ecea6bed2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c653c5d-19e7-4086-bbdc-d9f7c21108e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ea0fa3-83c7-4e30-b086-04b9a91a2205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cefb04-a736-4f23-91b4-29f346e9b713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca30d0ea-070a-442c-a167-02d160eeae62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2a2b42-aba5-4ae0-8f42-17c99521eb4b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81d1d40-5e75-49f2-80fa-923910946c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2ff582-4277-4527-abc0-c758843cc47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4158d0-baaa-4a30-8db5-d6c78546cbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6289edd-832d-4bb7-9ca5-ff48b3af258d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eab301e-6b90-4736-88c7-dd8c337c16f2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2dc991-268a-47c0-b1aa-d9c2b9d29e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c005f4-4e55-4b54-bbbf-ee2c098a6e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d827386f-017f-438c-a9de-30306fec1721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef8fdf6-5868-4d2b-af32-aad71db4b566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a359ee5-e5f2-4bdb-8471-3cfa8ee4b92d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6a010d-b077-408b-b45b-18ba50a07872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bcd8a6-fcbd-4406-ae0f-d6da26844343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18436c5-4c15-44cd-84aa-42ae37731ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15383ec4-6b30-439e-a4ee-2d7e353cdcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488d06cc-67a7-4d0a-9e7e-b25c0c7e1263",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d215c14-bf7f-47de-94f1-ee0128ad93b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9628e7a5-58ee-4a8c-8426-ab16cd3095c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0256bd0-c743-4fe6-ad6c-2faa1d6c0c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ba4ae7-c4e1-4b22-8f5a-61c2aedf32b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fe19fb-e87d-45b4-943f-9d785e048a24",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23477fad-2d67-43a4-b54d-85ae920d906f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71c9e3f-2949-47b7-9829-d2b2f0171eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2405ba6-c735-491d-b4ae-474f7a7c2ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "65144526-d130-4941-9be3-a657bd48b5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7075111-0a8c-40b1-9418-abed1daa8c27",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a41dfc-e692-49a9-b70e-1579a445393a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77f4aee-4594-4a3d-9c5f-d0dd8a9b91a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb75b564-b298-44d7-ba08-c9b37b0059ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9c9778-98c9-4852-be58-39661e6fc05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1dd898-5092-4771-8449-ad8d28020778",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d44949-dc89-43b1-9ab8-2d9b3016171b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd82b118-d8a3-4f14-98d5-5185e481ad76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca9782e-865f-49d8-97d6-18035867d97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c51aa55f-4d98-4218-b9a2-d0e2cd0cdadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0503ef4-5fa2-4c8f-bcfe-0cd33d677891",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd18bc8-365b-462d-b062-7bd5b895f853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3915389-9c80-4a85-8999-31d008d71504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e200fa-4b16-47f4-8b6b-1c43c21ed849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3211af-8bcc-4e98-8a94-1bc827a52d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8b2a25-8f60-488a-a833-aeb9d638e702",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee266ef-1328-46e9-a229-74fce456d58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a296408-75aa-457f-b9fe-37f7d0026dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144feb89-9284-451e-a867-df429249994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60a44021-8163-4315-86d8-b3ce4e55c8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2009ab81-8e0c-490f-868b-b815e215ffba",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5426ca08-e4cf-4fb5-95f1-7fc9260b7916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7926eb72-9461-41e1-a9c5-dde88b4d18a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9450d11-11ec-4853-81a0-c3a9054c5251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd3882c-abc5-490f-a7ad-4b83a67a60b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889f8128-b618-4fa9-ba83-dbf17be2e001",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edd3f3d-0ec1-4242-97e5-195cd11bdbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202b6ba2-1800-43a7-9512-b59bfba9aefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8345d10-4333-46bf-9ef2-794bd25459d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "853d72b3-5de8-4dec-9dc1-ccd1e285fb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2f91be-d9e4-4e10-b4e0-643232d66a88",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c27ac7-48b6-4ac0-b1d4-28a4879e61e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e81a3c-6c11-4858-9c51-6007f7b2705b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07962496-39b4-4c67-be62-326c97c6098b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1323f46-1fe7-41ff-a311-e4bbd4a962f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446714f8-8eeb-45a5-968a-297ce86aa429",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4c02d9-5ee5-41d8-a11e-6c4f1ef7bde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee46649-4a2f-4c51-9dc5-d833b91dc37f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2d4a19-3e2b-414a-b5a2-bc514232ab8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1881b0-b744-4d34-99db-92d3698d88b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df8b789-7a98-489a-b28d-56027695a6f9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4874ae-018b-4970-ac16-a254bbd30deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d62924-fdfe-4080-b4da-b30d9eff4c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e430de-4187-4f03-8a07-7f6fbca69c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb30c73-3d89-4945-81f3-a0ff5fb58909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611c09f5-f255-4a21-9c74-2aedcbdf8fa9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ed8111-67bc-4adc-b0fa-f26226bb8763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deac9341-9020-4280-8975-3e9103ec484c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a5261d-b618-4989-8a4b-01e0646a95ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30d7df7e-d817-4022-afc0-443c7ea9728b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc33b071-ea98-43f2-92be-99f7426c2d78",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c31771f-6a23-4d94-a3e4-d0ee94869881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5a7788-cc0d-4b48-90d4-dfc50aa486eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3a2fc2-877f-4639-ac79-98936c34ba35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "566fa41a-33fe-41a7-97a3-b362278f96e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e744c14c-4ee5-425a-a087-e1af78705901",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f55ee92-6b99-47c6-a0f3-bc498f270092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5142b81d-4c17-4a04-8c42-0ffa90b72143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba229cc1-b01b-4a9e-9762-1564c015b0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "21696cbf-19c9-4dc9-a6d4-93e2c36eade9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d9b5a2-0ad9-4604-97c4-32a6d5d08f72",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66063e4-0dff-4a8d-af62-6c6b6cbc68a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd81bbc-f629-4583-90a9-0a1764c9308b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27687f73-b4e7-4fe2-ba61-1507b638d40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0016faa-890b-4954-90a9-e14ec4aa2779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ec9551-bc7b-4ff8-a289-4bc4931f70b9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2e487f-157e-4ac0-a1b8-e73481e66ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086cc0f2-f6aa-4577-849a-454b3eecdebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d439cd8-e392-4bdd-86b9-f15d2e424f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6143b364-23cc-44af-85ce-7f89955114cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e11bd03-7344-4708-8e8d-735bb17ac67a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bb2a7e-8204-40ae-9bd5-f0c557175452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcc2863-eec0-48a8-9360-8169e8d4aa58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ae3c54-8186-499a-ad07-71759673563b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1750231-2c32-47ff-ba1e-b25698425577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b62269-627b-4c45-b31f-4d15946ab218",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbf91f8-26ef-43a7-8b07-185ba602eb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e417ae48-ac49-4c8e-962b-c3a7716f40a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53f5638-73f6-4fe4-b57a-9adc14130389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "940178f0-6fe3-4609-ab46-7bcf0518149a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1381e3-5f3b-404d-828f-d80c3d3a8109",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afeb49ea-71b8-487d-8396-2ae55da779b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d87a4d-c46e-4e93-b2d8-1276660720ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64520eec-d5fe-4488-9073-9e273463bbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f04deb70-986f-4d34-8730-9b16a79eb5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7a02c4-d06a-456b-9f5f-e1c51719218e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2914901d-7c59-49d1-9622-ca2237250b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53af8f88-c734-486d-99ab-c3a514556bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f67db79-c84c-46b5-b815-843cecd26427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "da7ea45c-cc6f-4359-a9bc-3fec32b6b628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f77135d-801f-4011-9adc-c1a6ec7926ed",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a454ab-f39e-4f31-8da8-990273dba2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef9a9e7-5d3f-4f99-94db-a190e0dba170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657217d5-fb0b-4fbd-885e-801d11018cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b153ebc2-408f-40ae-aa61-b2e312f9c2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318d6aa5-eaac-4f42-84ed-a06da34aa523",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b3b7a2-9a7c-4a97-92e3-62b58c8a50cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9419d7-911c-450e-a3db-1cf4831a6054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80df5dc8-9b05-47e9-b5e0-cae51847de98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a671903-23fa-4019-bff3-59eecf3190e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a84d91-5e91-4909-a50c-2537f0d407af",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102804e5-d812-414f-9d10-b74e0a51353f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de245d12-d998-4103-9525-cf1668edcbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41961686-be35-42b6-96b5-107f51970e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a9cfde-0685-4778-8a6c-a4dbd6dd6820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b5159b-7d4a-4fa4-9fea-fc3fda4d1082",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97eac5e3-ee6a-42e6-9140-1dd82b077f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd73cd2-9b34-4551-870d-9f80b86f32a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a6ea93-5b9b-4b8e-9687-72148a3b36dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "139a85fc-a598-451a-9a1c-18142a75c00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489cb2aa-7d9e-48a6-bdc6-709148383997",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6654ce6b-0516-4ba1-8777-81843c78145a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "55c922ed-1fc6-464d-83a3-e748deec8d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303e98af-aaed-472e-8042-241933aa71e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "82f601fb-6a07-4397-8891-8a3d52666d3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22afcc60-9337-4caf-a197-eac60f7318b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7dd5bf2a-a49c-443c-a271-88f7895a79b6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfeb09e-75de-44af-9d3a-917fd4a64a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d03fc07-b792-43e5-9ea1-ec849d40e0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcc0752-119f-498f-9d30-889ccda83d5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5127dbf4-e6ea-41c0-a38c-a5c7c346c30c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0ea4d2c-49df-4d35-9133-439c40a5e9cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f234552f-6a62-4bae-8495-441cb16c4b67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "033aed24-464f-4dcd-b848-b7b244f1d707",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09f5719e-6e78-4d6e-8c86-edb0083dfc9f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "242a6f5b-594e-46c1-b0af-0dab793f2db8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae2a36bb-8932-4c1b-b31a-4153842ad6eb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d3c2f815-2972-49b1-8da6-7e0e2f9d63be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "81589724-3583-4882-85f4-f9e021c2ffac"
                }
              }
            ]
          },
          {
            "id": "183cbfb0-77f7-489f-a5bf-9aa4a3e4ce6c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b44a1998-641a-4493-9eaa-dcadfeaf86e4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b40732fe-4f25-4db6-b56b-9bdfbe53556c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829c8016-4706-448d-b01d-52b5878ea2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1cded4a5-aded-4cf9-b048-703f7c2c21ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17bd9d8-1611-4ad9-b7e9-7137071342a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac81ba43-8871-4836-9444-1d1348ebe8f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b95e82e6-ac90-4050-b504-5704ee3be6ab",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d19e6326-0ebd-4db7-83a8-9f18c83c90af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "816d3c0a-bc1b-4b81-b989-7b9fb6ab79b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "641396c4-e19b-47bf-9c6e-568009bddb1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68bd9c92-ec63-4b50-b00c-77f16004985c"
                    }
                  }
                ]
              },
              {
                "id": "9e4feeb5-fc2c-423a-8bc3-e2bf60dd5b15",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81b90e11-638a-496c-8009-4af7f0b747d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db5f9712-7109-48da-a255-759b0ce7e224"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e62bde13-e8f5-4780-aa34-658e9cdeb0c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a02e2bc-d2c5-433b-9408-24f84cde5f21"
                    }
                  }
                ]
              },
              {
                "id": "e1729b6a-94be-4b86-ac66-732438b6a13a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2618eb9d-dd61-447b-ae46-5cc2370b5da7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cfe3b05d-5c0b-4bc6-9c73-0b9a37f9af60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5b3b02c-f604-471d-ba15-e1bedf0e5a26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85434c0f-5986-4a58-8838-b09b06df2a73"
                    }
                  }
                ]
              },
              {
                "id": "0acbc1a0-7583-4438-a9f8-470c3d549997",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e14c5afc-dd32-4bf1-874f-4e302466e2b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da846dbf-19b0-4f1d-92c7-fe841a33e646"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf6ef4da-41c8-47b9-ae5a-5f85bdf430e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9f1ddc62-de19-4abe-9fe6-884ca5542cf0"
                    }
                  }
                ]
              },
              {
                "id": "6f91446f-47a7-4aee-97a3-97fcb87b807c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c528177b-e1c3-4fbe-bf73-caf62342e97c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5c69e95-5c21-4e45-bf72-8eb945a8919e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf59b276-fe7c-4d87-88ca-d58fcaefa8dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "55d9c174-e4ff-4ae6-bcf6-91bc202b8d81"
                    }
                  }
                ]
              },
              {
                "id": "46616749-0375-45fb-8315-482551872679",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c558d378-6512-45ae-a2e3-33909d692280",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69aceac2-1489-4032-9564-c581a8132d6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a5838ec-fe13-469b-9f8b-f94a79d876f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6fcc4e89-7fb1-444c-82a5-f9f12b7b20b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5353c23-e39b-49c4-9d6c-065c112ec1c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "092f2ebc-edfb-4c28-96d5-4d69604ed18c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "74662960-9d18-4382-8d57-cba06f793f1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "308c3ad5-dc97-4703-90ae-d6d8fb5a3321"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c238dfe8-f316-46b1-83e1-b1e733121143",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "428a7e4d-84d8-4745-97d6-4579d80a32da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcf4613c-8dee-40da-86b6-f019e132761b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d381f5a-9494-4466-8ff4-be6b5e92c761"
            }
          }
        ]
      },
      {
        "id": "44a7cf92-2d94-480b-99a8-0459a3077da5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0fea0b4c-a1f4-4e04-b122-b0d0740efec1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e06c5488-b847-4b44-bcd2-139e2aa29749",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dbd41c10-3b44-45f4-9b19-35671c91fde3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31b298e-4c74-4b4d-9e80-380021dde13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a34b6b5-8353-4fda-b290-bac26d68a7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7052ffe4-8471-46b7-af41-48c87003df18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc95fefa-5825-4831-bf5a-a17c01343958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45484d87-46b1-4bb7-b09b-78d5c10ec022",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0337304d-b0b4-494e-aced-c30802d8f625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ced18eb-1270-4d4f-92e7-03fe2abb686d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9097a3e-1032-479a-a516-66c4037e6a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "662d0627-3799-4606-80bc-f4a955411dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6ca2d0-7dbf-4209-ac93-e5e074fb9eaf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47a4b1b-e8a3-4940-a5d3-44541069bd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1487010c-a75e-4267-a19c-eb8e3c342a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70208127-d3f7-4538-aac8-503428022d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e9f9ac-e03c-4e97-b2d6-4aa8ed4b4f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9acaed7-d7fd-4b4b-8551-1358852e7924",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68ca796-c7e8-461f-8398-702a25b4fc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36e64f5-ee14-4fea-a1c9-43de4e4de578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c603f6-52a3-4933-80a7-ded152d2db48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "618513b7-bea0-4c56-be8c-6cf96dd024ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef355b0-bf6f-4fd6-bbd2-0cb32810101b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6d4915-1390-4afe-ac33-8f3e90615e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d544c56-dab5-4dee-a81c-d1808ce4f9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d401c4-15d4-4599-ad6d-7a008834ddc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8feb83be-3847-420c-a63b-8843519f1f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b352448-40c4-42c4-9e99-14d92c60e882",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98987ca8-0698-4125-a6fb-9f6ef8a53ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db26b3d-2dba-418b-93bc-96515ff9eef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740ba396-771a-438d-8c8f-4e186679c256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5c6601-399e-4496-a520-bd2ad218aa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c844f6-24f4-4beb-8a0d-2f0e0693cf18",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f45a02-6bae-4a7f-8290-bccc8f45991e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5877d3b2-a5e1-45a7-8e3a-aa73a9c99df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7888e964-5358-4d73-ab60-a2fc023a43a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bde7d9d-a253-408b-a344-288dbfb387b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0df2ff-f47f-4daf-8328-0629f2158221",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b222743d-bc10-4b80-9c2f-d6f9b2a98469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef0c9e1-9a53-4232-a726-2065cb1d92e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac989c3-32c1-446e-8f84-9b307f4cb762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74b88570-33f3-4989-a822-d216c7c77c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10731dba-d0b4-4d5a-b2b6-1735ee167383",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c000d246-b340-4774-b295-01da1c7579e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd7d8ff-7ee7-48c2-b926-7097a5d12638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085b4911-f436-4a60-bc18-8866365a4f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8560a0e6-7b0a-42b6-892f-21f3c9288352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3aecb77-5854-4097-9b12-3ce1ecc8697d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5eb1ee2-2de0-4d27-9f6e-cf840133ace8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fb58bc-d52e-45bc-bf63-80eebc9e5fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1561774-a3b5-4de8-b726-70ea67d77403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a156390-8333-4c7f-a709-d2d077aa6475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa48bdcf-1f8a-4a43-9709-906d0b06955b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc541365-945c-4ca0-b970-4040bdf61694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f62fbc-ca48-4f92-ac7f-a6c41b7e22bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f91579-de7f-44d5-873f-fb8dce305c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a651999e-cea7-4bf9-9272-6f691de97a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fde19e-f449-44da-afc6-22b9858cdb41",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70cb0b6-7b68-4272-8deb-fd50fe9aa2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a98ed3-7920-4cbd-95a3-410d2520c2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d07013-b4e1-40b5-a895-212a64835565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bf464e-8e4e-4731-9bc7-18bdd2859dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a203143-d05b-4b21-8ea8-463dd063add6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a5593b-c97e-4360-a0ab-9206bb531888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e12d4a9-0e54-4195-8549-83528f199cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c50b01-1a88-4ad2-a534-28e309044ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29a3bba6-d9da-403c-8676-a2c33079de6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a09701-54cf-4562-b47b-4a0185cbfbbc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6073581d-5b98-46f1-b61f-520dd4b258f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bf2fd5-a09d-4008-a441-729cc2d1f056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65cc0fe-347e-4731-ba30-02b656e4db8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c244143b-5174-40ef-a93e-a817efe5aba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcf3929-8f88-4110-b33b-700a7d8e72ac",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256a526b-9b6d-4c34-8ea4-72124f90ee1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15ded45-3c2e-488a-8442-6e7e3d6fc016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bdc606-91a4-4de7-9294-d2af8f8bef58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2212b204-facf-432f-a2fa-e22ffcbbe08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d7d197-9155-4d6d-a58b-ce7953b5a333",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e78562-502a-48ab-898c-03dd4c845ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc4971d-5217-4fdc-86da-6d76bebf7e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330d76d0-ecfb-4440-8d70-7f7e3fca88d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "486bceaf-713c-41fa-a3d8-d345c6f8c8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900fbd4f-02fa-4de4-94ae-131aa83ef319",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618886ba-9b71-45c7-ad21-2a4d8bcf1fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1907afc1-067a-4258-a6e9-768d04f681f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134f6995-0c04-434a-b2ca-29335f87b4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "db64ad80-fda1-496f-914e-d3fe6de1f89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f9797c-0180-4d04-b2a2-5d8fc1e7cfb3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd0c3a0-9afc-4647-9212-3db7292bf5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd857d4-cac7-4355-a6a1-9f56bb2d741e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5f24a6-b22a-4b43-931e-634226462e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab71fa7a-5345-4403-ada3-0aee34db113a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4dc7b31-336d-4313-a357-bafde8ff37c4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2715d9b-9c44-4b89-8920-0ef1fac07f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15059c6-ab13-445d-9705-02f14237d034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281bed40-a94b-49f5-8d16-2570b2a4c7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c670e190-5c98-41d2-9702-77a59db994d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfebbb1c-5923-4275-818d-870376ad02cf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1837c579-cd48-4ae3-97b2-a5bdbf71258a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6bc2d8-a092-4b61-989d-4e64cacb180d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc4cbe8-e73b-47f5-85dc-97ecedc97a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b06eb48c-f5db-40bb-a59d-ccdb152ac88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9bd31b-a623-4c96-9156-a654cf7664b4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e322a723-ed31-402a-9bcb-ff05c23b6574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2a047d-2366-47f3-804b-abd0f874932c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ab8c3f-6ca9-4a0c-a836-cef8a7eec647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c061710-4c3d-4dca-89dd-cf5c53650373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68faaf27-8e57-4dc7-9cf9-77273077ff94",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1b3c22-cb3f-4d39-b61f-da962c80c973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04acd7da-bb87-497c-a87b-e85f507b56c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494d077b-2cc6-4c41-999c-f2cd1cfc511f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86a2efc8-0e2d-4f82-8fcb-477798d2deb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8eeb5c0-eb1a-4d96-8388-2a22a537aed7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71cac9f-4d21-4870-8218-64f7cb2a3a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5257305-9038-4445-bb17-8e8c29f6dc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae275b2-09e0-4538-b2dd-613604b5fa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "621bf67a-9e79-4f19-b33b-4dc755e86dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d63829e-20e6-45ef-865e-3bc29f473176",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a07a5b3-de97-45be-8564-a1108fcbc48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d86451-be0c-4b02-b2de-c0fce26155b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08664d66-b4e6-42de-8fc8-3f9a10f59d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ab34eb-bd05-4c70-9ccf-9eb101788e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18482075-7141-4be0-bbc2-f3893a8ff302",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb10447c-1b71-4d45-9b5b-5b21f9ee5949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58750054-f9b0-4c0f-b1e0-a00149a254aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9b4976-4cda-46ad-aea0-115d7c66fc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a013d09-e7f3-4c74-ae79-21b3f2268451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727d7424-4602-49cb-8af0-995ccd8b7cbe",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c59950-edd6-4aa8-aea7-86bbed0042c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c197968a-0b97-4608-a915-0b25085146bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66a0d81-d4ce-4880-a60d-55e8898a7a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c00bcf9b-3f85-443e-9640-e300a7bdcb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bf635d-e317-4cd0-84b5-b1e2ff471fd7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fae2a67-8ef4-4394-b663-0587757f6001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7d3a1b-69fa-425b-92b0-79e4dbf0a6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2140fe98-5725-4fb8-b799-8422c59ae692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "587d3ca5-5c2a-47be-bfd4-2e0adcd3b570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac51cd04-2203-4926-9ae7-648c2d048cf8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ba21e4-d35d-4d65-98f4-2da60e7cd844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f68963-1ee8-437e-bc88-1c00783f408a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d59fcd-0e86-49be-8c54-be8062fc5842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d069fd37-47b8-4b27-8824-fb1b4888d8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ac693d-0090-45ea-956b-725ed452dc91",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df5d7dd-2554-4c3e-85c5-732e1831fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb32f882-ee3a-4c4c-9c1c-a5ab3889be43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3a002c-16e3-4c1d-ac0a-cf128f1d4e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3246d4-f827-451c-9c94-21227dbf9034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26071648-d44e-4b99-b072-f13c1fc4b02d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd85e8a-cf37-442f-8527-387ed26ec924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774d5bdd-4297-4944-a64c-a3076d41676a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c14438c-daf7-4780-8542-2a883813997a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60497763-eea4-4517-bbca-f73a7f054ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79750fc-69e0-4ab7-9ef5-66e3ff90f2ee",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce0ae39-abe0-4eea-aa03-856ff313d052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f529a1-4231-47dc-b77c-a90f40bdee85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea2b9f0-8f79-4a49-8dc6-05c8652285a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8047d964-1de8-4936-8f0e-e557c401cfea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bf3620-ee2a-4f9b-8ad3-a1a9a88d6937",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9d73c5-7e3c-4fb6-b108-8ffe66eeded2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d383e93a-b48e-468d-a0f0-3b0c35fa780a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71eaca1f-d3bd-4574-898b-19ad0a808646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db8373ee-b88b-4a85-a77e-63f21519e84f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2db36cd4-a50a-460f-b2a5-ee21d5d280e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25f3d3bb-c0a6-43f8-bc3f-ff6928f61f9b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13a7d20-2518-41d6-a29c-dd016b80eb8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b2375291-5563-4ad2-8545-ae5dab24259f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c931591-3a7f-4135-92c7-8053170a72bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "758c1df5-8083-4754-8df6-2cff11d923f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40b48273-aba9-4e2a-8c0b-cbab764998a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7697ec8c-9f7f-4453-85d3-1a04293a64ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cba5c7f0-088f-441a-b4e5-2f97503ba6f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57bf7da3-2abf-4291-9f09-76cd22bacfbe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b912262e-bf06-4377-90ef-bdad06d66111",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b4af7571-fe3d-4be5-856c-7160fd5e117e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "167cd2f2-f69c-4c92-a863-498fc5d7f345",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77fd0549-4aba-44c1-94db-6ac0dfb9119a"
            }
          }
        ]
      },
      {
        "id": "9340c959-585c-48c6-a2c0-cc2b098f7676",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "678429a8-58aa-4f6e-9138-f332304d1e1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0004d713-8369-4c03-8d2c-e453008fa54a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "25f8ea31-5047-4267-81dc-93943ab53e8f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64131bfe-a8d3-4bd0-afcd-fcc2026981c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380b7773-d537-47c9-9a15-668f39a0c7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6ff616-d923-49aa-aaf6-93bbd9836539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a70fa287-e797-4cc8-80c1-27d0a77941c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f14fea7-8b74-4078-a46a-6e456eefaafd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91034775-8ad2-452e-b57d-06592cb92b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29499b39-d589-485e-a714-e416a549e65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1784d68-17ee-45c6-96b9-4098c002411b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3af13ed-5c4c-4730-8f99-6f3ac075abb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ac76e4-713b-4cf5-b7cd-83e3248ede13",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a10b8d-b4ce-4543-92b3-404d609bb111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695c951e-0848-4017-9249-2e101b3d3bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764bf940-a6ff-489a-a783-e08fe506248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b341c3d6-d456-48ce-b462-dc566a1b61fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1701cf-c695-4d41-a0a9-49c1f8b906bb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b7b4a4-3fc1-4355-aa30-6500837f7836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef62576-4112-4d44-9eda-aaba8314e0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247863b9-7c37-4c58-a17a-031eb7ad049f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96510293-d9be-452d-9b2c-04a35836541d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542804d6-fbaa-48c1-917f-3744375c5d10",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30418c8c-4759-4298-ad97-ded9cee47b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f208873-2cee-407b-9907-5b9b556353ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f71099-d2d2-419b-afe2-baee3f065df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24a69894-c536-4da1-a02d-0146b4d4f984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbce1f8-fa80-4068-afb5-f9595241896a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d553d893-4c0b-4b2a-99f8-15489fe6ed59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7ea920-b77a-447f-9474-db8dc8cfc93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ea8862-7287-45d1-ab43-a6ae5dc6162a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab69fc7b-60d5-4855-9f21-c344e5436815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a0c5ef-dd79-44a0-b62a-03f92b817815",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d1101a-1e47-4cda-896a-9d956cbdee28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71b268c-f79a-4ffb-aa02-5dcaa6a25712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9834cc-4009-4de4-b7b6-15fa2e14e645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d202e6d2-0573-4dba-8737-3c7e3861cdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3463a89b-8afb-48a0-b1fb-a29330e32737",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2ed329-b2a8-400f-9de5-7ba484d37f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd48f001-75ff-4861-8cac-24b80411900b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5c3c63-163c-43eb-82df-77f715f8248c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8c102c-2146-4f2c-8ec0-225d02e509c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b273d1-e790-4395-80d2-b909a3a48e5a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ae8ace-7f1e-469a-998b-ec69a3d7c5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fd74b2-dc74-4a0f-a5b2-b097760d5ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc4706a-f65c-431e-b42f-fb9dbaa218b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "492621d9-b3d4-4058-99f6-7afd1f1eb993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a103d1-8a67-4949-ad51-703eff92b779",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aec19aa-4b19-4dfc-9833-a264cd824ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a988942-07b0-486a-b71e-ff1cae78b98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652e9bfc-2549-4aa7-aaca-2d1ee9fdc13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e56296e-43f6-4159-9427-ec5f62dafc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478db8dc-b3ec-47c2-ae98-062fcf89785a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb54e09-fb34-4f15-af5b-f9b117b62fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a42a061-7efb-4fe9-b2b8-801b02848129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdab50ef-2366-4e9c-a382-da55783915cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad92353-ebc1-48a0-8fc5-f3145b121861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a44d22d-6c0e-47e2-93ee-6c88d544afbb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4676b18-3705-43a3-97d7-a53a7e1e4483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01dc2f39-6f70-4148-8127-814af8d8215e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f72edc2-c599-4b89-ae93-6fe1b37ecafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2ab832-cc06-4ba7-b931-2e52c556fde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035389ae-da06-4e77-b840-b2e8662e2b0d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6babc396-d51c-4f99-a549-df75bef58d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b363faa-d05c-4026-8ae0-3d1e3b566485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d121de01-3e9a-4077-8b08-44e14218def2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34c60093-e952-45fb-9771-eba43e102b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b73582-2a17-4de4-96af-8e16c8511e0d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46068ddd-d155-4b1e-bd3f-815c003ddb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5a8fa0-02a1-4c01-bba3-f1bc76326716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de15730f-00ef-4d31-bdb5-258dcaa760e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b391749c-e70f-4be8-a6b1-478e18f75623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243ca3f1-68a7-48e3-953a-f3249073daef",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea0e327-48a0-4510-90ff-778a7a0a72c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c13a521-559a-4025-abcb-90b55986712a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8644d6aa-a138-4bbb-8c1c-7fea0cc73a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e14e78-611a-4b3c-bff0-8dfac5f6bfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de354973-87cf-44f5-8eb7-b49aa193282b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afc5b0e-f1c5-4590-983f-8aa318e5ace1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968c20fa-3855-4b1a-94f6-7552f1584fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e1b13e-f08c-4b11-b2ce-fe37eb761b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "240ed433-ee6b-4fd3-8bf8-0100517fea4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66d4936-071c-4e6c-ae16-f8f3ba60a1c6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c27f8f-9692-4c44-be8a-88b29ae9b875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd2812b-bdcf-406a-bc66-b8e4a64fb074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815d0496-672b-4056-ba27-72c901e3845b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fefd846f-170d-4741-9ebe-0aa8e818cbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab98c1f-1eb9-4507-ab97-368bc05f6acd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68d7f9c-0380-47d9-ad34-2dbc279bbbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbc000a-602a-482d-bd84-72009c585d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69cb4d7-63e4-472c-bb26-7629bbe7a015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f88e663c-c7b0-4726-a8c5-611e56e8923f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab5f49b-05c7-4ce3-9ac5-a6df72242bac",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f85db96-3ad1-41f5-8006-1f248a667121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffea9a1-33aa-4283-b294-65a8eedb0bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934945d0-95b9-40e1-ba0b-c40774432f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "136f3fad-32eb-487a-8b87-fdf4d6b7a38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e766842d-8a3a-4d43-86c5-9306e5474dc8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dec05f5-8b97-42ee-8ed2-0185cb098a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae74e5ee-09c9-46ac-8084-f767cdf1ade4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326778bc-703f-4eac-9e4d-ec7210471947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3003e0b0-e8ac-455d-aeb6-b4ab1e74e269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb1fc50-8195-4f57-923b-d2feced2509c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff4c645-e7d3-496a-824e-7bf3392d4ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1443a409-cc0b-4fea-b9e8-932e75f2a5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2846d5-9c78-42f5-8e37-855419f5c4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9c154d-cb7f-4a23-bde9-6dcee073fb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fa2721-154a-47dc-a485-0fb4d4684ab0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb80d73-f5a3-43a9-b93f-e8c0ec76bfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0012f8d9-3f1b-4b61-a247-501e385bada7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f9c469-1445-4405-953e-7a8d1e1f9835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee14b35b-0fae-4856-8a3c-24c1018a8925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121dffc9-114b-44f8-a8a6-58270b1915f8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aed8acf-6e4e-423b-80fd-18d207e2d7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5775cf-3ff0-423e-aecc-f66feebd6d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b4a977-2463-4eba-82ab-b54462ddbd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81bea4c0-bafb-48ec-9c41-19c4f25b6925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d83978c-721b-40ac-a76c-f6bed34d24e5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b43448-347e-4c9b-ae4c-f87aca05eb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ee9a1f-3be9-4080-a5d2-d9da84da2d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a0d575-ff39-4068-932d-b21a42b586e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "511b78d4-b66b-422b-82ee-d3449ec39bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f192de-d394-43f5-9a6e-8e9546b28b32",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f51287-9ef6-4892-971f-327334d74543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8c0ee7-b7ec-4c24-9f25-349db0611083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5372fbec-e50b-493c-8527-cd8e50f950ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a79a6f6-cfff-4b03-9388-3cfcb32689ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfa7a18-8e92-47ba-b3dd-019bc7c754d9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316d673f-a8b1-4be9-be64-942580618f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93c43c7-13d9-4bce-917c-fdc29af6ac4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e0e751-ddd8-420d-88eb-d84fe9c9bac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ea05be-ffe5-4f17-9a81-b21662c055a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0455501a-f1df-4637-9d69-fc4ed9be88ec",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa120a4-9b7a-4be4-b418-a5e90f08975c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f8b732-e087-4c9e-b8b9-ed72e933bb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddf1ed4-b546-43e4-b276-898af469fb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1fc960b-9f7b-4bff-9bfb-b70645aec823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfc4844-b862-4746-9fb7-b21254910ead",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fff3701-aef9-411d-afb1-3ce5eb4c8438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674171fe-fd33-46aa-a83f-d1c2462db505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a17d66a-5c4c-4de3-b071-474269f828a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b04923b-83bb-4aad-8cac-0b2437d05b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae19bfc-8c53-4ad2-a138-ee1570aabfb0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cc19a0-cf72-4390-bf02-4d25eb419438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5cdd792-6b30-4b29-be6c-5e8e7cce96f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bd0753-b790-4e75-ac8d-9c01b3446784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7a580a-f729-439f-a283-3387f9091c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96877cdc-f262-4028-ade7-8ca29b1ee3a2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811757f2-1a52-4a0e-8ddb-27b577998afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6a71c8-9a5a-4936-99ba-deb4fa96fe5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b80d84-bfc4-476a-afbf-43c0b9168356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7117ec-b970-45bb-a442-096a6c480946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff675e13-2500-427b-97a3-9a20ee2d56f0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93d2201-3f5b-46b3-9262-4d8d68211037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a83f1e8-bf2a-40ee-b9ee-fcd74a149a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48700e9f-15d2-44c8-b9a8-5cb1c59a4ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f02d44e8-ce45-4bdd-927f-f41865404374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09dd34fc-f228-4fa1-9144-8145e8f1bfa2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8332c56e-7250-43b7-b2b8-dd650dfd7079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bcaa7f-8157-4c64-a1f0-64e702c3c791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce52b62b-504b-4767-8cf0-028d437f20ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e016d2-ac92-40b4-abcc-60d07f2e6da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a885e6e2-6128-4fe2-b50b-444aa4d28dbc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9447a7c3-1024-4a55-86f4-a3ebea117e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444afa2e-695d-4fc0-aaaf-7c173fbd5b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373b9824-d0f8-4999-a7c3-fd2d975dbdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded16a62-9ba9-4b1f-bca2-42924f02f415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024eb453-0e6a-4bc4-9950-bc6eca4688af",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350da8c2-3252-4316-862a-58c9cc3aaf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8679f60-fbdd-4511-bf0f-16304ccc6f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a197adf-f604-4693-a1a4-47f17b3cc869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92420194-9ef5-4713-ba77-3868f849df07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75398ea3-bf0c-4237-bf40-e8a643a915f4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de58ee4-3b97-42ae-bb23-5edb64071a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc820ffe-fc35-4493-9dcf-ff2001cbda9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e47fe5-734f-46c7-8bae-9d18554f09b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3378f7-7380-4c54-a0a6-c51bbea93e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b550ac-44cd-4c09-b208-0bca85a4726d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dce807f-b3c2-44ef-abd3-9c50c6562326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e814ab9-f22b-4cc5-8e46-3ee829013822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c82bd3-eb71-40b3-8a9d-ad15e2190faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "436124a4-9cac-43fb-a333-00f29deb21bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3371fc5c-cd66-4bf6-8c38-de08ffa999fd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03766f4f-e61e-4e58-8ef2-1b2b1545eae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98faace-793a-4312-b9da-27898b359c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d39130-bdea-403f-9cd1-43d643b8a605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa6bed5-4c7f-45d2-8a61-c131bd20481a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7b7a4aa0-6da8-4966-8e9b-dd92d090a342",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a2be2c6-8c17-4744-9cc1-468ef510f5c3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5afc4c-f6d3-47df-89a2-dfc34e067785",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0702bf-bf0b-49cb-89ac-c0fcd30a3c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec07099-267f-4bb8-bea2-e2a065475d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e884222-a987-4aba-8773-3a262f514a26"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc0e77e8-f742-4517-99ee-5a999cec2010",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c197d4ec-8c60-44c2-a2b0-a7419f3ebbea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a700181-c673-4eca-beef-27769dd4bfb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86667495-17a1-4071-84cc-640b2cc9e07a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d60ed6ba-5a37-4cbb-82ee-f6b32cacd925",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "362edaa0-e9ff-485a-8c80-1f283df6d6a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b94caad-336e-477d-9b61-1351ab42716d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ea38b38-f5ba-4c3f-b15f-dc43238aa5f8"
            }
          }
        ]
      },
      {
        "id": "a5d1d3bd-46be-47fb-a56d-c9bc6fdefe57",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e43545c2-0dd6-4fc5-8e29-39a75a4832c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edef6177-a24e-49d6-851d-6fdb203b62d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f9bd699b-c929-4397-b490-e6dd66653199",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42be62f6-f347-4406-9a74-6d1698b1b5cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484c4e7d-0878-45d7-9fb8-393e981ebe44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea22fb6-8587-43cb-a860-d23d9f213483",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dd2f46-4c61-413f-b053-c11ecc42bbd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2907493-9c16-4ccf-bb06-d14b336c89b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20808bb-b652-4336-b1e7-802aba30f73a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2112223a-3f28-47d1-990d-3b9e84b41bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834b3730-322b-460c-8cb5-b9dc24671878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56512aa4-d44d-4e8a-af89-461b2218f962",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7151cff-f79c-49d3-8e08-7326643b727b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5981c1b-d012-4861-bdb3-c687298d8109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088c3dc5-4bee-4042-ad68-5379edd21f1a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec021d9d-1325-413a-b710-bb998b686076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0737b64d-8a5a-4095-a1e9-85c86757bad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6ff81c-584b-411b-bba7-5d5999183b54",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2028c594-01b6-4c89-b15a-211dfbdaa650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1db9e06-dc3f-4583-8917-29ac4dba7a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bbdf27-bf73-4c89-aa04-8e2b8ee935a3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1875e5-7819-4608-a9d3-36ebb1c68182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7403ac7f-d8b5-4f86-8d44-aef1e81b25d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1282e587-a45d-4509-bc9e-23c63a413502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bac2b8-d680-46f5-9bd4-1adc9000b948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88dbecd-496d-4021-90b1-8e24e94e70ed",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba7aaff-adf9-45ff-980f-c98551fc4253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4607c5e1-4442-4805-a35a-abd4377cc151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a004eb92-5b7b-4952-ad04-cb998673b895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f585b8c1-82a0-46a2-bc87-e26853b2812a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86742257-46fa-4b28-b431-d3e19aa07455",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbaa0a2-42ed-45f1-ab2d-de5d287d66a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f71e3de-2cd0-408c-9bac-512859313b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c4672e-ffc7-4564-88c3-13de0bbc9f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0664bc-d44b-4969-b180-d6341a30b257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4967eed1-5afc-4d15-bd47-5a8f83679ae0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e137d63-77c7-4482-8884-b59c7f8c8285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e60e4b87-7476-40a3-8db1-9c57654de496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d6e66f-52e9-4a8c-9d5e-2ae466201e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595526c5-2173-4f82-8967-30f1f611b642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a41512d-9d0f-469c-8221-8384a41d76a1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780ec262-44fa-4259-a56c-c96a0c1cdae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7c6568-ec0e-46a8-bc83-fc5b7a2e4a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcb37b2-9802-4b8b-bcc4-eedb1e7987f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b3eb15-9586-4699-a9d5-a2a835509eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cfb03d-9d3f-4546-8cab-eea70563452d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622f5639-ef56-4c11-b292-08588fa03e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a079138d-2fa3-406e-8613-651595057d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e7b071-c955-4488-9155-976f7616dc00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d097cfa4-65c4-4f9c-8f40-8350cba07a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc3c375-588a-453a-866d-de81527310f0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab208b7-1dc6-4460-a747-4a3b85af4b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c94f9fc-c105-463e-8bc9-e4b6d7124b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708f8b53-5fcd-471f-845d-b14b0b32a0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701c184a-850b-42df-a9f5-39c1d0187b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cdb1ba-f719-48f7-a281-6f54bee368d9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af7c6db-3fa9-42d0-9e03-aee352af147d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "065bf0bd-a935-45ca-9231-cd0db56d0b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52a8a10-9fc8-4423-a40c-38fb2b36264e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c123ad-1ddb-4d77-962b-dda3e347342c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec1ef5a-6f79-4fc2-8dfd-2758a2e881c8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fd8f67-b51c-4abe-84c4-36d18aa90d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e732a2-4676-4be5-a08f-8cd397f2b451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5606a30-e448-4a20-ab11-5a1d6b3ad7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32814cf8-d006-4360-9532-2c8dacf45d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6deab577-7867-41fb-85a8-5ab0f7227692",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b993efba-2ef4-45a5-91d8-ff3a28b973f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73899e0b-03c6-4f64-b2eb-fa1e9b0b3cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df96602d-882c-48e3-b82a-83f9ccb5bc31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf3cbdc-8fd8-4d8c-9af7-fa443567ae6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b78c0a-04b6-45a1-8e7b-0d0371ec3c61",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c436b26-1202-4091-a11f-8993d2a9f594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6feb30-ddcd-47d0-8a13-21ebf7a5f017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c6ba6f-760f-45da-95cf-ee335497074b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8397aca-b570-4ed4-8d8a-f39623ec3fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b266643c-a85b-4972-9ac3-35f15e32de71",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bad7eae-71fa-435a-b639-4883c9f014b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d1e709-4c7a-4727-bc91-eecced5fbbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aae9853-2b6c-4f88-b0db-c47a8bae73b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ad43f4-93b1-4482-aea6-b6668d06e53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61072f04-6785-4aaf-b168-9034bee8c817",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4435ec-c0c1-4b9f-9a57-c2f8dff50445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df7da62-9596-43cc-9570-59b4915f3243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42a56d6-7555-4ca5-a565-f7313787d1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6d0d99-c722-493e-ba22-e66357bf8fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eaad25e-cbf5-4602-8609-d7ad6ca642ed",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c6c6e3-e9d5-407f-8a0d-55e7098902a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6660b8-4b7a-4f94-9beb-4bcd2013c229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcf1449-aa81-451b-930c-544a1b9833bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2020080-2c39-40be-92cd-6c6dce51fddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b7cfc2-9b7d-4449-984d-cdf9d23bad3f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f79121-c14c-4b08-bbbe-64d913f16ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af2fdc1-fb7c-4dda-96da-5604ff31726b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "922e4454-cc00-4cba-ac77-7e0e7deb8570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89dff129-8283-473c-a584-8bc8874b157c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a123ee1-108f-4b21-8b5e-8aa915c81569",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc54a0b-738e-478f-813f-fb0a770ebb91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3773f50-8c54-4ce7-8b20-48aec36eab89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726e484c-2dcf-42f6-9bcb-50feb2adbc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a9dd3e-fd6a-49e8-bebe-cb39730ddf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfb650e-5edd-45c3-971a-c23632d4ce05",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701c7376-46b4-4681-ba1f-dfd7bea5582b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b2ee25-de69-4a99-8076-7d89b3a620bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb5d2cc-646d-480b-9a6d-9471a5a5975a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc30592-4f6e-4774-81d6-d6e649fd2fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a2d8e2-0953-49c5-a769-c4f4839ef0a9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fcc983-82da-41fe-b2f9-750922b365bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7563e1d3-c96c-4b3c-a7eb-5f7e10ecb0a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633ff7f0-64ce-4156-8fca-1490cb609cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f09c42-3321-4612-9a5b-d320eeef69bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504d5348-4b6e-4247-bbf9-40ea4860bc3b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c39aa9-a8a2-4afe-abb4-82c8900c9115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95c93b37-0577-48de-99f3-d2fb42f93739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b48f18-d495-4739-8b0a-ca87d99d4a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c389c7b-2ea2-4bd9-b62c-ab3153fd9748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c549a6-6d1d-4e00-b6fa-7b78655370a3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1904edaf-252e-4fea-b5fb-2ff6a8e4fd00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f12e4d10-f6a5-44de-bf94-33e758eff715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b7263c-8753-48b3-80ec-5f9cd87f6f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eae30f7-9d62-4305-ac5a-9017d46aa828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f222b71-a644-4098-bfa8-cab02fb0ae6d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd98b74-f0f2-4f4a-ba7e-057facf08043",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce79c92d-3afe-4d7f-8c3e-4b23af1f6425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f8a744-0b24-4af4-bd02-154392ab75c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1767c703-ee43-457c-b714-3e56e149bcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e49e61-dd3c-4315-ba78-1a80a1ac906d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167bde1b-11d3-4006-9266-ab3b04808fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efedbcb-2505-494d-90ac-36a54c9def48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2856d027-2c77-47a3-8795-923f73a8c0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f89551-5ce7-4398-9f03-e85f291d4986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17b1855-32c5-4745-a725-4d9b6248c12c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0cd9fe-1f31-4d35-b286-11c8579c5311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab555d0d-2e16-437f-ab85-b16077599662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e9ed5d-84d1-4d50-8c99-2c0d7adb3ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677dfa8b-9f4f-456b-b8ec-5e589217ad81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2770e94-2816-431a-a911-2e640fde0e21",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64d2180-5a91-4a6c-8661-8f54c015ac3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85df4ac2-f20c-4d93-b635-a84e115d2263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19551cd8-4703-4aa4-8d92-2747198982ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef80422-19a2-42ea-9db5-17a8d6a33828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5350627-58e2-49eb-859c-bf578cfccfbb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db542c9-6bee-4a9f-b97a-76c370bd953f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b270b4fe-369c-440f-b8fe-e1bc03506612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adad8c4-bcf4-4322-96bc-8b7613679d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c816cca-5f04-47b4-875d-3a1331c980af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34811b9c-4127-4ba3-a010-8671193c68e3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf15906-e7b1-4e2a-a0eb-0998669a59f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a01bbfb0-6a01-4153-bf4e-3f1314754a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff13df8-76cd-4ccc-960b-5f5794b4097b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ef23a6-b56a-4ee7-994c-c93adbab0a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c7eb8c-c9ab-4b2c-a156-8fe441e459d9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d5ea7d-3a8e-4e3d-ac7d-c49cf5fb92d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36c28d04-b162-4ff0-b924-3c40b5affc8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f997e68f-3302-4938-b425-7c5ba95a97bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8715fac8-2a45-45c2-80d1-a9f6f426fb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d367ee0a-8dc4-4708-a940-66913ecba3f4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73d0bc3-1241-480a-b018-077ed50d451c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ee96bb5-f22a-4583-8219-f272e75f30de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c882f24-869c-44e1-adf1-b32961423bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1b0b25-eee2-415b-97c6-470d0af6bc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b3d9fa-6b03-4f94-931d-5af8b32c8247",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a841b30b-1497-42a5-9bd7-fb21e5af0618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88ac1c5-194e-4a45-aa6e-c1b2b327d6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "687db647-974c-410c-bf9a-ae91f8d4aaab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b687d05e-1223-4364-95e2-afbc472b7689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ceb57f4-5fd6-4d67-bdd6-bfc65a828060",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421fbc8f-7f99-4f45-9462-e0b74c6992a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60bfe340-0dc4-4c9d-8502-b4163fae68b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2182079-914a-4119-88a7-733f54e8c959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b324096-8640-4201-a980-198528e3eaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ec0621-4a4d-4c26-9c4a-01e94ea54fad",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33a369b-9aec-44b6-95de-97a4ded72b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb53e2a0-6c58-4801-99f7-218b33d4cdd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "384f5238-6373-4836-bc89-8bc07c9f970d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e791fe3-1de8-45bf-a4d4-c5fb2f499d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f08429-70f3-427e-8c34-e0b9a644a5e6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57221b4b-8c60-496b-ba9f-05ab2c5c858b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b30e02-62d5-463c-ba0d-4954370ff320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa24507e-5501-4f06-93ff-d567836471e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073c49b7-9911-49e6-b702-9b5086bac80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cab8ec-1a2c-4759-95d5-fc4a30230904",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080389a5-eca2-495b-8312-b86c0b34b61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4922f67b-6d45-4951-a60a-023dba5b445c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ce3a7f-253b-49c1-90fc-a4de884ad77e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b23ca5-bbd6-4d06-8111-6dfb97a2c197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e547e3-791f-4897-8980-511e08c443df",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947017a2-06a8-475d-918a-dd3c5ae45f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cae135-2f29-4a6b-acee-c5ceaea0049a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45030d3-5ac2-41d9-baab-0f51b363a4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d6f7f6-d806-4cfb-b6da-414004527da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4eefab-5344-4257-801c-bc8bc80a6223",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34daa0de-826f-4a80-b798-d61cb99a4a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f54b4e-4eff-4894-af8a-b5e9fa79d730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e73db63-7a40-4405-b987-b5d0fd44ca74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1469faf-9087-4a9b-a9a0-26a982985e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b1adcf-6286-402c-a353-9ab651094b4b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1036c998-6da9-49a4-85c1-5eef475997be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafea598-266d-4e1f-a5e2-b847738cbce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4790d2aa-90f0-4289-b5a0-9dd7e0b7bf86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105fa1ea-438e-473b-9669-c152c2f0ad59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7818265f-73f2-4b25-8f67-a064c1e78357",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546bb208-b176-44de-b762-9e7f442cef79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db048eb0-f8ad-4c17-8efc-38cfe2b4b431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31f8276-5055-49cd-9e4d-04ed23aa4738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00482d58-8595-4625-a342-655ae568784f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49634822-a36c-47de-9b6b-38f412850747",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0817c6-7378-4f8d-ab2f-618b3a4ea797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07875ccb-d4f4-4c3c-81db-6c4b63e2d791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4350642f-4c64-4dd2-bee3-2f6926606a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299f2d9a-1383-41a7-af4f-597fc49a3910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec925c7-368a-45d8-995f-c7f1e1469f15",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a1a5d3-5cc7-4f9c-b2ed-c89ba10b4cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71c7cc6-5427-4339-b979-3ce83467f725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59e6156-0d0c-445a-8079-3b0950090b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc15bad-460a-478b-b3e6-69ae7c18b157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e4621e-9636-444b-8b65-29913fe1a96f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5871b61-2e52-48d5-88db-979204ca0ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7f522f-e737-4c55-831d-f447cd39b06f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "838c808f-d42b-43af-ae56-16101a201dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92587c9d-6ac2-4e79-9c91-b11cc91a9818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f75ec92-50b0-45ad-8290-ab0901cd7d88",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2eaa99f-761e-4600-a4bf-8fca26252b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62953055-5cbb-483b-9e37-9a8cfe88df5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f3b280-7139-446d-8972-31b382db32e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b691c348-1292-4dfd-8659-f26eda4f7179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc538c3-08e5-46d7-95b2-9fc15ed00d47",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f6f963-9c46-4c78-9ad0-2c3d7ff16bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483fbeeb-cad0-4a3d-96e3-a3577401d411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d3cef2-c015-49a5-b643-98ebb12a1abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc6e923-3234-4fab-bd17-2f2fa4d716a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a5e37b-36b4-469c-a1b8-8f0b42c81871",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22ce2d8-ea4d-4414-8411-8133f77b75d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0470b1b-b984-4438-9c66-48cb4c82e3aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0582609f-a49a-4ae9-9b76-c7206fc50b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de297a79-1590-4884-a63a-374abebd9505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6d3905-9c12-487a-831e-875e5408def8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10330279-9170-4316-89c6-cd3c4b3cf3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2978153a-8e08-4c1e-8958-fc71f5ab0cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019fedc1-5424-4485-bdb6-2bb7b3e48990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b81435a-47ea-4301-a69a-848ed8ab678b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8f4767-6b27-4e01-b38a-5ddd300a96c3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad00176-891a-4fb8-8e74-24a5fe5130dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831ecff7-16a4-4664-8716-bd543021a5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabbe01b-f54e-4fe0-b2bb-9b17653ed995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ea9cfe-547e-4cd7-b566-2238af2acf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094a0e65-f408-4a25-a4be-d70b488866a9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad4b49a-153f-4468-bba4-b6ea7c0420df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5d22d3-8555-4a97-92ea-2796cd36f8c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae232ce9-648e-44b8-9b4d-2f262e586681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7ef5aa-76e6-4f66-a29b-bd8461908f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e20522-e6db-4273-a861-0a78a45afa98",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17eef2fb-eaba-4aa5-90f3-2ebd9d4a020e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb7f714-db9d-40e6-851c-4ffd9b787609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed894260-2b61-49bf-9ece-4a6160fb2a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1b78f1-dbbe-422d-ac58-e4f6668b4df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b0a451-6987-47eb-a12e-35a045ad4af3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39115d1b-b529-496a-a27d-ac748b211095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7ec83b-936e-4db4-bfcf-907976d99b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df60d895-fce6-4596-b104-375f2be5de5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea258e4-7afe-4356-af9d-d179698a339c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f08963-6702-4fd0-8e1c-cc319c052b18",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6155a344-8db4-4126-a17c-92ab7175cd4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fccf1bd-064f-43f0-9bba-f805eb6a9190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddfe484-18be-47f4-a5fd-dd88c30a73ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db0e787-62b4-4244-a6a9-f2aa6491561a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8549e9e-8f08-4fc5-bb3f-20b176001f85",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e2d166-8b90-474e-baf8-110ee6506c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fb44ca-fc7d-450e-b66e-9ffd50749dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e69821-e446-4634-a369-151c4161a4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70627e8-fada-4737-9f5a-7490190edb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8049e821-0a53-4d6c-8524-d7f88ee9b593",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8ba58a-5ab1-4c29-937b-ce522745a914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffb0d93-26c3-4f5e-ae41-bec2cd9d3b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4d1214-b8dc-49c1-b94c-dc0033afb19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d035570a-5d72-4559-88d6-1a0a2767d793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b97cb2-d104-4432-b198-c9537bfc37a0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85661fc8-c1b3-436d-96b3-28054908f0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28c5c05-1131-4948-9ebc-8e28c528086a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848b92cf-6834-4aee-ae12-571b2775c955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdf8116-a862-4827-9b5a-8f66cc1e6591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639b9700-c5bc-4052-92de-0f1005a29b49",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd75dfe-d173-442b-b6cd-d8d3418ac15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5b7f78-da31-4241-89eb-d89d4a45edfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d0ac13-00dd-4ae6-8c91-583ce728f708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59edc238-8baa-4b3c-b69e-4aeda4048bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30518d7-f604-4c5a-9396-fffa10238427",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e06f37-f9ad-4cee-9156-06e7a5aa76f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe26166-4aa4-409b-b577-a6be1af96c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c4e856-f672-4618-b1a8-752960efa52a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359dd610-5497-4774-b057-850ad17ab650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f2c1d6-b24b-45dd-86b3-33a3de92b8cf",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33fd02a-81fc-4446-a990-8b2f6612aaf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614dd6a4-a401-4a7b-8a6b-85c54bb5da36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c3b720-9da7-4940-9063-85fd0b07a8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cc1c75-4399-481c-80e2-a1d02662e990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e3dce5-4d18-46cb-965d-85ac7f920d85",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baeb64b-9155-47e6-a6cd-e2a0537e2a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5d2865-8b36-45c8-825e-5557314c7519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdce579-6678-482b-a2e5-4e181e687527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9083e2be-1467-4144-8a87-4216f0352f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109f3551-189d-4b53-915a-1f1009ecd87e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a4772e-eaaa-4c10-b721-ab5db949980f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445011c4-afa1-452f-b7b4-bc0ca6267e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f05beb-e1f9-4adb-9139-f991bff916d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6fa7f83-3aa9-4cb4-b525-7a7fd089ddac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddc76e0-7929-4135-a3e3-c94fcbebb327",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a92aca-3351-45ac-81a7-a0a39b86d691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dce66012-fcaa-425c-b76d-6d5f85249fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0706e116-3ce0-4d8c-abf8-95d2a8f614d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c9fbae-651a-450a-8dc4-bebca66a8729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980e46a0-d581-4af8-a9fb-eca5f9594e02",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b3610f-814d-443b-9d65-4a19617cc335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef601e3-1f30-4a1d-8a24-84485f4ced0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3127842a-428c-4bd6-834a-657b90f567be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c277f08d-996f-4c83-b082-3927854fbb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c27945-13f0-4b60-9915-e296eaa36b08",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7fe608-5e6a-47ee-b368-d2674229fb3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96c5db94-2da3-4239-8b8d-2804abcd774a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5244419d-f8d6-4f45-bfc2-88b848a1e2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47de417-6265-47c1-9b7b-5d394208ce27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c550023-fe2e-43b1-843a-6bb9a9ec480d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23894cb5-1fe1-4eec-b5d0-9233a5b581fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9360562f-6412-4d94-b5aa-a27021ae2edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9197d29-80fd-43d1-a763-f71a4975cdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172bde0a-109f-407f-ba47-f60c81df2802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b90256-f37a-46ef-b823-ea758be0cc2b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3840534-cf5c-4a43-8c56-d9c6f2d90210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1836a1d3-0bfb-439a-b7c9-0c1a57aa615f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c477dfe7-9a33-4663-8a4b-9b28474e384a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033a6011-9ec9-45c8-bf25-30c7808c4f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12eabc16-cf85-4905-8015-abc176578055",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9487a46-54f9-4fe6-974d-5f4815b691f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0850544b-fd39-46fd-a07b-d0adad2a8b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649546c5-79eb-4215-a75d-e3704437aeff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8753684-8f7f-448f-8858-c814fec5f24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bde401-f35d-4a07-9650-fd4edb550077",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4d0f31-ffa1-42ed-9d3f-4cdfb029e943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa6bbbc-13e9-4303-924f-61704e6609cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b69b70-83d7-4cd4-a389-a15d6fa65d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f53f13-1bb3-4533-a2f8-8e6a7237f56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aebafea-41b6-47b4-a06a-73c358a2adb7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146eff92-044a-487c-8073-c224b2d980bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d554cad6-6988-4789-b6bc-e124f8ab6e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0efb14-16c6-4ba7-b293-fa55c7784481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92832795-8da7-468f-b5fa-f449b411cb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834900a2-e172-4ed1-8023-410c4a6d9397",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a031bd-b94d-4e75-8748-c7cb42d068bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ae40fd-8626-4868-95dc-0ecaf75e25cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a944d6e-7f0f-4a3c-afc8-141ee41c2453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c23998-fe17-4e4d-9287-1040eb6fc2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369a78c4-54c3-43f4-b6b2-e39b04e78bd0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ff7dc8-3038-40f8-8d04-d6667be204d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26650b70-e364-4177-a390-edabe3e1e61c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2593cc-f8aa-4651-9354-9fc8eda1313e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e28cddd-5365-4a8d-9b1c-1889b70cceef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cd1c1f-994f-498e-9656-f6674ec3e23a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d2e54b-64f7-4d8c-928c-8bf443da6187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d2732f-ac04-4e0f-a26e-7023332d8e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6279eb7-bf26-4b3e-852f-ad27179a16ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac82ff0c-83da-4976-aec0-b03c4ba4372b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f78a36-4f0c-45f9-ba41-3ff3b2de6ec3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e99f94-f82a-4035-98f8-cce3373f4b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e760682c-218e-46ae-b3b1-69174964b609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8fadb3-a626-41b5-937c-1ddec8abea25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2610f0-ea28-477f-9d4a-669e155a1544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19debc9-0407-4d70-9724-28addd452df3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b78457-f0b0-459b-b11d-36e6ccf13bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f10ab49-3b11-47e6-b24b-08f802de4349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24704ba6-112e-4fe6-9943-6bc13b49959a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d4a2f61-8113-40a0-a482-c318f6ab76c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b2240e-1b43-4a5a-885c-a21e188ddbd1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd577e8-5881-4cc3-90f3-394cc208c51c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e796569-ac2d-4713-9f70-136dfddfbb45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba2d0d9-32f3-47c7-bb35-0599fb7a3de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86f36c3-8d38-4a41-a907-e857c24463f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241b5760-c3f8-4dd6-848e-ab0ae4555e36",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6c8673-37c0-4745-8083-1a997f139d61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b44abc99-49ab-4aa8-baea-25e5dc1aafb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f281ac1b-20ac-4e26-a297-df9c55f19312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8100a3bd-24b8-47ea-864a-bc412bf857f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2943d29-7e02-40e7-a393-9f2361fb48f0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27b6de4-fdf2-46fb-9b23-62c5a0967003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b66b5b93-0ca1-4415-9397-4eb4dd87cbf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efafd63d-653f-43eb-84a0-944a8b80fd83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8194b1f6-8eaa-4e70-8371-4998712f5e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ab20f9-ab63-4812-a82e-3e0380c3a4f3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59a3544-0e19-4c43-aa4f-4a85e5ffcb8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca56628-2ea0-4fef-a1a1-998a3acf45aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01fec4a-d6aa-425f-a01c-99e6a8ffb7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01a54c9-c55c-49dc-9556-72514150e7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05dbbce7-273b-4180-b04e-02e5db3559ee",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905757bc-9345-488c-b3b3-88369ca16113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d5b13cd-ce8c-44c3-a76b-529b7304297b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb6a325-5fc6-4f6e-b18a-18d309e6554c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3254cb71-09a1-4a1a-bc7c-428737d63679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbeb4f0-a817-4bc1-a9cf-9e53d17c8f95",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c78f4d-784f-4c32-9a48-a475fef5cbd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce87dc74-8f8d-4413-ab9f-21ef1c53a9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301c54b5-088f-4af3-ba16-422bf53f5e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336774cc-0da5-4257-ba96-b5ce078c636e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd773b3-9e00-4609-924b-9e5ef05a7e3b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bd1aed-6e5c-4d50-8b47-a938ea311efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81f90e69-a902-4f74-b483-fa74d01c6fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fdb388-47eb-4f4f-b4a1-36a12eb4e7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e865e12-18dd-4da0-a5de-e1a47cb1e2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3329383-beb8-41fc-9861-2b99ab4f3046",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65201f0-e3c1-463e-b757-8ebcafdbe024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77114da-db4b-4ae5-9c11-bfa7cd3106a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63190b28-342c-4dcc-a211-4c7405dcd5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a02ad7-ce9d-42ca-9da2-0ad95fb27b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37cc712-81c8-4426-9cd6-70ec8e2f0cb8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2d5bb8-0d47-450a-a23e-1dc32a3cf799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c950868-bd5f-47b2-858a-b24731d3374e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e54a11a-1cf1-45d9-8cdd-4193fbea5c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e326bef1-a98b-454e-9155-4917c54ce51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0dddcd4-cbf1-4f67-a253-2d2b98748f59",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c25dc5f-9cb8-443a-9205-4f732583c98e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3609eb85-bf67-4adb-8958-8ccc66c63fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88ca1d2-a1dc-4d42-9ed0-0ca5b9729b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566d2aa6-027e-4746-86cf-4b0f125b42b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7c8d57-1f35-42f2-a74e-0aec14f2b8f9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c7614f-a15e-439c-afb7-f645475d45cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7893f87-d066-4128-9777-ff614831ae7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c10010-7817-442e-b3ce-1a3387978e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f5341b-31bd-4720-843b-7c874bcff298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b7f331-204f-45b3-be41-213ec9477169",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0294688d-8647-4ea0-9dd3-ef224cb358fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74cfe0b5-256b-4491-a37d-da53bea4ab33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4402dd17-696d-4917-9fbd-c3f66346b10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23df9750-8d23-4aba-9842-d86e161caa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442df4ba-3089-438c-9dc5-626630006bbd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0d244a-b5a2-477d-8843-d0bd1cf0bd1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9f93daa-b304-4e24-b1b6-b0f0ecbbb9c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c1f421-4620-46cf-a337-9ca6dda86633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5f9ef4-c155-486f-9c6e-5726b3b73a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5ace87-dee5-40c9-a8fc-26a66bd792fb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd11b492-7dcb-4e2b-a053-8c7b671a2886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbbab097-8b61-45cd-b687-5b8a45805b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f413648-3267-492c-a67d-a4117a87633e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2575e599-0e5f-44db-9ada-17655c6efffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f733a99-18f7-43cc-ac03-d55005bcbd56",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac551e6b-92a6-4637-8e3b-ea62dcd83d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db0b3143-c36a-4404-9b39-835aa263d246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d8b1d1-6f75-43e1-9e6d-fcb3d88cae96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e96e783-7137-4960-8701-dc4a90c8b987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326bd8a0-8604-4202-b886-85d5c3b2ef28",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda9265f-7f1d-45f8-8017-b67e71d47a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9375016-ed99-48e3-8121-36e1f881d34a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b70dcd0-f2b1-48d4-a6a7-cca9f42883df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a21b58-caf1-4277-b66b-2d9b68150c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a138031a-1a0c-4a8c-b797-bdb1da5784c3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2316306e-8e4d-4336-94a7-80371dcdf995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9136292a-8684-49e1-972f-b8959ec3534f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d715620-248a-4869-a93a-d9ed29b4e869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237cefd1-0be6-4abe-b2d8-ec2d690ba3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63de1761-bee7-4ea6-a26a-9b46cc5fd808",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663e353c-4d1f-4fd8-931b-1a6811affb18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a13a0a1-3198-4ea5-8229-1048ea3056c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cfbf37-828e-4f72-8eb9-ca71ad9e1f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21295b10-ab12-4877-ba69-419a0b53ce03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36358f78-af39-4169-854a-d5ebc2a9911d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8faf9ee7-0248-4a9d-bfbf-cd901114d910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03465850-38fe-4900-a555-a968e46ad751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d47cc5f-52bd-457b-9717-d1f7ab8ca21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1227af23-cee7-4de0-bef9-95528ed03010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b31065e-752d-4c4a-9cc4-7ce4f0e4c337",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec22879a-a44c-4eb7-babd-a015c76fed91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "776e0ddd-908e-4e23-9d0f-8d61a1ceabe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d8a05d-62e9-499c-8b1d-df1fec335f69",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58969b0b-e22b-4d06-9d03-f96c36b43344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb5cfe6-a922-497a-89a5-76642746cc20",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2309c212-455a-4fcb-835d-51a2c53eefc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fa9c9c3-a36a-44c1-84ab-2162f48eb67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e67e526-1d86-45cf-8b2e-84430af7f647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03149885-9d9e-45d3-9916-fc28a7edbf18"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1465c5b0-98e2-4413-9f8c-c50946bbb70e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a093d87-f612-4682-9435-78e710939cd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ea3e381-3c26-4343-b8ed-5aa9083f18e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46ef454d-0d3a-4014-85b4-0e7281a00e7b"
                    }
                  }
                ]
              },
              {
                "id": "26fb59e1-356b-4159-b014-2a087ec1fbf2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5cbecac-2881-45cc-8522-d881c7e494e0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c7cec5-87f7-4af1-85f9-e3d39ee82f0a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "457569e8-878c-43f7-857a-31f1e4f06f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94ddc74-adb2-4a0b-97ad-6472cf0c7ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19cf399a-7c14-484e-b6ae-5f88c88a7c5f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e54d481f-5659-4d5f-b997-2db455f5174e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b78a81ee-9bcc-4762-a91e-95398d3b6c81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66fa494a-e609-4b75-afc5-d2804e7bf699",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29d0e0a4-2a3f-4263-bdae-61d38a394cf9"
                    }
                  }
                ]
              },
              {
                "id": "b55676a7-2a67-4d43-b9f1-9b4413ae1667",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "83635180-1fc5-469c-ab43-9803f95a8a89",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9315eda9-9c71-412d-8960-4d003a45aa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0e293319-aa33-4074-a4aa-68b938213812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df7ceac-237c-4ba8-8494-2536f78e6441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9220f16-0cf8-405d-b6a1-5c7eeb5c4233"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a793230a-7ea6-4fea-b9c6-9a712e1b54fe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f27222e-2684-4eb6-b2d9-8314f0bca147",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2aedc3c9-f373-4db2-a50a-3da51f18a5dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "afe21489-d7b2-4c77-9864-164fa836f3e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a26ddcc-07e6-41c9-b09b-deb30ac7cf8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "652015aa-989f-4e0b-be07-a7f4d73354e2"
                    }
                  }
                ]
              },
              {
                "id": "52eeb171-9fb8-4ee4-8272-1de2443afbaa",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d7db3af-b5df-43a0-ac05-4383fdb5dea4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dd520b6f-5423-4140-9b17-f8a0b70e6b4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0504090e-979f-4d06-a5e8-ab8b4c261fa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2fb81d0-21a3-429c-b0f8-d7e8e03d0166"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "362af6bc-0eb0-42ed-807c-d75dd2428e13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "99b5364c-45d6-4aeb-a43b-1191842c5cd9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6259f958-cce5-42e0-9913-cf896cb66281",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ea8140c-723d-46c7-8161-c4301b50372b"
            }
          }
        ]
      },
      {
        "id": "2a95cb3f-dc06-43bd-a830-099fa66021c9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "353585f0-75a8-4de5-a424-6728e98b7c25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8ad35e9-d55c-40e5-8ecd-1a62b9d9a2cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9447039f-4d0a-4bbd-9452-a032a7a732f7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36dd028-525a-4ed6-bca4-699e73e556d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9ef58bca-2b9a-423c-b86b-37097b75d105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1916e68d-1db2-4308-8be9-351bdcae8382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97ddb3c6-b40e-4937-a850-d27d4bd0e52c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "514ae40e-5db1-4483-b892-31c0e11a3f2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e277dd3e-3cf3-4ca2-a6d2-162bbf619912"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb92944f-e81d-4ac0-b302-6c63d0527119",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa9dae5d-e20f-4542-ba99-2d63a6edd366"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c018bef3-babd-4056-ab7c-a83b34ce212c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "268ae7e1-546b-4743-8424-00a063cb5a8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6465ec02-1f89-4eae-bb12-5c62fd3fe15c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6562c3e4-a4aa-4ba1-9661-c2e6ce7421f4"
            }
          }
        ]
      },
      {
        "id": "69600b6a-e534-4c77-8e58-7199926a4159",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "73ca2d80-93e1-4b88-b673-8eb6cb45f3c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da8f1c02-c275-493e-824f-b3aba393631e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b923070-fdc6-4a33-805b-1d3232c1cea9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890ee453-1719-460d-896b-56dfa42df14a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc68a138-5966-4f11-973f-f18bf795c937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e50427-a097-4b5f-a74f-9af17336d48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52f59119-f9e5-40ef-b05c-8452f42e1207"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1e74cd6-52b8-4390-aa58-607d3dacae37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c51e791-024b-48ee-bf6c-4681f2f637e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6cec594-b897-49e9-b108-936cde470ad1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b334853b-a285-4a7c-b49b-c773c7721a35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d5a4e8a-8a64-42c4-84db-aaedab57134a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70066688-b5a0-44bf-80cb-46b8e2fa9d6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "897ea4fe-1da1-43b2-a893-36922ca49a94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ccc58316-bbf3-4c82-9460-516d70f0d5bb"
            }
          }
        ]
      },
      {
        "id": "e2d052d3-69c5-44ac-a0cf-49b5369bbd41",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "002c2102-12de-4434-b3fb-95188c3e71f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "773938f8-0e7c-4b41-b788-9ea6a699db41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74316356-83d8-4e6d-818f-b55484e93194",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224b3c43-4d55-424e-9b2a-c7338c110c96",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "709c5b65-51be-4e4a-9205-2129eba2ae2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdde67b-edf6-4cde-9344-fb356dfe6c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f06144a3-675d-41aa-9c1d-044b29a5ab72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a2f8fe0-1145-4da8-aefe-6a0088d2bfc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b5bbf70-9cb9-4897-944e-c5e50f926af2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2aa8e2d-4180-46e9-af64-4f9a12533235",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc895d93-6951-4cf7-be5d-f370a908a7ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63f62e16-7e1e-4039-983f-72f67cf40263",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1c39ce85-64af-459b-b125-bf3ddac9d8f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "217fc106-a92f-454b-8f1f-f0df104911b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c330dbd5-d199-4354-bcbe-c82745b8983b"
            }
          }
        ]
      },
      {
        "id": "5c5e4c6c-c349-4517-8354-291667a78896",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dce97091-6ba9-4fa5-a461-c5560a1db543",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "edc04366-72fd-411d-a7d2-5cf1978d3a5a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d1bb489e-011b-4139-8616-d06035e7f359",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b981e5ea-fdc7-4b36-9f78-3db747879f8e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "786fd650-688d-4598-983d-9c375d5b9222",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 141.75087719298244,
      "responseMin": 20,
      "responseMax": 2840,
      "responseSd": 323.14346014203045,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702255015089,
      "completed": 1702255065130
    },
    "executions": [
      {
        "id": "6004309e-d679-4915-9f2d-ec513a4112eb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e617bff0-382d-485a-a43f-d7feb445b1b0",
          "httpRequestId": "01e19b0a-6e39-4246-821f-661ff4f5b474"
        },
        "item": {
          "id": "6004309e-d679-4915-9f2d-ec513a4112eb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3fddc14e-8fa3-4007-a74a-a73e3906103c",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "59d4c2ca-e4ec-4f7b-8c72-02b7a5f50d15",
        "cursor": {
          "ref": "b8049798-8e0c-4c42-96f8-f131c265e9fa",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9e2fafb6-35a3-4587-a4e2-f098ce9359cd"
        },
        "item": {
          "id": "59d4c2ca-e4ec-4f7b-8c72-02b7a5f50d15",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "98566b35-12f0-46af-a8dc-b1d9b5cf208c",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "6c341cdb-3600-4944-a205-1dcfea419de7",
        "cursor": {
          "ref": "62e82c6d-5c9e-432d-b5ee-4a7757d73086",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9847d700-1212-4054-9fc5-b10dff81cb71"
        },
        "item": {
          "id": "6c341cdb-3600-4944-a205-1dcfea419de7",
          "name": "did_json"
        },
        "response": {
          "id": "abd2c4f6-9cd5-4106-a1cb-56d5df332a6f",
          "status": "OK",
          "code": 200,
          "responseTime": 529,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d45c4b7-f7ef-4e64-bcc4-d387b9475faa",
        "cursor": {
          "ref": "9cca4c83-1272-4ed7-9cee-614515703a48",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "550873ad-cc23-4cbc-abd5-370c77f34c04"
        },
        "item": {
          "id": "5d45c4b7-f7ef-4e64-bcc4-d387b9475faa",
          "name": "did:invalid"
        },
        "response": {
          "id": "8242ee92-fdef-4c68-89fb-cba1851bf5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d45c4b7-f7ef-4e64-bcc4-d387b9475faa",
        "cursor": {
          "ref": "9cca4c83-1272-4ed7-9cee-614515703a48",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "550873ad-cc23-4cbc-abd5-370c77f34c04"
        },
        "item": {
          "id": "5d45c4b7-f7ef-4e64-bcc4-d387b9475faa",
          "name": "did:invalid"
        },
        "response": {
          "id": "8242ee92-fdef-4c68-89fb-cba1851bf5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d98b004-e959-447d-9b6e-c1bf40ee67bb",
        "cursor": {
          "ref": "5444a74c-6a06-43cb-81f7-497b55f62fcf",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4650e9ba-1d18-454d-8c54-bbd338da702f"
        },
        "item": {
          "id": "2d98b004-e959-447d-9b6e-c1bf40ee67bb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "05d4deb6-2930-4ff3-9aa7-766aa979b43b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 160,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e9e970-6fad-4510-a38f-37f2c90df1a6",
        "cursor": {
          "ref": "71ac2dd4-ab98-472b-9abd-8b73088ad911",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0c852f62-e304-42ff-bdc4-b0ba3e0fe912"
        },
        "item": {
          "id": "96e9e970-6fad-4510-a38f-37f2c90df1a6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ce8f5c43-2d75-4603-8967-db9050eb86cb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 83,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73543fb6-6281-46a0-9a14-d733d91bd73a",
        "cursor": {
          "ref": "bb0c0067-b56c-4bf8-8442-a5430d9f032e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "61ea9ea0-3942-4076-b3d8-e37e42332709"
        },
        "item": {
          "id": "73543fb6-6281-46a0-9a14-d733d91bd73a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1b817464-769c-4713-bcd9-477e31c593cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3840c785-3bda-401c-8e56-21f31fa123be",
        "cursor": {
          "ref": "5812e2cc-6bb0-49f2-abd9-c3bc20b69e6a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a47d594a-5391-48f5-972e-0d530b2b78c4"
        },
        "item": {
          "id": "3840c785-3bda-401c-8e56-21f31fa123be",
          "name": "identifiers"
        },
        "response": {
          "id": "fcd5b31f-9f55-4e04-a1c0-c29744604d76",
          "status": "OK",
          "code": 200,
          "responseTime": 347,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560436f0-7fa4-4bb0-825f-511137291a35",
        "cursor": {
          "ref": "b3938470-5a45-4884-91c4-2b2beb554ca8",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "00033369-78f2-48d0-b7c5-fd044ee94c37"
        },
        "item": {
          "id": "560436f0-7fa4-4bb0-825f-511137291a35",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8e22cdd6-e789-4d73-ae85-522d0ce7bfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8eadb5-414f-4c7c-9f2b-49e6912dd2e4",
        "cursor": {
          "ref": "99b96a73-ef8b-4673-8e26-cecf3d5bed98",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bd302462-a277-4732-9d21-2afa511f4753"
        },
        "item": {
          "id": "fe8eadb5-414f-4c7c-9f2b-49e6912dd2e4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ac4be3a4-010b-4ad0-a951-a542210a4560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa089e9-8d40-4704-aada-04d1d75b4c06",
        "cursor": {
          "ref": "be8b1cd7-970c-478c-9035-f9a54702203e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b85ec23e-d0ff-4dd0-addb-9fa5944584a7"
        },
        "item": {
          "id": "8fa089e9-8d40-4704-aada-04d1d75b4c06",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ef93c72b-a80c-422c-af1f-17536050b286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55f453a-082a-415d-9515-03ec1e95d11b",
        "cursor": {
          "ref": "d8f3c963-1dd2-45c4-95d2-9c256acc848c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ed70e78c-0f9e-48b9-b943-f586d78e0b70"
        },
        "item": {
          "id": "f55f453a-082a-415d-9515-03ec1e95d11b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "653310eb-f558-4aac-989b-cbd37983822a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326c1aed-92b2-4509-b955-456678939a2b",
        "cursor": {
          "ref": "04d3107b-7f51-469a-97ff-60a36317dee0",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d65712a3-a413-44b3-90ea-e40e8113a6f2"
        },
        "item": {
          "id": "326c1aed-92b2-4509-b955-456678939a2b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "390fa039-d6b7-409b-a8b6-7990d7baf989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de467bc-e07b-4a32-9599-652ace12bdb2",
        "cursor": {
          "ref": "a0006beb-666e-494e-ac11-8af9c61d8238",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "701d0322-445a-43b0-b204-cdfc8f466012"
        },
        "item": {
          "id": "0de467bc-e07b-4a32-9599-652ace12bdb2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d1e377eb-2ab2-44f5-8eb1-07bca72a04d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcaaa908-e187-4cec-b057-e59e0e4ce4e7",
        "cursor": {
          "ref": "28816808-cf0f-49e4-bf5d-e38b36b29f88",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ce95bd2e-7f97-402c-9e7d-c733a70405cf"
        },
        "item": {
          "id": "dcaaa908-e187-4cec-b057-e59e0e4ce4e7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "52bfc0ca-5f2a-4777-8d80-33d67dcae3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa86cd4-3d52-4405-bebc-817206d8f8f8",
        "cursor": {
          "ref": "81f92e64-f8d3-4a4c-9281-015d19b43be0",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4ede45f2-23a9-4366-9513-f9a63276cc07"
        },
        "item": {
          "id": "baa86cd4-3d52-4405-bebc-817206d8f8f8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "10a8b6f0-f423-44b5-8aa9-ae48a57508c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfc0b3f-fe56-405e-a46b-4fb357f5d79f",
        "cursor": {
          "ref": "3da6fded-ed16-4f3f-9906-7ec726efe2ab",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f4918c7c-1da5-4517-84c0-e08d2f5a3dac"
        },
        "item": {
          "id": "0cfc0b3f-fe56-405e-a46b-4fb357f5d79f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3fa7751d-6044-4f41-9f35-3ac3e19fb22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7946ed25-8043-43a6-abe1-4816155b81c1",
        "cursor": {
          "ref": "426f462f-e5de-42f7-90a4-9037be0a1d20",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "352bb535-51e0-45ae-9ace-e3cd74fcab60"
        },
        "item": {
          "id": "7946ed25-8043-43a6-abe1-4816155b81c1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "70d2799a-ae7b-4cb4-8956-97533ea4de9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d4c6e6-5453-49d3-9cd5-11f33b035876",
        "cursor": {
          "ref": "922ba874-1c0a-4ebb-bc8e-db606bfc3ddb",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "686a08cf-8d49-4781-9dda-3b99d9db2b57"
        },
        "item": {
          "id": "93d4c6e6-5453-49d3-9cd5-11f33b035876",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d914b927-16f1-48ef-95f4-7e8efc256159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7679579-6bf1-475c-8ca1-14a8c27c9480",
        "cursor": {
          "ref": "df8fe064-b0b2-423d-b8cb-d7da2ee9c788",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9f7f09ca-70b1-4f22-801a-fb24d30dbfc8"
        },
        "item": {
          "id": "b7679579-6bf1-475c-8ca1-14a8c27c9480",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b17c048a-6e65-4712-ada6-61879d8d6f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f244876a-909d-43e0-baa7-4efb907209d1",
        "cursor": {
          "ref": "bdd71567-8de7-4be8-9b0b-c3c4eb5e9083",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3771ba53-c205-4bff-a889-433e8340a6fd"
        },
        "item": {
          "id": "f244876a-909d-43e0-baa7-4efb907209d1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d69986e6-cb5e-4005-9951-3910d8f53b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10a3713-713b-4f94-878d-db72bc153803",
        "cursor": {
          "ref": "04fa49de-a9c7-4b63-a8ef-c1c962dd24a7",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cdc0863b-6c40-41d4-bce1-d5801b9cf3e6"
        },
        "item": {
          "id": "c10a3713-713b-4f94-878d-db72bc153803",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0aebe3a7-fe4c-4fb3-89f2-a39a7a3c4cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611e9703-c7bf-4839-8999-f8b7fe42d9f5",
        "cursor": {
          "ref": "2aed6502-4205-40d6-bc5e-364313879ae8",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "599a80f0-0bb3-466f-b45d-39d7a021f44e"
        },
        "item": {
          "id": "611e9703-c7bf-4839-8999-f8b7fe42d9f5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3475ee23-2d35-4f6e-b887-dacd8f2c98f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12ce1a9-6f15-49e6-88cc-4dbc7c1af94c",
        "cursor": {
          "ref": "4ef5f581-59f0-49b2-b9a1-384d8bde5ed8",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e2d85ba2-89a3-4048-b47d-9946bcfcf7b2"
        },
        "item": {
          "id": "e12ce1a9-6f15-49e6-88cc-4dbc7c1af94c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "096bb8f2-c115-4910-964c-52e08ba2fb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b19ae31-df5f-4314-991a-ca8f42763fa1",
        "cursor": {
          "ref": "a8a9e47d-ff1b-451a-8e1e-e5951d7ddb76",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f48ae440-a707-42d6-908e-569dcfd9f76c"
        },
        "item": {
          "id": "2b19ae31-df5f-4314-991a-ca8f42763fa1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "92518fc9-3e1d-417d-803f-dc71c02a7a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a202bf-2fd0-4e6b-990d-23ae7681e309",
        "cursor": {
          "ref": "a557cb53-6fbe-460b-aa91-c0e9c3952674",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "39d11b70-6836-4164-aa26-4a6a68934f84"
        },
        "item": {
          "id": "69a202bf-2fd0-4e6b-990d-23ae7681e309",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ea5dd539-a983-47b4-b1e4-de073765e757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d918e9ab-7730-446f-9b0a-39a895fbafc1",
        "cursor": {
          "ref": "2be06ab6-ba5c-47b6-8f87-c5aa9dacb9de",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6338f827-8b9a-4e8c-b67d-aba3bd164c14"
        },
        "item": {
          "id": "d918e9ab-7730-446f-9b0a-39a895fbafc1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d340c01f-3fde-4597-9529-888732c13fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e06045a-1555-409f-b157-0fea3214c14f",
        "cursor": {
          "ref": "0f87d7b2-8a44-4ad5-be0e-2be53c2b18da",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "49d045ad-b660-4315-8b1e-5e50806c6074"
        },
        "item": {
          "id": "5e06045a-1555-409f-b157-0fea3214c14f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ae333716-0983-485a-bb71-a3e63eee8dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6ad31e-cba4-4e0f-9133-a8b8e15224b3",
        "cursor": {
          "ref": "14b6cb55-5956-4bed-8967-ca0bb8def162",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "62f5bc55-e053-4ae2-a3c2-4f261981552a"
        },
        "item": {
          "id": "5b6ad31e-cba4-4e0f-9133-a8b8e15224b3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fcf4b990-7ceb-44c5-885c-b49b0821d793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcae91c-57e7-4c2c-91bc-9ec4e66f188c",
        "cursor": {
          "ref": "548bb9bb-c8b2-4faf-9796-eefda2165c90",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f493f73f-b713-41ac-ab91-3e157429a82e"
        },
        "item": {
          "id": "5dcae91c-57e7-4c2c-91bc-9ec4e66f188c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6a9b4ab5-a033-4291-966c-92cae8019c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e1b299-cefa-4248-beaa-ce28f09bdf0e",
        "cursor": {
          "ref": "746d105e-fe2c-4f3d-bdd2-f60a2a5b8147",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "78cec596-43cf-49bc-a944-a2acd12045c2"
        },
        "item": {
          "id": "30e1b299-cefa-4248-beaa-ce28f09bdf0e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ab81de73-cf26-4962-beb1-520b0820cdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0bd005-fdf0-449b-af6b-c9bc79d76e88",
        "cursor": {
          "ref": "ff2ddc6d-c187-4a10-9981-20937fbb8fd4",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f2415d6a-adc4-443c-99d6-d5c59398ce3f"
        },
        "item": {
          "id": "7a0bd005-fdf0-449b-af6b-c9bc79d76e88",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4f531499-a19d-4ac8-92fc-a367ac727d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ff4ab9-63f4-424d-8807-919bf047c848",
        "cursor": {
          "ref": "df91f4be-c100-467b-82ba-47b921077b6b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "af83c45a-7faa-475a-beed-683232ea708a"
        },
        "item": {
          "id": "b9ff4ab9-63f4-424d-8807-919bf047c848",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "aa0c6064-6987-4a16-9bc0-f6f1295eacdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c65a55-6948-4ffd-842e-614b76ea1797",
        "cursor": {
          "ref": "6fcaea73-3110-431d-bffa-04c3107a6594",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bcd90d75-82fd-4284-9411-0c40152be412"
        },
        "item": {
          "id": "96c65a55-6948-4ffd-842e-614b76ea1797",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f704be85-8b49-4caa-bb3e-7f1f3de80348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e522b0e4-29d5-4b89-b778-a256faa9525c",
        "cursor": {
          "ref": "c1b9fde8-3c33-4976-8e52-e9404910545d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ade1a717-87af-40ce-9519-e2dbffd52946"
        },
        "item": {
          "id": "e522b0e4-29d5-4b89-b778-a256faa9525c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "36156b04-d141-4a6e-9e26-1420f9bbe9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3210042f-1a83-4538-8772-27aa25f07155",
        "cursor": {
          "ref": "6485179e-a1f7-4b6a-af88-eb59eebdb577",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "33b7bf94-cd28-4e14-96d7-47bcef341102"
        },
        "item": {
          "id": "3210042f-1a83-4538-8772-27aa25f07155",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8a02fb42-4c17-4af6-92f8-5e2099aab7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffc5b29-ae2f-4427-a391-5c20ab18bc82",
        "cursor": {
          "ref": "7cbe623f-7850-492c-861b-3dc1fa3a2e1a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2b6ecca3-56d4-4d7e-8bbf-9567cef09797"
        },
        "item": {
          "id": "bffc5b29-ae2f-4427-a391-5c20ab18bc82",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5e807a7c-f010-4520-a9b2-e0d9c4ec7189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013b486c-4be8-4679-957f-afa527160849",
        "cursor": {
          "ref": "2e09905c-04ad-4c49-9ebc-cb93d947303d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "270fad29-44de-4b2d-a920-3e28cf3a0a6b"
        },
        "item": {
          "id": "013b486c-4be8-4679-957f-afa527160849",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5ebcd7b9-160b-433e-99cf-9b7eed3de0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd4ad56-0552-4491-b8c5-3696bf6c406f",
        "cursor": {
          "ref": "61fa9245-2773-4595-b051-977c9b3dc3c4",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b1708dc4-54dd-47f0-ae05-aa46ceae4d24"
        },
        "item": {
          "id": "8bd4ad56-0552-4491-b8c5-3696bf6c406f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4ab43e78-cd9e-47f6-b848-f32fe9ff7b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73683b87-fbad-4c74-a2e0-74a82c9cce33",
        "cursor": {
          "ref": "e777d0b3-d0dc-47c6-a6cb-d02e02b5d307",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1054ceb5-8426-4115-b5e1-087fffe550fd"
        },
        "item": {
          "id": "73683b87-fbad-4c74-a2e0-74a82c9cce33",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "35affbce-2770-4200-8f1a-6e403f93c0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5a10b6-8d11-435d-bbf1-c503e80830d3",
        "cursor": {
          "ref": "71cfee9a-2db6-4ca6-ba57-47d8e87a1699",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eaf807bf-dfc1-46c5-815e-4d7119e3cbf7"
        },
        "item": {
          "id": "1a5a10b6-8d11-435d-bbf1-c503e80830d3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7e23d931-0a11-46ba-b113-7d20a52f3862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c37b6ae-f3fd-4eff-9a19-2210f676a546",
        "cursor": {
          "ref": "1f00a10c-8a77-4e55-abf3-741bafa3c44a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6f4dc8df-4796-4436-b0ff-24e60e89f959"
        },
        "item": {
          "id": "6c37b6ae-f3fd-4eff-9a19-2210f676a546",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c83951b2-bc11-4e5a-a47b-8d05d2617d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c0a554-6704-4f71-8356-a6a447ca8dfc",
        "cursor": {
          "ref": "e2c1870d-759e-42ec-b10a-6088888099f0",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2748e942-d824-4613-8c99-47332a9fa272"
        },
        "item": {
          "id": "f5c0a554-6704-4f71-8356-a6a447ca8dfc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d0adb38c-6f4b-4feb-becd-8bb50c838272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e0ad30-fe0d-49e6-9eb2-da4f0355cd54",
        "cursor": {
          "ref": "df50202c-3411-4b3b-b262-dc2604898fbf",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4310e0d1-a908-4a92-b8e3-885d71b50db3"
        },
        "item": {
          "id": "11e0ad30-fe0d-49e6-9eb2-da4f0355cd54",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2115eb0e-6566-4a27-9639-7284527eb055",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 357,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e29e90-6187-4fb0-96f1-f746144e2255",
        "cursor": {
          "ref": "fa546e5a-be26-401d-ab8a-117e6b2dbda4",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bc3dbe81-8ea1-4a8c-86e9-302058bd75b6"
        },
        "item": {
          "id": "83e29e90-6187-4fb0-96f1-f746144e2255",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c14d8437-6c79-43da-a8f7-e7c3510e110a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84cd3bc-15e1-494a-880d-f90df70c86bb",
        "cursor": {
          "ref": "76f12e98-1bfb-4220-bf3b-a4f2b81f2b20",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2cfeb659-61fb-41bd-8e24-b393fb6aa272"
        },
        "item": {
          "id": "e84cd3bc-15e1-494a-880d-f90df70c86bb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4dc08936-318e-40ce-9a57-0c1b611e90cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f74d61b-a1c7-413c-9cb6-659e6c9a9dc0",
        "cursor": {
          "ref": "49050b46-5160-4dc2-b72f-26e88244150d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9ebcccb1-d75e-4533-9694-c5217c27ac8b"
        },
        "item": {
          "id": "4f74d61b-a1c7-413c-9cb6-659e6c9a9dc0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7f7e106a-6254-474c-b355-eb15fadfd734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127aa2c3-4e6e-44b3-85cb-be22faf0b2e1",
        "cursor": {
          "ref": "4411a86a-b86b-4939-9c74-aa2ed670ab62",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1afd1e26-684c-4fcc-8cdb-8a8336ad410e"
        },
        "item": {
          "id": "127aa2c3-4e6e-44b3-85cb-be22faf0b2e1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8966dfcf-1852-43a9-a0a8-d97655f4f8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109d1676-1b27-421a-b521-c0f139e09528",
        "cursor": {
          "ref": "5a3baeb7-64da-4058-8c9f-41098a12a26d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7b50ba00-2373-46ef-b104-5bdf3358bd48"
        },
        "item": {
          "id": "109d1676-1b27-421a-b521-c0f139e09528",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4e46f283-7089-45b2-9b38-5922e59fda33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60670d3d-4ceb-41ae-b877-7133077acafe",
        "cursor": {
          "ref": "c5026393-2b60-46e7-a9e7-9d0caca9584b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3d678aaf-7af0-4a14-a0d8-d1c62f974c8a"
        },
        "item": {
          "id": "60670d3d-4ceb-41ae-b877-7133077acafe",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "88d4866e-bdd2-4c3e-89cb-964189a7b0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6622b258-f46b-4df6-b17e-3a590d09fbf9",
        "cursor": {
          "ref": "1a9bce33-609e-41a2-8c8a-ade8af0b0fe1",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "be244334-2e53-43ca-bd4f-35161fdcc980"
        },
        "item": {
          "id": "6622b258-f46b-4df6-b17e-3a590d09fbf9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "49f63adb-6b73-487c-a505-f9cf85be1b22",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 370,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b720219-64cc-4d97-88b6-a9d19d8e50bb",
        "cursor": {
          "ref": "04719d85-b028-452e-aa44-6a76339aad48",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c4d20c21-9339-49ad-894c-3d67c080a7ae"
        },
        "item": {
          "id": "5b720219-64cc-4d97-88b6-a9d19d8e50bb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "94ef49a3-2948-451e-b6af-2eb543c4978f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aff6d30-5e17-4c13-abcf-5bdcccd94892",
        "cursor": {
          "ref": "16cdcc57-8750-496b-9cf9-f93c36b322a5",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e84e1034-5054-4aac-8f15-e005a0f09944"
        },
        "item": {
          "id": "4aff6d30-5e17-4c13-abcf-5bdcccd94892",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "864c03a2-5834-4157-9b9f-6f3592beb873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10b891c-50ba-41ea-b47d-62f567c5587c",
        "cursor": {
          "ref": "56600077-4aa4-4627-8976-1704b83df3ef",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "00f94d6f-1363-4743-97b1-a3b24715ffee"
        },
        "item": {
          "id": "d10b891c-50ba-41ea-b47d-62f567c5587c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7e2ad38d-db01-4ab6-a4c6-7d63d132005a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d9b328-38f8-4e09-950b-0f5537589640",
        "cursor": {
          "ref": "a96cd955-ad28-436a-b19e-41bcbc9ba9d4",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d59f2858-7a8d-4cbf-b68a-56d0a0a60303"
        },
        "item": {
          "id": "f5d9b328-38f8-4e09-950b-0f5537589640",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "09fd6037-ba06-4681-9c72-d46d81ff4d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e7a154-5d6f-4e52-a622-78a8b0a68043",
        "cursor": {
          "ref": "dca3f750-1cb9-41cf-acc3-8f5596899b07",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "046cbbe1-56d4-4a47-b1ea-38508199c629"
        },
        "item": {
          "id": "12e7a154-5d6f-4e52-a622-78a8b0a68043",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9a7305de-eddb-4e2c-8308-6202df923c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70731ab-8d2c-4a5f-b064-57a7e942095c",
        "cursor": {
          "ref": "5ec92215-4705-487c-af2f-01714c404fd1",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c4afc2a9-aa96-45b9-894f-e462f964c070"
        },
        "item": {
          "id": "d70731ab-8d2c-4a5f-b064-57a7e942095c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4b72aa8a-4007-4e26-86fd-8f014eda854c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5742e3-5677-4608-a67e-03d78a9cecd2",
        "cursor": {
          "ref": "a1da762d-01e9-45d7-aa12-506ac98426d4",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "448f3234-5eae-4640-b700-b90d9af223ec"
        },
        "item": {
          "id": "9c5742e3-5677-4608-a67e-03d78a9cecd2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6f5e9f4c-fb27-48e4-a262-2150de38c3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd16386e-3c01-4328-8ae6-8140b97ec776",
        "cursor": {
          "ref": "36406da1-a16e-440b-8690-859b79bd2dce",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c150434d-7be3-4859-9482-6edf0f05bdd4"
        },
        "item": {
          "id": "dd16386e-3c01-4328-8ae6-8140b97ec776",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c27b7e58-15b8-40df-9b50-ff6644910cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5142e5-2407-42cd-b0f7-b42988c34e8f",
        "cursor": {
          "ref": "89c46c81-6e72-4972-8740-629499feed4f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f04481db-b4a7-4b26-a752-31bbd46e4072"
        },
        "item": {
          "id": "7c5142e5-2407-42cd-b0f7-b42988c34e8f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e7c43b77-1952-4140-af99-cf5c2efe5060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c6dcaf-97a4-4f34-b4bf-e322f3a34b5b",
        "cursor": {
          "ref": "f99b95d5-bcdb-4388-9045-94bf9d473e6b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b219bb01-54c6-4532-a7e6-e82f5d392ce6"
        },
        "item": {
          "id": "98c6dcaf-97a4-4f34-b4bf-e322f3a34b5b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "03de48ec-09bb-4db6-89a4-db1de8c6dcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f2e09d-585d-47ff-b5d2-f4de1010e2f4",
        "cursor": {
          "ref": "62400016-8606-4b90-863b-cbe98b488ee8",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "492d2bde-dcc5-42a7-8be3-05bb0d488739"
        },
        "item": {
          "id": "33f2e09d-585d-47ff-b5d2-f4de1010e2f4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9be295ac-d9f7-4449-b572-c95f4a406b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd9087b-4db0-4c72-a666-6b5fd7e65e0c",
        "cursor": {
          "ref": "69737279-efad-412e-af10-82dc143ed01e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b783850b-8c09-45e3-9ea7-ea8572b10827"
        },
        "item": {
          "id": "ddd9087b-4db0-4c72-a666-6b5fd7e65e0c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6106e85c-0b67-491a-b1ce-de9315050ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea205ef-865e-4989-902b-9194b187bc30",
        "cursor": {
          "ref": "58106be6-175b-4df4-b23c-ec804f8883eb",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f263c122-2ced-441b-9ae1-e7d40f3d92f7"
        },
        "item": {
          "id": "cea205ef-865e-4989-902b-9194b187bc30",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e8f2165c-041c-4f5d-85a0-d467c50da1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2345369-3044-4508-a821-c9e462aef815",
        "cursor": {
          "ref": "94f59a66-4f72-4dc1-a5a0-ac598c67c4a2",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f44cab35-b92b-4cb5-8ae3-7714ce12962d"
        },
        "item": {
          "id": "b2345369-3044-4508-a821-c9e462aef815",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "051c13ac-7e8f-4c02-806a-2f677806c68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30b1779-0842-43af-a585-af2e96daeb63",
        "cursor": {
          "ref": "c6fba2d0-83e1-4202-a7fc-9018e45b9afe",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8065306f-f90c-4a06-9b5f-86762c6e1156"
        },
        "item": {
          "id": "b30b1779-0842-43af-a585-af2e96daeb63",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ca29e54e-b088-42ab-9cc1-9659d662395f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92852749-1fb2-4a7e-9c2e-5973d3f804d0",
        "cursor": {
          "ref": "82c0b971-6e57-46d5-ae6f-c02fe98b2f1f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7eef5020-a265-4ed1-abee-d70ec5bbe9af"
        },
        "item": {
          "id": "92852749-1fb2-4a7e-9c2e-5973d3f804d0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7befd05a-ea54-42d5-ad1e-4e90babacaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7a3c70-9371-48a2-b2d0-0a4f8bd92298",
        "cursor": {
          "ref": "ddb4e236-d609-4264-9743-b93e21e23848",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "82fd6811-4644-4131-8b57-bed5a2d7c543"
        },
        "item": {
          "id": "0c7a3c70-9371-48a2-b2d0-0a4f8bd92298",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7d4332e6-ddc6-437b-bc2e-802de7f60092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c88854a-fbdd-408c-83c5-9f6a29095d2e",
        "cursor": {
          "ref": "811f1e12-139c-42c7-b4d2-b4c3d57feee9",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "be96b781-d990-4553-82c6-75eb48436665"
        },
        "item": {
          "id": "0c88854a-fbdd-408c-83c5-9f6a29095d2e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "27ba859c-a467-4318-b8ea-4ddf04c751c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422b954e-6d08-4ff6-bf0b-24b4e6b92c79",
        "cursor": {
          "ref": "16b720bd-4f99-4790-8142-5e130d7b7c8b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "545b91be-047a-4012-912a-459fda6ff281"
        },
        "item": {
          "id": "422b954e-6d08-4ff6-bf0b-24b4e6b92c79",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0c1cb0e7-dcc8-4bcb-a0a4-fd7b8f76e2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df91c7e3-aecc-46dc-a32a-a6db1a6e5fb6",
        "cursor": {
          "ref": "d79bdf31-83af-49c4-a55f-2721512be957",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1e3d46ed-3a49-46b2-8d1e-38625e8dcfaa"
        },
        "item": {
          "id": "df91c7e3-aecc-46dc-a32a-a6db1a6e5fb6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f3f1b7dd-4a4b-44cf-97aa-e4bff0822bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e68f536-3372-4c20-b6b6-b72ecea6bed2",
        "cursor": {
          "ref": "29d10246-4ba7-4b04-a306-1b6de4c618de",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "344404b4-0c74-4499-901f-83b225244048"
        },
        "item": {
          "id": "0e68f536-3372-4c20-b6b6-b72ecea6bed2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5f1d79e6-2ee6-4f60-ad66-4d3b427117d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2a2b42-aba5-4ae0-8f42-17c99521eb4b",
        "cursor": {
          "ref": "eeff9cff-b201-4c42-ab36-10096251f7bb",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "78d2046d-c3b0-4e76-a002-d10578d50055"
        },
        "item": {
          "id": "2c2a2b42-aba5-4ae0-8f42-17c99521eb4b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "930f1c58-1f66-4364-bdce-deedafa6ccf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eab301e-6b90-4736-88c7-dd8c337c16f2",
        "cursor": {
          "ref": "1faebe2b-674d-447a-8bbf-e78f34be4557",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7136641e-5a91-4caf-97c4-f581e202a6a3"
        },
        "item": {
          "id": "0eab301e-6b90-4736-88c7-dd8c337c16f2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "10c1fd8d-49ca-4b30-a070-d32594718c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a359ee5-e5f2-4bdb-8471-3cfa8ee4b92d",
        "cursor": {
          "ref": "f64afbc0-eb4c-431a-913d-7cc3f80ee6f2",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7c37775b-751c-48a2-a10d-f286c2cbbc60"
        },
        "item": {
          "id": "8a359ee5-e5f2-4bdb-8471-3cfa8ee4b92d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bdd9113f-a92f-4a8e-abc9-a17ccbba9436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488d06cc-67a7-4d0a-9e7e-b25c0c7e1263",
        "cursor": {
          "ref": "88d50dd5-5be9-48c5-aa76-3ea1ac67616a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "80057297-a88f-4ee8-b56d-798b7b34ed53"
        },
        "item": {
          "id": "488d06cc-67a7-4d0a-9e7e-b25c0c7e1263",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3142f505-5ebe-4617-bce5-919f04a4bf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fe19fb-e87d-45b4-943f-9d785e048a24",
        "cursor": {
          "ref": "ce8ca149-6303-4b17-8f2f-5a43508db529",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d9589ed8-2f87-49de-af6a-63918e7558f8"
        },
        "item": {
          "id": "e1fe19fb-e87d-45b4-943f-9d785e048a24",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "84a354bc-e4d7-48ae-8522-e841668f33ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7075111-0a8c-40b1-9418-abed1daa8c27",
        "cursor": {
          "ref": "f3fb2156-c4d0-448d-a2d8-02fb728aec0a",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "194d4fe7-b576-4812-ba54-7db0bdf5bea2"
        },
        "item": {
          "id": "e7075111-0a8c-40b1-9418-abed1daa8c27",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b8e04efa-6b08-4c09-8b0d-6540ce5998b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1dd898-5092-4771-8449-ad8d28020778",
        "cursor": {
          "ref": "af8bd7cf-cc28-4369-b4cc-363954895399",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "81623f53-a9e7-4425-bb19-47bb7dd6364d"
        },
        "item": {
          "id": "0b1dd898-5092-4771-8449-ad8d28020778",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fb71e5fc-42c1-4054-b6f5-35ade6931440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0503ef4-5fa2-4c8f-bcfe-0cd33d677891",
        "cursor": {
          "ref": "8a1702ce-c0c0-4d95-8001-7a0e28ce3d24",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "51428670-be2b-4eb1-82e8-157563a3e5de"
        },
        "item": {
          "id": "d0503ef4-5fa2-4c8f-bcfe-0cd33d677891",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f7b20b14-f2c8-4be3-a9a3-307c8012312a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8b2a25-8f60-488a-a833-aeb9d638e702",
        "cursor": {
          "ref": "eb665f09-ccb3-4879-951b-ff9e8fe722eb",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "65ff5c9a-12a2-4a1d-bd94-d02ab0448d42"
        },
        "item": {
          "id": "7c8b2a25-8f60-488a-a833-aeb9d638e702",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ee27e736-980a-4b94-9f08-79a572b366cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2009ab81-8e0c-490f-868b-b815e215ffba",
        "cursor": {
          "ref": "c2dac03d-760a-42f7-b16b-6de26f8bbb31",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b9e893a6-803f-4c99-93ec-534ef467c8ab"
        },
        "item": {
          "id": "2009ab81-8e0c-490f-868b-b815e215ffba",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "93fdeb60-ea4e-479e-987c-e5092160311f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889f8128-b618-4fa9-ba83-dbf17be2e001",
        "cursor": {
          "ref": "2ec75ab5-53d6-483c-ae20-fc7d1330d19d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "00270709-8622-40a5-b229-12807b14c074"
        },
        "item": {
          "id": "889f8128-b618-4fa9-ba83-dbf17be2e001",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f9eb8638-983b-4ad5-8fdf-78cdff83336c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2f91be-d9e4-4e10-b4e0-643232d66a88",
        "cursor": {
          "ref": "22ff83f1-ea0e-48e7-a21b-950c537a44b5",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0214dc30-7ce8-447e-9d4b-70f6936ff418"
        },
        "item": {
          "id": "4f2f91be-d9e4-4e10-b4e0-643232d66a88",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "78d52d5a-79b5-4ca5-8703-a902c493821b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446714f8-8eeb-45a5-968a-297ce86aa429",
        "cursor": {
          "ref": "13af69e7-abb9-4880-8f3d-3ab78d5b82ad",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "340ad6f8-3f6f-4114-b7f7-87cafeadaf54"
        },
        "item": {
          "id": "446714f8-8eeb-45a5-968a-297ce86aa429",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "662735df-1357-42ce-b665-ef3aaea6a62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df8b789-7a98-489a-b28d-56027695a6f9",
        "cursor": {
          "ref": "284d2b5b-c78e-4342-b741-55cf19dac33a",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2dfa0e27-9caf-4a3f-b0f6-f09c327e3421"
        },
        "item": {
          "id": "5df8b789-7a98-489a-b28d-56027695a6f9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "68fcd4e5-fd5c-4ca3-a71a-c30ee613db3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611c09f5-f255-4a21-9c74-2aedcbdf8fa9",
        "cursor": {
          "ref": "13cb79b6-bc0a-4e2c-be31-ebf6f60249a6",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "01fe7800-6644-4ac8-b40a-ac8dca0d9bad"
        },
        "item": {
          "id": "611c09f5-f255-4a21-9c74-2aedcbdf8fa9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7f71be8b-8752-4d53-a01a-6c1d0fdb01cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc33b071-ea98-43f2-92be-99f7426c2d78",
        "cursor": {
          "ref": "f850f5f6-ba29-48af-a761-09321c8bc059",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d4c53589-1695-438d-87bb-48f9b467380b"
        },
        "item": {
          "id": "cc33b071-ea98-43f2-92be-99f7426c2d78",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "805ca1e1-7178-4457-a8bd-e9ab7ae7b298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e744c14c-4ee5-425a-a087-e1af78705901",
        "cursor": {
          "ref": "dad723f6-46c8-4090-8ca8-e56eddd32930",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5e5dcb79-15d2-472a-92be-77c29af61ccc"
        },
        "item": {
          "id": "e744c14c-4ee5-425a-a087-e1af78705901",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b25af983-f986-4160-a9ff-5663ed26bc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d9b5a2-0ad9-4604-97c4-32a6d5d08f72",
        "cursor": {
          "ref": "b8b3754d-1923-43ba-96b6-e12e8037a9ff",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cb6c53fb-b9b2-4750-8b38-762f81fbfa00"
        },
        "item": {
          "id": "a0d9b5a2-0ad9-4604-97c4-32a6d5d08f72",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f54e9f92-8668-4bd0-a0b0-e1ae2f163842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ec9551-bc7b-4ff8-a289-4bc4931f70b9",
        "cursor": {
          "ref": "83de51c7-bbd4-450f-aece-717b9d40f7e8",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f0344a26-3c74-4d4a-b105-1b088b8ab5c8"
        },
        "item": {
          "id": "52ec9551-bc7b-4ff8-a289-4bc4931f70b9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3c464300-cf5c-441e-828e-13c47f064807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e11bd03-7344-4708-8e8d-735bb17ac67a",
        "cursor": {
          "ref": "41317204-8f54-437a-a113-0c107c88d4ba",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bb6917a1-ce8f-41c1-af7c-95efdda1c954"
        },
        "item": {
          "id": "1e11bd03-7344-4708-8e8d-735bb17ac67a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6648cd29-3e15-4415-ac78-85d1ca710adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b62269-627b-4c45-b31f-4d15946ab218",
        "cursor": {
          "ref": "b750bdc2-b31b-421b-b580-a01eac7aac04",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3f0ed327-9f45-4e60-856e-28382b90391c"
        },
        "item": {
          "id": "a5b62269-627b-4c45-b31f-4d15946ab218",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "48dffa12-29b6-4e14-915e-3a1a3b02823f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1381e3-5f3b-404d-828f-d80c3d3a8109",
        "cursor": {
          "ref": "6cfef6c8-b695-48c4-a690-84dd0ae8c032",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3ae46814-3ee3-401b-a851-c83093971e44"
        },
        "item": {
          "id": "5d1381e3-5f3b-404d-828f-d80c3d3a8109",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fee5e5b1-ae30-4c8d-a6a7-f10fbd051616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7a02c4-d06a-456b-9f5f-e1c51719218e",
        "cursor": {
          "ref": "f12374e2-1b67-478b-b138-4d6a5458fa18",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d21cfd77-4bcd-4370-a97a-f192a4cafe9c"
        },
        "item": {
          "id": "0f7a02c4-d06a-456b-9f5f-e1c51719218e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "96098917-c469-4091-916e-810dc883a60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f77135d-801f-4011-9adc-c1a6ec7926ed",
        "cursor": {
          "ref": "7d13733d-a099-44ee-9a7d-85614e5a3131",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "43bc0155-baea-4a11-af1d-28ed909d0251"
        },
        "item": {
          "id": "6f77135d-801f-4011-9adc-c1a6ec7926ed",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0060bd1e-19ec-4e39-910d-5549608abebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318d6aa5-eaac-4f42-84ed-a06da34aa523",
        "cursor": {
          "ref": "72a2972e-05f6-44f0-ae46-eb8532d74b0b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "38397309-2272-4ae4-977a-6767328f3f43"
        },
        "item": {
          "id": "318d6aa5-eaac-4f42-84ed-a06da34aa523",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3d06f19a-8585-4859-8ed3-ae40a867589e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a84d91-5e91-4909-a50c-2537f0d407af",
        "cursor": {
          "ref": "183c3b39-11e0-4c25-aea8-5bfb77bb9362",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ad247dcc-9cd4-4ab8-bc90-6a3e26ca3755"
        },
        "item": {
          "id": "73a84d91-5e91-4909-a50c-2537f0d407af",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "97a75f6c-87a6-4c52-977d-6c90e9757e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b5159b-7d4a-4fa4-9fea-fc3fda4d1082",
        "cursor": {
          "ref": "08aa6433-aeff-42a2-a021-492a3358d13d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ae336260-a505-47a6-a7e4-0b923dbc8dc0"
        },
        "item": {
          "id": "f6b5159b-7d4a-4fa4-9fea-fc3fda4d1082",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "67419eb7-f08a-45c4-a259-d50b83491781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489cb2aa-7d9e-48a6-bdc6-709148383997",
        "cursor": {
          "ref": "4e80ee4b-3bb6-4e32-8405-baf158c5f8f4",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a955ab5a-f817-4f0c-8d86-a6d482771dac"
        },
        "item": {
          "id": "489cb2aa-7d9e-48a6-bdc6-709148383997",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fed970b6-5321-4c11-b857-328789140fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd5bf2a-a49c-443c-a271-88f7895a79b6",
        "cursor": {
          "ref": "cff3aa18-8f7a-4261-9242-46241bd5da10",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cd2d2588-6293-434e-ace2-fc0e7ff7e003"
        },
        "item": {
          "id": "7dd5bf2a-a49c-443c-a271-88f7895a79b6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c55e87a6-462c-4927-a749-5da390a90ff4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40732fe-4f25-4db6-b56b-9bdfbe53556c",
        "cursor": {
          "ref": "140dc652-a755-41d6-8364-9e8deb2d5adb",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9860b57d-48af-4df9-af8c-46e6351a2e57"
        },
        "item": {
          "id": "b40732fe-4f25-4db6-b56b-9bdfbe53556c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8be73c1c-fa83-49a1-b13a-b179253b7e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b95e82e6-ac90-4050-b504-5704ee3be6ab",
        "cursor": {
          "ref": "c8fd300b-0963-47d5-97f0-e98ac1c22b7a",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9be1dad0-3d36-4d92-95fb-c05ddb17991e"
        },
        "item": {
          "id": "b95e82e6-ac90-4050-b504-5704ee3be6ab",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2eb1994b-031c-4ba2-9841-525adf27c71c",
          "status": "Created",
          "code": 201,
          "responseTime": 2840,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4feeb5-fc2c-423a-8bc3-e2bf60dd5b15",
        "cursor": {
          "ref": "0f230121-bd0f-46c6-aae5-0514e0ee7318",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3e4f7828-0fbd-4516-8c56-c7aa1cb91dbc"
        },
        "item": {
          "id": "9e4feeb5-fc2c-423a-8bc3-e2bf60dd5b15",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "85392737-364c-43ff-b535-1cf872397d69",
          "status": "Created",
          "code": 201,
          "responseTime": 2129,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1729b6a-94be-4b86-ac66-732438b6a13a",
        "cursor": {
          "ref": "515f9630-a867-4503-ba36-e7e934bda2d7",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "10a7e194-96a1-44de-b6ff-3709ee255875"
        },
        "item": {
          "id": "e1729b6a-94be-4b86-ac66-732438b6a13a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e0e41185-0466-4899-b1a2-81e31ae9fb5b",
          "status": "Created",
          "code": 201,
          "responseTime": 2641,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acbc1a0-7583-4438-a9f8-470c3d549997",
        "cursor": {
          "ref": "39141083-aeb9-478b-97ee-f3ccd9d97c2d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "04208bf0-909b-429a-8cdb-f01f4abd0a7a"
        },
        "item": {
          "id": "0acbc1a0-7583-4438-a9f8-470c3d549997",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a3a70eb1-94ed-48e8-9aca-788fff804a5a",
          "status": "Created",
          "code": 201,
          "responseTime": 2049,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f91446f-47a7-4aee-97a3-97fcb87b807c",
        "cursor": {
          "ref": "0cd20ab6-ea14-42a6-ae5b-f2ae630380fa",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0e0fe886-9cbf-4062-8916-7a4fc5bd451f"
        },
        "item": {
          "id": "6f91446f-47a7-4aee-97a3-97fcb87b807c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "64214d83-0bc6-4f86-934c-72b85dff0590",
          "status": "Created",
          "code": 201,
          "responseTime": 1998,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "46616749-0375-45fb-8315-482551872679",
        "cursor": {
          "ref": "386d1435-0974-4f87-aa83-94aa59e8a43a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4454d13b-ea6c-4137-8101-dc29d2d646ba"
        },
        "item": {
          "id": "46616749-0375-45fb-8315-482551872679",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c7946855-e192-4fae-92fa-5ee042cc8c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "dbd41c10-3b44-45f4-9b19-35671c91fde3",
        "cursor": {
          "ref": "1a5a947e-b3c9-4bf0-89e8-3cde6f3df2a8",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "25381c53-a092-4caa-b80a-25945897454e"
        },
        "item": {
          "id": "dbd41c10-3b44-45f4-9b19-35671c91fde3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7d4c02a4-c1fa-4f72-8b44-f20679b79fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45484d87-46b1-4bb7-b09b-78d5c10ec022",
        "cursor": {
          "ref": "8481897b-9736-4b47-9553-f2720083eebf",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "84df41a4-d985-434b-a865-7e3d3f41021c"
        },
        "item": {
          "id": "45484d87-46b1-4bb7-b09b-78d5c10ec022",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9124ece9-238a-4d24-9fc1-d38b6e4bc990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6ca2d0-7dbf-4209-ac93-e5e074fb9eaf",
        "cursor": {
          "ref": "55a85c5b-e894-457e-b4b7-7c447a32a0a0",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "89dacc38-a729-45bc-b217-70543945ad1a"
        },
        "item": {
          "id": "bb6ca2d0-7dbf-4209-ac93-e5e074fb9eaf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "387d4869-3873-404e-89dc-93baefbec740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9acaed7-d7fd-4b4b-8551-1358852e7924",
        "cursor": {
          "ref": "378c6c0c-ec9d-483a-abb4-9804806fb94e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a62ac819-83f8-4c34-9aa8-f6b62dccc0af"
        },
        "item": {
          "id": "b9acaed7-d7fd-4b4b-8551-1358852e7924",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a0f5523b-750e-491f-808d-ae16047c4874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef355b0-bf6f-4fd6-bbd2-0cb32810101b",
        "cursor": {
          "ref": "3c71026d-2885-4eb2-8db9-9b78985b1ce7",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5f0e157d-2059-431e-9323-61fef3aa894a"
        },
        "item": {
          "id": "0ef355b0-bf6f-4fd6-bbd2-0cb32810101b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c681c4b0-48e1-4e41-9763-3fb6f7632141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b352448-40c4-42c4-9e99-14d92c60e882",
        "cursor": {
          "ref": "45086b79-e1ba-4ba3-a1d7-3c2f6de1623f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6536b723-797d-4dd8-859b-10f69b4c5807"
        },
        "item": {
          "id": "9b352448-40c4-42c4-9e99-14d92c60e882",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d3e189c2-7bbd-4ee6-a6f0-a4b7322bd94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c844f6-24f4-4beb-8a0d-2f0e0693cf18",
        "cursor": {
          "ref": "0dc1266a-181c-4d1d-a89f-de9e75c18ea6",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f5b3cd07-44b1-41f9-a433-5b8b5fcdd986"
        },
        "item": {
          "id": "48c844f6-24f4-4beb-8a0d-2f0e0693cf18",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "291de979-32d4-48a1-bee8-f679cf72a085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0df2ff-f47f-4daf-8328-0629f2158221",
        "cursor": {
          "ref": "31c6a584-b90b-4f13-822b-7bca7a9d92c0",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "40390e24-3b2b-4fee-b265-5ff18fab4245"
        },
        "item": {
          "id": "fa0df2ff-f47f-4daf-8328-0629f2158221",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3679e8ce-b97a-4e70-ac93-61becd450438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10731dba-d0b4-4d5a-b2b6-1735ee167383",
        "cursor": {
          "ref": "e0d9dcc2-8718-4805-abb5-6a03d79a38e9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d7b9d66d-66a1-4264-8906-cbeb71cb4337"
        },
        "item": {
          "id": "10731dba-d0b4-4d5a-b2b6-1735ee167383",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "36f0ead5-a7d2-43cc-ba8f-cc205216c82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3aecb77-5854-4097-9b12-3ce1ecc8697d",
        "cursor": {
          "ref": "7e711791-ce32-4481-8d0c-17a3e0fbb90c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f37e35be-70d6-429d-bcf3-c8ac62d865d7"
        },
        "item": {
          "id": "e3aecb77-5854-4097-9b12-3ce1ecc8697d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d9f69cd7-b34d-4725-90ca-02c0bae8c5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa48bdcf-1f8a-4a43-9709-906d0b06955b",
        "cursor": {
          "ref": "53b502e5-acf0-4d46-97fe-e96ab4a7565d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2b6d3ce9-e23d-4097-9c47-87b68f37d467"
        },
        "item": {
          "id": "fa48bdcf-1f8a-4a43-9709-906d0b06955b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dbd676f6-90c1-458a-b1ec-1724c7438ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fde19e-f449-44da-afc6-22b9858cdb41",
        "cursor": {
          "ref": "d93cabf0-e72d-4309-a36d-8448bc66fc98",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9a56d10c-d10c-4a4f-ad0f-ee06022bc98c"
        },
        "item": {
          "id": "59fde19e-f449-44da-afc6-22b9858cdb41",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "572faa21-930b-48ce-9b6e-818be53aabd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a203143-d05b-4b21-8ea8-463dd063add6",
        "cursor": {
          "ref": "be2e411d-3ae5-4b4a-add3-34975b128987",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9240400f-c44a-484f-b4cc-c3def8c4eb56"
        },
        "item": {
          "id": "9a203143-d05b-4b21-8ea8-463dd063add6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "72413c15-170f-4e92-9a1d-ece67391996f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a09701-54cf-4562-b47b-4a0185cbfbbc",
        "cursor": {
          "ref": "d1ac7feb-05ff-4e74-a27d-b4751bd11e9d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e91cf2d4-9d58-47a5-976f-1df32b80f7c6"
        },
        "item": {
          "id": "a6a09701-54cf-4562-b47b-4a0185cbfbbc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f379852a-b260-4238-a5b8-77a1375daa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcf3929-8f88-4110-b33b-700a7d8e72ac",
        "cursor": {
          "ref": "a1b0f5a1-d27c-4e84-bb14-7378f942a0c1",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8f1224d7-0b22-4adf-9a23-dcd6aa021cda"
        },
        "item": {
          "id": "cfcf3929-8f88-4110-b33b-700a7d8e72ac",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "62e3d102-c549-4bee-bcef-59f90bb71b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d7d197-9155-4d6d-a58b-ce7953b5a333",
        "cursor": {
          "ref": "22464e05-69de-4ed0-bf4b-8fc52a288d48",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1da0cfee-9718-4626-b7a6-883e5742ab74"
        },
        "item": {
          "id": "14d7d197-9155-4d6d-a58b-ce7953b5a333",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1c499b8e-1afd-4098-8bbb-f4acf2ffd1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900fbd4f-02fa-4de4-94ae-131aa83ef319",
        "cursor": {
          "ref": "cdfb4903-87de-44b6-a2c7-df0508598278",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b5d4105b-03e5-4819-bde8-091a2e34c5df"
        },
        "item": {
          "id": "900fbd4f-02fa-4de4-94ae-131aa83ef319",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "17a11d98-7958-4c23-b33a-b3ac6a21dd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f9797c-0180-4d04-b2a2-5d8fc1e7cfb3",
        "cursor": {
          "ref": "9051c391-ba9b-476b-ac4d-7712103a72b9",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ebbf1796-de82-442d-846e-35eb105e25c4"
        },
        "item": {
          "id": "72f9797c-0180-4d04-b2a2-5d8fc1e7cfb3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6b52541a-355a-4501-a7e7-9dce61f37043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4dc7b31-336d-4313-a357-bafde8ff37c4",
        "cursor": {
          "ref": "a185ec0c-f8c3-487c-aa75-7d4c57e844e4",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c57298e9-0383-4a72-8425-2b7dfe864604"
        },
        "item": {
          "id": "d4dc7b31-336d-4313-a357-bafde8ff37c4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3fd72448-3be0-49a4-a0ba-087462761909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfebbb1c-5923-4275-818d-870376ad02cf",
        "cursor": {
          "ref": "b95e34b6-0e96-4f37-9358-397e2db0974e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4424aefc-b619-4ae1-9ddf-985bbabbd29b"
        },
        "item": {
          "id": "dfebbb1c-5923-4275-818d-870376ad02cf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "705fd4fa-b1d9-4941-822b-fd725f289eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9bd31b-a623-4c96-9156-a654cf7664b4",
        "cursor": {
          "ref": "d3f0e39e-3836-4bf4-98a0-e352852c700f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d6b50bfd-c5bd-465c-b25d-6d34ea9602fa"
        },
        "item": {
          "id": "df9bd31b-a623-4c96-9156-a654cf7664b4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cc123056-9c06-4462-94e8-37673b4889cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68faaf27-8e57-4dc7-9cf9-77273077ff94",
        "cursor": {
          "ref": "dd24f20e-950e-4adc-b952-f674fed83901",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6ea95cf9-ae80-4e65-a8e5-eda37d81d0fe"
        },
        "item": {
          "id": "68faaf27-8e57-4dc7-9cf9-77273077ff94",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ae90e4c7-bab1-4c95-affc-ceb672b1da82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eeb5c0-eb1a-4d96-8388-2a22a537aed7",
        "cursor": {
          "ref": "86553ae7-65ac-4fd2-a12f-4c519ec35e9d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f2258421-36cb-42f4-8421-0895b1582afd"
        },
        "item": {
          "id": "e8eeb5c0-eb1a-4d96-8388-2a22a537aed7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a17ba2a3-0575-44b3-b793-9b8e6ba2eb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d63829e-20e6-45ef-865e-3bc29f473176",
        "cursor": {
          "ref": "4e638a09-1d17-41fa-9387-7c1744628169",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "52e27de8-3a14-412c-96e7-3ea6d887e323"
        },
        "item": {
          "id": "7d63829e-20e6-45ef-865e-3bc29f473176",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3f66bad1-a716-4eb7-a893-2e76e6d43ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18482075-7141-4be0-bbc2-f3893a8ff302",
        "cursor": {
          "ref": "eb220f0a-f739-4fbd-9906-b45291b566db",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8eadc3b9-1afc-426c-8add-177b0de13233"
        },
        "item": {
          "id": "18482075-7141-4be0-bbc2-f3893a8ff302",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7d7b0ff0-18e0-4792-b913-4fc79256bed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727d7424-4602-49cb-8af0-995ccd8b7cbe",
        "cursor": {
          "ref": "db951629-7ed1-44bb-b542-1435823b95fa",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bc481572-3c62-4eb6-8774-3c2970dacf12"
        },
        "item": {
          "id": "727d7424-4602-49cb-8af0-995ccd8b7cbe",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "21d5de1d-5948-4b9a-91d0-86782646da25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bf635d-e317-4cd0-84b5-b1e2ff471fd7",
        "cursor": {
          "ref": "a4844f7f-5cbc-4756-b924-f61e6239762c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "653e16e4-ed71-4f51-9ea0-d2e670adb51f"
        },
        "item": {
          "id": "18bf635d-e317-4cd0-84b5-b1e2ff471fd7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a4ce11ea-e1b6-474e-8721-c9503df02dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac51cd04-2203-4926-9ae7-648c2d048cf8",
        "cursor": {
          "ref": "d940d8ec-99a6-44fb-ab12-10ab2a2bfe47",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "13c7fdd4-83cc-4dbe-bd86-9573d3e3e38b"
        },
        "item": {
          "id": "ac51cd04-2203-4926-9ae7-648c2d048cf8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d039ac6d-860e-4ef0-b4af-c2cb6d6c0f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ac693d-0090-45ea-956b-725ed452dc91",
        "cursor": {
          "ref": "d4c8f09d-71db-41a7-819a-817633553499",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0bd7c7a6-df66-4b6d-8923-0f73cdc85251"
        },
        "item": {
          "id": "40ac693d-0090-45ea-956b-725ed452dc91",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "524d3037-b94a-465e-bdcc-6c7237b334fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26071648-d44e-4b99-b072-f13c1fc4b02d",
        "cursor": {
          "ref": "87f283f8-b8b8-4236-8a41-5bee080eb58d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5a623edb-f52a-4190-9532-8370f5dd2966"
        },
        "item": {
          "id": "26071648-d44e-4b99-b072-f13c1fc4b02d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0a62d833-29c4-4ba5-b7c0-10b96a1341a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79750fc-69e0-4ab7-9ef5-66e3ff90f2ee",
        "cursor": {
          "ref": "d808573e-b574-4321-8173-b8eacb52fa25",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "375c67fa-9cb3-4664-8189-143391eea571"
        },
        "item": {
          "id": "e79750fc-69e0-4ab7-9ef5-66e3ff90f2ee",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a1ed4ab3-4442-4ac4-8937-1e78dc22d792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bf3620-ee2a-4f9b-8ad3-a1a9a88d6937",
        "cursor": {
          "ref": "bacd978c-fc0a-4a51-b9f5-5bd5707b6b12",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dbb9b4b8-3e87-4d3e-9285-2f153bff405a"
        },
        "item": {
          "id": "26bf3620-ee2a-4f9b-8ad3-a1a9a88d6937",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c42d9611-0336-49ce-99c0-2ce216cbabd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f3d3bb-c0a6-43f8-bc3f-ff6928f61f9b",
        "cursor": {
          "ref": "8223a146-507a-48e2-b582-7f4d3e187017",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b59967ed-e464-4500-b6e2-f93596e2e91f"
        },
        "item": {
          "id": "25f3d3bb-c0a6-43f8-bc3f-ff6928f61f9b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c93c1085-c30e-44ab-b91d-dfae87552333",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f8ea31-5047-4267-81dc-93943ab53e8f",
        "cursor": {
          "ref": "6e9c4746-7231-4309-8229-db290454543d",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "185b6dcd-73b2-4e19-9eb8-afa2da36f0b4"
        },
        "item": {
          "id": "25f8ea31-5047-4267-81dc-93943ab53e8f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8bb4c691-f2af-4b32-bf47-0beb28a6ba3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f14fea7-8b74-4078-a46a-6e456eefaafd",
        "cursor": {
          "ref": "ae8f741a-c987-434e-bd3a-9697dfc311dc",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1e782735-6475-4128-95af-271a4f4c2236"
        },
        "item": {
          "id": "0f14fea7-8b74-4078-a46a-6e456eefaafd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "891f1e4e-752a-4339-b919-fa245de6bf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ac76e4-713b-4cf5-b7cd-83e3248ede13",
        "cursor": {
          "ref": "87e999bd-6b33-4d0f-a076-1682e7da080a",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6960b517-c250-4f48-be6b-e0d71a255c43"
        },
        "item": {
          "id": "e1ac76e4-713b-4cf5-b7cd-83e3248ede13",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "acf1f890-4499-4163-b4b1-d41798f07355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1701cf-c695-4d41-a0a9-49c1f8b906bb",
        "cursor": {
          "ref": "d7274c62-0166-4672-bf71-c9dd249c5a25",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bc9d6518-b8e6-43ec-8e2b-ae924e31c8d9"
        },
        "item": {
          "id": "5f1701cf-c695-4d41-a0a9-49c1f8b906bb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d5245e3b-32b2-404a-97b0-6523677f3b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542804d6-fbaa-48c1-917f-3744375c5d10",
        "cursor": {
          "ref": "a0f8624c-6331-4794-bd2c-135233edf9c2",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ab0497a9-e0e6-4ca0-a3b1-ce90dbb49c4d"
        },
        "item": {
          "id": "542804d6-fbaa-48c1-917f-3744375c5d10",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d7b45e0c-1843-44a6-b61a-bc3e910625ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbce1f8-fa80-4068-afb5-f9595241896a",
        "cursor": {
          "ref": "55028fcb-c3ac-43ec-b114-d78cb08ee55b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c6eb8eee-7301-44d5-921c-b096e34da001"
        },
        "item": {
          "id": "cfbce1f8-fa80-4068-afb5-f9595241896a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "98c92ced-57b9-4d17-b58d-e251eb0b5e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a0c5ef-dd79-44a0-b62a-03f92b817815",
        "cursor": {
          "ref": "692d33e4-7ba1-4079-8dbd-ccd0c7d4e301",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3265f137-236f-45f2-8945-29d7bb3b1d00"
        },
        "item": {
          "id": "f6a0c5ef-dd79-44a0-b62a-03f92b817815",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2eb777ac-12de-4956-b5b9-6cd5ef9aacd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3463a89b-8afb-48a0-b1fb-a29330e32737",
        "cursor": {
          "ref": "3b007e25-6d5e-4d1e-99aa-a3d90afcd7bc",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "35f89145-deb4-4921-a0ee-60b5512695ce"
        },
        "item": {
          "id": "3463a89b-8afb-48a0-b1fb-a29330e32737",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7e8d0402-f8ca-4e7b-9bd8-12e4f39a6aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b273d1-e790-4395-80d2-b909a3a48e5a",
        "cursor": {
          "ref": "b9a7c59c-2447-4fb5-b608-2121f9525734",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "093537a9-3ff3-4d89-ac4b-aad923628494"
        },
        "item": {
          "id": "07b273d1-e790-4395-80d2-b909a3a48e5a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ba53cee5-0b7a-4ba0-aaa1-52045f4a9e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a103d1-8a67-4949-ad51-703eff92b779",
        "cursor": {
          "ref": "e5a00995-2aa9-4afc-8f71-67d77505a3b7",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b61166d9-0ee9-49ad-97fe-0d583c061957"
        },
        "item": {
          "id": "f7a103d1-8a67-4949-ad51-703eff92b779",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "858a6a23-e7e7-494a-b192-01a4f726a805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478db8dc-b3ec-47c2-ae98-062fcf89785a",
        "cursor": {
          "ref": "20f96d80-846f-4e55-8e4b-00685a5f5d73",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3050f48c-2ff5-43e1-81f4-df15fcbbf83e"
        },
        "item": {
          "id": "478db8dc-b3ec-47c2-ae98-062fcf89785a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2071de65-21f8-4439-b917-2e90879eb456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a44d22d-6c0e-47e2-93ee-6c88d544afbb",
        "cursor": {
          "ref": "38e1801a-b9be-46fc-a249-ca62ecf8f660",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "73e8e9ae-604a-4150-9d52-dda8e870643c"
        },
        "item": {
          "id": "5a44d22d-6c0e-47e2-93ee-6c88d544afbb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "842e7251-88c2-407b-88f6-2e5cd42a1603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035389ae-da06-4e77-b840-b2e8662e2b0d",
        "cursor": {
          "ref": "8a289d88-b484-4f3b-ad8f-d2c8c27ece60",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bf6b7873-57fc-4c38-bff7-847edb45f940"
        },
        "item": {
          "id": "035389ae-da06-4e77-b840-b2e8662e2b0d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6fb30883-4cb8-432d-9406-313d6dae2fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b73582-2a17-4de4-96af-8e16c8511e0d",
        "cursor": {
          "ref": "d15d9607-d25b-4a70-a88a-f4d7eabf1258",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0cc937c5-7dd7-42e3-8e94-3949ec6d35cf"
        },
        "item": {
          "id": "e9b73582-2a17-4de4-96af-8e16c8511e0d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "84bf4c4a-44ab-4826-a5e0-449e47c0b8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243ca3f1-68a7-48e3-953a-f3249073daef",
        "cursor": {
          "ref": "1ff7d380-a9f2-4583-ac74-68565502f77d",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7856147a-b668-407c-8ddf-c49b9e4b9d6f"
        },
        "item": {
          "id": "243ca3f1-68a7-48e3-953a-f3249073daef",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b3a89427-3a82-4db4-9d67-97bf3ecc940a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de354973-87cf-44f5-8eb7-b49aa193282b",
        "cursor": {
          "ref": "928df19b-65d5-42bf-8181-2fde5ef3fb2f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7e09e5d0-f3f0-4cda-84aa-3b6c2a800efd"
        },
        "item": {
          "id": "de354973-87cf-44f5-8eb7-b49aa193282b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d60bb293-f686-4db8-b102-9b06c417ab7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66d4936-071c-4e6c-ae16-f8f3ba60a1c6",
        "cursor": {
          "ref": "b2186505-68cd-4ab3-8e4e-3089eb1e38aa",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c2f713ca-9551-43cb-a850-f3895cae7e6f"
        },
        "item": {
          "id": "a66d4936-071c-4e6c-ae16-f8f3ba60a1c6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5f1ae830-d529-4538-b79b-cf31d14bbd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab98c1f-1eb9-4507-ab97-368bc05f6acd",
        "cursor": {
          "ref": "1ffb4d60-51a9-446b-8471-dccbe721d377",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fb0daab1-ab5f-4a9f-98fd-145f1f1632de"
        },
        "item": {
          "id": "3ab98c1f-1eb9-4507-ab97-368bc05f6acd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "44d314f9-5598-4559-b732-7dbd2fc09de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab5f49b-05c7-4ce3-9ac5-a6df72242bac",
        "cursor": {
          "ref": "9349592e-a7cf-4856-8ecf-7a4cbf93aeec",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0b9ead35-5ee4-4c5e-a45c-570989e04a6b"
        },
        "item": {
          "id": "3ab5f49b-05c7-4ce3-9ac5-a6df72242bac",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0207b88c-9dd8-425a-bd11-87c890989816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e766842d-8a3a-4d43-86c5-9306e5474dc8",
        "cursor": {
          "ref": "c61499ba-f3e2-4a81-8f89-d4aa30683e1d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bd3b17c2-f041-420d-b9ce-c267a8ddf5f1"
        },
        "item": {
          "id": "e766842d-8a3a-4d43-86c5-9306e5474dc8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a51faf15-77ba-4383-b4f9-5ce5d6c9f799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb1fc50-8195-4f57-923b-d2feced2509c",
        "cursor": {
          "ref": "8858736a-19eb-47ca-975c-2322abb651ea",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "44043cc1-bc29-4cc3-9a5a-3887cfb04908"
        },
        "item": {
          "id": "4fb1fc50-8195-4f57-923b-d2feced2509c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fd06e56f-df2a-4099-ad0d-8b6b7e937474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fa2721-154a-47dc-a485-0fb4d4684ab0",
        "cursor": {
          "ref": "aafee08f-17b3-46a1-a25e-f799dc315234",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1160e759-6655-4614-8359-3c802df7e0de"
        },
        "item": {
          "id": "f2fa2721-154a-47dc-a485-0fb4d4684ab0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3096c343-f3d5-4e6d-b05e-40752dd7c0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121dffc9-114b-44f8-a8a6-58270b1915f8",
        "cursor": {
          "ref": "728cfb6f-9976-41b6-86e6-6c3a12bee013",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "eef37ce0-c915-44d1-b082-79fc29d1292b"
        },
        "item": {
          "id": "121dffc9-114b-44f8-a8a6-58270b1915f8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d2f6c4d1-81c2-4594-b5cf-557922d31f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d83978c-721b-40ac-a76c-f6bed34d24e5",
        "cursor": {
          "ref": "f17932b2-cd71-45ed-ba6a-5677eba9a574",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c106737b-3415-4d4b-a036-641706d98962"
        },
        "item": {
          "id": "6d83978c-721b-40ac-a76c-f6bed34d24e5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "630ac7a9-c19d-417d-90d9-8683ad18baed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f192de-d394-43f5-9a6e-8e9546b28b32",
        "cursor": {
          "ref": "5f84e2b8-c6ae-4d48-a65a-cdbbc1f9bf67",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d9344414-e046-455c-9929-436530223740"
        },
        "item": {
          "id": "18f192de-d394-43f5-9a6e-8e9546b28b32",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4b2e78fd-2c5a-4451-b440-83b775aa71fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfa7a18-8e92-47ba-b3dd-019bc7c754d9",
        "cursor": {
          "ref": "124baba2-f2a9-4084-be38-f9e7c33adbac",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "60451349-c36f-4b4b-8270-0bd7bb81d02a"
        },
        "item": {
          "id": "0dfa7a18-8e92-47ba-b3dd-019bc7c754d9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4e0326cd-07c5-42c9-9518-5466209adbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0455501a-f1df-4637-9d69-fc4ed9be88ec",
        "cursor": {
          "ref": "6ce5af61-b509-47d4-9eda-cc60e991cde5",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "69a601dc-9fbc-492b-8fb1-e4542ca1db2a"
        },
        "item": {
          "id": "0455501a-f1df-4637-9d69-fc4ed9be88ec",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d1390345-a852-4f10-be55-9749ade3925d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfc4844-b862-4746-9fb7-b21254910ead",
        "cursor": {
          "ref": "b996b9bb-1843-43f8-8184-b25ad5f1cccf",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "856bf10d-ae80-452d-bb38-3c46e9a10ee8"
        },
        "item": {
          "id": "4cfc4844-b862-4746-9fb7-b21254910ead",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8f3ada38-8997-4290-8f54-80200aed43ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae19bfc-8c53-4ad2-a138-ee1570aabfb0",
        "cursor": {
          "ref": "ad2e49d3-564e-4fc9-ac81-8697e5080da1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6a2cacf3-543b-4869-b1ae-a22c20ba18a1"
        },
        "item": {
          "id": "5ae19bfc-8c53-4ad2-a138-ee1570aabfb0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "42f15ce9-465f-48b0-9fd8-b7e76f8a250b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96877cdc-f262-4028-ade7-8ca29b1ee3a2",
        "cursor": {
          "ref": "0d9c7133-6ed2-44cc-b6d0-f34d744b6c3f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "94ad9e6c-8967-41b4-bf9e-38997c34a721"
        },
        "item": {
          "id": "96877cdc-f262-4028-ade7-8ca29b1ee3a2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b342ff46-b9c7-4ff4-8c4e-523b246e1b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff675e13-2500-427b-97a3-9a20ee2d56f0",
        "cursor": {
          "ref": "865b3c94-551a-433b-a80a-ceac3c520576",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1808d3bf-a591-42dd-a1fe-61e8862c4456"
        },
        "item": {
          "id": "ff675e13-2500-427b-97a3-9a20ee2d56f0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "465ec56b-0619-4db0-9590-65d7dbe98cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09dd34fc-f228-4fa1-9144-8145e8f1bfa2",
        "cursor": {
          "ref": "d171634e-5224-4c4c-ade6-c825c7806b85",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0ea0c272-3898-48d2-965e-9dcdd1860d87"
        },
        "item": {
          "id": "09dd34fc-f228-4fa1-9144-8145e8f1bfa2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "64297b8d-0958-4a7a-a20b-f491a294cc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a885e6e2-6128-4fe2-b50b-444aa4d28dbc",
        "cursor": {
          "ref": "b2ab5c63-76b8-42b6-bc7f-e2c909aef472",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dbf955ba-0e9d-4bdc-9d2c-3fbce250b54f"
        },
        "item": {
          "id": "a885e6e2-6128-4fe2-b50b-444aa4d28dbc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "46b700b0-4204-40d6-8ad8-e80ccc334097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024eb453-0e6a-4bc4-9950-bc6eca4688af",
        "cursor": {
          "ref": "fa4bb127-89a4-4553-b5c3-330c07aaae99",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d4fd3d7d-aeac-41ba-903d-56a33bd4b53e"
        },
        "item": {
          "id": "024eb453-0e6a-4bc4-9950-bc6eca4688af",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6fb0ba40-6c3f-4b72-8b49-ad9195edcf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75398ea3-bf0c-4237-bf40-e8a643a915f4",
        "cursor": {
          "ref": "273d59ee-e335-4cf3-98df-19f62640e693",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b247b04b-a04d-4aee-b2b1-593742660207"
        },
        "item": {
          "id": "75398ea3-bf0c-4237-bf40-e8a643a915f4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "89615418-15eb-48a6-ab2b-ddad497017b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b550ac-44cd-4c09-b208-0bca85a4726d",
        "cursor": {
          "ref": "d51397f4-0145-490a-a214-7141fbd9ea04",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1292310f-10af-40e2-b582-7fcafafc6c3a"
        },
        "item": {
          "id": "e3b550ac-44cd-4c09-b208-0bca85a4726d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f8cb5e63-1c8c-4a64-8dc0-cf173be76112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3371fc5c-cd66-4bf6-8c38-de08ffa999fd",
        "cursor": {
          "ref": "7e2a9458-073f-46f0-8d27-c1ee671c87dc",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "578d6a41-5086-4846-ae78-0244267a33a8"
        },
        "item": {
          "id": "3371fc5c-cd66-4bf6-8c38-de08ffa999fd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b0721625-091e-4bea-805c-d458c21f2a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2be2c6-8c17-4744-9cc1-468ef510f5c3",
        "cursor": {
          "ref": "8c6bb63e-1375-402c-b68c-d1898f7381f3",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5fa46f30-ea68-415d-a2e6-534e148f01e6"
        },
        "item": {
          "id": "5a2be2c6-8c17-4744-9cc1-468ef510f5c3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4d58bb33-69af-4763-b776-72cf6e9787a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bd699b-c929-4397-b490-e6dd66653199",
        "cursor": {
          "ref": "b0766746-a0e3-46ae-9968-fe3d78f9d5c9",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7863379d-136c-42a5-b3bf-87337a5349ff"
        },
        "item": {
          "id": "f9bd699b-c929-4397-b490-e6dd66653199",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "38cb04c2-632b-45cf-bcfe-84dc25cb04cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea22fb6-8587-43cb-a860-d23d9f213483",
        "cursor": {
          "ref": "b6989f4d-b0df-4122-849f-639b0f47a0b8",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "41f1951d-3afd-4421-8c94-41e4a98babaa"
        },
        "item": {
          "id": "fea22fb6-8587-43cb-a860-d23d9f213483",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6b05f566-2090-4096-86f4-fef8749dce41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20808bb-b652-4336-b1e7-802aba30f73a",
        "cursor": {
          "ref": "1de38e27-bf93-4920-ad69-2b0bea1fc116",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "01d41c90-6c39-41fa-93a2-f559f9312138"
        },
        "item": {
          "id": "c20808bb-b652-4336-b1e7-802aba30f73a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4118c3cf-355f-4113-97bd-7622960b3470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56512aa4-d44d-4e8a-af89-461b2218f962",
        "cursor": {
          "ref": "303e5bed-254f-41af-8153-8a5ab52d2b7b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0934be56-d31e-48f8-99b5-ca38ff0bad21"
        },
        "item": {
          "id": "56512aa4-d44d-4e8a-af89-461b2218f962",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3cec8729-f1c4-4556-a8c0-81ac49076a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088c3dc5-4bee-4042-ad68-5379edd21f1a",
        "cursor": {
          "ref": "bc4aa8d1-764e-41a2-8b3d-3e92074fd51c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0c89e874-a998-497e-ac81-5f92fc5603f5"
        },
        "item": {
          "id": "088c3dc5-4bee-4042-ad68-5379edd21f1a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a682ea65-8664-4537-be0a-2d04117a9adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6ff81c-584b-411b-bba7-5d5999183b54",
        "cursor": {
          "ref": "6ad37380-59b0-416e-87db-a21dbd181a26",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2817f415-a552-45b8-b1c8-69c9d204cd8b"
        },
        "item": {
          "id": "ac6ff81c-584b-411b-bba7-5d5999183b54",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cc9394d3-2a95-44ac-93a6-50a73de8eef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bbdf27-bf73-4c89-aa04-8e2b8ee935a3",
        "cursor": {
          "ref": "dae7fcad-2a26-48a6-9239-76af8f21eac9",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4210dc4e-66ad-4eb3-b7df-d35c26bb23bb"
        },
        "item": {
          "id": "f0bbdf27-bf73-4c89-aa04-8e2b8ee935a3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c85da364-ef9f-4212-92cb-59928d338dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88dbecd-496d-4021-90b1-8e24e94e70ed",
        "cursor": {
          "ref": "7da64f74-d3f0-4d47-bcdd-328f1b7c07b6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c6696d9f-6fb8-48ee-8593-31ae60c33a74"
        },
        "item": {
          "id": "f88dbecd-496d-4021-90b1-8e24e94e70ed",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a466c9a2-90e7-4577-9d35-30a5929447f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86742257-46fa-4b28-b431-d3e19aa07455",
        "cursor": {
          "ref": "47537bfe-b64e-4e47-bf41-f19ec777951f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "97c2b5da-eb50-433d-89c5-24fd0d86ab63"
        },
        "item": {
          "id": "86742257-46fa-4b28-b431-d3e19aa07455",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "26ac773e-6c0c-467f-940b-dcc34578c4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4967eed1-5afc-4d15-bd47-5a8f83679ae0",
        "cursor": {
          "ref": "43255071-7d72-4657-8e81-29a5b3927fae",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "22e207e0-b089-4d17-9d4a-d11a4fe6a935"
        },
        "item": {
          "id": "4967eed1-5afc-4d15-bd47-5a8f83679ae0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1ca1d5e9-d7d7-4b4c-ac1d-f79f10a34bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a41512d-9d0f-469c-8221-8384a41d76a1",
        "cursor": {
          "ref": "66a59ab1-98a3-4c1c-bba1-cd0fc9396607",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "83dacd07-f890-4762-b727-2da467d78032"
        },
        "item": {
          "id": "1a41512d-9d0f-469c-8221-8384a41d76a1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "54078631-32ab-44a7-a461-5549387ff584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cfb03d-9d3f-4546-8cab-eea70563452d",
        "cursor": {
          "ref": "bad6b791-03ce-41c3-8f3a-ea8e84e2bcc9",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ec38eecb-3e0c-4f11-84a7-92a5b0ec1a29"
        },
        "item": {
          "id": "d9cfb03d-9d3f-4546-8cab-eea70563452d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5b9494a7-6a47-453b-ab69-74717f7dd931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc3c375-588a-453a-866d-de81527310f0",
        "cursor": {
          "ref": "697148a0-8630-4c76-a5b8-f46e795c2c0b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "acf24b72-b9ec-4518-8424-6fa67f011053"
        },
        "item": {
          "id": "acc3c375-588a-453a-866d-de81527310f0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dce2e5ad-e67e-4be7-8ae4-5f8f927d1a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cdb1ba-f719-48f7-a281-6f54bee368d9",
        "cursor": {
          "ref": "ab6470a1-1e4a-47d5-b87b-ef5f7260011b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0263c1b6-d33a-421e-ab24-c5757c07ac16"
        },
        "item": {
          "id": "97cdb1ba-f719-48f7-a281-6f54bee368d9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "15cbbb62-69f7-4adc-b5bb-9f07a05fd5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec1ef5a-6f79-4fc2-8dfd-2758a2e881c8",
        "cursor": {
          "ref": "cfaf784d-4c2e-4dae-8aea-89d1709919f6",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9a016da3-e071-495a-aa84-56a348b895c6"
        },
        "item": {
          "id": "aec1ef5a-6f79-4fc2-8dfd-2758a2e881c8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9b09cd8c-901f-4111-b6c0-53250ae4ae9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6deab577-7867-41fb-85a8-5ab0f7227692",
        "cursor": {
          "ref": "0afacf51-0836-49b4-9171-5423c6036032",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c4fa4ba0-9801-4d38-a03e-8e1fd750f49b"
        },
        "item": {
          "id": "6deab577-7867-41fb-85a8-5ab0f7227692",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f3c1a7ab-fabc-4b2d-ae73-4606221b7c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b78c0a-04b6-45a1-8e7b-0d0371ec3c61",
        "cursor": {
          "ref": "f6d818d6-24ba-4a3d-9e49-0d3912f80a87",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ec403513-f8d6-4be0-af57-09ac9c360190"
        },
        "item": {
          "id": "78b78c0a-04b6-45a1-8e7b-0d0371ec3c61",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2a643681-a53b-4e0f-835f-f011eaee81c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b266643c-a85b-4972-9ac3-35f15e32de71",
        "cursor": {
          "ref": "1a73ba64-9b58-4b2c-8233-44d3698708ae",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c0319884-a2af-435b-a69a-3d5093f46fe4"
        },
        "item": {
          "id": "b266643c-a85b-4972-9ac3-35f15e32de71",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ce76635b-fc0d-4c41-ba52-4890d8f578b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61072f04-6785-4aaf-b168-9034bee8c817",
        "cursor": {
          "ref": "752b83fe-8344-497b-863a-b270f267dda3",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dd159841-4c9c-4f35-b70b-833bb0f61f25"
        },
        "item": {
          "id": "61072f04-6785-4aaf-b168-9034bee8c817",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2297a7c6-c7c6-4101-8fdf-dd205b18a7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaad25e-cbf5-4602-8609-d7ad6ca642ed",
        "cursor": {
          "ref": "1d46afd8-105c-4d72-944f-b1a3078d4c14",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8bb151d5-2464-4579-9006-70f75ce1e481"
        },
        "item": {
          "id": "4eaad25e-cbf5-4602-8609-d7ad6ca642ed",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "900d748d-e247-480b-a597-8c30f50b459b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b7cfc2-9b7d-4449-984d-cdf9d23bad3f",
        "cursor": {
          "ref": "1750a189-c5f4-4c74-9603-3a6d64d43e4c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2e031e4e-4447-4a11-ad74-8112a9d441f9"
        },
        "item": {
          "id": "26b7cfc2-9b7d-4449-984d-cdf9d23bad3f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6f9aa26c-a102-4725-8ce5-5d947e2e1268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a123ee1-108f-4b21-8b5e-8aa915c81569",
        "cursor": {
          "ref": "cf5e84fc-b274-47a4-8ecc-9ba40f3eb5f9",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "358098b8-05c8-4625-bf37-a9e73220bc62"
        },
        "item": {
          "id": "7a123ee1-108f-4b21-8b5e-8aa915c81569",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9ad8d85f-9df7-420e-b13e-5e3c2408f1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfb650e-5edd-45c3-971a-c23632d4ce05",
        "cursor": {
          "ref": "18be9957-1c56-4464-8983-c47afef185ed",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f1013aef-630d-49a7-95cf-31a5fcdfa2b0"
        },
        "item": {
          "id": "bcfb650e-5edd-45c3-971a-c23632d4ce05",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a17ce461-5280-4370-947e-7be53a71a27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a2d8e2-0953-49c5-a769-c4f4839ef0a9",
        "cursor": {
          "ref": "979572ec-6649-48d9-89b2-5d0e2d817250",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cd6c4b2f-4d03-4c34-9644-2f184fc92db1"
        },
        "item": {
          "id": "c8a2d8e2-0953-49c5-a769-c4f4839ef0a9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e0549a80-f7eb-4d3b-93d9-b59e77be5ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504d5348-4b6e-4247-bbf9-40ea4860bc3b",
        "cursor": {
          "ref": "07e65e90-4597-4a53-97ea-57254317958d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "962dd6db-e673-4be7-a680-df10651f5ef8"
        },
        "item": {
          "id": "504d5348-4b6e-4247-bbf9-40ea4860bc3b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c072b58c-3aea-46b6-a006-69122a8d9b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c549a6-6d1d-4e00-b6fa-7b78655370a3",
        "cursor": {
          "ref": "529b39b8-87a6-4118-b692-c9678459cd9c",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ff31f941-b031-479b-a55f-eb1ad5a1171a"
        },
        "item": {
          "id": "71c549a6-6d1d-4e00-b6fa-7b78655370a3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e02c034b-250f-4b86-b5c8-16c813584621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f222b71-a644-4098-bfa8-cab02fb0ae6d",
        "cursor": {
          "ref": "d6e509cc-de31-4e8f-b421-bc7613db1f1e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4106f492-2bae-4d2a-8932-fffaecf88bb3"
        },
        "item": {
          "id": "4f222b71-a644-4098-bfa8-cab02fb0ae6d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5544a550-3dc4-47f2-851b-6f3418972f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e49e61-dd3c-4315-ba78-1a80a1ac906d",
        "cursor": {
          "ref": "91d7c218-52a1-484d-b10a-2bb1d0288625",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8a268922-20bd-4f38-93fa-e4b5186dd7a4"
        },
        "item": {
          "id": "15e49e61-dd3c-4315-ba78-1a80a1ac906d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "237898c9-0ff3-4660-bdef-4ce511b62ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17b1855-32c5-4745-a725-4d9b6248c12c",
        "cursor": {
          "ref": "6f47879f-5104-44ac-978d-805b3e6c2a3c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a1a36e74-ee89-4499-9433-1c8e6de0a482"
        },
        "item": {
          "id": "d17b1855-32c5-4745-a725-4d9b6248c12c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6a74e738-83d3-4ec1-9262-d5100a1849b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2770e94-2816-431a-a911-2e640fde0e21",
        "cursor": {
          "ref": "6043ad87-9716-472f-b3a8-b14abda7ebfb",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "84d87cd5-d0de-48f5-a80e-90678c5a834d"
        },
        "item": {
          "id": "d2770e94-2816-431a-a911-2e640fde0e21",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "003bb301-ec9a-4deb-bacb-c91ac81e0540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5350627-58e2-49eb-859c-bf578cfccfbb",
        "cursor": {
          "ref": "5f539727-697d-46a1-a39d-40608457e0fc",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "53233a0a-fa1f-4a0a-9f9a-527aba617d82"
        },
        "item": {
          "id": "f5350627-58e2-49eb-859c-bf578cfccfbb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2bf8c133-47dc-44cd-855b-5b8f1baa8af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34811b9c-4127-4ba3-a010-8671193c68e3",
        "cursor": {
          "ref": "306e133b-c6e0-42d2-a239-5080c3e1f833",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "17385c48-0af7-45e8-bdae-57287a60a673"
        },
        "item": {
          "id": "34811b9c-4127-4ba3-a010-8671193c68e3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6e0b3593-8e47-4153-9ff5-634f386eac98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c7eb8c-c9ab-4b2c-a156-8fe441e459d9",
        "cursor": {
          "ref": "ca1c0e71-d4b3-455f-8c06-86a8393903a1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7eb84588-9500-4d63-8be8-c130abf5c58b"
        },
        "item": {
          "id": "31c7eb8c-c9ab-4b2c-a156-8fe441e459d9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d96b8b9b-e997-43ad-8d62-96b6d9ae1b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d367ee0a-8dc4-4708-a940-66913ecba3f4",
        "cursor": {
          "ref": "52a14546-8c22-41e4-ade9-2fea03cc67b9",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b01097bf-a7ee-47cc-bbae-2db2ab3705a8"
        },
        "item": {
          "id": "d367ee0a-8dc4-4708-a940-66913ecba3f4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c868c966-c45a-4136-a665-14316d94307d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b3d9fa-6b03-4f94-931d-5af8b32c8247",
        "cursor": {
          "ref": "e07b5fe6-a93e-454e-af99-a5317646a2c6",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9e688783-c17a-476b-bc79-772da7406d5f"
        },
        "item": {
          "id": "17b3d9fa-6b03-4f94-931d-5af8b32c8247",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f2045eb1-9f37-41ba-9b0e-736ff6c2b411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ceb57f4-5fd6-4d67-bdd6-bfc65a828060",
        "cursor": {
          "ref": "8a392745-1de7-4848-9b7f-1a512b8eff24",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "015d36bd-9520-4def-a584-515a27f00c92"
        },
        "item": {
          "id": "8ceb57f4-5fd6-4d67-bdd6-bfc65a828060",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1c4c57e7-df5e-4c48-ad04-119e4136a0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ec0621-4a4d-4c26-9c4a-01e94ea54fad",
        "cursor": {
          "ref": "2c76d5ab-6f67-43c4-9aec-33324286cfaf",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "456bc472-26c2-4764-982b-9818ae0e862c"
        },
        "item": {
          "id": "a2ec0621-4a4d-4c26-9c4a-01e94ea54fad",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6c2876ca-52c6-488f-a40e-0b83d41d7ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f08429-70f3-427e-8c34-e0b9a644a5e6",
        "cursor": {
          "ref": "1551c5ab-7c05-4854-bdf0-1f6af7f8ae0e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a5cf17bc-5e99-4502-8081-8a45facf6e82"
        },
        "item": {
          "id": "92f08429-70f3-427e-8c34-e0b9a644a5e6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "448a33ba-f24a-4b2e-be80-198b44f44a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cab8ec-1a2c-4759-95d5-fc4a30230904",
        "cursor": {
          "ref": "b3bac209-339d-4bd9-bf34-4b23ce7cd33f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "183e7358-47e7-4f1c-a012-f37224d6b86f"
        },
        "item": {
          "id": "51cab8ec-1a2c-4759-95d5-fc4a30230904",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0973a242-2f03-4bb6-8ed7-d56c0fa57f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e547e3-791f-4897-8980-511e08c443df",
        "cursor": {
          "ref": "4cf627f9-49d9-40ac-8391-71873a8a7c7f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "019669dd-0e3f-43cb-9ad5-93b79045a21f"
        },
        "item": {
          "id": "18e547e3-791f-4897-8980-511e08c443df",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4416701f-c04e-4e13-8af5-e93ede8cf5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4eefab-5344-4257-801c-bc8bc80a6223",
        "cursor": {
          "ref": "f64fb67e-8235-405f-a348-945b6705af1d",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "726f6130-5bd0-41fa-98f5-57d8a1deaa96"
        },
        "item": {
          "id": "6a4eefab-5344-4257-801c-bc8bc80a6223",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "480deea5-5278-4a56-890f-f80d7c0afe78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b1adcf-6286-402c-a353-9ab651094b4b",
        "cursor": {
          "ref": "4f0dbeee-ad9e-4fc4-aa32-f5c3d3ef8e22",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d8c40f35-a250-43e0-ac4c-1a680838ef03"
        },
        "item": {
          "id": "16b1adcf-6286-402c-a353-9ab651094b4b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "75d9352a-6ca8-4206-ad3e-2d6dbbe83869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7818265f-73f2-4b25-8f67-a064c1e78357",
        "cursor": {
          "ref": "64506f91-a102-43e8-94de-f82588510a58",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "119810b2-eb3f-4b6c-b86a-06faca2197f5"
        },
        "item": {
          "id": "7818265f-73f2-4b25-8f67-a064c1e78357",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5aa9bd56-0447-46d1-aadf-84d121588c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49634822-a36c-47de-9b6b-38f412850747",
        "cursor": {
          "ref": "6afee9ef-4fee-46e7-9409-ab2d36c3398e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ff13520b-02f1-4acc-8703-293ca39d75de"
        },
        "item": {
          "id": "49634822-a36c-47de-9b6b-38f412850747",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f05eb7a3-be5d-4921-8b55-6ed0ee57dd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec925c7-368a-45d8-995f-c7f1e1469f15",
        "cursor": {
          "ref": "2ef71a8c-048b-431d-b426-ff15ef40cde5",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fc553326-aaea-4b35-93e0-5a2c64a7e7c6"
        },
        "item": {
          "id": "8ec925c7-368a-45d8-995f-c7f1e1469f15",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bb3e86bb-3565-4e51-90c3-fdaa23bcb1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e4621e-9636-444b-8b65-29913fe1a96f",
        "cursor": {
          "ref": "ee02e601-1cd8-4609-957a-a1c3df40dd62",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "85e20d00-4f13-4a26-b25a-25252f78df9d"
        },
        "item": {
          "id": "a7e4621e-9636-444b-8b65-29913fe1a96f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "529128d2-5d26-4d81-b458-17a0d00642dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f75ec92-50b0-45ad-8290-ab0901cd7d88",
        "cursor": {
          "ref": "6a10256c-42b8-4e4c-976c-ed1fa204f09c",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "efeab8b2-1c5d-4f5c-ae6e-56c306534f75"
        },
        "item": {
          "id": "2f75ec92-50b0-45ad-8290-ab0901cd7d88",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a12ecf2b-f5b2-400a-8e0e-7a8662b1116c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc538c3-08e5-46d7-95b2-9fc15ed00d47",
        "cursor": {
          "ref": "a20b9e36-434f-4b54-99bb-4a08dcf1ddd0",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c63773fb-7e67-42da-b5b7-a8d8e83c2129"
        },
        "item": {
          "id": "9fc538c3-08e5-46d7-95b2-9fc15ed00d47",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "46277c68-cf0c-4d39-8a4f-a23aa70d0f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a5e37b-36b4-469c-a1b8-8f0b42c81871",
        "cursor": {
          "ref": "86c58a66-3d15-4dfa-832c-8ba5a33db716",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2361615a-03cd-467f-8526-191795bff723"
        },
        "item": {
          "id": "f7a5e37b-36b4-469c-a1b8-8f0b42c81871",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e43e7719-d6ee-4381-828d-9d7bc6ef0970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6d3905-9c12-487a-831e-875e5408def8",
        "cursor": {
          "ref": "61252961-6d27-4793-850b-49ed533c73eb",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a6825f4a-92b0-4070-b2c7-2889f94f7f2f"
        },
        "item": {
          "id": "ef6d3905-9c12-487a-831e-875e5408def8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1a5a2ff8-bfd9-490c-a83e-cc47b831aee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8f4767-6b27-4e01-b38a-5ddd300a96c3",
        "cursor": {
          "ref": "8ef7f7ad-a37b-4a63-b5fd-f781ffb5905b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bc4def6e-3483-41ac-8204-9621826f862d"
        },
        "item": {
          "id": "9e8f4767-6b27-4e01-b38a-5ddd300a96c3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "18397201-c0eb-4fab-90f8-a20399c1bca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094a0e65-f408-4a25-a4be-d70b488866a9",
        "cursor": {
          "ref": "24bb695a-5f7a-4e06-a4e3-adfa7e461868",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "84a54dee-7824-4fb0-b9c4-b262f3bad42b"
        },
        "item": {
          "id": "094a0e65-f408-4a25-a4be-d70b488866a9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4b91af95-8394-46f1-8e59-3cb2aac10fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e20522-e6db-4273-a861-0a78a45afa98",
        "cursor": {
          "ref": "9e9cbe5f-c03a-49bf-934d-34e9469a4c0d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "80e4120d-5f9c-4d43-8ec2-2ce92b20947c"
        },
        "item": {
          "id": "46e20522-e6db-4273-a861-0a78a45afa98",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c1082486-1b6d-450b-8fa3-59c8534fb523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b0a451-6987-47eb-a12e-35a045ad4af3",
        "cursor": {
          "ref": "720190d0-8fea-4832-bcbd-012648edf886",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "84ba6874-8e4a-4461-b44d-548a1569a1cc"
        },
        "item": {
          "id": "a4b0a451-6987-47eb-a12e-35a045ad4af3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ed0b0b35-5e8b-4ea2-882f-42f1a3ca2d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f08963-6702-4fd0-8e1c-cc319c052b18",
        "cursor": {
          "ref": "7a3ad732-73a2-4c72-8a3f-b67cf4617845",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fac1cc81-1c7e-4927-9237-18fc42885215"
        },
        "item": {
          "id": "69f08963-6702-4fd0-8e1c-cc319c052b18",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c3df7854-95f8-4c46-82fe-6b5f706b500a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8549e9e-8f08-4fc5-bb3f-20b176001f85",
        "cursor": {
          "ref": "db6a1bc9-7276-4807-8511-dd5a319ceca4",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "15c17cd9-6cfa-4f41-b79f-7d4ddbbfad05"
        },
        "item": {
          "id": "d8549e9e-8f08-4fc5-bb3f-20b176001f85",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "316a4691-e56a-47d2-a2ab-e0bb82e34731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8049e821-0a53-4d6c-8524-d7f88ee9b593",
        "cursor": {
          "ref": "7cd46b64-4275-4510-a344-005d204a99a9",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2cb4ca06-c170-4783-8d85-056e81992e19"
        },
        "item": {
          "id": "8049e821-0a53-4d6c-8524-d7f88ee9b593",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8d667858-aa2a-443f-8deb-c9ebb4f94185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b97cb2-d104-4432-b198-c9537bfc37a0",
        "cursor": {
          "ref": "ae8d70ae-d55a-44ce-8c89-4da44361233b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "55fc6553-1f34-42ae-b20e-0eb4bef0991a"
        },
        "item": {
          "id": "b8b97cb2-d104-4432-b198-c9537bfc37a0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1710f913-c3c1-4b83-9f1c-20ee31602038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639b9700-c5bc-4052-92de-0f1005a29b49",
        "cursor": {
          "ref": "8f5690fe-5a53-435a-aa4e-2c8692247a47",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4d1d902b-95cb-46fe-a753-9232d5d8d8dd"
        },
        "item": {
          "id": "639b9700-c5bc-4052-92de-0f1005a29b49",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f0567f97-3bdf-4e93-80a7-21dc6548e200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30518d7-f604-4c5a-9396-fffa10238427",
        "cursor": {
          "ref": "af827902-fa7a-40b4-b702-ce90980fc02e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "46152a11-12a5-4a4d-86ef-87b59ea2b5da"
        },
        "item": {
          "id": "a30518d7-f604-4c5a-9396-fffa10238427",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "704da1f3-6456-47b3-a4e3-dec67696d910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f2c1d6-b24b-45dd-86b3-33a3de92b8cf",
        "cursor": {
          "ref": "fc1bb745-928c-4035-80f0-2419d136e0bd",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "781b20e9-6d34-4c1d-b070-296b3484411a"
        },
        "item": {
          "id": "16f2c1d6-b24b-45dd-86b3-33a3de92b8cf",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0479f6e8-81fb-4bf6-a8e4-212820cae8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e3dce5-4d18-46cb-965d-85ac7f920d85",
        "cursor": {
          "ref": "aebe663e-7a49-4551-985f-748c6be59fc8",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4c2081d7-cca1-432f-bcf5-0d65f7537291"
        },
        "item": {
          "id": "a9e3dce5-4d18-46cb-965d-85ac7f920d85",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f25071a1-ee97-4e52-a7e2-5cdbdf7c851b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109f3551-189d-4b53-915a-1f1009ecd87e",
        "cursor": {
          "ref": "d78fc3a3-d9e6-44bb-9faa-80a18a8e6ec7",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cd02c168-6515-4184-89e1-79da398667ec"
        },
        "item": {
          "id": "109f3551-189d-4b53-915a-1f1009ecd87e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9d7d89cf-5f29-4ca9-bb5e-93e7b8bba936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddc76e0-7929-4135-a3e3-c94fcbebb327",
        "cursor": {
          "ref": "4d7b81ba-bc8f-456c-a332-f7a42f66eaa4",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3314d161-323e-49f7-ae69-f77b9668d580"
        },
        "item": {
          "id": "9ddc76e0-7929-4135-a3e3-c94fcbebb327",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "306d1d83-efd2-4597-a5d2-73f99d67a16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980e46a0-d581-4af8-a9fb-eca5f9594e02",
        "cursor": {
          "ref": "22b84e66-bb41-44af-beb3-56f39548670b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b171a2ea-e96c-442b-aded-c9731e09a55a"
        },
        "item": {
          "id": "980e46a0-d581-4af8-a9fb-eca5f9594e02",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ca844ecf-0dfb-4e08-9218-9e1b454a02f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c27945-13f0-4b60-9915-e296eaa36b08",
        "cursor": {
          "ref": "f557e9e4-3787-4cf5-877a-628a101aea25",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fb246fb0-1726-48da-b04b-e31057aae802"
        },
        "item": {
          "id": "13c27945-13f0-4b60-9915-e296eaa36b08",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "db8632a2-4986-4751-9e04-baa55821dd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c550023-fe2e-43b1-843a-6bb9a9ec480d",
        "cursor": {
          "ref": "655bc452-365d-41ad-a3f2-5ab6524fecd4",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fadae1ef-529f-4104-a405-c14021df9349"
        },
        "item": {
          "id": "7c550023-fe2e-43b1-843a-6bb9a9ec480d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7a547289-7a6a-4c17-a4ab-c07c602278a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b90256-f37a-46ef-b823-ea758be0cc2b",
        "cursor": {
          "ref": "8a906040-720d-40ea-a267-b16ce968d596",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "eceaa85c-565e-45a6-a1b5-039060e69cd3"
        },
        "item": {
          "id": "f5b90256-f37a-46ef-b823-ea758be0cc2b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8bbe77b9-7c2f-4005-b153-756597c50c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12eabc16-cf85-4905-8015-abc176578055",
        "cursor": {
          "ref": "a51e081f-eb5c-4c5a-bf1f-3b168f32f8dc",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "04e83773-6250-4334-9b0f-77bac04885e5"
        },
        "item": {
          "id": "12eabc16-cf85-4905-8015-abc176578055",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fb70df6d-fe60-4a0d-9958-4006e95ec487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bde401-f35d-4a07-9650-fd4edb550077",
        "cursor": {
          "ref": "f981d32a-4c46-4ada-acb9-df18f6236142",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "53c1d8a0-c4b7-440a-9e7c-6461c15faa79"
        },
        "item": {
          "id": "91bde401-f35d-4a07-9650-fd4edb550077",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bc8b6dad-0fdb-49ca-8ed5-9b3653843bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aebafea-41b6-47b4-a06a-73c358a2adb7",
        "cursor": {
          "ref": "2d461fe4-fbaf-4e60-8ef7-a87d10b0a9e8",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "30fc3a4f-2b0c-4d14-a62e-4078e59d1582"
        },
        "item": {
          "id": "8aebafea-41b6-47b4-a06a-73c358a2adb7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8c7dba3e-bb88-4e09-a7f9-6d6508689a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834900a2-e172-4ed1-8023-410c4a6d9397",
        "cursor": {
          "ref": "a3f7bce8-7ba1-4e8d-9b43-d209de240ef0",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e63b61a3-a8e6-46b4-b9e2-45c0d5fde892"
        },
        "item": {
          "id": "834900a2-e172-4ed1-8023-410c4a6d9397",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "732831a6-c47a-48a0-b42b-c78ed4755779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369a78c4-54c3-43f4-b6b2-e39b04e78bd0",
        "cursor": {
          "ref": "d754b31c-6784-4735-99ca-177e90aaa437",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "37908a45-bf76-4170-b44b-e80bc88a1126"
        },
        "item": {
          "id": "369a78c4-54c3-43f4-b6b2-e39b04e78bd0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e9051778-1447-4660-883f-06a75b2f59fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cd1c1f-994f-498e-9656-f6674ec3e23a",
        "cursor": {
          "ref": "b0fe2076-abd4-45c3-9694-420ac3a7ca09",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "81a773b8-b855-4cf0-9fa2-86a107678c62"
        },
        "item": {
          "id": "a8cd1c1f-994f-498e-9656-f6674ec3e23a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8f1e3948-e37b-470e-81b9-8c30000a7a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f78a36-4f0c-45f9-ba41-3ff3b2de6ec3",
        "cursor": {
          "ref": "27651293-27a5-4c5a-ba8a-b1cbb2cf299b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a42ea0b6-d5d5-4b8b-83c1-c23dd06e18f3"
        },
        "item": {
          "id": "72f78a36-4f0c-45f9-ba41-3ff3b2de6ec3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0e13763c-f166-4376-abc3-24ee07f6cf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19debc9-0407-4d70-9724-28addd452df3",
        "cursor": {
          "ref": "f14e29da-36a9-42d7-8652-06102c7ad1d9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a41c400c-f265-4c8e-8bd7-95ad42692b0a"
        },
        "item": {
          "id": "e19debc9-0407-4d70-9724-28addd452df3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "06b5573b-47dc-4a1f-909d-b348c1dae43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b2240e-1b43-4a5a-885c-a21e188ddbd1",
        "cursor": {
          "ref": "ea1402a0-8472-4748-a81b-09c1c6a22fc2",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "bdcebe9f-743f-4538-9ead-5dab64524c77"
        },
        "item": {
          "id": "27b2240e-1b43-4a5a-885c-a21e188ddbd1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7b82b771-f28c-413f-b032-a16432db821f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241b5760-c3f8-4dd6-848e-ab0ae4555e36",
        "cursor": {
          "ref": "e81236a1-fbf7-4a9e-b004-e6b206281592",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d96123e7-4817-4eb0-9465-7536d430f940"
        },
        "item": {
          "id": "241b5760-c3f8-4dd6-848e-ab0ae4555e36",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "417846bd-3fcd-4d6c-bea2-1051bf16ac89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2943d29-7e02-40e7-a393-9f2361fb48f0",
        "cursor": {
          "ref": "35db599f-4d06-4821-91d0-ad1cc5271e39",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "76a29d61-68cb-46d2-84ae-22acad0cc5e3"
        },
        "item": {
          "id": "c2943d29-7e02-40e7-a393-9f2361fb48f0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6225db77-72d6-49a5-949a-b24467c3b7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ab20f9-ab63-4812-a82e-3e0380c3a4f3",
        "cursor": {
          "ref": "91f2d416-f95f-4a2e-9183-e40763fe67b3",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3fbf654d-6523-434c-b366-eeab78e71787"
        },
        "item": {
          "id": "c5ab20f9-ab63-4812-a82e-3e0380c3a4f3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "70877472-a152-4d31-8fc2-5cd9d7c36c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05dbbce7-273b-4180-b04e-02e5db3559ee",
        "cursor": {
          "ref": "d927363b-4b52-42b3-b05f-df93860b9648",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4f5ea58c-d54a-46d8-ab45-c289a28368c1"
        },
        "item": {
          "id": "05dbbce7-273b-4180-b04e-02e5db3559ee",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d79ca353-4b16-467c-8bcf-c177cd549398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbeb4f0-a817-4bc1-a9cf-9e53d17c8f95",
        "cursor": {
          "ref": "8660a2a7-8369-4c00-9507-18a60ef54590",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9578f83a-98bd-4145-bac0-61f477eaa238"
        },
        "item": {
          "id": "3dbeb4f0-a817-4bc1-a9cf-9e53d17c8f95",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "19f894f3-9552-467c-9aab-15aa1cd7a7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd773b3-9e00-4609-924b-9e5ef05a7e3b",
        "cursor": {
          "ref": "4776b10c-1efd-4aa3-8b6f-c6635a04008e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "864dcd19-a754-4dfa-b8d4-5fa13ab969f9"
        },
        "item": {
          "id": "ccd773b3-9e00-4609-924b-9e5ef05a7e3b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8cb4f308-cbbf-4274-a135-bb565686f9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3329383-beb8-41fc-9861-2b99ab4f3046",
        "cursor": {
          "ref": "0b54ccf1-71c0-4530-a9bd-713bf67967eb",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d5926e7f-6309-494f-916a-77d68def2651"
        },
        "item": {
          "id": "d3329383-beb8-41fc-9861-2b99ab4f3046",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e145cc40-4757-47f4-9922-023db24991d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37cc712-81c8-4426-9cd6-70ec8e2f0cb8",
        "cursor": {
          "ref": "9b2d55c3-9caf-4cad-a66d-b0dbf8ae425e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ec1a7aa9-b8f1-4a38-bd49-fb05ad6ea726"
        },
        "item": {
          "id": "b37cc712-81c8-4426-9cd6-70ec8e2f0cb8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a7f382f3-59f9-4c8d-bf03-83cb57e4f202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0dddcd4-cbf1-4f67-a253-2d2b98748f59",
        "cursor": {
          "ref": "7f56201a-a229-459f-bdc7-c29aa9171d15",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7ccab249-60e9-4f51-b8f8-79668ed72d8c"
        },
        "item": {
          "id": "c0dddcd4-cbf1-4f67-a253-2d2b98748f59",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d9b2b2cb-f347-455d-9fc3-9ed8ae12ea3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7c8d57-1f35-42f2-a74e-0aec14f2b8f9",
        "cursor": {
          "ref": "13585edc-5298-49b1-a086-a0024f2245ce",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1b2a9dd8-db81-4de9-aac5-dadf40a2f140"
        },
        "item": {
          "id": "de7c8d57-1f35-42f2-a74e-0aec14f2b8f9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3f08d7dc-b502-4834-8810-fe483be85156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b7f331-204f-45b3-be41-213ec9477169",
        "cursor": {
          "ref": "7edb0a30-3f2c-4d18-8321-64851f6c9366",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4e6df76c-42cc-4db7-ad08-2f6dca288430"
        },
        "item": {
          "id": "a6b7f331-204f-45b3-be41-213ec9477169",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "44241faa-fdfc-4193-b523-0590cfde8b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442df4ba-3089-438c-9dc5-626630006bbd",
        "cursor": {
          "ref": "4ac9f372-051a-46a6-91ef-73786611b6aa",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a05bb5de-0d90-4cd5-8b3a-0ca97eba88e8"
        },
        "item": {
          "id": "442df4ba-3089-438c-9dc5-626630006bbd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "72d23e5f-bbe5-4a49-b9bc-84a5fefb24be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5ace87-dee5-40c9-a8fc-26a66bd792fb",
        "cursor": {
          "ref": "f8c7f5d5-2b66-4999-98f0-35d4855dea2d",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "947056f8-577f-46b1-8ec2-cfb03d3982b0"
        },
        "item": {
          "id": "6f5ace87-dee5-40c9-a8fc-26a66bd792fb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7875f759-050e-4507-a4d7-05e53053570a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f733a99-18f7-43cc-ac03-d55005bcbd56",
        "cursor": {
          "ref": "409432e7-46bb-466d-888d-89f082593e48",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "92f8bf14-67b7-46ad-a7e6-9721a06ba475"
        },
        "item": {
          "id": "3f733a99-18f7-43cc-ac03-d55005bcbd56",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a66aea2f-da1b-4a8c-89cc-cf4d93684a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326bd8a0-8604-4202-b886-85d5c3b2ef28",
        "cursor": {
          "ref": "6a09434d-8b2b-4eab-9a1a-c28d71b81b24",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bbcef974-0ad6-4286-819d-d9c590d7f47c"
        },
        "item": {
          "id": "326bd8a0-8604-4202-b886-85d5c3b2ef28",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "23756f08-570d-4a85-872a-1e1c638bca89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a138031a-1a0c-4a8c-b797-bdb1da5784c3",
        "cursor": {
          "ref": "946dc91b-c8f7-4cb3-b4c8-4866733c9bfd",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fad822c4-8b35-4530-a51d-c34cf9d65f79"
        },
        "item": {
          "id": "a138031a-1a0c-4a8c-b797-bdb1da5784c3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b2159e80-deac-42f2-8050-d277b1f612c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63de1761-bee7-4ea6-a26a-9b46cc5fd808",
        "cursor": {
          "ref": "bb49f2e7-8721-4447-954d-06c85313ef35",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "81236664-2b74-4068-8fef-2c08b52013de"
        },
        "item": {
          "id": "63de1761-bee7-4ea6-a26a-9b46cc5fd808",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0de5d56e-bd29-4c74-a462-c845cd0612f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36358f78-af39-4169-854a-d5ebc2a9911d",
        "cursor": {
          "ref": "89b32e3e-5c77-4e0a-bd73-4ef7fad27cb7",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e4975e64-4859-4b64-a70d-5756990eb247"
        },
        "item": {
          "id": "36358f78-af39-4169-854a-d5ebc2a9911d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "16410ecc-d941-4193-af00-c7abc390e2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b31065e-752d-4c4a-9cc4-7ce4f0e4c337",
        "cursor": {
          "ref": "b3003add-5a71-41fb-b5ef-e58fe71facf2",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "94a9d23d-15f1-48cc-8e6a-578d2d112e37"
        },
        "item": {
          "id": "7b31065e-752d-4c4a-9cc4-7ce4f0e4c337",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "04b5d0f2-50cf-4d34-8c0f-19e7f2b5a98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb5cfe6-a922-497a-89a5-76642746cc20",
        "cursor": {
          "ref": "4f5e975c-0e55-4db6-a3cd-60f4c059bd65",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5fa993a7-c242-4561-bf30-a5e6d4219663"
        },
        "item": {
          "id": "1bb5cfe6-a922-497a-89a5-76642746cc20",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "74fa746e-2b83-4af7-9129-d5c1190bbae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cbecac-2881-45cc-8522-d881c7e494e0",
        "cursor": {
          "ref": "49220e69-b8f8-4463-a114-5478132839f5",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cf767d05-69fa-4b41-8635-71914cabcb97"
        },
        "item": {
          "id": "c5cbecac-2881-45cc-8522-d881c7e494e0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "844c0f2b-88ee-4add-b6b4-18c56f24d874",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 106,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83635180-1fc5-469c-ab43-9803f95a8a89",
        "cursor": {
          "ref": "37eaa472-9fa3-4881-b752-f4e89843d476",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4568ea3d-9bf4-4d41-865d-6189794f2f38"
        },
        "item": {
          "id": "83635180-1fc5-469c-ab43-9803f95a8a89",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c367b70a-766c-4cd2-94c9-bd5436398c62",
          "status": "OK",
          "code": 200,
          "responseTime": 128,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f27222e-2684-4eb6-b2d9-8314f0bca147",
        "cursor": {
          "ref": "495f21fd-845a-4b88-908e-04b5ed690a43",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9746ad51-6be3-43ce-9a08-92d170de275e"
        },
        "item": {
          "id": "2f27222e-2684-4eb6-b2d9-8314f0bca147",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7d3e1fec-9e66-422a-af65-0593858a4e4a",
          "status": "OK",
          "code": 200,
          "responseTime": 1420,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "52eeb171-9fb8-4ee4-8272-1de2443afbaa",
        "cursor": {
          "ref": "1fa640bb-1872-4d70-b43a-d72f8562dc3f",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b985fb93-4c2a-4b47-ad79-d9841c38d156"
        },
        "item": {
          "id": "52eeb171-9fb8-4ee4-8272-1de2443afbaa",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a0415146-de59-43cd-8b0e-b6afc9556f4a",
          "status": "OK",
          "code": 200,
          "responseTime": 1607,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9447039f-4d0a-4bbd-9452-a032a7a732f7",
        "cursor": {
          "ref": "2ca6556c-3d93-40c7-ab86-bf6a3cfd4dd6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "177a8ba1-56c0-4927-bbc0-c946e06aee19"
        },
        "item": {
          "id": "9447039f-4d0a-4bbd-9452-a032a7a732f7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7a132a88-eacb-4c33-884c-c160e821a3c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9447039f-4d0a-4bbd-9452-a032a7a732f7",
        "cursor": {
          "ref": "2ca6556c-3d93-40c7-ab86-bf6a3cfd4dd6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "177a8ba1-56c0-4927-bbc0-c946e06aee19"
        },
        "item": {
          "id": "9447039f-4d0a-4bbd-9452-a032a7a732f7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7a132a88-eacb-4c33-884c-c160e821a3c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b923070-fdc6-4a33-805b-1d3232c1cea9",
        "cursor": {
          "ref": "2660c923-eec7-4a03-93c2-85babef5680e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ae89dd45-dd9a-4b4d-bb3d-f605cec338f8"
        },
        "item": {
          "id": "5b923070-fdc6-4a33-805b-1d3232c1cea9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "75f2500b-0e7e-4492-b8cb-fb908a68919c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74316356-83d8-4e6d-818f-b55484e93194",
        "cursor": {
          "ref": "5491d37d-346c-4560-a1b2-25ad97da0415",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9e22ba3c-d801-48fd-a5f6-1750691d9ec0"
        },
        "item": {
          "id": "74316356-83d8-4e6d-818f-b55484e93194",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4d44881b-ba91-4bbf-81e7-a577894f814c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}