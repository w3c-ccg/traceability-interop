{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7b7c8c24-1d32-4e09-bdf5-bcc0affe763d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8268ceb7-83dd-4d5f-a392-9b0f23d22c15",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8bc59b8c-cab9-4d6c-bf29-7a638c14d0b6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5346e6cb-0741-48a7-a11c-055561c7d453"
                }
              }
            ]
          },
          {
            "id": "45c78e0d-4a45-4a3a-b0d0-c0b08c82e369",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3d0cc26-6acd-4f0a-a30d-6f8cb768a2cd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77208423-8df9-4fd3-94dd-d242ee1088c2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9acf897a-cd6e-4c82-aff8-bb2a57c52950",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "35f3cc3c-6ec0-4139-ace0-96995b33022d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "31d2d024-c8b4-4247-8d3b-71916618ed46",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a6995df-73d6-4c88-9d52-b3d0514bd912",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "437ad509-6695-4b95-9744-7a549a0ab333"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b76ff66a-da12-4ba7-8953-e35f257df5da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97eb5079-be9b-4396-9af2-f826409689d0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e806efab-d9df-4f5f-9cef-ba8bd0169251",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c0a33ed-965f-4103-8988-cdd5a95df342"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c6a3634-2bda-4c2a-9acc-3e49651c5aed",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7d1a6e88-75d3-4aa0-973f-20e716828e16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c161aabf-b0d4-4337-8b41-ae1257bac524",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18a167d8-7b5a-411a-a11d-b24de4fbb4df"
            }
          }
        ]
      },
      {
        "id": "53e725fd-d937-4d78-8e27-cce4e2aa7180",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "75fb3d0d-0437-4cd9-a806-6337e016fbef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8641aa5a-47bf-4fdb-813d-5c55c363db62",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c737dcd1-4d8c-453b-98c3-50ade3f27927",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2122e2a0-2d10-4b74-8ab5-8725b8262eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e25c268-3ae6-42e5-845e-09610ae5cb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdf3b52-e81f-41d4-a902-09d22adf087c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262af975-5a54-4677-82ae-ccda2665886d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "558cd6a5-d946-4052-9a72-6e39d5f2c598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3e05eb-6612-4df7-a172-8e7e9b2e36f5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161d9c0e-4b34-4b81-bc94-7db2b3c7bc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9fa1088-c1fe-4597-b32f-bc9286500e64"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "510c33f5-38c3-4783-a6f4-a0cc2bc8b491",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c823b245-b07c-4890-806f-f5494421b417",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c169f5-efe8-4eb2-ae2b-87754174dbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2230d15-4881-4c82-90a4-ccc2f507b5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466c434c-7373-417a-b8ee-bf54ae511bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff1dccd-3034-4f68-be0c-309cfeecea2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd330f8-a728-4fa0-bd4a-f8f1ee7c2e0b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca5ea67-8ab0-4566-bab9-9bed5b501c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5400f36-d2d2-4c36-bf59-877fb11af4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd97b629-fba5-4d71-9924-53bf8778d521",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e18cacfd-8cb1-44a4-91f8-9f64fe4cb22b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e1713915-5849-4fc3-a0c4-3d4f5b4784c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8b10920-f601-4a88-a30e-7309c51e96d0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60014047-a3ca-4cbf-9eef-f16d75e38314",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "26870efa-46c8-489d-9d5b-5641287bb82b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe81af96-41f9-466e-b581-25bd34a72b2b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e53d79b4-7505-4666-bd1a-66e864165b66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7988ea77-499f-43ac-9adb-96539866a2b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44bb4712-bda9-409e-a87a-e6278dfae26d"
            }
          }
        ]
      },
      {
        "id": "3b924eb0-7ab7-4bce-84bc-aa62d13bfdd8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "79b2ed0a-13cd-4acc-9fe5-7a48973f5df1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f42bd719-85e0-4ec5-bbb8-284579f30d6b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d503a935-1e8f-4780-ab23-0d56f87f70c6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7136baa-5c4b-4efb-a2dd-eaa96ba74b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d32c27-8ec1-4e50-9b8f-0720b58dea0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0b005c-bbda-4328-9052-daa079e6edff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46ddd5a4-f1d2-4af1-9dfb-676f3406650c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e72edf-4800-4c33-a04d-93d1f2eedd31",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87812eef-dd8d-4329-ac57-4b7cc4a86a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4aa3bf-23e9-4cdd-8254-47e832491d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598ab7cf-d9b6-4e6b-abee-84b00a7a2e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19442e2d-9e2e-4d5b-a93b-9787c3aa4143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c95c95-8c29-49fc-a610-4bc59a2e8089",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107e220f-a093-416a-a273-ee9856d87fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248105a3-786a-45e7-83ea-1dcc507e9f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe9c7e3-648e-471f-baef-6bb33b88afc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b18b5b0-33b8-4705-bc5a-f4fbf7f59607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166f4caf-8e02-4988-adf1-18ce30e9fa18",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca064b27-cec9-4136-8ef5-cb857b33bfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14300f05-0ecb-4ca5-8f14-7383f85a2160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47393fde-0921-442f-b597-4735d7184640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a91b7d17-e552-4e1d-b29e-d82d239217f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9344a512-d9c9-4623-973f-69b85786f86f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909160a1-e90a-471d-a505-f0b42a580714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a5f0bb-01b5-4b10-8193-b85b5ccbe09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784d4c99-af51-4222-868c-16302761cdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86d2810d-ccc4-42b7-8d67-48af7903d616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c9e3bd-30a3-4755-b9d9-1436f389c646",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa51832-8f7e-44aa-9f75-7bc1354ea798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9bb70e-560a-48e4-b75e-37733aacbefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035768e5-3971-47ae-9a72-9617b07b9fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c0fdcd6-105d-43a5-9749-7722d76f84bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d198e3-923c-4a4c-b17a-be17e5b0f7cd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb21cb0-f235-4020-a63a-4dda76d9299f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a509c2b6-0794-43a3-8ff9-bb8a8a48421f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9a9320-62fc-4bc6-92b2-a95b84d4b6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35407c1c-62d8-4338-935b-3275c33dc089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2445e8f0-9b67-4019-860a-75e826fb34aa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c6bdb1-28bf-446f-a1db-b2ff1fa0a5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0457cbf-bba1-49ac-8ba8-298cc519c155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5796107-3fd2-446b-a95f-bf1d13e34469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "281d794c-9e79-4219-afa8-0a5d028eecd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0022af67-9638-4eca-8d76-9a6a9fcbc5e2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a774dfad-6461-4625-a0e0-0decfa9ce694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e438cb32-c854-4541-9b4c-15188ab72dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fc63d1-d391-446e-b8d1-060ee7f32cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58ea84ce-948a-4ac3-97d9-342fcb016b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42e2dbe-efb9-4500-a669-03306ba0f02e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced550cf-306c-4e81-aea2-7223901d7e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5813e333-0eee-485e-baac-bfc293789eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a925b91-0a0b-49f3-9ca1-dd002bfad0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b8831df-e792-4c00-b6fe-2dee370b5195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2be54e2-720c-4b14-9825-cd70d6237fb2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ca2855-b1f4-410e-ab64-6d4b796715b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf7aac4-2279-4d8c-9cc0-9260dc2495d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d569570-7156-4f32-b356-efb407fb3d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e846aba1-d785-4fc1-afc1-9781f84b36a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739e463e-6d10-44bd-b891-4b2f5f745183",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825cacd0-8497-473c-8893-ca77f67bddb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e853ccbc-50e8-48eb-9586-93ea5f609f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041fa056-a8a1-408a-9d4a-28f6693ee3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5252a16-b65f-4275-839e-30f42a73ef4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f822dc-4356-43bc-82e8-c270481a3428",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50da674c-2749-4559-a5d3-647215637bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976dba18-6e95-4963-9c51-7c1578f90396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699f6d8d-b162-4850-88bc-f680f0749922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f065a720-9938-41db-9034-54533816816f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067d7140-db09-4980-bf92-6828b28afa6f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6207a057-a201-47b9-94d1-f1574ba2af56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224e9114-ce79-4e56-8808-5ad744099f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808e3f97-6aed-4f31-9894-9a7116699bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f1a1c16-4e89-4195-a6d2-9c1fb3f97593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76366096-071c-42e3-afca-f226bc2581d5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adb821d-5c98-4ebe-80c6-2141dbcd8994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47c719e-a528-4c33-b090-4ee6a99d4faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37eac3d5-dc74-4335-8cf7-4399d14a7b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2a3d983-c028-41a5-9923-90e51ab2ec00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0461ae5-5a01-437b-8636-cecffa348741",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530597af-a5db-49a7-9c64-32bf02598e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c419f7-ac47-416f-b853-dc33d30a5cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875230c3-b16a-4218-947c-840e7914bf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9c09545-1a1d-404b-b1b7-d00b57abbfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60153fb-1c7d-4aee-b23d-110e15e7fd4b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41886af5-bd5c-4f59-9f98-59236963dabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89f9a6b-e1fd-4ff7-911f-6ae0ebe4a9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12123d28-b561-4062-98ca-3bb38870d49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac5b152a-0dbd-464b-9e3f-6d7ae62fe028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc1b33e-8410-412b-98b9-0ed83af7a72b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e566dce1-de8c-4fac-8e50-d70558798ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093c59d0-1087-40e6-8ab2-169602851760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b85f5fb-d8dc-4aa8-8eca-5c0ebf1215ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d8b987-9e78-42a2-912a-d7a1c09b7340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d59f10-2e2a-4b58-a82b-3203feab0bcf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4434f280-2822-4a83-b269-9d1c25a617bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce1c810-fce6-43c8-a577-a948f0a0c6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2e0d96-59ec-4fab-bf32-15582a0c035f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec64d8c-4651-4b2b-9afa-615f60094716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b560e5-4052-43d6-9f83-ffdb405b6cbb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e796dd-d2ac-4fc2-a7d8-3d9b54097258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828b414a-3b41-4f98-bae6-0a4018e20ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d76af6-cfbf-4b2f-a7a5-97f795b546d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b26e6692-0922-472f-96c5-097f8c357553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bd43d6-f735-4f87-a35f-5c031848f210",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834fe7b6-a432-4cf5-8e32-1c570394e4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db2c083-fd28-48e7-a3eb-0fd196ca741b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8819e5ac-52d4-456a-a7fe-5f37c0e92bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c196a065-087e-44cf-94e0-1a8ab9379fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1443bb91-ee94-4285-814d-7b3ad0fb8032",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73223a17-8607-4b26-9358-52867c41c5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4317388f-1abe-4f12-9363-38cbb8bf6ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0c5502-9d8e-4996-9c87-3db7f59965e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7458987-55a4-4eb5-b2b0-a419d4a7ad19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3516f64-1916-4622-8d07-990bd96e0aef",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0468ace4-1f0d-4aa8-bda9-73b271574317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e787e1a-2393-40e3-b5fa-2b98791e4907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495a1f9d-be8e-406d-afbb-221656ce16ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba6fe98-1e3f-4e53-a5e4-ec1178812b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aed02e5-1d51-4917-95f4-4db8f901f8dc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d21f68d-b0a7-4508-b285-d656c7c84caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fc2f1d-e803-4fdf-8add-81ff76cdd481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197c6f93-7223-47d2-b660-f5ba23e79eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa63846-3f3f-4567-9537-92785669489f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30be1c93-3cfd-4301-b1d6-83d4ac028627",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e692e5ee-fb1e-4d97-afa1-8a664607611b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff6bc87-7095-4b6c-b0f3-d05841ffa200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68185c5-9fc0-4f2a-839a-5e6479b64c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88fe47c7-edef-4005-9112-0a817993b303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b48624b-f57d-4bf1-b96c-b452f8db61ce",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432921cd-78b5-488c-be2c-0ce6eec40c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74a849d-bc72-4dd5-9131-f1392e64d81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b962259-f331-4498-b370-907053ae8efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "577398ef-2eb9-4bf1-8e5c-20093ac58721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43ecc64-22a5-4c1d-9655-84607086e216",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eac2249-c5b4-41bd-9ed7-aa359506b8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea6b02c-d0a2-4959-8684-2d5b3b952b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520d9e41-4a9f-4a18-97a4-3a20336f4d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb665bb3-2a95-4403-a59a-50a5a941f29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761f54d4-4bcc-49f1-8542-c2e44496ec2b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69de7d3-75b7-4ded-a107-c3b0504fd1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ce9aea-ad0e-4f65-a981-8dd80b3874b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bce5bf-5fde-4748-8a4f-0efafd2d24b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc637b7-e734-4390-a60b-0545540245d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4050ec-ce4f-4717-8e0c-c57eb80b9300",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d25c47-2d45-4b27-b21c-3b894f9e2a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722816dd-cc4f-434d-b119-a763b627649d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716fa2ad-4f51-4588-ad67-dabe25c65c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74fa2eee-801d-4ed7-8a5a-3b0219977e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1a7a10-ccce-41cc-a95d-236a7dd516ba",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90bb04bf-e335-492f-9883-45a82410966a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc15b68c-c5fb-4786-8bf4-f730a9be4cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a38b182-3dc9-44ac-8814-479c4b57f74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e222962-0f0d-40df-bce4-f722f46ddca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04effc45-7bf8-4976-8275-37c13fc92475",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03440761-332a-4fbe-9f42-a2ad4b29b246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470991ec-9e26-425b-b569-0ae8fdf06696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4d3afd-9e57-46cb-8606-17744a147fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84917ac2-4713-46cf-adae-0a857ec3938a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe6c440-de9f-4108-bde8-18754b88743a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac49ada4-74d8-47c9-a62a-2889c156eaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9e203a-05be-4376-adbc-733b5c235b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6edbfba-4602-4bc3-ad6a-0920df67a664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06b196fb-a75a-47d3-b709-83af90df2a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79a8ee2-1258-449e-a7ef-7284b21bcbe2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07502e3f-c5b0-4e6f-8ede-82d49f0959b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3d5acc-2391-4bb2-88de-270610bb6964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffb9d66-e3a3-4638-93f7-0209fdd87a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef58229-5bf4-42fc-b2aa-69aa6c9a5078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d92b5ee-c2fa-4ffa-9711-a8f8cebab77d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3e817f-cd76-4a70-b0ab-fc06e199a6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065958ce-fa4b-4eec-9f50-e903d705cd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05168732-f20d-400d-b5a5-7c3b950ec205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07642039-261c-4618-9b06-f8fe10f88921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50e41fe-ec0c-498f-96d9-9b1b5fb1f53e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a608fc-8697-41a8-bca1-42ed8dced4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0108345-a24e-4956-b7ea-8da097b4b622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567dc27c-fe1e-46e3-8a39-8f8156bd1aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7d202561-7bbe-47f4-99ea-3150f2a6ad6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9105966d-3df6-4bf8-bae1-7b45d9648919",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5724f053-ba9e-4790-a71d-b437746ab150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91cfe087-fde9-4e09-8aa7-18ba830341cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233dc0fd-79b1-4abb-b853-1ce78d2075f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14110380-0ece-4fd6-be2a-7f2a40d9f0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f73226-f832-4f15-b5fb-d6df5fe8bf8e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc1f2d6-368b-443f-8f31-f96a4865c70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46ce0df-251b-4022-9dde-05ebf53a89c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0def6e31-e560-4995-a074-922e48b00d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad374fc0-8e21-4518-bc52-91f862441bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0feb9ef-c53f-4a7a-a4dc-fd2cfd0e1c37",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a917911-f4f5-4623-8fab-d2405912db93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f38e204-1561-4693-abf8-3f511c27f538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e048070-2b16-4ccd-9657-1a3b9074f6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "360e9cae-c604-4daf-b85d-297ee42b8882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cf6ef5-06bd-4516-b7ed-0b9bca46ad5c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8786394f-d862-4306-a213-1630042d42ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabdd271-3b17-49c2-864d-b5d1326db8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c904b2c-91e1-4bc7-a1bd-242cf1b473b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ceec38-5f89-4f81-b69e-b7d202b687e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54afacf-4cad-481e-b676-30da6d9debcd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd56409-3eef-41c8-8338-fab7022832bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b828db93-4f22-44fd-b5cd-51f3d68916bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00941ff4-7a5b-4e68-a735-a4a9a80496c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de8a0e5c-8c0d-4a7a-9aa4-52a6314fa4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f31053-1724-4928-8e51-dfa2fe8fdb9f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d5a5b1-96f6-48b7-a1ee-2fa8d7273ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1908a98c-a43d-48ac-a696-c4a8c505b51e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bafb866-0ef9-4b5f-8852-1da39332b8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb2f488-ebfd-4899-a728-a779f6678137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2c9e1b-bb6b-482f-b2be-18471ef8aa4e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7dbb84b-fd33-4970-868f-026b30fcf46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a47a547-9079-45ac-a0e5-a4fdabc0ea50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa719f4-5a96-4392-85f5-350437caf984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2b8426-3ba5-425c-a67c-024c34583691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a9f6f8-fb55-4b90-a40a-b74f8f1f33ea",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159962c0-40e6-4cf1-9818-0548e36a7e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092bbc7e-25a5-42f2-92a6-4a21f93f179d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bcbd63-e454-4710-8d7a-b54888658cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "48711f8e-c9c6-4e93-9cce-88554543a893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb30a8f3-ebd1-4d57-8c76-7a8cf6f2a725",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9625b9-9c3d-418b-8ba9-6f7ee8773159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef92064-0c58-426d-9e81-28dfcf5b8173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194bafb6-82fa-4413-97ec-5255f7f190cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c24a752-b972-4f8b-960e-2b37e9c3fd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a643958-ca55-47f3-8d64-83c9b5b3e7b4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5933045b-51c7-4a88-a6c2-3c8f23291d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4744ba-62a6-48e1-88e8-37b7fd15f330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995daaf8-cb21-475b-b6b1-6026306c0575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0af32263-8ff4-4351-b622-d71732168314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7025cc-44de-4774-ab1a-1fb416dcec9c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b099ed06-e7e4-4684-8023-3e7c4d2cd8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ab51fc-1514-4eb1-8897-9cf0fa03abf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b237ea-ccb9-483d-9a49-a712577e6774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb71c933-023c-4a7d-b206-b826eedc0038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa806977-b8a8-4ed5-b059-7bd7292e3c43",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e238f0ed-5700-4d1d-9eb8-81a76bd11b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0821c3-a8fd-4be6-8dd4-dfc9fdc9a164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674defc5-5347-4226-8279-a58698fbd51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da24f62e-1062-483a-925d-121fec093b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb635f2-ca29-4c38-88ed-2808a838193c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a36aa4-3584-475e-b798-ed4e75044172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1039d3cd-615a-47c8-b5b0-d11a95a53d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2cdd4f-e6df-4cb7-aec6-3b84aaf848cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cce208-bd51-4a4a-9dd7-f54008331ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7acfe5-b44a-4a3c-bc27-62e2dfcd4c58",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f44488c-d374-4d3c-ab2d-f37b18e6606d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e52a52a-41f5-4133-abdd-ac760495f510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd90a933-bde4-46e7-9885-e5f6a582ddc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc51014-1260-4ea4-97f0-5cf075f00a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e903e64-1631-418e-a74e-27514cfedfcd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1592a11f-53f2-488c-b450-03ee11b4b095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4267c683-c1f2-4549-932a-9bb8dd6b24d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e29483f-1774-4917-af0e-87d2601f3d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7462b77c-6fec-415e-9678-1e2e7dd235c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a5d614-6c27-4a59-8eb0-300bfe8606e0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e8245a-b60e-454f-818a-370eaffc00b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ecadf0-052f-458f-bc41-018102b82c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3670c723-00d4-4f40-adbe-2df111db609d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7057ebf9-3e2b-4260-b20e-4bacdfaf935c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57085897-5a6c-4171-ba9b-290f91d9372a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bfda38-3f83-4446-91e9-2bc869920f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebca1d71-1eff-4dd1-88ab-a6d632144c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ebf606-15a8-4a7f-8545-94da4bbac29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3654625d-cceb-4ec4-bc11-e1b34e4c9d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf2caee-d4bb-4eee-bdce-2ad9a39ec86d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6eb55b9-e08f-48da-bad0-d3b2f78e4103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac45ebdd-304e-468d-b97b-66c60e08a687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad3a97a-fbee-4e3a-abdc-19ab3165ad37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05262774-c311-4c86-8fc6-cd5214e50c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45676211-8986-43e0-b8ac-877e1c100cc9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854a0bd1-100b-4654-8719-790f1b054e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b484362-fcc0-4e2e-a671-fbbe671fac2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fe47c4-f14a-4e8b-886a-00d73bd9d795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b970af-bd82-48f2-bb92-d769a5a5cb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba30f1e-cbe7-4c0a-92e5-0553c7eaef8b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f0c24d-492c-453d-afdf-09452b922c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd9d38c-c432-42db-824e-0137b59f9c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1caf12-7ba1-4c9b-b3c4-cc354de0a2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f466eb78-bfc0-4f8d-948f-bd54d0159968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba405cf-a78d-43cc-87db-0419d0bb34ea",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d346019-0d8c-4297-b59b-af0a7408efd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8193bf-b10b-448e-ae75-6d86e8b8adfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128aa53b-c9ee-4159-aa07-f13c67554028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2e755a-cd26-477b-966d-cf2bc3397041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391c33b8-eb22-459f-b82b-a6cb08744231",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d770397-e4b9-40f4-bb85-bc0ab95ee659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00cbe19-7753-4759-9564-a9b4bc69d448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bd9465-8422-44a3-8648-d73240a70cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d106f3f-3aac-470a-a818-b94effeb401a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1297863f-311b-4adc-bb78-871798e80452",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c8ee56-83eb-46d6-949e-07e3bfda5136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083999dd-aa6f-4715-a06b-8ec2d83ab3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679e4d1e-752b-474d-9de5-58b0081ab41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6637c3d6-40e0-4ab9-a71b-9317861d97c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214c2227-ad1c-43f4-b994-b11740630ce0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ec4e8b-79b9-4389-9677-c3b7ed174fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f59f794-a8d4-4934-8491-5471e07c5ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b61290-01ab-41d2-8342-83c4353031c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8577ff-22f0-4369-9a05-b9e42899e9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72dc638-089d-48c7-85de-c2f9da549fe3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0a242a-e28c-4a6a-ace9-535a73729c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f62887c-78b1-4630-8daf-e78e067be746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8126bcf-576f-48ff-be1f-61a9ebefc2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b873823-723a-43fa-bfc7-393b49dee5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c932966-7137-4048-954e-b5a2523066a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b57456-6617-4a41-a5d8-07f666562a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20dd2f33-ec41-4767-ba63-b4a985d60056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d612eccc-3d9b-4596-be89-910954f329e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b04120-e02a-4566-9bea-92cca43a9267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610998ef-ca78-4e4e-be27-9a55b8cb2c09",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8942020b-0164-44fc-afff-e80ba2d83258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480228d3-575d-4557-9d76-06ce423d930e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731dcc48-2244-4b7e-b32f-7fff256fa85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4616e627-8c64-4f58-85a3-cb399a1d289e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb87b46d-6589-4366-9971-0e47d477dfb0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021ce2a1-ab61-438f-9e4b-adb95088b985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff594197-d39e-4b90-bf00-3764964ecbff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f3446e-b487-4d54-a171-421d016fb20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7ed057-af87-411e-97ce-4fef52b26470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ee2fdf-0bc3-4ce0-bffc-deaae7ddd75d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f37bdd8-bd21-497a-a774-208dc4cfb256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1fb74c-33b8-4eb3-b270-1745d6a8a72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1292d914-284f-4af6-9b06-54358c5d0a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7584f331-b3ee-474d-b67d-5014cd6c80e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93e8dcc-278d-4f11-8319-619b6e74014a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ea0317-82a4-4f1c-8492-2caebe6bee84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e210c9be-f7ca-43b6-87f7-3a3a7c4c3e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d437ad6-db3d-44e1-b342-f813d89fee2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e92a926-a23a-4350-a634-8b1b7d6264c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a4f4ef-9d3d-4236-8c61-3ddd1c6ad49d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff8da5d-ad1f-4fb7-aed3-782b4e54b24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728142e1-10d8-4b16-80e2-f01275868304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce42955-360b-437e-ae4b-89cf33bc47c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0b238d-a94b-4954-881d-05f2a812d155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6d8c99-3c0e-4780-9a8d-c88ca83cfcd5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7168e96-635c-4330-9465-54ab045803fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23943ae-0ec0-4dc1-bb60-a2d0d74bfc97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a14c12-cad2-4961-bc1c-b6b32f8d29c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b37a1cac-a924-467e-a854-05da7e6fada4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7e7d5f-757b-43aa-a903-7415f166720d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6a00d1-eacd-4194-a578-f9cd691dbe7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb06aee-9095-4faf-8f41-a71d2fbbee27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceca9e4d-28ba-4a7e-82c3-29e2fbe04a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f88b2ac0-f005-4111-820d-3c1dc7c2d9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad252b0-9d1e-4950-b44c-bd3d4a5da31e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff0dfec-296d-4af7-b427-c9b0017ed60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c760f96c-2f43-4538-808e-2b3ebd4da6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692e1c5d-926c-4324-b220-6e602c5d3a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46a78e7-0fcb-434b-858e-46a76be0b73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff2337c-f069-4b29-814e-696d6a3d46a9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3003dc0f-8d21-4766-a87a-304190a34ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78f2750-c739-4c0a-9318-6766fca09824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17102dc0-a47e-4b35-937b-da1bf3507132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e39c0e76-e726-4f22-8475-36491304df67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fedeba8-8eb4-4749-b72d-d7569c177207",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad385de-8826-4fbb-b793-f67fa6a56af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ce8c3e-1f11-4162-9b76-1020b21db004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0080a1-ff5c-43bb-8e64-4788d0e8c064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece2dba7-fca1-41d7-a0b9-43b0a30ddd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8005833d-55db-4f57-8528-be6587bc3696",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c07a959-a20f-4b49-978e-c4fb27543004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0653fb-1aa6-4950-a024-d5cb7d9fc69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1792ac5-348f-4c07-bd65-2ca5bd22c353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1b4723-415d-4c88-bddb-363530ae4076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207359d6-38e6-4d1c-8967-7c7dd40448f0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc3e220-ca0e-47ce-9cae-14a11984786c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245895cf-6899-4335-9092-8aa50e75010a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9bf587-2570-495c-8b56-48acc4b16737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c311e9e-3178-4240-90ac-cfe16269dc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c55afd-fd37-42b8-81e0-b89f431a0072",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada86057-1cc5-44a4-8cce-0db10957331b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f508b80-d117-494e-a032-dcda45dd251a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47b34d3-cdb6-4e30-86e2-fbc4a5d6aeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f40be4c-1745-45fa-b082-c554b6c0d352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be404fc-b785-42ac-84ed-88c5caf89810",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3b572b-2cf7-4302-8085-471b28f5fd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de1f935-afac-4b24-891e-90e8c41c69a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d9c147-008c-49cb-bf04-506b6e601997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a035ddf-39bc-4843-b211-9e07c568cd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de30239-5e95-4440-ae81-57e7ee4f10c2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf3ba8b-db3a-4532-920e-a77814fa5382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1742706-2d96-4c3d-9973-c092b2b5f561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af158032-516b-4b8d-8d61-9e8c056c393c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "515cc9dd-340e-4b94-bf5c-13385d5af19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2ff0d3-2945-47ae-b68b-2c3e14623a74",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82eabbb-0f7a-4d7d-8f3b-35bfd71f363b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b59a45-6321-409c-8f64-823bc2dd7505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7e9dd8-7054-40d5-a164-6d9d1b40e006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a665b77b-0feb-4f2d-9b49-63e32d17c57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1efb31-7ebf-40a4-adb7-310cb96894ec",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9467b144-f37b-42b5-8367-e3d92eac9273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ee73ba-f3cd-4db9-961a-0418f9b29362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2a7a6d-542b-45f0-84c0-0021a943c809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cb090a-16bf-4eb2-b00b-e2512425f8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27326330-d67f-4df7-a6b8-b79ec2317736",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b487a32-4b4f-40b4-b657-64c987a5d873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a733d1-6a3f-43ad-bb2b-04cad91a210f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b11941-e574-4e3f-bc08-8f78391ddb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0ccc1c-033a-4d5f-805d-c4ed4d86a813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf79372b-51f2-4b6d-aa42-b200c7237cd1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec99ab7-0508-4e02-a15b-cbbf380ba3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40653c6c-3eb5-4253-8026-a88e06c61432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6959fff-e9df-4ed7-a5b3-64536db0379f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1457b93a-0ca7-4105-aae2-2b4529631f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d9fe4d-f00e-48a9-aa6d-bcc278493807",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171c0e58-e5f6-4576-a80d-79ddc4488800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bed3e7-9e60-4ab9-af52-536cf6915c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb4ac71-28f0-4452-8d7c-c93cb13d0560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e224f8-c046-46a8-b3cd-ecf16b965d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ad7af6-d21c-4f3b-940f-65d9e5c24e8a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a08f6b-abcd-4186-adc2-67f106782259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebe14c8-c0cd-4ba7-b437-c8018fced51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec503b87-7df1-4c52-b2b4-dd37c3f0e22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62a483c0-2631-44e0-aa43-25a942e40689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d747ddb-7f6b-4554-8c79-27365496a21d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5d41a8-1485-4ffa-9378-073961b612f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4afe49e-ff17-49d2-9b2f-f10ba64dd475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b182884f-397a-4360-b8df-3771f3b61a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b8f5323-07a3-400c-8502-5c0f047f97bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b81b8b6-e8ed-4710-8c7e-237651e012fb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd382812-1413-4920-823b-98fd18482058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5b607c-6833-4d94-81ef-b7429ee3a0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa8735e-4a7b-4f8f-874d-d92af0e55b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fb9b27-3eae-4043-801a-ede0d77fc187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143ee72c-7a36-4076-a678-808c65510fe2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd351732-9ced-47ac-8183-888b824d61d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb85824-c70d-46ea-b189-2a743a86bb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58268e1-1a85-45a3-9423-6b069fe2e71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fff3559b-6634-4523-8ce5-c02f7c937b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4323f598-aa3b-419c-9f38-5bfae0645fee",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e4ba82-3d15-4e90-a5b7-0c7d8e9658a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e931139-74ff-466f-bb89-ca03ff0e6e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585c8ab0-eb13-4a85-9a68-ca23079d07e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4bbf39-cfe7-4e82-8665-5195bdc9a28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5462c3-acaf-4257-91bf-22269dcb4802",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db353696-b395-4cc4-8efa-b40348480123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ab3619-c4de-4099-9ce1-bd8fbf13692a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4819f8d1-f8fd-4e5b-ab71-5da1b00ae99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "430d611c-491b-49d7-829f-23461a440fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5383f839-d661-43b6-87c3-7d9e91d5ab47",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313dce50-0bc3-4fe2-91b8-be0d8f78e9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6bfe85-a053-47cd-bb78-6ea0be0923bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afd0bec-038a-4f69-bbd2-153d804953a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "46ab8d37-2b56-414a-951f-d2f0c2b6bd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35978e3c-cdc6-4810-998c-45339d9053fd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a9a581-fe72-4ab4-ac6f-afaa834fb534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d675262-42f5-472f-a5e3-e2c59e58bdb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5c9217-e6b5-442f-af02-32a525ecd40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9402b35-85e6-4592-8e43-b12f26a9b9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4261fca9-00ed-4769-b778-2356641a79a8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e547d567-39ec-47db-90ac-6716829059e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe65d19-ed15-457a-8ca1-1f72a04af8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad25c984-9e46-43f3-b31b-28187f7c7b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "69021e92-b0fa-442e-9e0f-8266c3104dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bae806-5a23-4ac1-ace0-3edb1b118ea3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6d82b4-a914-41e7-9cf6-74dd8a336382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c871b69f-6fd9-4732-b1d0-3d6dc11f9245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8ca433-e455-48bf-9fca-7b689b1de544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "96338941-bbda-4d76-a8cf-c6c1bc71c602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d96cd6e-ba59-49c0-9176-a9b39155fd32",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac04c698-65fd-4762-a0c0-0af80d08640c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bede1577-71e4-4b43-b9ea-595f2d3cbfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86106908-ad9e-45b8-aa26-43880816f64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "90f3d25c-671c-4eae-a9c5-d69cda0dab04"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cee58c5a-146a-4e85-b0fc-dff1d66006e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97555fe0-82b2-4916-836c-26b88a5ff83c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43c6789-e070-49a0-8689-56c713905ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a65010be-1288-40c7-99dc-1f65c1762065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77362b9-d842-426c-812c-7a2a077c9063",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f95ffa9-0a4e-4733-b2cc-9d3d611ac3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d43777e-41c9-49b2-9a5b-f2f504ef6df4",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4887724f-ae12-431f-99b7-3f4fda3f2f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d791c9bc-1977-463a-96ee-a93140c96b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5107a1-87b9-47a6-a02e-10e26433e97b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad406047-dd1a-44cb-b7ac-782442c23805"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7df3c14b-6621-4c85-811e-670adcfb1427",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "985eef36-679d-4e9d-a855-d63b34101bbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a36864bc-d36d-4532-b577-96b1ab178ddb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b789b542-e276-4c36-8cea-b06ce6b17ebb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03d8dc98-f971-44d6-98e9-43fbf5f6f9ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ac3a907-5d3d-4d27-8898-3c91f4ec9957"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c05d15b2-b41a-4cb8-bf96-6d25cd7a177f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06ce8209-2129-4fbc-a9a9-248a85e305be"
                }
              }
            ]
          },
          {
            "id": "4b78d68e-5b9a-4df1-82ee-32be2c6f7c04",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0f42f3e0-28ca-4d3f-a975-f38802ff53c4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e426914c-89a5-4b7b-906e-b74d94fe6f90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96e27c9d-4e9b-4cad-ac57-13664edc9b7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f12205cc-b060-470b-8c32-f349f33e45c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8dc9338a-82be-41cf-be63-7300facf9a2f"
                    }
                  }
                ]
              },
              {
                "id": "08650d7c-50be-494f-a8ec-5f80effa6768",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b21b2595-9d33-402b-8fdf-0093919b4e27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4a239f9-e3b5-4afb-9fbe-b159e96a9601"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45d96235-677a-4551-9f0e-245f6b9b1658",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6d02befd-e966-4513-8193-228b510db103"
                    }
                  }
                ]
              },
              {
                "id": "d0525d33-705b-4ce0-91f6-11869e9de054",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dec4f70-eede-454d-bd15-15e728220f05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbdb2054-0b8e-4963-b2c8-6ee8753fad2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81885a26-6c36-4b41-a1b0-40585918a765",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1be35d44-71fb-4077-98f4-e59ef48cfc25"
                    }
                  }
                ]
              },
              {
                "id": "8ef0b8b5-6356-46fd-a0fc-22d3d6561b13",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "289f145b-e659-4163-a88b-80cad3f7a14f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2117a57-4fae-472d-9373-430a398e8eb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0553fa2-1471-4bd7-8efa-87fbb9396412",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7cdf71a7-6e85-468f-9126-fb2a6967783e"
                    }
                  }
                ]
              },
              {
                "id": "4408fb4c-c4e4-4244-b9b9-2eea172a5931",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8cbe3b7-7dbf-419e-8f03-eca4b0e3b4c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff065d9c-0f81-4e51-9700-869570eac42c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b27bf5e-0318-486e-ad2f-ab5ab05516df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2d01caf2-9756-405f-946a-8e97f4f13b2c"
                    }
                  }
                ]
              },
              {
                "id": "8b391c2c-276d-40cb-85ab-060580c8c138",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ef59b8b-b5a8-480b-9e22-6fdc4e160292",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd6878b3-337d-41c3-be9d-c106bacae501"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d033d41a-3c43-4664-b9c8-34f551ca7380",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0d8765e-3c9f-445c-8176-7a4e908032ef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48fea638-87ec-4480-95b6-35fe97662c1c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22d82a5b-cad9-4f00-8e06-93d1d44af996"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6edcf86e-5ed9-4223-8292-fa39b301c84b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93575da4-3c94-45d8-841b-6ca434a5ea06"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffc375b5-e743-4e9c-9925-93409156a9d2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8d87b5b9-4441-4d47-a37a-240cb1f2dd85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30ed3273-5f14-42e9-8c20-68815641d4f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa191d0a-19a6-4bf4-9aeb-168ff254ac69"
            }
          }
        ]
      },
      {
        "id": "c3936b7e-189e-4817-8e04-a0084135d193",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4c0591d6-2c25-4756-beaa-40f140e56ec2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "066fc724-5cec-47e9-9981-6cf241dd30d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e1705d91-6c05-4084-9eb4-14ac517948c2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89aa036-7618-43e0-8f8c-36cbe5965c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881e85e1-9dac-427b-8487-d8f38db1187c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcf99f7-f4f9-4c33-b799-42a2f25b47e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "277c5fd9-a4b3-4d92-8c06-727ad3e757cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898e508b-6cec-4313-8864-a4f234dc7041",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db09006f-03c1-4198-98e4-0084e5ff2550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccdea4e-32c2-465f-908f-6a9de92b00fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd24d518-9e8c-4ce3-a141-d5b48be04ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4eefd5-127d-43bf-92d5-b06ec9d190ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aad8d62-435c-496a-ace8-5f6fd0a10586",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a531700-88b3-497b-8d7a-454249736c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c625399b-34c3-4e82-8ff6-70dad2ea2dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8045681d-c27e-45ab-abfa-2fc6154c9ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a83bea7c-9a90-4f67-a2e4-b735d347312f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d56c6ed-29ca-45ee-849b-7eef8b9ae0bd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ef2d4e-2700-4be6-a845-16f171281c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a470ea-9eac-4090-b141-03ec95387b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49044cf7-0898-467b-ab14-eaf8a9eab24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efe38f67-dd8b-40e1-a0fa-3c5caaf5d346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f869aaa-99b8-4881-8e80-69dbb091d9c7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2bfe6f-8347-472d-96fb-4e5e244395bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d7241a-077e-4bfa-914d-9078a1a73d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0ca198-9a06-42e3-a6ba-963b3cf9e165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74577985-0072-40b5-9980-8ebbf82fd98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9f5620-044e-4631-9188-17c77064716e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fda9fa-0336-4ec7-9715-108c342bbd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517ed0bf-3cc7-479a-8cad-0622b12e23c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5249a22-a11a-4a33-80aa-3bae04513675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db214448-b34c-4e20-a40a-1955843add0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7697756-c498-4d71-bd78-b24d4c7baa72",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978082e4-16b7-47da-8fc0-5e7a1301ea22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9bd563-85a5-44ec-885b-55c1230f5715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a80c0f-1111-4507-aba4-9f0aec7c3aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a0b973-81a5-4771-8b92-a6281453082b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a80af1-e531-4ed8-a756-796fc294a50a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e5fad6-2783-4410-bbf9-50686a09312d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95603fd1-c30d-4617-849f-43c075da9af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9361a2-17bf-442a-be59-26baa4fd3ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5725c8a-cfc8-4877-ab80-122d0a7b773f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba71c04-ae3f-4993-8a4d-6d7d4ff71497",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb110d48-9204-4fc8-a27c-a5b20b13c1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa9ca6f-3139-4945-b58e-d2416acd1f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0817627a-b54a-4274-8ee1-65f7b990d228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e47732e-dc62-4585-8bca-e64d0fc5f804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7357dd96-3648-4f5d-b5fe-b178a4dc6474",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e7bbbb-2073-44c1-9323-e26c39e7250b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692bbc77-90ae-4e22-b4d4-e47ae3af87d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a108a43d-e375-4a67-a5fc-2973ca9f1b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33bae38e-aaf2-4be9-8c71-c6477e3d0cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1123723b-deb4-42ae-aa75-059baa264b61",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ed3d0d-c505-40ac-b140-fc1864616625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e33b0df-dbb2-404f-8db1-a99476bb6d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d593acbf-e6bc-4039-b5fe-89d33d9a6e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "72beae72-4aaf-44d0-b0c5-d59d5c5dc1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75634edf-30ba-48ba-bc82-d6050780dc95",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edf1270-a8e4-4fa2-9640-6fb20f0687f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9cbf92-949e-485a-aa14-7817ddf6f695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f77062c-02e0-4ea1-9899-cbe2cf153ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d16ba4f9-c211-4df4-bef2-e7f6cce021cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260038b6-8e03-4be5-a171-3ed44e5d851f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3688126d-83c8-44c1-9882-a9725993060c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a51ccff-d166-44fe-bc4f-03c194f066b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e75c8a-1924-4179-95c0-e4e1888d8a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "556ec95d-2d08-40ed-873c-32e43bd0c947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6655f1c-8719-47d5-8f0b-9b9e72245917",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3726ce71-3762-40ca-aa12-37b11fd6826d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4419914d-7768-48a3-8c58-e285153b3a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf3a5ee-d18e-4f26-b4e8-28572da8f121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1097edb7-a874-40d0-bb05-c579f33d666f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b030e9e-fec2-452e-9669-b297758e256b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35f3b1a-f669-4091-a429-5cd06f649e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22adedee-099c-4b43-9584-81d5dc2a3646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36406d8f-8013-455d-acdb-4ee84339ac88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e588f58-17a6-43b8-9066-e561411ddfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e7bda9-dee9-423f-b587-72159bec0663",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b79aab-d551-406e-8554-3b6b3b4a2809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd90dc3-b0b4-4950-97d8-958a5eb27122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaedade-4df9-4614-a77e-26e0d3c1300d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "60035110-8629-4717-b831-4c8e9c195e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30e7e1b-ff47-4f73-9f08-151678e09c43",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d008247-84bb-4651-95a2-0daead3b8e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88b76cd-ca1f-48b2-a020-57a4cacfb892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b79c2f-0c15-484b-b7fd-a62d98efd56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0898f845-b8de-4b67-9a03-380e8d630089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49602639-0fbc-4a9c-bee5-ab3e8f0a97b7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ec9608-5b57-4780-b896-80a03d94bd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f6dc6d-6df3-4bf0-b877-a255597e37d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1bb2dd-b3b2-4881-8e00-b2422f62ec0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "569ee298-d7ce-4da6-8619-2099cb567157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37e4a5b-f439-41ca-bf31-9a9164d71b5e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953c2a33-a9d7-426c-b640-57d8e03a41c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3c7c6c-a68b-435d-935e-6779d4bd54d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f6f3c1-06ad-4d11-9719-ff0075819f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3687b30b-0c78-4715-9e3a-b8116db4554d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c199cec6-eac6-4910-9a93-8f3c635a87ef",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2469514b-8a94-4bf6-9e01-697255310a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197ddce4-717f-43bc-b67b-a8f0d061b582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080c46f4-ed53-4c3e-87a5-de8913be5d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a76d6efe-a16c-4345-a401-8bc096782b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc34b06-5d38-4ebd-b18b-bb27a40b7ad7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc0dc1d-a5db-465d-9c6f-868159f27076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581bcde9-49ca-479d-a1ea-9657b00d5e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1eb6e3-4016-48ea-a354-d2efabccbb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78192779-b2a3-4f72-8dfc-92acaeb01b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8963a3e3-102f-4671-bb56-821406265210",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403d5f6a-7472-4e7b-8510-8347a141d491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebc56a8-a5b3-40fb-b5fd-784a8deb0258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e87bf77-bd5a-40d4-a8a2-84a91d58e381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2677c0d-21cb-4f82-a18a-951f162d1358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155df498-694d-460e-a9fd-ea51220633b4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0aff510-542b-43eb-85bc-b4fe0a96606c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ae458b-4a0e-430a-abb5-23e2737f49c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4f0e93-4d54-479e-8a77-bee95d4bb358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb3cebb-35c0-4536-95f8-78fc2377855b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08e6e69-9569-432c-a414-b9da1d76bc24",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fab846-71cd-4f45-954a-73fde60b91c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f097f0-60aa-4397-9e94-99d2464b8b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc3dc4f-c547-4140-9929-bef66d0468e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1f1eb6-f549-4b6b-a675-00981911d011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e743ba3-8474-4f27-9f7b-d910177b2759",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764c530a-6087-4705-9b77-35e285a10304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6b6afd-5a8f-4015-99e7-9074a23ff46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43754b1e-f675-44cf-b0f0-cea57c085794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca199d9c-cf3a-4b68-98a9-e03ecc4c97ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b491ea4-5d38-4b83-bd10-eb9746b0f447",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67c57a4-36f4-45d7-b40b-2f01578a71ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073d8b1e-9ac6-4456-b6ae-5d527947ba7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ccaecd-c35d-417e-a4b8-09fb9079b465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be0a5e50-28cc-461a-9e01-8b14b735f85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7268ed96-3fc6-4029-a483-1f1022218a12",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06a3a58-ce20-41b2-9a40-f98438e46753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b2d924-e191-4810-a19e-9735ed829005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43476031-b793-4f19-a0fa-b7a7cb34a269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "669df0b7-41cc-4fec-98f9-0660b71f1dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b084af6-1dce-4da8-ba76-ab59e18e243d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2b3ca1-1860-41d5-8ab8-1f499f7d51a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ef93f9-ac45-4f26-badc-cf3e14abae6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31faa6c-7460-4190-b35a-c45a68a6ca3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b8a713-ff26-49df-a74f-2237de6c9e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97522db-115c-485c-a48b-3d163965ac6f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f679ade-c654-46a8-afcd-f89ba7333086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9872fcba-a9b6-4cb1-88be-034463f4aa4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538a2a90-70bc-4871-9e93-31e179463dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79565097-2d93-4467-8bd9-9f9614fe8aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f41559-a533-4d7e-ad7d-6e3b8c5d563e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c278db02-1d44-45ae-bcca-afdae8a0da3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bc3cf6-1800-4556-b0e8-e3d38d66e995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5080859c-6d47-4443-8f0d-617d920f8b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e61e688-ee3e-4128-8486-3b77de2e273c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf8e81f-ad5a-47b1-988e-6e8e804c0edf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d88156d-1c6a-45f0-b0c4-0c2f95d80c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a12800d-8852-4eb1-acc5-3a2448256a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe51922-f47f-4b01-a756-e9ca388c5f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9d12da-b7cf-4ec1-926a-65d5fedabfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ee0175-8af5-4fef-b530-59ae701e850c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21d1b86-0a9d-491b-8fd9-4b6a39952437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74053262-06b2-4362-a69b-ec030a1ae67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea625a4-d604-49ca-a85f-8d1db37fc63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6d6f70-0a7e-4ce8-b7b0-f8c19b603df6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5cf44f8b-3c00-4295-80db-02b5043c6ebe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8defe189-3264-42a6-b522-05dfc7fd412c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74439260-f4e6-46ee-9fdf-c2d3d9c840ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf4f085-e129-47e5-9c6c-e45a3cb62552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9aa277-1c4f-4da7-ba02-4af0603902dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a43f5099-15f8-4843-a050-fc8f20e34574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3ca5b5-ca14-40e2-bdb9-c12e41242e86",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72194b19-251c-4ec2-a568-a03a8cee3a14",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dc8ba0eb-fd99-4562-8348-38c1fb1686e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f23caf0-78f0-465e-9307-bdf4ad68a24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cc9c4e2-fc76-4a19-b0bf-02bc6d636869"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee5e31ca-fe84-413f-b440-f19747298bca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68ed303f-89bc-457a-8432-fcaa97bd2936"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e834977d-945d-4922-b26f-c7fa019089e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94f69042-79f4-4db1-8f63-ede9b983aada"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ba47fc6-c213-4103-895b-176b2c6522ba",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "17ce9277-f4e1-40fd-8a9d-91e5ad87240f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c3b9b56-1df6-417f-bbfc-e182403fa355",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24bd5ed5-f600-4c2e-8994-53e7b4b50b5e"
            }
          }
        ]
      },
      {
        "id": "736d85f9-6dd3-4dc0-91e2-283013d632f2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f4684118-1683-4b6a-b716-0227d2c6415a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ab1b040-571b-47e4-96f7-439d28e4f3a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a2bb6ae-107a-4ef4-b4ca-e579db128db4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d795cd9c-39bd-4ec2-9877-bd5cd19b1647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5b980b-9204-4f68-af94-792d928c746b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6817e7f3-65ac-423c-8c20-5207ba6ec336",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9a00a7-4fa0-4555-804a-c05091eb58a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f9a36e-4bb6-44af-86e0-aa2876ae62bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab1fc0d-613d-4ca1-addc-012a8f1dbceb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1573f7-4d57-406b-87f4-8633e2fab8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7fde06-e196-418a-a218-3dfa1c3d285c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d404c0bd-db78-41a9-b685-ff8f9d2d667e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2ca4fe-04ba-4e25-a213-6eccbd07900c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce58d98c-aa8f-4a72-b857-f4f8fc6f7f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca29b11-5e56-4fe8-9882-7fa4c8c15b88",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cc1223-63e5-4968-8354-70f2dc0a3a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2c4429-8ba3-4574-b194-8f8e2c1f017e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd9d64b-423f-4649-9848-b2e75180037c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a32001-b221-4ade-814b-31098c30c06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe45570-d9a2-41bf-881d-52fe880ac1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bafcf3-c74c-47d9-8996-a708c0698018",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c8789a-aa53-42d8-b14a-754ffedaf699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb6e606-dcaa-43b1-9f79-f295e186b994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1548f27-de99-4daf-a31d-7f4be9b48057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab872555-7ff7-4d62-947a-f545406aa029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1fd481-a39c-40bc-ba32-443419539874",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0391177f-2fe1-4859-82d5-9531c428fd36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f162dab-7263-4f8d-a273-9bc70cf43b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e27151-394f-4fd4-97ed-bf1531b31602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c4aa34-d00d-48da-ac8a-f497e1f67d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fa0d26-82f0-492b-bc54-7f814c57be54",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc126b7-e9f1-4903-bacf-3f623489f2fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "238fddcf-1419-4f39-a0cc-828cf9737b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dc5b19-4453-4b38-b898-ad79a515275c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037662cb-7d32-4c4d-9c23-2a6ba5469698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b297849-358d-4797-85b8-830bedd98616",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69679f96-ccfb-436c-8771-7e9971eaa6e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299f7bf1-71f5-4735-9cd0-1e6693f7238d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3614ec2-6279-476c-aa6a-ba4cf996483c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38379eae-ffb9-466f-ba55-05c8fed69f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4f05c9-4243-4b90-a00b-181fbe0c3e47",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76414ecb-6869-4271-bd7e-3e3810b84f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448ebcc4-2a7a-475f-b36e-3f9997f76e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1664b589-3aae-49f6-b892-d0e8c87abf23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ddbb1a-30cd-414e-a63d-c1805a655930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8880277e-ad8a-486b-9fa4-6f82ceaf0c0d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782f2a8e-5e20-4b9f-b303-5dc0a222ee5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62a318c-1983-4090-9459-f0601385e821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c37d0e7-41fb-4e02-8822-7f9b9a6ae942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4272ff3e-2b84-4062-9bae-9589ddc75602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5b41eb-e9ad-4981-971c-e618683b150d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e1111a-3369-4f25-9918-d0a0d0e345ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "811cd4ab-0234-4c8c-bf76-6e04f176be01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49c4186-a3e9-43da-9c80-c76fc0d72dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90326ceb-ad39-4ae8-b383-e1f77dad2675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f6c48a-cfd5-41e8-a9c0-e84e3dc060d7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda3a857-d5c7-4718-b529-6785057edfba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7251e232-02e0-486f-bef6-94ec2b58c3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e314478-31c5-4e66-b37b-86e4b3f5619f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2d1fb3-37a0-4e0e-8d15-a264b543d963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08cde6b-eb8c-4158-97b8-e028d641254b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccb7c3b-4d5e-4a26-bde4-fb936c11057f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07394d6f-5d2d-4219-ac6f-9532706c9c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ab68f1-f0b6-4725-8864-693781f9d9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87756c4c-7cf0-4912-8ac2-90c3fb8b9303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95146d45-0e72-46d4-9258-e3d352d092de",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f0e93e-4356-40d4-b342-003ea9622fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a8dffa-f0b5-4cf3-a054-e74098fb8536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8a26c5-30ce-45db-87b3-0ee4448770e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935c450f-498d-4d69-a2c1-4ffe5b11324d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27d68b0-241a-4d43-99a0-62e94f2f1284",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793c5fdb-4360-4c97-acb8-4e19ac353a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204b6e6f-b960-44df-8bcf-aafe4a7cf165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e887130f-6dc2-4dac-9911-d6434fd10b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f20904b-ee36-402d-b6c0-4348114b1862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cf6604-f4e5-4167-87eb-5585022194b5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b56435f-02eb-4527-9838-a084962294b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd09b31-292b-4b1c-b556-329bed903f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6b38fe-46f9-493a-849f-054153045d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e17e1f-5e4d-4c92-a0b4-88383bf59a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed02c72-9965-4803-a229-c4214d44f9f0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b4f55c-f4dc-4d72-8c6d-a95aa69d9f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ac95bd-9af0-404f-8b4b-32cdaabe01ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdec68f9-5fa7-47ed-9bd1-e45ccac8b305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad01228-b7d3-4630-8dad-6b7e995450f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68518043-5b34-49ea-9c2c-c9a6d409108b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e78b59f-32f3-4cb6-89a6-5b2f06a98672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9a6dc6-b90b-4046-b8fa-130eafa672ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9970bb-a2d6-4ce7-af4b-8039d0d82c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdb67f0-2049-494b-8b67-d1501c604418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcda87e-d438-440a-9250-a00c672aacb5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e001d05-9ded-4cee-8f6b-163b0b5e6748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317085c5-8141-4cb0-8cb8-6ccbf86700da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddb4ccf-a915-4eb0-95e6-b9db9dc533fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8f1b6c-23b0-45ab-899c-2a17e9c595a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53247763-bb98-467e-9cad-8dc82dcfcc2c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec56ebb2-e04d-42f4-a3c8-6e89b924bd4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b5e1bf-c9bf-45e4-a25f-95ee24f815e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dbec0e-cb66-4ec7-81af-fe1517bc656d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d361aa-e966-477f-bba7-440509ebb8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ba7762-dc62-4a22-8087-504d89c24df4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b5bb8a-88bb-4fb2-b63c-e60d8f92c219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db4715e-df3b-4367-a133-a5d0c37b6dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cdbab3-addf-410f-980a-d1ee3f81afe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e42dc51-2b11-4886-bf8d-966caf98c0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ae0abb-1b9c-4939-8532-7b8b88e178ce",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8427da-aaf0-4c8d-a27c-01a387376108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73664ee7-86ed-4727-92fd-ec1d61bb3f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf9304d-f0bb-4e18-9500-02624191b2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9634e4c8-029d-457c-9852-4bfed9f6c0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178f8200-4e99-4362-bd97-b565618000e1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7564351-22bb-4124-b3a5-acd4e4fba80d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8d79b26-4edf-49f5-ab32-c4977be78e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1829b4a-04b7-4fd6-beaf-8cf7109468bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f116d3-8300-4fa0-b422-24c4473479ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e386785-6c7e-4366-870b-b106cec3fb73",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88967ba1-908e-4de0-ad0a-468ce83d92e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2813c9e5-97f4-407d-bda8-de81a445ebbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a94e068-24a0-4d89-83e5-81c4ec068552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a699c6-888e-416f-aece-9a2188add177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271bb19f-68ba-482a-8cad-6239c8ba9e3d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dac4b91-f6ae-401a-aabc-964f79900dcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f3b3ed-38e6-4895-a11e-3f0e054edd75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6e737d-f03e-4afe-bbec-755129f7d298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f8c28c-b9e3-421a-9217-4792e68b01cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77901f7d-a504-4849-b10f-39fbf18531c1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000c3aba-df0e-4337-994f-8bab650cec00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ecfaf1-d292-436b-a0dc-a4755a8aac9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673b8351-23cf-4a07-9ace-ff5ebd744b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5aaba38-dfd0-441d-a2b8-9458656f24be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1900596f-077e-4e79-933f-b712debfba68",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89588301-c075-4a81-9687-b100fab2b165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d3ff566-38c5-4360-ac08-0b2ec29c9a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6570504b-ccec-46fb-895d-442403733c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08bc4aa-0141-498d-aa78-7c3955dab2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5bad44-2a5a-4486-95fa-49137e6502a7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972d7df7-a5d4-411d-950a-b1e982037390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ae2d5d6-1e4f-45ef-9e28-30763fe187dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1287eaf9-9b15-4c1a-bd43-e87d4635cb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46562af-ba3a-4d83-9987-c6049e7e3020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e271ae3-5017-41df-9423-26d8089382e4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27099ef-c956-40d2-9ae5-18b5ec0baf76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e7f4d3-128b-40af-9fb1-fdf7409f0d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778fa3c7-ba35-419e-ba14-7fb0d4ab57b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7194b28-c8a0-45e1-beb1-653a3e2ef309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927f5379-858c-408d-ab33-e219e676771f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c59752-0615-4f59-b696-d6c8c7613d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "287d01e8-0cc3-400a-8e9d-a4ddad96ea6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680f3b33-284a-496e-9712-6b920ae99616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d141d9a5-9ae3-4b90-9851-3c3ca7743a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9adb9d2-e5d3-4ad2-873f-7817dd569393",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96dd54fe-e122-45f9-9e68-95f110ea1a38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c0a7f6-6cc5-4d7d-8bea-cf8e5832a976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bde6564-1325-452b-bfa9-637e889a00d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632842dc-7755-41fa-8c20-11e9b06d575e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b55e632-1174-49ca-b803-8a7c6b09a3d7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a20b9a-da74-4987-8677-b6545c138683",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b013f4-b7ab-4c69-9636-5d2ca7b16f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae6d008-7192-4812-a200-7b143dc6e2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1468d37-a193-4261-b4ee-5e2e332bc05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7327ee2b-f6be-41cc-946d-49ebe9330f41",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed4775f-ab30-4139-87c7-695f0eb23b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87454830-f856-4509-90b3-78883ce900af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f6138c-6c0a-463b-8fbd-ea70402fa0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd0bb8b-7ea4-4c74-b01a-d6d5a646c5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da271b0-8d15-4f08-858f-fac2beec0d66",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfe1f09-c6d4-4c59-a933-31657fafba63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fb06b6-5fd6-4d52-839a-6ee4afc29a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e2eb5d-be01-409c-a392-e95e14a0c8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d47907f-1c44-435f-9f9b-aecd900935eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef507e90-2de1-46d0-9e0b-9acb7bc9c455",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e341186c-465d-493c-94ed-307811db815f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ad6cbe-7383-427d-992e-cdd0fa770f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92da366-c22a-4128-a5a7-d4a633f27ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d683505-bcac-42a3-8b13-3e59fe14d764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2638c0-7bb1-41ab-9116-33cd1d00dd0d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25291474-d746-42b7-ae58-346bc42aae5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65637d36-8f55-493a-b396-d27642ba269e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21431b6-1cd1-4667-aebf-1eeb79740a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240c24e6-e730-485c-8a59-99cb98113146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9f968a-630c-4c3e-a2f6-bc5b38641456",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dfcbef-66b0-42e1-8e82-90379e85f785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a296e09e-cfa3-4aa2-9e75-4c281c5b0333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5499c8-080f-439a-843f-f6decb13fa3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ce811f-674a-45a9-8ed5-0a1e6ef71cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79337f3e-4cd0-4d8f-baea-100218318bfd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae84fbe-a073-4d66-9d0a-d63fe4f46db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6add1453-714b-47f3-9ade-987b51b72ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e181e7-4ef3-48ea-a04c-7daedb7ac29c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae57786-1605-480e-8dd3-ac0aa2827cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ab0f71-76e8-429c-9a5d-5f27e61e0f7f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b364ec0a-6883-405a-a735-cc4fe4f4ec10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a9016d-7b41-4fe2-b5fe-ea93abe57888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ea8b81-9da0-4077-8615-e5cbfe505285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505c1c55-4394-49d9-8544-f2cc1dec6d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd831acf-dc00-4ddd-a4e1-555d7453d1d9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9353b367-9d6e-4bc4-8b60-4f7d0fc82467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010c7393-2040-4f7a-9085-ff5f73c2e46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7319bef7-6aba-465e-bb53-5b3bc0afc964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9c0236-ad10-4e61-8c9b-72dc057cbe5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72aff2e3-6d08-451d-bd89-ee685fb20f2d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc30e687-d15a-4fcd-a9e4-e78f06e0be7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd82f7f7-4936-425a-b9fa-c302e919256d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5820dc29-1822-41c5-8cd6-d6e157030e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01398bc5-792c-48e6-aa8f-f061132bc0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d2f26d-a1e2-4ac3-ae19-88a9b76eea45",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5120e850-ffc8-4710-96f8-eb159093958f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63bdc6b-8204-411f-bc01-f6ed605348b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4101967-ebea-4e87-aef7-235acc66133f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297ae661-8745-48c8-85f3-1f67c20c5de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4318c4d-e076-4fc7-85f5-f30ac071dc9a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f640b5c0-3180-4abc-8c93-ddb39cefb163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c14996f-8719-4754-a4d4-745194dc74bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3e1460-e33e-458e-9bac-21737ea3e8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9619b486-f83e-47f0-8b78-8afa04708e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4eaffa-d5f8-463a-a394-3e7f57c8f97e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db17b7e8-2c69-4af4-8fc6-b051b46f5cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaecb906-9dfd-49df-b7b3-ea30839be09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0416b1ed-11ad-4666-a1c3-e724624bbec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec92303-bbf4-44f4-b5c1-c0a7a862134e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f4c668-f501-45de-8d08-f29fc1b3da23",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8093a822-e0c1-4a18-87a2-4df757d44e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f187b73-3b82-4150-af46-5da8c7622ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee41fbc2-da3b-4960-a429-f09e42641da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659e194b-ccc2-46e1-a4eb-7249d22cb238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bfb4f5-9152-42fd-9672-3eb0f857b768",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33db1eb0-e435-479f-b40e-3b67977ddfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dec19a0-9f93-4d6a-940a-80f4115ac884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711c588d-791e-424f-968b-788204b6357d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeacead8-0c92-4600-9c23-f8f4e3085dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d899a53-9b48-4cde-9fcd-301c54402c3b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601e22f0-acbb-48c9-9177-7a166f9dcdec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301f05e9-8b25-4728-bba0-5b684d26422e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee6ffcc-6280-4a0a-a3ea-f18b16b2b9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd70d6b-b5dd-4c4e-9ef6-76a3e4f37570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53784a92-f1e1-4928-8043-662838b12a0d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bdcae2-a2bb-4ac8-9365-88c696c24e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba567da-0851-4eef-ba62-4bef2ebf7688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e324b39f-ab06-4f03-8d20-8dd78907ba19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f651a5a3-6c60-48af-8efc-155c00e5f579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b73c6fe-347f-41e3-9fe9-c03827b7536f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740422d2-fc74-4647-9070-d6c67f2858ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca1a027-61c0-4afc-b6b9-62790093404b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01decc73-5c21-4537-8884-6a277ed344d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4deeec-373b-49ac-9721-bab55c77dcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5025e5cc-1085-4685-b4e5-b68b2b66316f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4505ab-e0af-46b5-9d63-633f7660704c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeef7549-8052-4055-8a4c-7c6c67d30af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786069db-6b85-49b1-bd51-f849360e82d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de83b8e-7db1-4cd5-97b6-d848079cc151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a450373e-c017-4180-a59d-c2d19e6c1168",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600c1cda-2b43-42b9-ab59-0179d8957e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e61a2bc-7413-4ec8-99ba-305085847b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7228f6-d384-4afb-9578-c4bfa7ebd0ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38456d9a-f9ec-4c12-9c0d-d0f5e9e315e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89e9bcc-5761-4d18-bfa0-83ccb0f0f859",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190b10d5-e0d4-4b97-9ebb-d44996a7a1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d042a48a-a6bd-43ac-b958-a00f47bb502f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9baa0725-5f87-45cc-9fcf-b98cdc31742d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d8a92f-4d48-4b1e-8422-5f4bd12dcc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5abf1b-95d5-4955-8323-f2f915731400",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ea28f8-57a3-4e73-bab0-14e1d13821d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1de875-40a1-4e5b-a744-9fb5945123e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c034bf7-0954-4bbc-a682-6a379ef9ea27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604fa82d-1c2f-42bb-99be-51cd42e400cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f94adb-bd08-4a8f-b698-d4babab78dd7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219be64f-f9ad-41b6-adb9-8077ba8adccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4ed86f-4a4f-468d-900d-b0eb1d85c4df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca466e6-0238-4cfd-96b1-c6361082d664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3219e1ad-1aec-4aca-81d4-b4f51d5424ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ea0f74-2424-4e69-a45b-1adb57ffdc5f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f821e9a9-b378-4984-a61a-eaf161a60299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe0d9ec-1991-4650-aeb5-4a5dd422cd83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88fba43-7fa4-48ae-be27-73c002b984d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10481af5-46d6-44dd-ad0f-4850603a9787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c4b334-b06c-486c-8f48-56b8772443f0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c6ca75-97ac-4d4f-aa52-a722f47ba282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41dd2520-8213-420a-9262-08a4dea89da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13174af8-df88-40c2-91e3-4aa25e924007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815c888d-d947-4dc8-b508-cd28dc78b090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff22b14c-757c-4cb5-af3a-7635cda31558",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b2e0ac-6207-44cb-8de8-6f1a343bb54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ef8fb3-707e-4bc3-a57a-c1cc66765d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ff58e5-e738-400c-83d1-2dd846b122a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243db0d0-d8b1-4d88-87aa-7b5a5ee22795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b898d8f-d5f8-486b-834e-663cea4a55f4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90dc032d-0ff3-476d-b293-4b168faa8d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9aaec0d-618c-4cb2-9124-a870032079ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c095fd-a22d-4e52-9b23-e4ca973abce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea321ece-582f-4830-bb5f-738a6ae86545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890bc78d-69f9-4e76-836d-6f049d31b91f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45a3923-f430-4c06-82a1-423b5dd2277f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd090892-3374-40e6-a7e5-5af3c9b82b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "832b9efd-0602-45ab-9ea5-0f983a993d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50dc25f6-df43-4a3e-ae53-a86fcdb156e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2213770b-7af1-4edb-a08e-cf724454270c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2981c66e-988e-49fd-a218-c876e82f1981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5352407d-5df2-4653-8585-e894e968fb1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75d9a0d-f715-461e-b415-cf8a63d96457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5773ad-51b0-4b50-9bba-c6be19da9fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06015fea-9e52-48b7-80a8-ec0180c87b7a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cd9466-dddd-4edb-8bd8-79e713222974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37132cf-fa33-4221-b379-2425c61c610c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8180bc0a-b220-4e9a-af32-4bdab03633dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3fc1c1-3e23-4420-8b58-89641a7d6d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550c759b-9ebf-423e-bd6c-81a1889cd2fc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd6bf45-f501-4669-82ef-367a47c2a2c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ddd29ca-9df8-4b05-a9e9-71d2d5d114c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa230b5-708c-4e29-bebe-f530f23762e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf61fd9-28f5-43b9-9f62-fab15055f76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149b90c4-8932-4972-bddc-2b3ee6cb2e17",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c590f7-afa5-422d-85e6-b9d66c703886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b904b689-0c33-4a2a-816b-623acccb607e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ca5678-9ee4-4c8a-b43a-0a368a69f447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0957d4-e60c-4c68-8ff7-5c36b576ca6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adc7b9f-211c-43e0-9d8b-2236c0dece12",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452f183a-b403-4c3f-b391-c59f117b4445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1314cc6d-ef30-4ede-899b-0889e0ed6296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c7a6bc-8a8f-46b7-9e0b-9e18a276037f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79072329-bf7f-4f70-bde9-11bbe08333b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88e55d2-3765-4f91-8350-d1918f695067",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149d6748-9fb8-47ce-ac41-f85a11b4fd7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15990a02-a01c-4980-b99a-d6f45c9250bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e8dbdc-10d0-4eba-a4cc-1d38461827f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79be2e6-228f-404b-9c03-9cdbbc0ee579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6382b381-901f-47ce-8608-3160d031b5a7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b939f552-52d3-4caa-8461-b703d77f14d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcd0af92-a119-43ab-85c2-cf905d449b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a52e03-9d66-46d6-a378-adaac3ee91c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47955529-e677-48b9-8e10-3da4acae123b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d666519b-41f7-47bf-a929-2763c3a53d23",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f82d452-a926-4a4e-9847-83df7a2d591f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1620b639-7a07-4e3c-be2f-0734cbd2f5bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf489eb-dda4-4a38-bcbb-d64f3a998616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f44b4f-0772-4e5a-9f13-98c59c95a656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645b9dd5-6257-471b-8f26-94bb5734c899",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280fe3cc-54e6-41e7-ab8a-0021f409cd86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90584d96-9e96-4000-88d4-b1b33a358af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "556f7c6a-075e-402f-96f3-3223d5fe5718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96b9664-6be5-4ad8-b0a7-3c9418948752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9b9daf-f7cc-47a0-bcaf-9685c52f5d1c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2132b0a3-6351-4a1b-bb51-908cc1019384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1c0b89d-8f45-4519-90d4-d453cb1c89eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9e31ac-bb23-47db-b2d9-a6839bed7e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9449d1-e06d-40c8-af18-5be2df57b8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682d5555-5ead-486f-8d04-c919fd2d8492",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cb3898-cfe4-4bd8-8781-2397c4aae9e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f6926c2-3d69-4304-be02-3ed3a148aa05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d364deda-8dab-4814-b78d-ed198c5f758f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3899045d-7287-4f75-83d1-3daa27412154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60a3047-66d8-4c1b-826b-86525158a834",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefae9a5-ca7e-496d-aee7-74eef259360d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdb885de-1026-4e79-a6a1-95926a0f73c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8201af-81d5-4b3c-b193-fd0f8e70c524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9045205-e8d8-4585-b40b-4fc3fcfaf8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f21a40d-0de8-41b8-842e-0da29b6cfd46",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3134c0d4-485c-4361-bc0c-d5160345e305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca3846f-9ef0-4bc3-9aec-1c4c73997388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f87091-d9c5-4fae-9ca2-8faeabb51732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95181fb2-1d39-4a5b-8063-36bfc1952a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4e537a-80be-434b-a85d-fb4267121eab",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad14932-0666-42cd-910f-8687793d0533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af2b5cb-99b6-42cc-8516-f574a8caa87f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3ebcc9-3b7c-487c-8bb1-d02c63372a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe03dc4-8498-4ac7-adf6-8c3e6f942d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2116125c-c802-4660-ba23-1d431f299e87",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b7cce3-092b-450d-8085-1b2a953a158d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3bba3be-7af7-4e45-9ad7-c28a1cae51e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9950ff9-8f58-41a6-8ab7-363ee14b2c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1ff9af-f635-49b0-bfd5-34c22930b8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5d6d00-2aa5-44c6-8f66-5c2953c555fb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd38eb4-a8ce-4e1d-9efc-edb1f1959d5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40dc5709-a0d7-4d41-9a24-9df739bd0b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66238291-533f-46ce-b3c6-d0f494bb3f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e370f985-f040-41b8-9534-91e01576ab57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f457fceb-5a9d-402a-841f-e5b7c769ea89",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fa557b-4b9d-4895-8dce-3045cc4e1dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a1341a5-b42e-4b80-8a9f-3d8d1651b4bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef00895-48df-4655-b7e8-75ea642e542e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d116995-e1e7-4fa3-9068-1906db8d13c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ebc597-8c0b-42d1-8ec9-64c22875e100",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6f8e9a-d6c6-4f91-9759-8881f8eeb374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9007e99a-ad8f-4190-b79c-f73533133812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c16a28-3d8d-49f2-a8f8-e7bc4d381143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c56e8a0-27b6-4963-b548-2c278534a40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89e1c51-e75e-450b-9705-7cf34dbd3407",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85c7da0-84ae-40a0-b6ba-f8875fa8a692",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5984dd10-ebc6-4a47-b4a7-6685513e8329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa706993-bf0a-4d56-b4f7-9795e7550c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260b3fc1-03d5-402f-a7f4-71c76836bec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3f7aac-1653-48d2-87be-b23db01bc84d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed5ff64-af2b-4f67-be2a-cecd3a37910f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b74b65db-94f1-481e-9815-a91482970412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32bb8f2-7736-44d9-aba6-81704d303309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fe51f5-2323-4bf6-9ae1-92492b162379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d17008-5d0a-4a38-ade0-b8cb5414649b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bb8232-f06c-4544-92da-6e418291386a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd071f81-d5ea-49c0-97e9-b68ca2d9f33a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4711a972-8d89-4579-a7d6-8da270e306c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe30416-6810-4922-9930-e5de6c6d8572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970e767a-d1ec-47db-b6d1-3c19120f5b3f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5d3a03-cf7a-44a3-b1aa-d4e41337886e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eb38428-fd37-4682-847c-5e3c76b50bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b748bc9-34c1-4e55-82ac-75966c85d4ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47bf834-408c-4a5c-92d0-2f54ef69a283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6210fc-68c3-459a-83d9-750ab588b245",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faac2572-460c-454c-9be9-c5fc13ddd5f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527c6af7-9959-4363-8950-e16ffd92c545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5941b031-7ac9-40d5-8eae-22a8bd6b1507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe67fb90-fa8c-4e9f-876b-1ca67867a137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7e4363-e7a0-4bde-b796-2a42cf553b2a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61e4d93-3f45-469a-8f98-3608ccab9112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc14bc29-9514-4f0a-b516-5ba1fd9ccb42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8547de-c761-4b16-a769-df9138f48adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f17e12b-3f42-406c-8b76-e7ddd39c975b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00038a06-13c0-478a-bade-9507aa8e3c68",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a007ce-5e87-4e68-9342-2296d5c65377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8682a7f7-da04-4828-a10b-1d204d07a219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dc9482-b201-48a9-9cf4-f2f1fc9762e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a712dac-dbd0-40e0-81de-cb4bef2a91ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af66c67-2a2e-4315-a0ad-a68dcc52c581",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7492e79-b6d2-448d-ac79-27025b1faaf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b4c7ef-7b73-4a43-8a83-efa85c8d6779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b16eb54-e034-4f42-96d6-1d1c8116ecef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db4f5d8-d911-44ce-a1f4-f050fcf94072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc8fb15-1c1a-4633-818b-ac10318c5794",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f2619d-cb59-4717-a14c-64726a942379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbb90f22-a542-4b2f-8eef-51a1e968b19d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9553cc4a-0b74-4315-b2c3-9df4b57de5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ea0c06-7348-4bf7-94d8-363a23716ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4089f32d-564b-4051-aac4-828c4eb6bb90",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474024eb-1efb-40fc-80a2-2c70da3c559d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8dee6b2-b221-4f57-9f91-3646c83cb5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4ade0e-bee2-4463-9f44-9b7d4d097367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd9b49a-af88-473e-8f7c-6b7b58756d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e2609e-b150-44fa-8a5a-a154ead55ea2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44db4c5-857b-40de-a3ee-57128fb0081b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "266cc60a-b1c5-4cfe-8781-8c62a6ba6a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffb4d98-a9b7-42d2-86e7-2ad5c4f1a36c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f51f0ab-8715-4771-a223-39ce4e53cba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9eb7887-5851-490a-bd38-7ca103d52585",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71810f73-88c5-4947-be51-cbf32af1826b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec25007b-5be5-4586-a3a3-fb7abef1e404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d1b211-9eeb-4f97-9d6d-6d7fd2327eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01609cf-c75a-47ab-92b3-22b68818e9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f832a7e1-89e0-41cc-b9d9-4b2de5244379",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05930156-93a4-453d-a7c6-406cda6a5f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad79950-ad89-4980-ab4d-37139f0ae7b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2012e7-86db-4c0e-ae5d-ac349cae854f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8363dc28-b7e5-418f-b338-00b07b7577db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b241a5-2182-41c6-a2a0-9eb1fdd1a2d9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6333eccd-53eb-4b8b-a324-294ad9b4d267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf914b96-18e6-4de4-89c3-0033144ed833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b697cc83-089a-4aec-867e-1ffad33d91ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9627fd2a-e161-4ed4-b554-975f23783c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1487b6-8c65-4437-9e5f-1d968b164971",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc01c13-f768-44c6-9c13-bb1eafdb5e55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61426290-8b76-4da5-9792-a5de56d3a49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f04175-3b3f-45a7-b662-5f2ee31892c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c550abe-44cc-4dbc-a6bf-795ee337a3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b55accc-d811-4caa-a3a7-84ded8b2bbec",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b39d060-0681-4f0c-81a1-4304b2d14875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "771f3ff5-62fa-4461-91e0-f9eabb4d1346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f672cb-2cb8-4510-9565-48b7f4e4c49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99644f8-c95a-4980-b0b6-ed04a3597f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df26d1a-5ef3-4823-b9ce-4bc64654fa5a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a692b9f8-376c-4b53-8f5f-0c6e050ff235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9f5513f-4ccb-41aa-b878-b041a346db24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3e7982-ba88-48c8-a413-2c11c72ab390",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb24008-c979-4b38-99a9-120dace58a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937b2302-76e9-4a5b-a5fa-0ef914f12edf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c69cfb-c03a-4cff-8430-aca3ae11f7d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "522fb523-bc40-4461-bfa3-602fbfbef5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c0d069-ff3e-4ba9-85ca-3dcf033dec21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15571c05-e581-42f7-bfea-866625934120"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee215c0c-11b2-440c-b35d-ea0b6215f231",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e8c3a1f-c239-400d-a7e7-9fe5c9fa0ecc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a371cc73-25a9-404e-a127-79a591fa03c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90192e1c-2263-4547-8dfc-b08a0952d5d1"
                    }
                  }
                ]
              },
              {
                "id": "a2145b54-14c4-446c-8b58-526021334131",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdc5da6d-82c2-4a99-8cee-efdcf76bd6af",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b8b592-340a-4080-824f-70b46b517ec4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b2f47c4d-eed0-4047-bf1b-48fb9fb49c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0eff6b-0364-457a-b1a6-9041e91e5ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d5d9d8e-9c06-4ac8-9986-3fcd4aa0c2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e424e8fa-d193-4535-94b5-eb6c66c9b5fc",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f9aa2c-0448-4ed4-a9d8-873beb36acf2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7eb6d4a8-c36e-46aa-9dc3-c13d3361b996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0616a72-6fc3-4a6b-ad57-5cd7f1e2e578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c75ec1b4-4fda-4a4b-92f5-bea3493f9fb3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84850a43-b5f8-4f61-b0e5-00b25190b637",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a18a6a9c-1c14-4ef1-b5e3-cc9d8cdbaa93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dab9b9f2-ed1a-46f5-a89c-60674cbda3b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08339780-f3dc-4450-b157-34e2f9f16595"
                    }
                  }
                ]
              },
              {
                "id": "52ae4bfa-fb0a-4d74-a388-accdea6d087d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "417c78ad-2331-4c9e-9d31-3579fc734e4e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a821ca1a-3642-4d5d-a7a3-1b0358a0605f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7a1aae1c-3c67-48f1-9ffa-34b46fc2d397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3626d950-657c-4d13-89ec-24c92433f9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef2b818-7138-4595-b822-654e57fe5980"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fe0c9e6a-f48b-4af8-b71c-edb82ade8dc8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "13f818bb-8939-4590-8cb5-7997f714207c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4c1d566-826f-41f6-a210-a7804aaf5ac9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "77f7362f-22f6-4e6c-bc96-ad1a09e246b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "842c7ea9-39d3-4a5b-b098-2e163190a2c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a9302e2-e924-45ac-8ee9-c0504b8743f5"
                    }
                  }
                ]
              },
              {
                "id": "bc678f64-d65f-495d-a6a3-3afc82c42290",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18d9b9e4-005d-496f-9b6e-31e029e9d65e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cfe6753c-aaa6-4888-85ba-e3aae6910301"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbf5990d-bf87-45b9-ab80-253835784b07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e438efb-d85a-44c8-a437-ceb732ecdab3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4671857-78a6-47b4-a2b0-d9b2bf439a54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f1257b53-ff62-4149-b556-8269d2e75386"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a95d2ae-5b0e-41a6-ac39-f628f5861cf2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71a0b641-1475-4d95-aaef-b81ac4e92fec"
            }
          }
        ]
      },
      {
        "id": "77154a76-b71d-4ac9-a2a1-cf2914db6a8c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f70dc8ae-0edb-4135-87ee-ba9167ac561e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7dd5f5b6-274b-4b03-af91-628e72996e98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c05b14a9-c7fd-4324-ae15-a6681e13b7c8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b056a57-9f69-49c2-8a2f-a28523ff44c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ac5c6cd1-40e8-4a7d-b8b9-6fd30a1ceac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba81208c-c8df-4ce7-864a-8690056380f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "540b346f-2b6c-41fd-8e06-21d58686f042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424b3df0-ef65-4048-aa27-25b00d72a18a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1096d5-38e8-4590-9b93-9220b74bc373",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4480566f-05dc-4ed5-b73e-5ee955a39235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5debc33a-07a7-44e2-b453-5aaf8b1d0739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a336085-0c3f-408d-97d2-bfc6043656d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3e8b8d6-b219-4187-a353-36f1f571fa1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c2d3561-b586-419f-b903-360643d21b76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa6dd3cc-46fc-4cd2-861c-ef49f9ceb1d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eda86dcd-437e-487a-b7e1-180da695240e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72dd904f-1c41-424f-ad4e-2e8448ce9749",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b5db46e6-7320-4581-9bee-c1613ce74f53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38950d0c-7c65-4ac0-9c18-66a23ca18077",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58ec7c29-4417-4ecb-9cf0-a078986dbe3f"
            }
          }
        ]
      },
      {
        "id": "b88f8709-df49-4048-9e5d-0752b2f9674f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9be3a83e-8d9f-42c6-a38d-57301dbc0d47",
            "name": "Negative Testing",
            "item": [
              {
                "id": "665b2ec7-972e-447a-a70d-63c6b3c60de3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0dc2356-2a38-4274-9e2b-824b8083d321",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4d95f5-e002-45a1-ac72-f39d9f1abde6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0102e81d-aca7-45ad-a818-ecd0f7e619de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f178954-c55b-447f-9f8e-99939ee8cfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "046a90da-aaec-47c0-8c59-48c11fbd33ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22775333-4d4f-4be7-9038-0463a1d3705d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fd949f-6e92-412a-b029-9b1e588064f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0c755a5b-d26d-4ad3-90a1-16a53761bf97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aba0c85-7c9a-4d31-aabf-1dfe0b522b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fac37f1-a93a-4771-84b8-9aee48808c71"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3966c0ed-135d-45f3-869d-59ad8e7d5250",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b67cb9c9-4080-4ed1-8199-cf40fe6e36a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d64bda24-cce7-4b99-9038-d8dd20ace92a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1138b56-f1bb-4770-9cb5-f71bc1be04e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ce120b6-6f8c-4109-993e-77029120b769",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "052b68f4-8b83-44c2-bfe1-1ea1500fad0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7be2965b-f2a1-436f-bfb6-1e466bcc9f80",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7589447e-b3f3-4484-8d55-f3a14a730df8"
            }
          }
        ]
      },
      {
        "id": "cb9813dc-64c2-4a5a-8fd1-578f813a4ce7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c3d28739-e2d6-4389-8ebf-feb3bb4f76ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba876b8e-9af3-4efd-bb98-176eaa54a5b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "104455a7-ea3c-4c15-aeb7-daaccdac4b5a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc24253-3e79-498e-a840-5c78dcf627ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "717a145a-e2a1-4ded-85e1-286681a4b1e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55847db-ff23-40ea-825b-32c3504337c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70223c1c-ac95-417b-b781-53303f00bf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642005a6-c379-4b23-98fe-b64ce3f9bbf4",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91fc539-e435-4be4-9511-0696fb593fc0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad4a56e-41e9-4720-bd35-6f73c3e28efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a17a8a-b6e9-40ce-ad73-fe5c4e318251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a56b0ae-94ee-489b-8c8e-278b2386e1b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37047b0b-edd5-4604-bc74-348f36e69dc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d21b658d-d52a-487f-977c-f5f3d603f185"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "809ded97-cbf4-4cc8-9b4b-be72fa791245",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dca92416-1889-4f71-b879-b541f9a376a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7336726-a27c-4de8-a4a4-c191864c114a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2e0cedc1-3c37-4ff7-87e8-96c59cb541bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ba19ccd-f8a2-4c93-b117-2d102b1f8f1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dcf64d7b-f2ed-482b-95d0-d6bb583b65a0"
            }
          }
        ]
      },
      {
        "id": "7ac9db2a-bee2-4bf3-b825-8044f99afaf1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e122404f-9c1a-46e5-945e-1a12e0ece2ac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a42973f-6cdf-4081-9862-89aa06cc5c6d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f3861479-782a-4ffa-b7bf-ef2c395c11f0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c34b1f30-6059-40fe-8972-6efd3fe2f5aa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11e4405d-7af3-48ad-a2fe-7da7b08029e3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 74.53846153846159,
      "responseMin": 7,
      "responseMax": 966,
      "responseSd": 64.60812688177548,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682037366418,
      "completed": 1682037398506
    },
    "executions": [
      {
        "id": "8268ceb7-83dd-4d5f-a392-9b0f23d22c15",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "05630987-022a-4abc-862a-1c8734da8a9c",
          "httpRequestId": "3ecd1202-3dee-4699-ae8c-0b27ee1677cc"
        },
        "item": {
          "id": "8268ceb7-83dd-4d5f-a392-9b0f23d22c15",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "be86dd93-9399-46b4-82d8-356f90b4171f",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "45c78e0d-4a45-4a3a-b0d0-c0b08c82e369",
        "cursor": {
          "ref": "5f38c9ed-1f42-41bd-b838-fab2945660e8",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ebb86700-4912-4c7c-a62d-21b22e005117"
        },
        "item": {
          "id": "45c78e0d-4a45-4a3a-b0d0-c0b08c82e369",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a014b625-c1c2-43b6-a255-7cd70221c749",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "31d2d024-c8b4-4247-8d3b-71916618ed46",
        "cursor": {
          "ref": "3879b828-51a7-4487-a2d2-f0a44f302207",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2d14cee7-8316-4db5-822a-fdf72a63b1c3"
        },
        "item": {
          "id": "31d2d024-c8b4-4247-8d3b-71916618ed46",
          "name": "did_json"
        },
        "response": {
          "id": "3031eff0-b97c-4f90-a647-62cc86a3084b",
          "status": "OK",
          "code": 200,
          "responseTime": 353,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c737dcd1-4d8c-453b-98c3-50ade3f27927",
        "cursor": {
          "ref": "02ab2214-fb42-4a61-ae95-9d0b237ad72b",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1eae3fd8-3115-44ea-ae85-b6bf6ee0b5f0"
        },
        "item": {
          "id": "c737dcd1-4d8c-453b-98c3-50ade3f27927",
          "name": "did:invalid"
        },
        "response": {
          "id": "5a6ef18d-f148-440d-ad12-0ef5554c9583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c737dcd1-4d8c-453b-98c3-50ade3f27927",
        "cursor": {
          "ref": "02ab2214-fb42-4a61-ae95-9d0b237ad72b",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1eae3fd8-3115-44ea-ae85-b6bf6ee0b5f0"
        },
        "item": {
          "id": "c737dcd1-4d8c-453b-98c3-50ade3f27927",
          "name": "did:invalid"
        },
        "response": {
          "id": "5a6ef18d-f148-440d-ad12-0ef5554c9583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdf3b52-e81f-41d4-a902-09d22adf087c",
        "cursor": {
          "ref": "27a64ec3-2bc4-4fdc-a2d5-72b4e739c360",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0090b733-8a64-4145-8f8d-c44ae292065d"
        },
        "item": {
          "id": "fcdf3b52-e81f-41d4-a902-09d22adf087c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b9d4d63b-21aa-4437-be41-160d465f7909",
          "status": "Not Found",
          "code": 404,
          "responseTime": 164,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3e05eb-6612-4df7-a172-8e7e9b2e36f5",
        "cursor": {
          "ref": "7e0f5ddb-e002-462e-befe-e7f5bde73261",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b294a14e-e4d8-459f-ab08-76de8b723710"
        },
        "item": {
          "id": "0f3e05eb-6612-4df7-a172-8e7e9b2e36f5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d8e2df0c-611b-464e-b466-1e0cbdf8d9d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c823b245-b07c-4890-806f-f5494421b417",
        "cursor": {
          "ref": "923796c7-c054-48c6-aa5c-4978da5354c6",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "06ca4eef-6f91-4ca0-bfb0-134613ce54ad"
        },
        "item": {
          "id": "c823b245-b07c-4890-806f-f5494421b417",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b04d84fb-529d-40bc-ae32-663173ba6be1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd330f8-a728-4fa0-bd4a-f8f1ee7c2e0b",
        "cursor": {
          "ref": "bac059a3-b078-4ab2-ab31-452c66c23c9f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "23129546-d734-41a4-b9cd-4ce99a0a7f40"
        },
        "item": {
          "id": "acd330f8-a728-4fa0-bd4a-f8f1ee7c2e0b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c0613804-51a9-4cfa-a5b1-e9e806094075",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd330f8-a728-4fa0-bd4a-f8f1ee7c2e0b",
        "cursor": {
          "ref": "bac059a3-b078-4ab2-ab31-452c66c23c9f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "23129546-d734-41a4-b9cd-4ce99a0a7f40"
        },
        "item": {
          "id": "acd330f8-a728-4fa0-bd4a-f8f1ee7c2e0b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c0613804-51a9-4cfa-a5b1-e9e806094075",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b10920-f601-4a88-a30e-7309c51e96d0",
        "cursor": {
          "ref": "0eb3a15b-ebbb-4d70-a75a-491167708da5",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c3146ff3-d4a9-4b39-92ad-d9719f114d8c"
        },
        "item": {
          "id": "c8b10920-f601-4a88-a30e-7309c51e96d0",
          "name": "identifiers"
        },
        "response": {
          "id": "7dd9f221-fb70-4141-a67f-ab718e3b6d18",
          "status": "OK",
          "code": 200,
          "responseTime": 966,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d503a935-1e8f-4780-ab23-0d56f87f70c6",
        "cursor": {
          "ref": "86d270b9-1fb3-4506-9b6e-93b90105bb5c",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "55f1b87c-e40c-4985-b409-f0aae0b9253f"
        },
        "item": {
          "id": "d503a935-1e8f-4780-ab23-0d56f87f70c6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8f7d53c1-c72b-4c71-986d-cb27e544c901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d503a935-1e8f-4780-ab23-0d56f87f70c6",
        "cursor": {
          "ref": "86d270b9-1fb3-4506-9b6e-93b90105bb5c",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "55f1b87c-e40c-4985-b409-f0aae0b9253f"
        },
        "item": {
          "id": "d503a935-1e8f-4780-ab23-0d56f87f70c6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8f7d53c1-c72b-4c71-986d-cb27e544c901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e72edf-4800-4c33-a04d-93d1f2eedd31",
        "cursor": {
          "ref": "9228b48a-bb62-47cf-9764-bc2b729a7b50",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "530bfc9d-8b06-42ab-bef4-98a445d6c778"
        },
        "item": {
          "id": "47e72edf-4800-4c33-a04d-93d1f2eedd31",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f67aec01-6a63-42b2-b7e1-ed013b57efe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c95c95-8c29-49fc-a610-4bc59a2e8089",
        "cursor": {
          "ref": "f0966676-b639-4423-b03c-591559f76c50",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f8b95c96-72d3-4fcb-986e-f9018c88b2e3"
        },
        "item": {
          "id": "69c95c95-8c29-49fc-a610-4bc59a2e8089",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "84d21389-7f07-484c-8c26-7b9e8af7cbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166f4caf-8e02-4988-adf1-18ce30e9fa18",
        "cursor": {
          "ref": "eb15dd90-b41e-4580-8b81-f81d320f5c10",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "10ebc437-1f99-4ece-a527-c5c0f3ebc135"
        },
        "item": {
          "id": "166f4caf-8e02-4988-adf1-18ce30e9fa18",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2ef38a27-0c21-4e3b-ae7a-90460b37bf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9344a512-d9c9-4623-973f-69b85786f86f",
        "cursor": {
          "ref": "de6d14a2-ee61-4c38-9719-388d13de7eef",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2597a0b9-9128-4902-b3ea-0f646b094726"
        },
        "item": {
          "id": "9344a512-d9c9-4623-973f-69b85786f86f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b88917a1-c5ee-4be3-a770-921ea5edf1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c9e3bd-30a3-4755-b9d9-1436f389c646",
        "cursor": {
          "ref": "f7ddbed0-cc03-4b5c-9ad2-82d55330ffeb",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e13b43e9-d5ae-427a-8d64-5db83cfff924"
        },
        "item": {
          "id": "02c9e3bd-30a3-4755-b9d9-1436f389c646",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0167691d-a32c-4d26-8dc6-2e4792599bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d198e3-923c-4a4c-b17a-be17e5b0f7cd",
        "cursor": {
          "ref": "56f238f4-1048-4e35-b538-213b65f78a1c",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "347284b0-22a5-45ab-b4db-31b29f0bac35"
        },
        "item": {
          "id": "76d198e3-923c-4a4c-b17a-be17e5b0f7cd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d2adbea9-36a5-4dc8-84bd-6414b5638e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2445e8f0-9b67-4019-860a-75e826fb34aa",
        "cursor": {
          "ref": "cf9394c8-521c-417e-9eb7-848770e8b977",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6ee0fba3-ba50-47ca-bcfd-f3de8e29761d"
        },
        "item": {
          "id": "2445e8f0-9b67-4019-860a-75e826fb34aa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3e79010a-9922-44e0-8281-6fe5d7356a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0022af67-9638-4eca-8d76-9a6a9fcbc5e2",
        "cursor": {
          "ref": "446734e9-d305-46e3-a97a-d65ff83e8fd6",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "58633b99-0abd-4586-8fe1-dc9e50050d0a"
        },
        "item": {
          "id": "0022af67-9638-4eca-8d76-9a6a9fcbc5e2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7ff8102a-c4a6-4c93-a69d-562019e59ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42e2dbe-efb9-4500-a669-03306ba0f02e",
        "cursor": {
          "ref": "15713a2e-b426-4e29-87a0-401c1e4f1187",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bff5502b-4ba9-48d9-a146-760c631c8002"
        },
        "item": {
          "id": "d42e2dbe-efb9-4500-a669-03306ba0f02e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e3cfb8e4-cb88-457a-bfd3-fff9ec6dc6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2be54e2-720c-4b14-9825-cd70d6237fb2",
        "cursor": {
          "ref": "167ba58a-819c-44bf-b77e-4467be9ae600",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "74e68a24-5d15-495d-bc79-718a02602887"
        },
        "item": {
          "id": "b2be54e2-720c-4b14-9825-cd70d6237fb2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d02cdce5-5018-44d5-af6f-435c09c2b2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739e463e-6d10-44bd-b891-4b2f5f745183",
        "cursor": {
          "ref": "f91f5540-6aab-44e7-b3a2-ed4c30c7f3d4",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "474c4628-38fe-4607-a242-7fb557d08d8a"
        },
        "item": {
          "id": "739e463e-6d10-44bd-b891-4b2f5f745183",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a5ca4794-de55-4137-bb40-b52c9ada7f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f822dc-4356-43bc-82e8-c270481a3428",
        "cursor": {
          "ref": "f1c771c7-b34f-41fb-8982-5128368969f4",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c8536da9-d64e-4bad-af46-4b8b81c40fd3"
        },
        "item": {
          "id": "19f822dc-4356-43bc-82e8-c270481a3428",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1fe4ae47-0174-40e0-92ab-8d141256c1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067d7140-db09-4980-bf92-6828b28afa6f",
        "cursor": {
          "ref": "fcd5b80d-1814-4335-90e9-47667852d47f",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7a1e543f-ac59-4f64-bc9e-3632009adf20"
        },
        "item": {
          "id": "067d7140-db09-4980-bf92-6828b28afa6f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dfea6ef9-7bb1-4fc1-bba3-040146e4bc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76366096-071c-42e3-afca-f226bc2581d5",
        "cursor": {
          "ref": "c92c59d3-1bdc-4d33-9ebb-f277d03685b0",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f17cdf2c-b23e-4b96-822b-a0c94c8f63ed"
        },
        "item": {
          "id": "76366096-071c-42e3-afca-f226bc2581d5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "de44f77b-08f2-4bca-a41c-c4e2f3ff604d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0461ae5-5a01-437b-8636-cecffa348741",
        "cursor": {
          "ref": "8798d602-5d4d-4748-a8a0-9ba99a684c80",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1afdeea4-912f-4b71-9e54-acc6254dac43"
        },
        "item": {
          "id": "c0461ae5-5a01-437b-8636-cecffa348741",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e68522b9-9b4f-401a-84ca-61145a2d96d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60153fb-1c7d-4aee-b23d-110e15e7fd4b",
        "cursor": {
          "ref": "3f4819b9-0ace-435e-bac9-8c0ac0da6cfd",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "187ac480-9cdd-4907-8d68-a3c112e04398"
        },
        "item": {
          "id": "a60153fb-1c7d-4aee-b23d-110e15e7fd4b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ce6af2d9-f307-4be2-b2a3-a4984426de26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc1b33e-8410-412b-98b9-0ed83af7a72b",
        "cursor": {
          "ref": "02e4e355-9980-4032-9526-200cf73a61c3",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "566185e8-bbcc-4045-89f5-4f542980718a"
        },
        "item": {
          "id": "3bc1b33e-8410-412b-98b9-0ed83af7a72b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "42d7db0a-c7a7-4e6a-b5fc-3a18ea8f6e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d59f10-2e2a-4b58-a82b-3203feab0bcf",
        "cursor": {
          "ref": "e3105db9-c833-4ed9-9ee4-d8aacd5da5c3",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f3cc7c31-34bf-4ae9-a73b-863fafd9ebcd"
        },
        "item": {
          "id": "55d59f10-2e2a-4b58-a82b-3203feab0bcf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2b5e6e01-76cb-4473-be4e-b4bdb8a72d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b560e5-4052-43d6-9f83-ffdb405b6cbb",
        "cursor": {
          "ref": "50ac8ce2-1603-49d8-b8bf-0afbdbac7c9a",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5081428b-13b1-4f08-9bc9-539b5085830a"
        },
        "item": {
          "id": "e7b560e5-4052-43d6-9f83-ffdb405b6cbb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0d44f4b3-5b86-4dd3-bf30-ef36d9ad094e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bd43d6-f735-4f87-a35f-5c031848f210",
        "cursor": {
          "ref": "ed792781-4c12-4edd-b971-08c31743d60a",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "166901f7-5103-44c1-907c-93731dda8a92"
        },
        "item": {
          "id": "34bd43d6-f735-4f87-a35f-5c031848f210",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "35559616-561d-45bb-9b02-1be6f6a16959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1443bb91-ee94-4285-814d-7b3ad0fb8032",
        "cursor": {
          "ref": "9776c0ac-0aae-4523-a98e-5a5e9a760989",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "bffc36b4-8fa0-4d03-8088-ad3b8a350742"
        },
        "item": {
          "id": "1443bb91-ee94-4285-814d-7b3ad0fb8032",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3ef92336-09ba-4d6a-8f54-2e895205f753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3516f64-1916-4622-8d07-990bd96e0aef",
        "cursor": {
          "ref": "ce8e1b13-bcf4-4ab3-9808-cfd44b8c6029",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f1ce9c9a-41cb-4fa4-97b2-bd251d54823a"
        },
        "item": {
          "id": "f3516f64-1916-4622-8d07-990bd96e0aef",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e2820009-3e5a-4ea3-badd-51cf4ed5ee88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aed02e5-1d51-4917-95f4-4db8f901f8dc",
        "cursor": {
          "ref": "e8914ea9-7826-46d7-ac64-402db6895284",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a8f58c3f-6c26-407c-be73-ed79a3fe6d39"
        },
        "item": {
          "id": "2aed02e5-1d51-4917-95f4-4db8f901f8dc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "63f07a5b-90a0-43f1-8c40-5d2cc5564cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30be1c93-3cfd-4301-b1d6-83d4ac028627",
        "cursor": {
          "ref": "2e9c362c-30e9-4f79-b606-8e5cd8b62bbd",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2f947825-d302-4c5f-a0f5-3388363aef44"
        },
        "item": {
          "id": "30be1c93-3cfd-4301-b1d6-83d4ac028627",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f33baee3-1088-41c4-84de-a9c1cfc8e43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b48624b-f57d-4bf1-b96c-b452f8db61ce",
        "cursor": {
          "ref": "f29f894e-5e31-4403-9283-512cf77c4024",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8836d83d-b300-47af-9547-50fbdeb47e96"
        },
        "item": {
          "id": "6b48624b-f57d-4bf1-b96c-b452f8db61ce",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ce45c848-0be6-4031-8b54-54d72fed78fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43ecc64-22a5-4c1d-9655-84607086e216",
        "cursor": {
          "ref": "119a4b67-4a5c-48e1-8d31-47f708fd9804",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fe145a33-1af0-4d3f-946f-4d2668a0566b"
        },
        "item": {
          "id": "b43ecc64-22a5-4c1d-9655-84607086e216",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "eb7c68a6-89f8-4c1f-8ccf-a33042e7bca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761f54d4-4bcc-49f1-8542-c2e44496ec2b",
        "cursor": {
          "ref": "d4a6b4ec-b681-48ab-bea0-d772aafadc04",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fb0572b5-42ff-4e3e-bd26-1d0ea01a924a"
        },
        "item": {
          "id": "761f54d4-4bcc-49f1-8542-c2e44496ec2b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "af7c5760-f926-4d14-9797-01bece726f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4050ec-ce4f-4717-8e0c-c57eb80b9300",
        "cursor": {
          "ref": "0f5a695a-8d34-40b9-b9c3-be70e57ea950",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f53507f2-e1bf-44c9-907c-90a931a3f4f3"
        },
        "item": {
          "id": "7f4050ec-ce4f-4717-8e0c-c57eb80b9300",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e0b1e1c3-4c46-4ec8-83df-8395019f3703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1a7a10-ccce-41cc-a95d-236a7dd516ba",
        "cursor": {
          "ref": "946e7ef1-2c0b-4dd8-a6dc-6244f31de56f",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "482487b5-2122-4f03-9f31-41e275925291"
        },
        "item": {
          "id": "cc1a7a10-ccce-41cc-a95d-236a7dd516ba",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b9ac122c-fa5a-4a4a-be81-b9ed925fdde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04effc45-7bf8-4976-8275-37c13fc92475",
        "cursor": {
          "ref": "c9e75c1e-b122-4301-a9f7-cb4b523a39b2",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "98f9b04e-f8d3-4d26-a7b5-303a7324bbee"
        },
        "item": {
          "id": "04effc45-7bf8-4976-8275-37c13fc92475",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b0634809-6a0d-4001-b862-015efb8d5c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe6c440-de9f-4108-bde8-18754b88743a",
        "cursor": {
          "ref": "d115c003-1881-473c-92c7-ed203a20e823",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b77214b4-2981-4151-a8ab-d6d2d1dbab17"
        },
        "item": {
          "id": "ebe6c440-de9f-4108-bde8-18754b88743a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "79a6789a-a7c6-492f-91d4-06af94d37de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79a8ee2-1258-449e-a7ef-7284b21bcbe2",
        "cursor": {
          "ref": "97362ec7-eaba-4eb7-ac8d-b5de14793d87",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "eb4d28f0-cedc-4153-9b1f-87547d26dc3f"
        },
        "item": {
          "id": "a79a8ee2-1258-449e-a7ef-7284b21bcbe2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e8bb01c7-3662-4f75-918b-c1a2ed6417b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d92b5ee-c2fa-4ffa-9711-a8f8cebab77d",
        "cursor": {
          "ref": "47e6886b-1233-4355-bf68-d21d2c912d49",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e4d29ebc-aff8-433c-b097-47507ca3c7cc"
        },
        "item": {
          "id": "5d92b5ee-c2fa-4ffa-9711-a8f8cebab77d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5c183b93-0021-4fbb-9a00-503c4c72a962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50e41fe-ec0c-498f-96d9-9b1b5fb1f53e",
        "cursor": {
          "ref": "f69a13cd-8054-4dc2-8e8f-b4c4642b97e4",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "979aca34-1be9-4da9-926c-bdb0de665e3a"
        },
        "item": {
          "id": "a50e41fe-ec0c-498f-96d9-9b1b5fb1f53e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9a1e48d8-1d81-4216-a00e-ce3ffcbfb9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9105966d-3df6-4bf8-bae1-7b45d9648919",
        "cursor": {
          "ref": "436c399d-2b66-49ed-a08b-db0f34c6695b",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "19b1cf7e-d82a-4876-86f2-25e5cfeac237"
        },
        "item": {
          "id": "9105966d-3df6-4bf8-bae1-7b45d9648919",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "57c447d4-e35a-4070-afb9-a3611ef5426b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f73226-f832-4f15-b5fb-d6df5fe8bf8e",
        "cursor": {
          "ref": "088dc384-584f-4ec4-adb8-460da3d61da9",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "39025c39-0603-40a8-bd3d-23d3bc916da7"
        },
        "item": {
          "id": "96f73226-f832-4f15-b5fb-d6df5fe8bf8e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9fe69251-4e35-4779-b81a-19d4c83b2d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0feb9ef-c53f-4a7a-a4dc-fd2cfd0e1c37",
        "cursor": {
          "ref": "9e55e399-a7a5-44d1-89a9-44b2fef4cf31",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bad689b2-7cb7-4739-9e11-3e4b23df421e"
        },
        "item": {
          "id": "f0feb9ef-c53f-4a7a-a4dc-fd2cfd0e1c37",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f608dca4-f681-44ce-aed7-28b132a4c9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cf6ef5-06bd-4516-b7ed-0b9bca46ad5c",
        "cursor": {
          "ref": "69d30b50-e343-4bc7-975d-a47a5b93f60a",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ec8ee76d-5a6f-4b6e-9d36-9fa1be918600"
        },
        "item": {
          "id": "50cf6ef5-06bd-4516-b7ed-0b9bca46ad5c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "23dc4ff2-7d6b-44c1-a9d0-0b7f0b58706c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54afacf-4cad-481e-b676-30da6d9debcd",
        "cursor": {
          "ref": "2e37c33b-5f8e-4fc6-84a7-1cfbb3d532ab",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9617713b-dd34-40c9-815f-30b43ba0d45c"
        },
        "item": {
          "id": "b54afacf-4cad-481e-b676-30da6d9debcd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "acb0f1de-9ff3-47a5-ba28-7e7a1cc38b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f31053-1724-4928-8e51-dfa2fe8fdb9f",
        "cursor": {
          "ref": "6f9021e6-6684-486a-8b42-de7a3c9e8278",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3d6f992c-c0b9-4261-b32f-f77cb31ca255"
        },
        "item": {
          "id": "77f31053-1724-4928-8e51-dfa2fe8fdb9f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "90737ddb-b253-4405-ae54-ed33cfbe2ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2c9e1b-bb6b-482f-b2be-18471ef8aa4e",
        "cursor": {
          "ref": "f6359491-42bd-4b83-b59d-d22172b9a489",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "445f9c92-6de4-46cf-a045-80addf8b8341"
        },
        "item": {
          "id": "bc2c9e1b-bb6b-482f-b2be-18471ef8aa4e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "50682d24-c1b7-4a9d-9c1c-0e9c0296fba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a9f6f8-fb55-4b90-a40a-b74f8f1f33ea",
        "cursor": {
          "ref": "8d3df972-2d49-49db-b6b3-d9260945702c",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d8174d89-dcec-48d0-abb3-112aabcb931b"
        },
        "item": {
          "id": "b7a9f6f8-fb55-4b90-a40a-b74f8f1f33ea",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "037bf08c-b3da-4770-bb0d-90ece1825839",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb30a8f3-ebd1-4d57-8c76-7a8cf6f2a725",
        "cursor": {
          "ref": "0960c28a-d324-4289-aca0-3ace01e44442",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9b6ac46b-6cdb-48bb-90f6-0956cb25c6e6"
        },
        "item": {
          "id": "fb30a8f3-ebd1-4d57-8c76-7a8cf6f2a725",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2a771383-e669-4db4-9270-5b2c9dde2335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a643958-ca55-47f3-8d64-83c9b5b3e7b4",
        "cursor": {
          "ref": "8010bef8-9ac9-4093-967b-f0aeec9a0d3e",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6fb05b61-75f2-47a9-9625-a9f6caec747e"
        },
        "item": {
          "id": "9a643958-ca55-47f3-8d64-83c9b5b3e7b4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c8f2f985-1e77-4580-8cf1-cd13a271847f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7025cc-44de-4774-ab1a-1fb416dcec9c",
        "cursor": {
          "ref": "bc4b839b-737e-4ca7-b362-98aa44be0780",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1fc63bb2-3f9a-44ff-8011-27bb4ecaec53"
        },
        "item": {
          "id": "0a7025cc-44de-4774-ab1a-1fb416dcec9c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e404aeea-3e78-4751-81b8-32ee374c867f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa806977-b8a8-4ed5-b059-7bd7292e3c43",
        "cursor": {
          "ref": "384406cc-3aa3-41d7-835d-03bc97e0fb85",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b8128859-3836-486e-a9c2-81a70ffd2f9e"
        },
        "item": {
          "id": "fa806977-b8a8-4ed5-b059-7bd7292e3c43",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cf46c7f1-fc65-477a-8c37-e10a6c12c94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb635f2-ca29-4c38-88ed-2808a838193c",
        "cursor": {
          "ref": "0703bdfa-1feb-4e81-b01c-04b531f6b929",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d9365c67-6730-4103-bb24-21260ec08f07"
        },
        "item": {
          "id": "acb635f2-ca29-4c38-88ed-2808a838193c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e9180eae-b188-4515-946b-12f05433637e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7acfe5-b44a-4a3c-bc27-62e2dfcd4c58",
        "cursor": {
          "ref": "9257430c-ca10-4f66-9cd6-0cd7ea648b4e",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dee916b1-d8a8-4027-a85f-6126b27603ee"
        },
        "item": {
          "id": "de7acfe5-b44a-4a3c-bc27-62e2dfcd4c58",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "729223a2-aab4-46ea-9efb-01a77e1e6f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e903e64-1631-418e-a74e-27514cfedfcd",
        "cursor": {
          "ref": "62d8406d-7515-4dfe-ad09-816b02d43de7",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "011aacc7-0c14-4b96-aaad-1ac07bbbd59a"
        },
        "item": {
          "id": "0e903e64-1631-418e-a74e-27514cfedfcd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9fc6bb16-f6a6-4ea1-a368-a070eb48ad01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a5d614-6c27-4a59-8eb0-300bfe8606e0",
        "cursor": {
          "ref": "b49ecb7f-2d24-4b3f-83f1-df55b61ccb42",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "61858dde-d166-410b-acdd-05a32aeaf9f3"
        },
        "item": {
          "id": "45a5d614-6c27-4a59-8eb0-300bfe8606e0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "91a53fdd-314c-4005-bf13-0a09d3d111c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57085897-5a6c-4171-ba9b-290f91d9372a",
        "cursor": {
          "ref": "ae6359bd-cdd9-443a-b72c-211c2e5caaaf",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "05ff2d22-8742-4116-8639-f9512a703838"
        },
        "item": {
          "id": "57085897-5a6c-4171-ba9b-290f91d9372a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6e67101c-6682-464c-9611-9b724f1e2410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf2caee-d4bb-4eee-bdce-2ad9a39ec86d",
        "cursor": {
          "ref": "9347b375-3748-4803-8860-b59f2909e088",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e84c8f47-47ca-44d4-9686-3d47ddea193f"
        },
        "item": {
          "id": "edf2caee-d4bb-4eee-bdce-2ad9a39ec86d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fe390e1a-441a-45ce-8227-f69992d4b644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45676211-8986-43e0-b8ac-877e1c100cc9",
        "cursor": {
          "ref": "1df81798-9547-4fce-a854-b7cd6d18ceed",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "81c2637f-dbf8-42ed-bb0a-e9d08048f903"
        },
        "item": {
          "id": "45676211-8986-43e0-b8ac-877e1c100cc9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c1492ae5-6f92-4524-954a-73c03aa5f09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba30f1e-cbe7-4c0a-92e5-0553c7eaef8b",
        "cursor": {
          "ref": "bb95128f-6915-4609-bdce-2bb3a3ac8ac9",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "57335018-79b0-416c-b0da-8ca164ad3a9f"
        },
        "item": {
          "id": "4ba30f1e-cbe7-4c0a-92e5-0553c7eaef8b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8b0c7255-1508-4e6b-81d1-d221b53c9d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba405cf-a78d-43cc-87db-0419d0bb34ea",
        "cursor": {
          "ref": "ac60ff7d-801f-4db9-8830-cdd1e3c4de01",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8a418f1b-fce2-4df0-8822-68c9aef4c3b8"
        },
        "item": {
          "id": "4ba405cf-a78d-43cc-87db-0419d0bb34ea",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "212be77d-6f5e-49c2-919a-3f7ce6d83513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391c33b8-eb22-459f-b82b-a6cb08744231",
        "cursor": {
          "ref": "ae88b60b-e719-44c3-9e16-46fe60289cfc",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "234309ed-4f09-483a-878c-7d6c0909dd5f"
        },
        "item": {
          "id": "391c33b8-eb22-459f-b82b-a6cb08744231",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ec037e3b-a2d6-42a6-aab1-d425bd94836f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1297863f-311b-4adc-bb78-871798e80452",
        "cursor": {
          "ref": "f4849c06-46fb-44fe-8aa1-27bece9b528e",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f446c3c0-2135-432c-b092-6d66f8261771"
        },
        "item": {
          "id": "1297863f-311b-4adc-bb78-871798e80452",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9f589854-5f0d-4c80-b0a8-4eb5de9ff6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214c2227-ad1c-43f4-b994-b11740630ce0",
        "cursor": {
          "ref": "a3f5ab53-7e9e-45a5-970e-b163154c03ef",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "51f202de-9260-42e7-88ee-2222fbdabe3d"
        },
        "item": {
          "id": "214c2227-ad1c-43f4-b994-b11740630ce0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c82b67a9-2152-4123-9ef8-ef77a42286bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72dc638-089d-48c7-85de-c2f9da549fe3",
        "cursor": {
          "ref": "6a00d52c-7594-4a35-a8fd-002f216034ff",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9dd940ec-5c61-4768-b717-121901abaa1f"
        },
        "item": {
          "id": "d72dc638-089d-48c7-85de-c2f9da549fe3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c308e435-716d-4759-941e-61ae857305d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c932966-7137-4048-954e-b5a2523066a3",
        "cursor": {
          "ref": "debabee4-0e97-471b-9697-961595a3e93e",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5c3d588c-e7eb-4950-94c2-95cef6c85d95"
        },
        "item": {
          "id": "7c932966-7137-4048-954e-b5a2523066a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b7c3993d-b617-4b53-b38e-2d72d212d27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610998ef-ca78-4e4e-be27-9a55b8cb2c09",
        "cursor": {
          "ref": "ad694975-d0bd-4cc8-9a59-f84c65e28352",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "11732f91-5254-4d87-a759-964e64a9b969"
        },
        "item": {
          "id": "610998ef-ca78-4e4e-be27-9a55b8cb2c09",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4ff91b17-9306-4a31-9a52-31680a6d9f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb87b46d-6589-4366-9971-0e47d477dfb0",
        "cursor": {
          "ref": "14ecc3e0-6bf1-4967-9f95-bcbd820a9a5e",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "24444dc2-6ad9-4c79-a959-a04f4a9e6e82"
        },
        "item": {
          "id": "bb87b46d-6589-4366-9971-0e47d477dfb0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e78659d9-2aaa-44b4-82b7-f7c3fd4b8820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ee2fdf-0bc3-4ce0-bffc-deaae7ddd75d",
        "cursor": {
          "ref": "3fb3b21a-c6d9-4b09-be37-6e39395aa4ab",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "940c1b7e-c959-41ef-8a9d-fcb382ca025b"
        },
        "item": {
          "id": "96ee2fdf-0bc3-4ce0-bffc-deaae7ddd75d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fcaf7d59-adcb-4412-abad-9561ccd4d2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93e8dcc-278d-4f11-8319-619b6e74014a",
        "cursor": {
          "ref": "a99e0af9-c64d-44be-a506-98a488685098",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a11a41c0-03b1-41b7-a5b0-b3fb0c43fc9d"
        },
        "item": {
          "id": "e93e8dcc-278d-4f11-8319-619b6e74014a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2aae33ba-1edb-4cec-b399-a3c14c3f99a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a4f4ef-9d3d-4236-8c61-3ddd1c6ad49d",
        "cursor": {
          "ref": "2a014e5c-afae-47f1-853d-bad3e9297527",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3da67c31-eb69-4354-804d-967051337cf5"
        },
        "item": {
          "id": "b0a4f4ef-9d3d-4236-8c61-3ddd1c6ad49d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1fb4c017-8ec9-42d8-954a-83354d864f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6d8c99-3c0e-4780-9a8d-c88ca83cfcd5",
        "cursor": {
          "ref": "c6c61c21-e286-40da-bd94-7216b5ce8ed7",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c3934705-c99e-4c1c-8df8-a7f509a08957"
        },
        "item": {
          "id": "4d6d8c99-3c0e-4780-9a8d-c88ca83cfcd5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0acf62ff-40ae-4411-a5b3-ad44d4eb2278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7e7d5f-757b-43aa-a903-7415f166720d",
        "cursor": {
          "ref": "b0fe856f-0569-42d3-97fb-456716adc299",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "29d54675-0b4b-4397-9039-ee765370f0d9"
        },
        "item": {
          "id": "1d7e7d5f-757b-43aa-a903-7415f166720d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d68277f1-5cd4-4222-a9a3-e3333a88d907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad252b0-9d1e-4950-b44c-bd3d4a5da31e",
        "cursor": {
          "ref": "38428b63-cf48-43e8-a5cf-74e9e5c2e501",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b20f19df-98b0-4554-b146-6264f6bddc0f"
        },
        "item": {
          "id": "fad252b0-9d1e-4950-b44c-bd3d4a5da31e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "434ee36a-ccad-48d1-bfc4-b46bfd054a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff2337c-f069-4b29-814e-696d6a3d46a9",
        "cursor": {
          "ref": "5747d433-1d26-41d8-ab49-51066ab11ead",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "436d83cb-b845-4e05-9cbf-309bed18c0f8"
        },
        "item": {
          "id": "bff2337c-f069-4b29-814e-696d6a3d46a9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5ae8592a-c596-4f5a-8824-60928b1188da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fedeba8-8eb4-4749-b72d-d7569c177207",
        "cursor": {
          "ref": "597e949a-f729-4a36-8167-9d11240a5b2a",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fcb1e1ab-6bf0-4bc7-bff4-b3779e161484"
        },
        "item": {
          "id": "1fedeba8-8eb4-4749-b72d-d7569c177207",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c207e359-202d-4b8a-a5ee-447f8e972b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8005833d-55db-4f57-8528-be6587bc3696",
        "cursor": {
          "ref": "c365f1b3-e7a3-4cec-98c6-8bccdaa03b11",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8ed0ba6d-2e0a-4963-8350-c5b644ffa178"
        },
        "item": {
          "id": "8005833d-55db-4f57-8528-be6587bc3696",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "724d3f7f-d121-43e5-99a7-9b7b2878ff4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207359d6-38e6-4d1c-8967-7c7dd40448f0",
        "cursor": {
          "ref": "a677de3d-18b2-4893-910b-8820f16ad961",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6777cc21-2849-462a-9465-b2919f8d9299"
        },
        "item": {
          "id": "207359d6-38e6-4d1c-8967-7c7dd40448f0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5421a48e-d9bf-46f9-97d1-f932dec1cfe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c55afd-fd37-42b8-81e0-b89f431a0072",
        "cursor": {
          "ref": "032e23dc-c45f-4ffa-9249-31971426771f",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "86648360-3c60-4a56-b5b8-ced8ada490e3"
        },
        "item": {
          "id": "03c55afd-fd37-42b8-81e0-b89f431a0072",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ea3bcbeb-6b2a-4b83-8cd3-be66604975b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be404fc-b785-42ac-84ed-88c5caf89810",
        "cursor": {
          "ref": "1c9755ba-f374-4420-abbe-5e95857e464d",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b1e80974-f592-4343-a929-34f4d5939010"
        },
        "item": {
          "id": "7be404fc-b785-42ac-84ed-88c5caf89810",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f904b85c-c522-4675-b28f-9eb62d76fea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de30239-5e95-4440-ae81-57e7ee4f10c2",
        "cursor": {
          "ref": "ada377ac-4a8e-4e16-959b-9bd3e33b2c33",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ef38141f-3765-4419-8100-29758021a7bd"
        },
        "item": {
          "id": "6de30239-5e95-4440-ae81-57e7ee4f10c2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a0ea8aeb-7a84-4eca-a24e-aa521ff400e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2ff0d3-2945-47ae-b68b-2c3e14623a74",
        "cursor": {
          "ref": "89e794f1-27c6-4f6a-8b72-f6e31e05da24",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9556c92e-587d-4e89-ae26-f221da32f05e"
        },
        "item": {
          "id": "8c2ff0d3-2945-47ae-b68b-2c3e14623a74",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "80500fdc-1f3f-43f2-8af0-b42bf570d185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1efb31-7ebf-40a4-adb7-310cb96894ec",
        "cursor": {
          "ref": "c6a6151f-171d-43d7-9116-04af5fd001fb",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b7b24658-30d8-455f-b9d1-51f0797598df"
        },
        "item": {
          "id": "4f1efb31-7ebf-40a4-adb7-310cb96894ec",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b49357bc-3fb7-4a39-8240-45009a5bf5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27326330-d67f-4df7-a6b8-b79ec2317736",
        "cursor": {
          "ref": "516d7c86-b098-4ce4-9e6a-19b90a37e695",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "313f0b5f-d463-43ae-897e-f17a437775d6"
        },
        "item": {
          "id": "27326330-d67f-4df7-a6b8-b79ec2317736",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4679a5b9-a8b9-4465-b60f-61d929574bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf79372b-51f2-4b6d-aa42-b200c7237cd1",
        "cursor": {
          "ref": "d4c89042-713d-4fbc-bfd9-e3051b706ea2",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "16a0ca62-2b43-4944-9886-4f2c9ac7c6e2"
        },
        "item": {
          "id": "cf79372b-51f2-4b6d-aa42-b200c7237cd1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c9b724cb-f6cd-4faf-9881-d28b731a9a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d9fe4d-f00e-48a9-aa6d-bcc278493807",
        "cursor": {
          "ref": "9a89803c-a604-43dd-9cec-a191b79daba3",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3fe53a7a-2fe2-467e-b7dd-a6cfbd6a759d"
        },
        "item": {
          "id": "d2d9fe4d-f00e-48a9-aa6d-bcc278493807",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "38df2289-2dbc-48eb-b96c-931e9f68a70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ad7af6-d21c-4f3b-940f-65d9e5c24e8a",
        "cursor": {
          "ref": "42b8028d-2ef6-4ed8-b33c-de89ebcadcd6",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1385c174-a360-4e22-8420-4ebc7d909865"
        },
        "item": {
          "id": "50ad7af6-d21c-4f3b-940f-65d9e5c24e8a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "07deefc4-4969-46a7-8792-ea8e4b70ee43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d747ddb-7f6b-4554-8c79-27365496a21d",
        "cursor": {
          "ref": "5adf4a0e-88f6-45c1-82d1-96a46714f3e1",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0550f7de-61d4-4be1-b140-20747d583a6d"
        },
        "item": {
          "id": "3d747ddb-7f6b-4554-8c79-27365496a21d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0bfcf7d5-301d-4017-9ddf-e7ecc43b4249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b81b8b6-e8ed-4710-8c7e-237651e012fb",
        "cursor": {
          "ref": "440b9bdd-1bc0-4c13-a355-301954b7b629",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "859c992f-6211-449f-b516-3b5280f34420"
        },
        "item": {
          "id": "1b81b8b6-e8ed-4710-8c7e-237651e012fb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "59635d4e-4ed9-4141-bf84-738da7f25362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143ee72c-7a36-4076-a678-808c65510fe2",
        "cursor": {
          "ref": "4c7dfdc5-572a-4e4f-b51c-21e6ae7ded1c",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e88f0357-a716-4d2a-a2be-7eb4dead7dbb"
        },
        "item": {
          "id": "143ee72c-7a36-4076-a678-808c65510fe2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b17369f7-a4fb-4af8-9098-ae3f4329c3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4323f598-aa3b-419c-9f38-5bfae0645fee",
        "cursor": {
          "ref": "c39dced0-8feb-4a41-a320-7eaa2d2f9a2c",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1c5a1681-ed78-4bc2-bd69-f293143da0bb"
        },
        "item": {
          "id": "4323f598-aa3b-419c-9f38-5bfae0645fee",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d435bf47-6002-4eeb-acd6-888fd16906bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5462c3-acaf-4257-91bf-22269dcb4802",
        "cursor": {
          "ref": "2ef98919-6788-455c-85a9-a6dacd5e90f6",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "03549787-fadd-4ede-a0d3-0c56fe4e1e06"
        },
        "item": {
          "id": "ff5462c3-acaf-4257-91bf-22269dcb4802",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "adbfc3d2-618e-4e58-9cdd-3de2899a305e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5383f839-d661-43b6-87c3-7d9e91d5ab47",
        "cursor": {
          "ref": "4953e98d-8bf2-422b-a405-86bfad52c3c3",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3b0f8b98-964e-45c9-8236-dde1ce06a730"
        },
        "item": {
          "id": "5383f839-d661-43b6-87c3-7d9e91d5ab47",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "aafc5b44-bc36-4632-bc77-df07e7609f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35978e3c-cdc6-4810-998c-45339d9053fd",
        "cursor": {
          "ref": "36664287-1f35-49fe-92c0-9ac00f9c8067",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8c777f94-cabd-4aa5-b095-3bd608184f26"
        },
        "item": {
          "id": "35978e3c-cdc6-4810-998c-45339d9053fd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ec6558b8-a0b2-4a4e-9615-675c39ca914e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4261fca9-00ed-4769-b778-2356641a79a8",
        "cursor": {
          "ref": "e48195a3-5b1e-471a-9aba-8ebd875d2a1a",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cc9fbde6-9d52-4172-afea-74bf7b774de4"
        },
        "item": {
          "id": "4261fca9-00ed-4769-b778-2356641a79a8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "69d8f11b-e5ca-40e7-95f8-d38f7004f4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bae806-5a23-4ac1-ace0-3edb1b118ea3",
        "cursor": {
          "ref": "1df8ca3f-56ce-4cdb-b63b-217f0ce06a28",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c2b235f2-150d-4041-afbb-2d0394217160"
        },
        "item": {
          "id": "d8bae806-5a23-4ac1-ace0-3edb1b118ea3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "98f97d8e-def6-4f4c-b59e-3d5936fdd4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d96cd6e-ba59-49c0-9176-a9b39155fd32",
        "cursor": {
          "ref": "cef0bd43-441a-402e-9af0-a5cfc77cdf54",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "12de3efb-932b-4513-a4e5-62e182ea0aa3"
        },
        "item": {
          "id": "6d96cd6e-ba59-49c0-9176-a9b39155fd32",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ab523a02-df5c-4b4f-9d1d-0a4fd3514d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97555fe0-82b2-4916-836c-26b88a5ff83c",
        "cursor": {
          "ref": "f6e86e92-2266-407e-96d1-cabd19f7bc97",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6810fc4c-2a8f-481a-a1e4-bad1dc804e23"
        },
        "item": {
          "id": "97555fe0-82b2-4916-836c-26b88a5ff83c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7d3aab46-8fa5-4d51-a4f6-e0e33546a01d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d43777e-41c9-49b2-9a5b-f2f504ef6df4",
        "cursor": {
          "ref": "e0ba7b67-e79a-48ca-902e-6be50d8e5240",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7735f513-4ec8-4d49-a77d-ce85b8643f1b"
        },
        "item": {
          "id": "7d43777e-41c9-49b2-9a5b-f2f504ef6df4",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3e35b1f1-06f9-4cb3-9682-1e9462d7334e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 192,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f42f3e0-28ca-4d3f-a975-f38802ff53c4",
        "cursor": {
          "ref": "ef10481f-46cd-46e5-8e51-f7098ffeeeb6",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e9c8b599-d6fa-4d8e-8965-6da80a2487fe"
        },
        "item": {
          "id": "0f42f3e0-28ca-4d3f-a975-f38802ff53c4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c17894c6-0082-4e18-87c8-ee7759966a0b",
          "status": "Created",
          "code": 201,
          "responseTime": 137,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "08650d7c-50be-494f-a8ec-5f80effa6768",
        "cursor": {
          "ref": "df9b0398-2116-4981-afe8-7fe8c2c47834",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9a76c537-84bf-48e9-b428-e797f83a31a0"
        },
        "item": {
          "id": "08650d7c-50be-494f-a8ec-5f80effa6768",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e05a9258-5de8-4935-b940-87198b309708",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0525d33-705b-4ce0-91f6-11869e9de054",
        "cursor": {
          "ref": "84bff4dd-8ebd-4f3b-a992-d328dc3cf8df",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "80ae3b00-581f-46b8-8d63-7f1121c684cd"
        },
        "item": {
          "id": "d0525d33-705b-4ce0-91f6-11869e9de054",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "78bd06a9-19fe-46a4-84e9-c06197f65e4f",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef0b8b5-6356-46fd-a0fc-22d3d6561b13",
        "cursor": {
          "ref": "f4db2f3a-9a39-48d5-ae0c-d29df57e7a69",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9d5260a8-e4f0-4b12-8146-31a22dde5f0a"
        },
        "item": {
          "id": "8ef0b8b5-6356-46fd-a0fc-22d3d6561b13",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "459ef939-c74a-421b-ae59-e5fcc70649d3",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4408fb4c-c4e4-4244-b9b9-2eea172a5931",
        "cursor": {
          "ref": "8bd317e7-8e80-4106-b584-29112c6cba3c",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8d1ac697-2516-44c0-b937-b7ef1232627c"
        },
        "item": {
          "id": "4408fb4c-c4e4-4244-b9b9-2eea172a5931",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "104f9ec5-97bf-43e7-b68c-b90cd5e21b14",
          "status": "Created",
          "code": 201,
          "responseTime": 79,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b391c2c-276d-40cb-85ab-060580c8c138",
        "cursor": {
          "ref": "19a6e1bf-bfd2-405b-a254-9d37ce0dc978",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b523a307-2cb6-4063-84df-1bd92d28f96e"
        },
        "item": {
          "id": "8b391c2c-276d-40cb-85ab-060580c8c138",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f8c50c6b-41a2-48d0-99c8-acbbd6742ef0",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1705d91-6c05-4084-9eb4-14ac517948c2",
        "cursor": {
          "ref": "0bb9112f-ef14-445d-bae7-1b6cddd388f0",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e0152145-a542-4a99-aeac-6c76058139da"
        },
        "item": {
          "id": "e1705d91-6c05-4084-9eb4-14ac517948c2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7577ec8a-02f0-42c6-bb6c-c3bb16978692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1705d91-6c05-4084-9eb4-14ac517948c2",
        "cursor": {
          "ref": "0bb9112f-ef14-445d-bae7-1b6cddd388f0",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e0152145-a542-4a99-aeac-6c76058139da"
        },
        "item": {
          "id": "e1705d91-6c05-4084-9eb4-14ac517948c2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7577ec8a-02f0-42c6-bb6c-c3bb16978692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898e508b-6cec-4313-8864-a4f234dc7041",
        "cursor": {
          "ref": "0103c094-2730-4269-a8cf-9c30ed449e4d",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "adf41322-4322-4161-af06-a4dd382d6bf2"
        },
        "item": {
          "id": "898e508b-6cec-4313-8864-a4f234dc7041",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2d190c72-7293-4d39-b9b6-941d633caabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aad8d62-435c-496a-ace8-5f6fd0a10586",
        "cursor": {
          "ref": "3d9e009e-6101-4972-89a5-353489446dbb",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3b7c9018-7cf0-4cab-b107-bfaf6448b564"
        },
        "item": {
          "id": "9aad8d62-435c-496a-ace8-5f6fd0a10586",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fe5ab086-8e6b-457e-b5ea-ddeba9d45eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d56c6ed-29ca-45ee-849b-7eef8b9ae0bd",
        "cursor": {
          "ref": "29075099-982a-4d03-a457-cdf56f5987ea",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e037d574-fa72-489a-9af1-003ad03c63b5"
        },
        "item": {
          "id": "5d56c6ed-29ca-45ee-849b-7eef8b9ae0bd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d0f84060-f018-4ab2-a9a8-f39e4f9d2adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f869aaa-99b8-4881-8e80-69dbb091d9c7",
        "cursor": {
          "ref": "0a5ac4bd-5adf-40d7-a6b0-4f173ffffa2c",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "27859fdf-d089-4336-8d7d-13f9ccebafdb"
        },
        "item": {
          "id": "7f869aaa-99b8-4881-8e80-69dbb091d9c7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a9cb2cf8-a83e-4951-ba6a-9fa29c77c0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9f5620-044e-4631-9188-17c77064716e",
        "cursor": {
          "ref": "9f143019-2707-43a3-946e-cda58f846c05",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1c1f550e-5ae1-4531-8a46-e7bc6cd6b962"
        },
        "item": {
          "id": "ba9f5620-044e-4631-9188-17c77064716e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "61e78e23-5735-4657-8cde-40511024a17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7697756-c498-4d71-bd78-b24d4c7baa72",
        "cursor": {
          "ref": "880da49d-59d7-49ca-b694-a3c7de5cddc6",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a8ace124-207b-46e6-9b8f-c776492cc1b1"
        },
        "item": {
          "id": "b7697756-c498-4d71-bd78-b24d4c7baa72",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e879585d-f3c5-43f3-aefe-4bdc0f753518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a80af1-e531-4ed8-a756-796fc294a50a",
        "cursor": {
          "ref": "c28071d6-5c5a-4ff2-ac4a-0390893af595",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "70514a0b-4c30-491e-a0ab-b7f05da8e509"
        },
        "item": {
          "id": "76a80af1-e531-4ed8-a756-796fc294a50a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5196b9c2-2f67-44ce-be21-dcbe3c2feac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba71c04-ae3f-4993-8a4d-6d7d4ff71497",
        "cursor": {
          "ref": "5a1edc83-72e3-4988-9c64-c701914d33d2",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e16c529d-8d25-4f86-a310-3c59c6f9bd8a"
        },
        "item": {
          "id": "6ba71c04-ae3f-4993-8a4d-6d7d4ff71497",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cb2685d5-f588-485b-bfd1-66e738eeaa63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7357dd96-3648-4f5d-b5fe-b178a4dc6474",
        "cursor": {
          "ref": "f6a7a7e5-8933-49ec-b106-70f811a3e392",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "023ea885-6d52-4307-8396-3ec4fc7c64a4"
        },
        "item": {
          "id": "7357dd96-3648-4f5d-b5fe-b178a4dc6474",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "15b4902f-bcf6-47e2-a474-3a26b3b0cdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1123723b-deb4-42ae-aa75-059baa264b61",
        "cursor": {
          "ref": "381dd66b-0c7d-47c6-92c4-99436c50fde1",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "96d2669d-26ec-4d84-a1c6-8699bfae843d"
        },
        "item": {
          "id": "1123723b-deb4-42ae-aa75-059baa264b61",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7ed99513-fbf6-4a1b-a5e4-04fc5931fdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75634edf-30ba-48ba-bc82-d6050780dc95",
        "cursor": {
          "ref": "9cc7600c-496f-495b-b009-4381b26145e1",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5794216f-522f-448e-8452-d23f7b287d28"
        },
        "item": {
          "id": "75634edf-30ba-48ba-bc82-d6050780dc95",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8fc832ed-376c-4d3a-9bb0-eb13ba6f8ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260038b6-8e03-4be5-a171-3ed44e5d851f",
        "cursor": {
          "ref": "bdcae5f9-6716-4c5b-8a17-fd71425359e9",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "26da6eb1-2b3f-4629-9909-7e99a478bd69"
        },
        "item": {
          "id": "260038b6-8e03-4be5-a171-3ed44e5d851f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e7be51f8-b88a-4f51-8eec-428dfd612c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6655f1c-8719-47d5-8f0b-9b9e72245917",
        "cursor": {
          "ref": "202c638f-02da-401d-b747-05c7742089c7",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e2c5758e-1a12-40ce-b591-20478801dd11"
        },
        "item": {
          "id": "e6655f1c-8719-47d5-8f0b-9b9e72245917",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cb1da486-f7e4-4e37-aec8-289291a7e234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b030e9e-fec2-452e-9669-b297758e256b",
        "cursor": {
          "ref": "7bc0f0ab-bdc2-4b09-9077-a5f1880244b5",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2bbdddde-b005-4ffb-80c7-ceb5a3f8ad5b"
        },
        "item": {
          "id": "8b030e9e-fec2-452e-9669-b297758e256b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bffe343e-c71d-44ee-b935-630f8f3d1961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e7bda9-dee9-423f-b587-72159bec0663",
        "cursor": {
          "ref": "6a7531d9-2694-4bee-b4f3-d5cd5c7ec422",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9c3bd65c-3768-45ee-9c5c-625363ccd2ed"
        },
        "item": {
          "id": "d8e7bda9-dee9-423f-b587-72159bec0663",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "90c048af-7328-4b32-95da-392456b3f6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30e7e1b-ff47-4f73-9f08-151678e09c43",
        "cursor": {
          "ref": "4d908192-04f0-49f3-b16e-b062179365d0",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5577f80a-ac95-41c9-b2fd-e10c3a80ad70"
        },
        "item": {
          "id": "b30e7e1b-ff47-4f73-9f08-151678e09c43",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e7f6e3e4-050e-4f9d-bca3-ba090e227acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49602639-0fbc-4a9c-bee5-ab3e8f0a97b7",
        "cursor": {
          "ref": "64703cb5-c189-485d-b5cc-9d46ac8e8f52",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "84285ea1-2a2e-4c8d-9bbc-88e75fd481b7"
        },
        "item": {
          "id": "49602639-0fbc-4a9c-bee5-ab3e8f0a97b7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "505c3d9e-87e0-4194-aecb-8638cae92503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37e4a5b-f439-41ca-bf31-9a9164d71b5e",
        "cursor": {
          "ref": "c59f0630-4e6e-41bb-a933-5a3528e92bcc",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4e8714b2-b956-439e-8e68-26b5d7468133"
        },
        "item": {
          "id": "b37e4a5b-f439-41ca-bf31-9a9164d71b5e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c7544a7b-6f38-44d0-9db4-51cfee79894c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c199cec6-eac6-4910-9a93-8f3c635a87ef",
        "cursor": {
          "ref": "1329347b-fa66-49a4-aa29-9832bc6be04a",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d947114e-62e6-45ee-91e8-6eb380fde9af"
        },
        "item": {
          "id": "c199cec6-eac6-4910-9a93-8f3c635a87ef",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "40891db4-a55e-453d-9f47-3fd12a7d621f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc34b06-5d38-4ebd-b18b-bb27a40b7ad7",
        "cursor": {
          "ref": "417751d8-8f75-4094-8c4b-3920318dc851",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "417893d9-f386-488a-8eb3-3c762d41492e"
        },
        "item": {
          "id": "8bc34b06-5d38-4ebd-b18b-bb27a40b7ad7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "70ac8a79-b07f-42c3-ba9a-33da92c109bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8963a3e3-102f-4671-bb56-821406265210",
        "cursor": {
          "ref": "a5788337-cd13-46a8-b3f6-37601b57c6f9",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0f603fdc-e2fd-45d1-869f-a7ebfa7d62cf"
        },
        "item": {
          "id": "8963a3e3-102f-4671-bb56-821406265210",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2ab5739a-3602-4a16-be44-7f94468e4a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155df498-694d-460e-a9fd-ea51220633b4",
        "cursor": {
          "ref": "18439e29-1a8c-4ddd-a879-36d8b6bc0c1b",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "333be803-3a64-402f-a1b4-bb5bfe415d2d"
        },
        "item": {
          "id": "155df498-694d-460e-a9fd-ea51220633b4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0ab91243-e992-47b1-aac0-193f9932f64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08e6e69-9569-432c-a414-b9da1d76bc24",
        "cursor": {
          "ref": "45280f6c-36cf-4a53-900d-20f61d3ff458",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0a7283a9-c367-4bb4-967b-f8dee721d1da"
        },
        "item": {
          "id": "b08e6e69-9569-432c-a414-b9da1d76bc24",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6bf30368-649a-45b3-8875-3348e0045cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e743ba3-8474-4f27-9f7b-d910177b2759",
        "cursor": {
          "ref": "9d0ac3d4-ede3-430a-8349-dc07d9918e61",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "75da52ef-a119-4817-a1be-e825101a942a"
        },
        "item": {
          "id": "7e743ba3-8474-4f27-9f7b-d910177b2759",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d4583e9e-257e-4893-b065-ad67f6dec2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b491ea4-5d38-4b83-bd10-eb9746b0f447",
        "cursor": {
          "ref": "ead143f3-ca62-4382-bd75-44d4e0a7ce10",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e720ded6-4790-4b2c-bcdd-85936d42e31a"
        },
        "item": {
          "id": "8b491ea4-5d38-4b83-bd10-eb9746b0f447",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dd051d56-7077-4d71-8899-70b46baedeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7268ed96-3fc6-4029-a483-1f1022218a12",
        "cursor": {
          "ref": "4e367e9f-bd29-4c0b-8270-2c48ecf11c1d",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "eb2971e8-25fe-4874-8b16-dd03869e9f05"
        },
        "item": {
          "id": "7268ed96-3fc6-4029-a483-1f1022218a12",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6c304782-6141-4cd7-95c8-3223de53119a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b084af6-1dce-4da8-ba76-ab59e18e243d",
        "cursor": {
          "ref": "70f4f6f1-4224-478f-809d-773c256e1393",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "79d423e0-ac43-4e38-b6b2-8db63a2fc950"
        },
        "item": {
          "id": "8b084af6-1dce-4da8-ba76-ab59e18e243d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "11eb09dd-e174-45ad-a3de-fe7b321b8b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97522db-115c-485c-a48b-3d163965ac6f",
        "cursor": {
          "ref": "80eb5717-4eb8-4288-b766-9809ced2d86b",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6a00b83f-21d5-4f04-95d6-ee7d340d91a4"
        },
        "item": {
          "id": "b97522db-115c-485c-a48b-3d163965ac6f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9e331937-70c3-4f09-b466-69cf8265261d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f41559-a533-4d7e-ad7d-6e3b8c5d563e",
        "cursor": {
          "ref": "e278783c-6f30-44d8-840f-56b9903bc851",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4850e59c-f1c8-4832-ade2-0acae38c4a44"
        },
        "item": {
          "id": "06f41559-a533-4d7e-ad7d-6e3b8c5d563e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6b2b3d55-d991-4a05-90a4-f07e4a54dd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf8e81f-ad5a-47b1-988e-6e8e804c0edf",
        "cursor": {
          "ref": "bc34ae80-2533-416c-9f89-a0c21e898e0d",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7bd3b895-167d-449f-9ee9-d2cd147fe0f6"
        },
        "item": {
          "id": "adf8e81f-ad5a-47b1-988e-6e8e804c0edf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2867de99-413a-494a-a98e-3f589798ef4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ee0175-8af5-4fef-b530-59ae701e850c",
        "cursor": {
          "ref": "91a1edf9-eddb-4edd-ab42-33ca6fb96658",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "25bbc8ed-8fb8-4fe1-bc29-c323eebc71cb"
        },
        "item": {
          "id": "71ee0175-8af5-4fef-b530-59ae701e850c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "aaecdb43-8880-4e1a-93c4-35bec308f81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8defe189-3264-42a6-b522-05dfc7fd412c",
        "cursor": {
          "ref": "a1f1b04c-5c54-4c0d-a9ba-f37416aafe7c",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5a7a06cd-3630-4f58-9be3-df593d66fdbf"
        },
        "item": {
          "id": "8defe189-3264-42a6-b522-05dfc7fd412c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5ff708f4-32d8-4960-90fa-eddd40cb4584",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3ca5b5-ca14-40e2-bdb9-c12e41242e86",
        "cursor": {
          "ref": "347b0926-67d1-45d7-9060-0184e790c012",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d80ca009-a9b0-4f82-bb6e-aeda8fb15bd9"
        },
        "item": {
          "id": "2a3ca5b5-ca14-40e2-bdb9-c12e41242e86",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ef91e0ed-4df5-4b75-bd88-0d414e7362ed",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2bb6ae-107a-4ef4-b4ca-e579db128db4",
        "cursor": {
          "ref": "5728007d-2b56-4eff-ba15-56700f57f067",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0652ceb1-e1d7-4042-aff3-7ef857d6fcdb"
        },
        "item": {
          "id": "4a2bb6ae-107a-4ef4-b4ca-e579db128db4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ffeaada6-f6cc-4815-a4b0-96a84f80aa68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2bb6ae-107a-4ef4-b4ca-e579db128db4",
        "cursor": {
          "ref": "5728007d-2b56-4eff-ba15-56700f57f067",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0652ceb1-e1d7-4042-aff3-7ef857d6fcdb"
        },
        "item": {
          "id": "4a2bb6ae-107a-4ef4-b4ca-e579db128db4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ffeaada6-f6cc-4815-a4b0-96a84f80aa68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6817e7f3-65ac-423c-8c20-5207ba6ec336",
        "cursor": {
          "ref": "a38b3e0c-ac56-4825-bff2-9f18d2567777",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5a8f347e-a7e5-46e0-a3ad-64c240dcca47"
        },
        "item": {
          "id": "6817e7f3-65ac-423c-8c20-5207ba6ec336",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0663614a-a1b9-4b35-a135-b2636105a174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab1fc0d-613d-4ca1-addc-012a8f1dbceb",
        "cursor": {
          "ref": "c2fb1f24-2941-410e-8316-4f23aa058a1c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e2cedcdc-d804-4fd5-8f5d-e36f41272056"
        },
        "item": {
          "id": "fab1fc0d-613d-4ca1-addc-012a8f1dbceb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b759ec55-2bd2-4df7-b559-448f631ec98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d404c0bd-db78-41a9-b685-ff8f9d2d667e",
        "cursor": {
          "ref": "b9598052-7770-43ff-92c1-77e2ae09e17e",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9050ab03-baac-4f5e-b7c9-baeff1fe34b4"
        },
        "item": {
          "id": "d404c0bd-db78-41a9-b685-ff8f9d2d667e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "60e01846-94db-4129-8e4a-fe2aa6912e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca29b11-5e56-4fe8-9882-7fa4c8c15b88",
        "cursor": {
          "ref": "a4176512-5ccb-4025-a75c-5c3e928e0b47",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "604328d6-41a9-405b-912a-4dc158b38ff8"
        },
        "item": {
          "id": "2ca29b11-5e56-4fe8-9882-7fa4c8c15b88",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9824e141-2699-40f8-a782-004fa22a9a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd9d64b-423f-4649-9848-b2e75180037c",
        "cursor": {
          "ref": "1dc6798e-097c-4447-a0fe-d236e9bb1332",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "72f46cb7-66c7-4906-8550-4d28e1156f8f"
        },
        "item": {
          "id": "2cd9d64b-423f-4649-9848-b2e75180037c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "68d680be-3482-4041-b735-62e225a3fec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bafcf3-c74c-47d9-8996-a708c0698018",
        "cursor": {
          "ref": "aa3511b2-ee0d-4ed9-bc4a-8ff30b8cc2cc",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4b2d4291-f395-4ce2-8210-638c1ca98334"
        },
        "item": {
          "id": "55bafcf3-c74c-47d9-8996-a708c0698018",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "21bf9ec1-0d1b-422d-a24b-08844654277b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1fd481-a39c-40bc-ba32-443419539874",
        "cursor": {
          "ref": "46ad104f-ff11-47ca-a227-2f1c49da03ac",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3f1a60b6-14b0-4b3f-b426-852cbbd8f9af"
        },
        "item": {
          "id": "8a1fd481-a39c-40bc-ba32-443419539874",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "49443805-5d8a-4a1c-a7ce-f6415980c0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fa0d26-82f0-492b-bc54-7f814c57be54",
        "cursor": {
          "ref": "0f9cc689-37a6-4242-9be9-3fdef99678f9",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8e0df20a-b7e7-4453-9477-efe77ea71cc8"
        },
        "item": {
          "id": "51fa0d26-82f0-492b-bc54-7f814c57be54",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4e7ebc2d-87f6-488e-8277-bee709584031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b297849-358d-4797-85b8-830bedd98616",
        "cursor": {
          "ref": "1451cbb3-6784-41a4-bea0-33f799ea8cdb",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "59562eae-f1d0-46bb-bd26-99f7ef9d8dad"
        },
        "item": {
          "id": "6b297849-358d-4797-85b8-830bedd98616",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "23eee586-b5b4-404b-934f-206313b00321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4f05c9-4243-4b90-a00b-181fbe0c3e47",
        "cursor": {
          "ref": "dafb8f1a-4628-4f14-8633-d19c624b7959",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "67cd13bb-df19-4435-ab64-991315568a21"
        },
        "item": {
          "id": "1d4f05c9-4243-4b90-a00b-181fbe0c3e47",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "94f0f8d5-b171-4055-9552-75f9f297b641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8880277e-ad8a-486b-9fa4-6f82ceaf0c0d",
        "cursor": {
          "ref": "0d66cddf-6912-4013-9a98-85ff5552f6ce",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8611f465-db71-47ad-beb3-25f56d37589c"
        },
        "item": {
          "id": "8880277e-ad8a-486b-9fa4-6f82ceaf0c0d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7cae23b2-058c-4cb1-b567-247d10ca6ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5b41eb-e9ad-4981-971c-e618683b150d",
        "cursor": {
          "ref": "d415fcf3-1349-46d4-a5d3-fb9fe0349910",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ba15f520-01f5-42bf-9d1a-3763af0b96cb"
        },
        "item": {
          "id": "ff5b41eb-e9ad-4981-971c-e618683b150d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1a4e046e-fd07-4f2e-a2df-0aeffd81ea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f6c48a-cfd5-41e8-a9c0-e84e3dc060d7",
        "cursor": {
          "ref": "ce8ddddb-940f-4f50-821e-ec051f94e56e",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3a16156a-e980-4d74-ac10-7439d0262d9d"
        },
        "item": {
          "id": "04f6c48a-cfd5-41e8-a9c0-e84e3dc060d7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cb57685d-cfcb-4b3b-a08a-8ef019df365d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08cde6b-eb8c-4158-97b8-e028d641254b",
        "cursor": {
          "ref": "7ec82fa5-1e4b-4748-8787-d8aafc62f14e",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a3bd5771-2d2f-4e6b-b772-991e506c8656"
        },
        "item": {
          "id": "e08cde6b-eb8c-4158-97b8-e028d641254b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a841443e-3335-4685-82c6-7b0739e756fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95146d45-0e72-46d4-9258-e3d352d092de",
        "cursor": {
          "ref": "1e139243-dd06-4c2b-a9c7-80c454adbb7a",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a3ba2f12-9af4-4d0e-b76c-36bc5e5875d9"
        },
        "item": {
          "id": "95146d45-0e72-46d4-9258-e3d352d092de",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8d399f2e-afb6-4a57-a3eb-f31a99ad6bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27d68b0-241a-4d43-99a0-62e94f2f1284",
        "cursor": {
          "ref": "aa2c5ddb-d162-482a-ad4b-2a7186c5cc79",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "05337f45-be15-4d6a-aca4-dec8cdc71d75"
        },
        "item": {
          "id": "a27d68b0-241a-4d43-99a0-62e94f2f1284",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fef975d7-08bb-456a-b386-3898e3796d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cf6604-f4e5-4167-87eb-5585022194b5",
        "cursor": {
          "ref": "d17369dd-0303-463d-b20a-b1ffb942862d",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "019621d5-3c55-4569-9f66-f285d707f01e"
        },
        "item": {
          "id": "24cf6604-f4e5-4167-87eb-5585022194b5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "009dc988-1083-48c1-94af-830d44f554e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed02c72-9965-4803-a229-c4214d44f9f0",
        "cursor": {
          "ref": "2983bd8c-3175-4a50-af0a-0943903ad8d6",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a999e195-0628-4f20-bb71-820f77440e0b"
        },
        "item": {
          "id": "5ed02c72-9965-4803-a229-c4214d44f9f0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e7d5c4aa-e9d6-4d3b-ba8d-c2156fd982d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68518043-5b34-49ea-9c2c-c9a6d409108b",
        "cursor": {
          "ref": "0894bf24-46ef-4e31-bd47-ca563ac98226",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d4cff323-90cc-4b8a-b047-ab20df6e267e"
        },
        "item": {
          "id": "68518043-5b34-49ea-9c2c-c9a6d409108b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "528494fb-493c-4df5-8f4a-41081bd0f3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcda87e-d438-440a-9250-a00c672aacb5",
        "cursor": {
          "ref": "9d8e226c-386d-44b5-8863-a675f08dbd4e",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "caad9cc0-16b2-46f9-b80d-4845bf9bc5ce"
        },
        "item": {
          "id": "5dcda87e-d438-440a-9250-a00c672aacb5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "af31f20a-7020-4e43-9f13-6368849f2ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53247763-bb98-467e-9cad-8dc82dcfcc2c",
        "cursor": {
          "ref": "598cb3ed-01cb-42e7-a504-bc40b8ff6f41",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1039aac0-23f2-4e42-8fe5-817a8171392c"
        },
        "item": {
          "id": "53247763-bb98-467e-9cad-8dc82dcfcc2c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fcf2f741-8e34-42a9-af14-2d78e0326bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ba7762-dc62-4a22-8087-504d89c24df4",
        "cursor": {
          "ref": "242b3aa7-d3b3-4deb-b8be-50e240093a81",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b156b20b-359f-450d-876f-28b987f797ca"
        },
        "item": {
          "id": "93ba7762-dc62-4a22-8087-504d89c24df4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4f72c45f-e004-41bc-b8e5-28207d16f7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ae0abb-1b9c-4939-8532-7b8b88e178ce",
        "cursor": {
          "ref": "d8a33ef5-a925-4317-bfb2-19c7c0f5a8fd",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d40f645b-8055-497e-970c-efe315ed22ad"
        },
        "item": {
          "id": "21ae0abb-1b9c-4939-8532-7b8b88e178ce",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a780da7a-dd5a-4357-8a9f-b2a1ce204d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178f8200-4e99-4362-bd97-b565618000e1",
        "cursor": {
          "ref": "d941a8be-6362-444c-97e2-ff73daa8fcbf",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a3377ca7-db3d-4244-a36e-8d56b36abb7e"
        },
        "item": {
          "id": "178f8200-4e99-4362-bd97-b565618000e1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3b06b7f5-05a3-436b-8639-fccff3779944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e386785-6c7e-4366-870b-b106cec3fb73",
        "cursor": {
          "ref": "648d6013-dc16-427d-ad47-d0a99ac9048a",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0d88df97-eaaf-4101-b504-384ce5da2e44"
        },
        "item": {
          "id": "8e386785-6c7e-4366-870b-b106cec3fb73",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d8ff5cef-c1d3-4b96-b778-de6e18b4a6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271bb19f-68ba-482a-8cad-6239c8ba9e3d",
        "cursor": {
          "ref": "e9b0af76-6561-4ac7-a235-997b351d275a",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cc22a119-5e96-48c4-bc82-14dfa96ce065"
        },
        "item": {
          "id": "271bb19f-68ba-482a-8cad-6239c8ba9e3d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "15de1cfc-537b-4612-a323-0a95b4ab2c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77901f7d-a504-4849-b10f-39fbf18531c1",
        "cursor": {
          "ref": "bf438a30-9da1-4f3d-a364-e0839538b110",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9d9087d5-e548-4ff5-8d19-739cd8a16f78"
        },
        "item": {
          "id": "77901f7d-a504-4849-b10f-39fbf18531c1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2bbe14bc-8fe2-44b6-8c9e-7e211677b4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1900596f-077e-4e79-933f-b712debfba68",
        "cursor": {
          "ref": "2c06854f-51ce-4b86-8b02-f752fd2f7cb0",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b63e83f3-065a-4ad6-8fa4-06f351f008ba"
        },
        "item": {
          "id": "1900596f-077e-4e79-933f-b712debfba68",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "40aa18c2-5585-45ab-8c58-c08a99474606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5bad44-2a5a-4486-95fa-49137e6502a7",
        "cursor": {
          "ref": "7332060c-f4a3-4767-91d9-f0ef255dd74d",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2e4e883f-5113-4b24-8eac-02788b13930c"
        },
        "item": {
          "id": "0e5bad44-2a5a-4486-95fa-49137e6502a7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "03bed82d-d35a-4561-b4b2-56188f99c3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e271ae3-5017-41df-9423-26d8089382e4",
        "cursor": {
          "ref": "972f833f-676b-4bcb-a2bc-90817282378a",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "eef4c465-2355-401a-a3df-f5519a559121"
        },
        "item": {
          "id": "2e271ae3-5017-41df-9423-26d8089382e4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2d2565d1-4387-4cde-b745-012f7147005e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927f5379-858c-408d-ab33-e219e676771f",
        "cursor": {
          "ref": "37530a5c-ae79-4dd3-8c1b-723c49c30f48",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d252311d-46a5-4c7f-9a06-3c42aed1abed"
        },
        "item": {
          "id": "927f5379-858c-408d-ab33-e219e676771f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fd595d98-2dd0-4ecf-9854-d40d5458a8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9adb9d2-e5d3-4ad2-873f-7817dd569393",
        "cursor": {
          "ref": "fc7a41bf-d8f0-4efa-9e9d-92bf7cccffbf",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dae6adc8-7a58-4563-a0ae-84892fa1bc08"
        },
        "item": {
          "id": "b9adb9d2-e5d3-4ad2-873f-7817dd569393",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f85f598d-132d-491b-b4c8-12f99e8dd94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b55e632-1174-49ca-b803-8a7c6b09a3d7",
        "cursor": {
          "ref": "da957a45-fb0a-4593-b751-4b1b52a81412",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3f7ae456-a544-4904-ac85-307f8d3c8402"
        },
        "item": {
          "id": "9b55e632-1174-49ca-b803-8a7c6b09a3d7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "567e020f-f23c-4cef-ad06-5b014dbe5140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7327ee2b-f6be-41cc-946d-49ebe9330f41",
        "cursor": {
          "ref": "89589bce-8c52-4c77-ae9e-141e8868a798",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ebcc1607-d8b4-43ce-9b12-30c9917cae24"
        },
        "item": {
          "id": "7327ee2b-f6be-41cc-946d-49ebe9330f41",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "137da1d0-45bd-482d-9604-d4323d660db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da271b0-8d15-4f08-858f-fac2beec0d66",
        "cursor": {
          "ref": "92949dd8-b40f-4685-9d01-eba3821673a2",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "11ca51c3-af59-46c4-8515-d30dacd233c8"
        },
        "item": {
          "id": "5da271b0-8d15-4f08-858f-fac2beec0d66",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0f3b9d39-74a0-4f1f-b4e1-9701db9911c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef507e90-2de1-46d0-9e0b-9acb7bc9c455",
        "cursor": {
          "ref": "06e8fb86-2dcf-4526-b708-82a9ec3719d7",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "07d27745-d6ac-44c1-af87-c4ca5cceff92"
        },
        "item": {
          "id": "ef507e90-2de1-46d0-9e0b-9acb7bc9c455",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ae174e5b-3dd2-4f72-b2bc-5fe63fdb8c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2638c0-7bb1-41ab-9116-33cd1d00dd0d",
        "cursor": {
          "ref": "e53fa051-aa71-4cde-8ec6-c87f1f9cecee",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f16519de-e7bd-4562-8526-5259911465e1"
        },
        "item": {
          "id": "4c2638c0-7bb1-41ab-9116-33cd1d00dd0d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f45c6f51-2da7-43aa-94de-76cbeade66b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9f968a-630c-4c3e-a2f6-bc5b38641456",
        "cursor": {
          "ref": "a92904f4-bc9d-4454-9ff5-330d51f9ae45",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ed8a99e5-5a00-4159-8769-f297af9846d6"
        },
        "item": {
          "id": "3b9f968a-630c-4c3e-a2f6-bc5b38641456",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "17040b58-8b07-4d31-952e-efbeb4bcf8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79337f3e-4cd0-4d8f-baea-100218318bfd",
        "cursor": {
          "ref": "ff2182d7-c710-4f52-b8c0-51163c06ff3f",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ca93a694-d315-4a4e-9e55-fcba4f72c946"
        },
        "item": {
          "id": "79337f3e-4cd0-4d8f-baea-100218318bfd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9d8eb228-0910-4fa4-a437-9de3b4738091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ab0f71-76e8-429c-9a5d-5f27e61e0f7f",
        "cursor": {
          "ref": "5583f861-216d-4e2a-81af-bcfa950c6221",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "927dab07-a7eb-4313-a6d8-f67f9bf7576c"
        },
        "item": {
          "id": "67ab0f71-76e8-429c-9a5d-5f27e61e0f7f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0fb734f0-7df2-4aa7-a5d6-81907f43367c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd831acf-dc00-4ddd-a4e1-555d7453d1d9",
        "cursor": {
          "ref": "054141d8-d1fc-4550-b05c-bfc81651982e",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "434b392d-ede5-4631-87eb-4684c741847f"
        },
        "item": {
          "id": "fd831acf-dc00-4ddd-a4e1-555d7453d1d9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b9671ccf-ce8b-40b2-9303-e00ad7dbd5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72aff2e3-6d08-451d-bd89-ee685fb20f2d",
        "cursor": {
          "ref": "5c4f2086-f58f-42b6-bc48-96c17ac8f3f0",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "077de548-64f0-4166-842f-0b931c685681"
        },
        "item": {
          "id": "72aff2e3-6d08-451d-bd89-ee685fb20f2d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d89a14ab-89a1-4aed-8159-ea8b707ba4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d2f26d-a1e2-4ac3-ae19-88a9b76eea45",
        "cursor": {
          "ref": "ddee6260-cd24-426b-8362-86f63b74e6e7",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "04a1892b-784c-4cf9-9dbf-e0c33271ab54"
        },
        "item": {
          "id": "d5d2f26d-a1e2-4ac3-ae19-88a9b76eea45",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "446e2199-5c75-4f08-a4b1-0ba3acd2c1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4318c4d-e076-4fc7-85f5-f30ac071dc9a",
        "cursor": {
          "ref": "ccf189a0-8c74-4321-b6fb-1b1751402487",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c3f96790-8b5b-4093-bb03-d300c611fe92"
        },
        "item": {
          "id": "a4318c4d-e076-4fc7-85f5-f30ac071dc9a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "924bf367-a32d-4ef9-8cfe-15b34b62e9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4eaffa-d5f8-463a-a394-3e7f57c8f97e",
        "cursor": {
          "ref": "b338e521-be24-4e1a-964d-48e2f779b530",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e2edd235-6539-4a5b-8512-84b5a8878fa4"
        },
        "item": {
          "id": "ca4eaffa-d5f8-463a-a394-3e7f57c8f97e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "14352473-3c97-4224-ab2d-00085c28c211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f4c668-f501-45de-8d08-f29fc1b3da23",
        "cursor": {
          "ref": "eb00d828-f2c0-4b09-a451-84ab03d0f7cf",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7a843513-88f9-4d79-aa1a-6d02d54229cc"
        },
        "item": {
          "id": "56f4c668-f501-45de-8d08-f29fc1b3da23",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "10ab05c4-9dab-4665-915c-48dd6dc88e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bfb4f5-9152-42fd-9672-3eb0f857b768",
        "cursor": {
          "ref": "66ac895e-315b-486f-a8cf-5ad6288895ca",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "684e665d-d037-4d31-b258-eef8295fd0e7"
        },
        "item": {
          "id": "05bfb4f5-9152-42fd-9672-3eb0f857b768",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "872af372-1e74-49cb-a272-03802f0a3d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d899a53-9b48-4cde-9fcd-301c54402c3b",
        "cursor": {
          "ref": "6dfaff5c-5afb-48db-b91b-06f92c03b90b",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "464e2615-c1bc-406d-a3d5-67be89b5cbd9"
        },
        "item": {
          "id": "8d899a53-9b48-4cde-9fcd-301c54402c3b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "10d47b5f-3a45-497f-8d90-57133d64dcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53784a92-f1e1-4928-8043-662838b12a0d",
        "cursor": {
          "ref": "1a3957a8-9dde-4a38-827c-00b2dcb5af7e",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c4dbd853-c8ee-4447-a3fb-db49099a553e"
        },
        "item": {
          "id": "53784a92-f1e1-4928-8043-662838b12a0d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1f49fac3-d750-4aee-95ed-aa3b1ef0f812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b73c6fe-347f-41e3-9fe9-c03827b7536f",
        "cursor": {
          "ref": "25dd8269-835a-4c06-8519-77da45285d83",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "60999b42-e9b0-4775-815e-c14f4fed1733"
        },
        "item": {
          "id": "5b73c6fe-347f-41e3-9fe9-c03827b7536f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dabb23d4-3d00-43c8-8459-2007dc623878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5025e5cc-1085-4685-b4e5-b68b2b66316f",
        "cursor": {
          "ref": "75e10987-9cf5-48b7-ad42-a1427e272220",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fe96aff6-aad7-4137-a32f-0bbc07ddb18a"
        },
        "item": {
          "id": "5025e5cc-1085-4685-b4e5-b68b2b66316f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e76c260e-bcf9-4841-971e-9a1a94424c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a450373e-c017-4180-a59d-c2d19e6c1168",
        "cursor": {
          "ref": "3c5c4284-4b53-48c2-8b22-7bfc332f409d",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d13caa01-ffd2-4181-b6a1-6556e92d863e"
        },
        "item": {
          "id": "a450373e-c017-4180-a59d-c2d19e6c1168",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "85e4d661-6388-415a-a540-691413312665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89e9bcc-5761-4d18-bfa0-83ccb0f0f859",
        "cursor": {
          "ref": "0365e41e-83ab-4b10-a414-270ff195f2d6",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "62faae59-3244-4197-ac8a-d24809f4c1fb"
        },
        "item": {
          "id": "c89e9bcc-5761-4d18-bfa0-83ccb0f0f859",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "89cf3fca-a331-4ccd-9704-c2444891d0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5abf1b-95d5-4955-8323-f2f915731400",
        "cursor": {
          "ref": "15fbcc45-c9a6-4dad-8ebc-ad7de6b720e8",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "66a2170b-e557-4146-a47d-f6841d6b5a4e"
        },
        "item": {
          "id": "8e5abf1b-95d5-4955-8323-f2f915731400",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b7905ed9-56ee-4edd-b0ba-9803d96760d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f94adb-bd08-4a8f-b698-d4babab78dd7",
        "cursor": {
          "ref": "95f24f48-e60c-4063-b417-778179a6bbf3",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6a9803b1-e6e2-422c-874b-1c37bc145817"
        },
        "item": {
          "id": "38f94adb-bd08-4a8f-b698-d4babab78dd7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "06c1bd68-de07-4980-9014-751edc3f6526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ea0f74-2424-4e69-a45b-1adb57ffdc5f",
        "cursor": {
          "ref": "e609acb2-cf4d-430c-810b-d303694a92e9",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9be08482-d9c3-4a2f-9192-1ef7f7be64ee"
        },
        "item": {
          "id": "34ea0f74-2424-4e69-a45b-1adb57ffdc5f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7170539c-5922-4b20-8393-a84fb2cac0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c4b334-b06c-486c-8f48-56b8772443f0",
        "cursor": {
          "ref": "9d9098dd-0f9d-4759-9d0e-2e42162adf43",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3a33346c-5e6a-494e-ad31-7c31e9bf1b26"
        },
        "item": {
          "id": "b8c4b334-b06c-486c-8f48-56b8772443f0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cb73b4b6-c7b1-4102-b48e-05c46325802e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff22b14c-757c-4cb5-af3a-7635cda31558",
        "cursor": {
          "ref": "f1a94687-4314-4926-9715-11c6a4f9be27",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9139518c-c9fd-41f5-ac29-7ebc9c550480"
        },
        "item": {
          "id": "ff22b14c-757c-4cb5-af3a-7635cda31558",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c7d38728-ddd4-4379-855c-c30a05bf489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b898d8f-d5f8-486b-834e-663cea4a55f4",
        "cursor": {
          "ref": "a5ebd833-7abe-4b8b-bb01-197d6ef9f762",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "77abfb4b-c8c6-4266-9417-31687a132fb8"
        },
        "item": {
          "id": "1b898d8f-d5f8-486b-834e-663cea4a55f4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b792c82c-18f8-4e8c-9bb4-0d9d0befba5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890bc78d-69f9-4e76-836d-6f049d31b91f",
        "cursor": {
          "ref": "da313c0e-e2a0-4d8a-8fb4-caf7971c5eae",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "01e2dc28-4f3d-4bc5-9978-fd5c45439db3"
        },
        "item": {
          "id": "890bc78d-69f9-4e76-836d-6f049d31b91f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7147eff1-2b62-4267-b80f-7a1febea5e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2213770b-7af1-4edb-a08e-cf724454270c",
        "cursor": {
          "ref": "796513e0-81bb-47e7-87f8-b78c375f7fe3",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "be34d75c-2e0b-4535-91ba-c51b531e1a63"
        },
        "item": {
          "id": "2213770b-7af1-4edb-a08e-cf724454270c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "051dd8d4-9c03-44e5-ba1b-f3cc69a4eab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06015fea-9e52-48b7-80a8-ec0180c87b7a",
        "cursor": {
          "ref": "5f675a55-17fd-4388-a9b1-f8662a7fb04e",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d6f061f6-0397-4a52-b57c-689b3e26129e"
        },
        "item": {
          "id": "06015fea-9e52-48b7-80a8-ec0180c87b7a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "848cb418-90a7-4dee-8bf9-c6469da01f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550c759b-9ebf-423e-bd6c-81a1889cd2fc",
        "cursor": {
          "ref": "83f357e3-7317-45ea-ab62-d917404f67ef",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "775b7a30-4c80-42dd-9495-113e82dc9866"
        },
        "item": {
          "id": "550c759b-9ebf-423e-bd6c-81a1889cd2fc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "40c0fd7e-e43f-4987-9877-13e62cff09f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149b90c4-8932-4972-bddc-2b3ee6cb2e17",
        "cursor": {
          "ref": "1a68e2ef-5d04-439a-a199-a7a1b80eb77d",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2be4ecd9-af53-4339-9f12-23f1337b8d58"
        },
        "item": {
          "id": "149b90c4-8932-4972-bddc-2b3ee6cb2e17",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a81843ca-35e8-4870-a75c-2d6a30f8aa7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adc7b9f-211c-43e0-9d8b-2236c0dece12",
        "cursor": {
          "ref": "0035c1de-ac00-40b3-b20b-f5add3862595",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "12838b8b-4651-4aec-a7c9-f779595b4606"
        },
        "item": {
          "id": "7adc7b9f-211c-43e0-9d8b-2236c0dece12",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "872f31ff-5b30-4b25-be2e-a6378a08d1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88e55d2-3765-4f91-8350-d1918f695067",
        "cursor": {
          "ref": "bdc4625c-c2bf-444b-8bfc-2715981fb3e3",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a6a60faf-cd94-4f78-ac8e-7cea25cf4049"
        },
        "item": {
          "id": "e88e55d2-3765-4f91-8350-d1918f695067",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6f6c9bf0-d06d-4b7e-908a-b67e52d1465b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6382b381-901f-47ce-8608-3160d031b5a7",
        "cursor": {
          "ref": "107ee3c8-8fef-4fb3-ae85-df19d1fc8e24",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a5cda07a-6462-458f-88df-dc5daa6d0969"
        },
        "item": {
          "id": "6382b381-901f-47ce-8608-3160d031b5a7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "88bff634-ec41-48a5-928c-b60481edee60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d666519b-41f7-47bf-a929-2763c3a53d23",
        "cursor": {
          "ref": "68cffe76-b582-42b1-9d45-25e12730935e",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7f5fc8b7-0ca5-4b4f-afab-2922c6bb8312"
        },
        "item": {
          "id": "d666519b-41f7-47bf-a929-2763c3a53d23",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "034e8b9f-265c-4916-b415-62ce753f8b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645b9dd5-6257-471b-8f26-94bb5734c899",
        "cursor": {
          "ref": "10c4129c-8917-416c-8f69-649a5b7891f9",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "dca0aafb-d6a5-463d-9316-8d36a890b263"
        },
        "item": {
          "id": "645b9dd5-6257-471b-8f26-94bb5734c899",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f6f95e36-1142-40bd-a11d-8761cd9c34e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9b9daf-f7cc-47a0-bcaf-9685c52f5d1c",
        "cursor": {
          "ref": "63d08039-5cf5-435d-ab62-a8650df854c1",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4b997af2-9e9e-4983-ac31-fddeab2c0bdc"
        },
        "item": {
          "id": "8d9b9daf-f7cc-47a0-bcaf-9685c52f5d1c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e005cbc0-a07b-4ca2-9838-c39bd6d99931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682d5555-5ead-486f-8d04-c919fd2d8492",
        "cursor": {
          "ref": "78250ab0-24c8-4be0-9154-33df2502373f",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fdac340d-8fab-4cc8-97e8-61db8132daf4"
        },
        "item": {
          "id": "682d5555-5ead-486f-8d04-c919fd2d8492",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "25ccb623-a554-4b2b-9dd7-6788c083a15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60a3047-66d8-4c1b-826b-86525158a834",
        "cursor": {
          "ref": "39fceda3-04a8-44b4-be48-de5131df87d6",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "63b73519-aec8-4bed-82de-c5e5fbb69650"
        },
        "item": {
          "id": "f60a3047-66d8-4c1b-826b-86525158a834",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "265ef4b1-61f8-4b5d-afa5-6cc2d446b669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f21a40d-0de8-41b8-842e-0da29b6cfd46",
        "cursor": {
          "ref": "001dc7b0-ba1b-4c03-bf7c-546c0dc6ae46",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3dbb6d65-cc82-4631-8fd4-620c97cb7e0e"
        },
        "item": {
          "id": "5f21a40d-0de8-41b8-842e-0da29b6cfd46",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "37f4d46f-3fdc-4aae-a9d3-ebc128f118bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4e537a-80be-434b-a85d-fb4267121eab",
        "cursor": {
          "ref": "19dfa0c6-c3f2-404b-82ae-ee3fa1349fc2",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9450eeab-f857-4b49-8330-43ef74fc7458"
        },
        "item": {
          "id": "5b4e537a-80be-434b-a85d-fb4267121eab",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3b3f850e-ce05-49da-8760-908384d609a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2116125c-c802-4660-ba23-1d431f299e87",
        "cursor": {
          "ref": "12da0b75-553a-4afe-94a9-ad71aebd0fdc",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "97f7ebfe-13b4-4bad-bdd4-f032d727ae89"
        },
        "item": {
          "id": "2116125c-c802-4660-ba23-1d431f299e87",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cd3a7988-86f9-42f5-a171-0bc980422469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5d6d00-2aa5-44c6-8f66-5c2953c555fb",
        "cursor": {
          "ref": "3cc79c40-0da0-4136-93be-83d604bbc96a",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "34e3c3d6-1b0b-4870-83af-57ae20a036b8"
        },
        "item": {
          "id": "fe5d6d00-2aa5-44c6-8f66-5c2953c555fb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e67ea61e-f9d6-444c-b224-cf39b7887923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f457fceb-5a9d-402a-841f-e5b7c769ea89",
        "cursor": {
          "ref": "df7752ed-fc3c-45ed-bf55-b3289b9134ce",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "75774e3f-7184-4eff-97be-737b36dacd5d"
        },
        "item": {
          "id": "f457fceb-5a9d-402a-841f-e5b7c769ea89",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2468fe53-8835-4111-9993-5c69d67d5489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ebc597-8c0b-42d1-8ec9-64c22875e100",
        "cursor": {
          "ref": "36ea4007-9b54-429b-8f88-f9a30fcb10c0",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "67e81c90-d919-4e5e-a5ad-ecfae448aa72"
        },
        "item": {
          "id": "24ebc597-8c0b-42d1-8ec9-64c22875e100",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4f6c5c39-450f-4340-9a4b-88c408e87748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89e1c51-e75e-450b-9705-7cf34dbd3407",
        "cursor": {
          "ref": "8486ec32-5da8-448b-ac3b-144bc8d35b45",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8e94b631-95ac-47c3-96a1-19e5f6d4790c"
        },
        "item": {
          "id": "f89e1c51-e75e-450b-9705-7cf34dbd3407",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a1df10a3-8f0c-4c4d-9631-d89716be3f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3f7aac-1653-48d2-87be-b23db01bc84d",
        "cursor": {
          "ref": "2fcaf4e8-29f7-40f8-abaf-1856a7741426",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "081314b1-8009-4078-8907-f9273158a60f"
        },
        "item": {
          "id": "ee3f7aac-1653-48d2-87be-b23db01bc84d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "917eedfa-632d-49ab-88af-fbe87f8487d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d17008-5d0a-4a38-ade0-b8cb5414649b",
        "cursor": {
          "ref": "71d15594-3de5-4339-b2d5-8686b88d1bc6",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2c64cce3-9f7f-429f-8397-6f344c61f8a3"
        },
        "item": {
          "id": "16d17008-5d0a-4a38-ade0-b8cb5414649b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "951de663-7166-4eba-bcdc-fe829731c195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970e767a-d1ec-47db-b6d1-3c19120f5b3f",
        "cursor": {
          "ref": "473be0ce-49f9-4ea1-b774-9ea0580f7278",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9b79ea02-55c1-4095-af93-46d00caf4942"
        },
        "item": {
          "id": "970e767a-d1ec-47db-b6d1-3c19120f5b3f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d4b127dc-d3ce-4b5d-9a0e-48287d0cdbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6210fc-68c3-459a-83d9-750ab588b245",
        "cursor": {
          "ref": "55b6802a-579f-466e-9566-e19610673ec4",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b7980f8b-4659-4073-8128-da52b126edb1"
        },
        "item": {
          "id": "9e6210fc-68c3-459a-83d9-750ab588b245",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "22f63f07-e6b9-42d0-9a90-eba10a131c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7e4363-e7a0-4bde-b796-2a42cf553b2a",
        "cursor": {
          "ref": "6ea0db62-cdbf-455e-995d-77ad7ac7353e",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "88fd5576-05b1-4916-8298-cf785a42a383"
        },
        "item": {
          "id": "3c7e4363-e7a0-4bde-b796-2a42cf553b2a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bdefabd5-2418-4368-aa72-604fb042e1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00038a06-13c0-478a-bade-9507aa8e3c68",
        "cursor": {
          "ref": "ae232d8f-a721-4420-a7d2-f1074a85b62b",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e5c28650-759e-494d-920b-54deaa76547a"
        },
        "item": {
          "id": "00038a06-13c0-478a-bade-9507aa8e3c68",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cf1ba716-c6fc-4e7c-b577-8c2cb82285db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af66c67-2a2e-4315-a0ad-a68dcc52c581",
        "cursor": {
          "ref": "a0fc13c5-c555-451a-bb0e-e32f9831bed8",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f488a5b3-ebdf-49f5-9814-cd16b1c07de0"
        },
        "item": {
          "id": "0af66c67-2a2e-4315-a0ad-a68dcc52c581",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "71cc0bd0-ccb1-4d77-8453-5434811bb164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc8fb15-1c1a-4633-818b-ac10318c5794",
        "cursor": {
          "ref": "18a85519-3279-4f07-aa2f-d081a2b145bb",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fb23f9a0-93be-410f-a70d-2ca4606eb908"
        },
        "item": {
          "id": "4bc8fb15-1c1a-4633-818b-ac10318c5794",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0a30b6e5-5098-4d5f-8e04-517f5dba067c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4089f32d-564b-4051-aac4-828c4eb6bb90",
        "cursor": {
          "ref": "d2a6ef8c-d481-42e0-ba06-b889fe64907a",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0514e240-73ca-4a9b-8238-f8dd2eba86d0"
        },
        "item": {
          "id": "4089f32d-564b-4051-aac4-828c4eb6bb90",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "32613ce2-e3a2-4b94-b427-83fff9164ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e2609e-b150-44fa-8a5a-a154ead55ea2",
        "cursor": {
          "ref": "057e55df-5a06-427d-9a36-1590620f9e78",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "03abd946-b11e-4408-bbcf-d2b197207ead"
        },
        "item": {
          "id": "10e2609e-b150-44fa-8a5a-a154ead55ea2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b4a8c12d-43d6-4957-b1b8-f69e32f943f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9eb7887-5851-490a-bd38-7ca103d52585",
        "cursor": {
          "ref": "4628b461-2ba5-467a-89d6-7e7ad60fbea0",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "96e40ea3-ab48-491c-9443-4cee77b61dee"
        },
        "item": {
          "id": "c9eb7887-5851-490a-bd38-7ca103d52585",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0f794c52-86cc-4221-bb65-3e53a019f2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f832a7e1-89e0-41cc-b9d9-4b2de5244379",
        "cursor": {
          "ref": "8847f95c-305c-4088-8ebb-95dcdb8f2d2c",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9f41fa58-f0ee-41f0-89de-3847223ef3e4"
        },
        "item": {
          "id": "f832a7e1-89e0-41cc-b9d9-4b2de5244379",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "09162eb5-d330-4a55-be65-2ddecac949b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b241a5-2182-41c6-a2a0-9eb1fdd1a2d9",
        "cursor": {
          "ref": "05418bb6-db76-4b44-8e6f-418f53508525",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "876aadaa-faf0-472f-b4e0-688fe3496d33"
        },
        "item": {
          "id": "14b241a5-2182-41c6-a2a0-9eb1fdd1a2d9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "225452cb-9866-4a59-ba5e-b0df7bcd83eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1487b6-8c65-4437-9e5f-1d968b164971",
        "cursor": {
          "ref": "803811ed-b50c-410f-94a8-3445e332cd68",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0341189d-2140-493b-9e53-5460ea0e1a48"
        },
        "item": {
          "id": "0a1487b6-8c65-4437-9e5f-1d968b164971",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b07c0d35-dfe0-4b9e-a4fa-dd8decd5b41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b55accc-d811-4caa-a3a7-84ded8b2bbec",
        "cursor": {
          "ref": "a6286ea3-c8b1-4a19-a928-d83101dca561",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f0f6441d-05e2-46ce-94e7-4e876f450664"
        },
        "item": {
          "id": "0b55accc-d811-4caa-a3a7-84ded8b2bbec",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "12e9f858-bb66-4e2f-948f-a2074fcd5ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df26d1a-5ef3-4823-b9ce-4bc64654fa5a",
        "cursor": {
          "ref": "30b8c3fe-15c9-449a-b7c2-d6c3b8eaebd5",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0c9eb428-4d77-463c-ab9f-b96be778fab7"
        },
        "item": {
          "id": "2df26d1a-5ef3-4823-b9ce-4bc64654fa5a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5a0aacf2-e938-4dd3-93b1-62b631716cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937b2302-76e9-4a5b-a5fa-0ef914f12edf",
        "cursor": {
          "ref": "640a31eb-d393-451d-b252-09206788d101",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b4f5c613-3cf5-4506-8d81-689de765ff4b"
        },
        "item": {
          "id": "937b2302-76e9-4a5b-a5fa-0ef914f12edf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8a323e4e-91c5-4600-bcc9-8b24277f3ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc5da6d-82c2-4a99-8cee-efdcf76bd6af",
        "cursor": {
          "ref": "cfa8bdf6-1138-441a-b6b5-10bc8e31fa85",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3299df50-7e22-4283-b241-e5004320ed22"
        },
        "item": {
          "id": "fdc5da6d-82c2-4a99-8cee-efdcf76bd6af",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d5a148be-3ce0-4f8e-9df3-ddbe5d9df566",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e424e8fa-d193-4535-94b5-eb6c66c9b5fc",
        "cursor": {
          "ref": "060b4f6e-f009-4263-ac28-8d67ea164373",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "24ac8d7b-b92d-492a-8341-3977ead2f873"
        },
        "item": {
          "id": "e424e8fa-d193-4535-94b5-eb6c66c9b5fc",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "9e2de765-6e36-4a89-b583-5ee6016935c5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417c78ad-2331-4c9e-9d31-3579fc734e4e",
        "cursor": {
          "ref": "09fb2a21-fcde-4c89-932c-dd1a33d1b9d2",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "14d5694c-a470-4f76-b3c3-cd88943afd8f"
        },
        "item": {
          "id": "417c78ad-2331-4c9e-9d31-3579fc734e4e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c22cf395-6516-4b61-bf2e-c11ea8bfbdb8",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f818bb-8939-4590-8cb5-7997f714207c",
        "cursor": {
          "ref": "616097c6-e7e5-45a8-92c1-b586a595e61e",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d351c9cc-a0b1-47be-b49a-c5e5dbc9be7d"
        },
        "item": {
          "id": "13f818bb-8939-4590-8cb5-7997f714207c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ab9fbec7-a260-4ce8-9326-a10127a05c09",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc678f64-d65f-495d-a6a3-3afc82c42290",
        "cursor": {
          "ref": "272743da-1342-4a4a-b65a-79654cb7ebd2",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c4528328-6199-4500-82a5-f57fb1a1e2aa"
        },
        "item": {
          "id": "bc678f64-d65f-495d-a6a3-3afc82c42290",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "09ad202e-046f-4c59-9615-9d0ceaee1871",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05b14a9-c7fd-4324-ae15-a6681e13b7c8",
        "cursor": {
          "ref": "69ca1a79-d824-4140-aea2-f9cf5cfe1ecf",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "61f7febb-4f22-47ef-8099-51070d0e5db1"
        },
        "item": {
          "id": "c05b14a9-c7fd-4324-ae15-a6681e13b7c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ce8ae298-1f93-45d3-bfdc-8b65256576ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05b14a9-c7fd-4324-ae15-a6681e13b7c8",
        "cursor": {
          "ref": "69ca1a79-d824-4140-aea2-f9cf5cfe1ecf",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "61f7febb-4f22-47ef-8099-51070d0e5db1"
        },
        "item": {
          "id": "c05b14a9-c7fd-4324-ae15-a6681e13b7c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ce8ae298-1f93-45d3-bfdc-8b65256576ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05b14a9-c7fd-4324-ae15-a6681e13b7c8",
        "cursor": {
          "ref": "69ca1a79-d824-4140-aea2-f9cf5cfe1ecf",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "61f7febb-4f22-47ef-8099-51070d0e5db1"
        },
        "item": {
          "id": "c05b14a9-c7fd-4324-ae15-a6681e13b7c8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ce8ae298-1f93-45d3-bfdc-8b65256576ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424b3df0-ef65-4048-aa27-25b00d72a18a",
        "cursor": {
          "ref": "2184eb8f-7e24-4a23-8ebe-617d2bdb9a36",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d562b983-20f6-4326-b2d2-e10130957803"
        },
        "item": {
          "id": "424b3df0-ef65-4048-aa27-25b00d72a18a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "422fe285-6116-4ed2-ad69-94b8d67dc6dc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0dc2356-2a38-4274-9e2b-824b8083d321",
        "cursor": {
          "ref": "5810dcd7-4b24-45a6-a36a-7a0889180fa7",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "35f1b002-c4a5-4791-a1d6-d8b8fe373d61"
        },
        "item": {
          "id": "b0dc2356-2a38-4274-9e2b-824b8083d321",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "889b43f9-0120-433a-91ef-63b30d744ea0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0dc2356-2a38-4274-9e2b-824b8083d321",
        "cursor": {
          "ref": "5810dcd7-4b24-45a6-a36a-7a0889180fa7",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "35f1b002-c4a5-4791-a1d6-d8b8fe373d61"
        },
        "item": {
          "id": "b0dc2356-2a38-4274-9e2b-824b8083d321",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "889b43f9-0120-433a-91ef-63b30d744ea0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22775333-4d4f-4be7-9038-0463a1d3705d",
        "cursor": {
          "ref": "36fa618d-3585-4127-8cad-21b2ab116eed",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3b1800b6-3f6e-427c-9b48-f1d7a1498f3f"
        },
        "item": {
          "id": "22775333-4d4f-4be7-9038-0463a1d3705d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "05ed6809-6489-4788-bfe1-18aeaf2d2f42",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104455a7-ea3c-4c15-aeb7-daaccdac4b5a",
        "cursor": {
          "ref": "222e8e00-a90e-4d3a-bf1a-d99baf585e06",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9643466d-b28c-46a6-9871-5a9542f91bae"
        },
        "item": {
          "id": "104455a7-ea3c-4c15-aeb7-daaccdac4b5a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "148755d7-58c7-4509-8854-387b69a1f193",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104455a7-ea3c-4c15-aeb7-daaccdac4b5a",
        "cursor": {
          "ref": "222e8e00-a90e-4d3a-bf1a-d99baf585e06",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9643466d-b28c-46a6-9871-5a9542f91bae"
        },
        "item": {
          "id": "104455a7-ea3c-4c15-aeb7-daaccdac4b5a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "148755d7-58c7-4509-8854-387b69a1f193",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642005a6-c379-4b23-98fe-b64ce3f9bbf4",
        "cursor": {
          "ref": "879be049-d71f-4564-952c-118c5fdfd4ea",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ac7dc931-f242-4142-aa24-d2e4228bfe83"
        },
        "item": {
          "id": "642005a6-c379-4b23-98fe-b64ce3f9bbf4",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e91b6d28-b9ee-4f3a-8d90-dac46eb2086e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}