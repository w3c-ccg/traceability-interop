{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ee6d2565-29cc-46f8-9352-13d093090b09",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ff4c1edd-1336-43b7-8df7-c1bb1831ee2e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b4d7cb7-f515-4dc5-aa5a-1a763562f673",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "24032e1c-7c2d-40bc-aee1-08d1215c7419"
                }
              }
            ]
          },
          {
            "id": "fbd67085-60e6-42a4-97ac-1730de519ff8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86b70296-cb8a-4b90-9cb1-c22fe1e0ce7a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1da4c66a-9913-4938-9200-fc4c769e80e8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b1b133d9-e8e4-4f05-a36a-70fe1c317674",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "94626b69-b931-44c4-bdde-ada7b9460f7a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9329969a-5a06-4a9d-9014-7cc3d4a61dc9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2e4d0b6-cfc5-4de6-934b-5cddccacba21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0fd03b1d-de42-49a6-8839-2ebbdae1a10b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4bfbb912-cc1b-40a6-a256-0ee53e847129",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a3594d0-6661-4d8b-b470-32bb24edcdc8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "afb260bc-9dc3-428f-a526-0805241a9a0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b994e766-7e99-44c2-be7d-23197f1903ab"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e29d740-9511-4ac5-a762-55e7985bcec1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a7bef76d-155d-4d93-bda0-dfa0e4c1856c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fda2292-d0d3-4ccd-9b36-c21aeead4abd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "083a7b57-2a94-41ed-882a-eeec90860cd1"
            }
          }
        ]
      },
      {
        "id": "7007e8f0-c1f2-47d9-907b-1670b8793278",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "217771be-ee77-4918-aeed-4a9e9364049e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "167f4066-4654-480d-ade8-2bba6562ee6d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c4c7fe28-1a83-4c65-9a3f-77e5b25d0d39",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600c4abb-db5e-46b7-aed8-6fff99904dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00c12abd-2b15-469b-afc4-d66c5f2c24d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59eda5ee-9319-4bb1-afb4-733e1e7b39f7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5dac2e-37d8-44aa-9ba0-575b032513d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99c705e5-1693-4e1a-b254-39034fe6cc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d6581e-e14f-4026-88ce-762e703d69c4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cd71ad-3ec9-4823-a59e-2b480aaf3972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b54a580-bc0f-49b1-b8ad-67f01af71745"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "685d6dad-8dc9-4e46-8d65-817029046f7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "224c4141-d525-4d63-9ddc-bef91ce086b9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910a0590-0b28-4321-8b04-c62fbf41ea56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d1bbf1a-a810-4913-93ef-ba9a81fdcb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed08e592-a539-409a-b8f0-268353b97ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc1ee7f-ae90-4187-a6bf-91cbeb86ccbf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0cca0565-12b8-4aa5-ada7-f3556b1cac49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "959f6962-f0ef-4328-875a-7b9558dac1b5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02a51acc-c1ce-496f-9ce6-05298f163796",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1b01bc2f-9ed8-4fdd-9115-d121c1b49f2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f987b1ef-d508-4e10-b68b-f10ffce503f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4dbb65fe-061d-4720-857c-af0e7236cd48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "baa464c3-cd4d-4742-b363-61f34f2969e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e38f76d5-2da0-4cbc-8c1f-9880dd572996"
            }
          }
        ]
      },
      {
        "id": "29f4fd5f-6e69-46c1-8c8d-59bf42075f1f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c9c2b2db-d96a-47a7-af8f-2b3ea572f4b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b987d10b-5498-490a-9104-2406fb70a820",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b2a04916-93b2-44b2-9689-27f849ecdc68",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba1f6cd-14e8-4c68-949a-2dadc113f231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a042edfe-4dd3-475c-8a36-47cbeb75f727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642f4437-5267-412a-a0e3-fd4394347e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d4920e9-4d74-4b39-8226-dcc2e60adc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3549783d-75c2-4ae5-bb95-2ded57c77303",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d587a9-786d-4eeb-a813-77c06b43aa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d511087-fdfa-4797-8e2f-b0af9b99d2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7cca0f-fb5d-4dab-9b20-5cfff384de0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a33a9fe-8508-4bce-9a79-afd4158647c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7419118-ad47-4c87-9750-2f1437abb9eb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8ad4bd-1970-4987-9b96-9453d9bbacd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8d8b4d-3dc3-459d-9949-9f9f097678e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e67f70-7440-473f-a872-f74fa8e5be50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e07f9bf8-73d8-402c-ba48-8a8d4df10caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbdf3a8-0ac4-4c9a-b531-c772718c5f53",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44358013-2f8a-4c98-8d8e-6bdc9d8e9e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba00294-1b2c-4185-b06d-d6da3e1478da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28343216-2ccf-49d4-ba14-4b3cde919277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab13e275-6959-42d0-ba89-e998f5ccbbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae02505-066e-4be6-8d2b-56cb60f22953",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da34367-0e44-46c6-a5e8-e83a2276ea05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29976a6a-fd3a-47d8-b6ed-37ebaa9e2b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0179fb-83ca-40a1-9c4b-db9647148511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a7d2fdc-5eb0-4863-8cdd-672ebaa66a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138951e0-e9a2-4aec-a0ac-088b8af10581",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb406086-0275-4bad-8dce-8dc4454880e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708a3018-a997-4f5e-80fe-f1e22e72b010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ed7722-c8df-4a07-8f8a-822071967810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfd529fe-b6b0-4121-b645-09086de702cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f0717b-e419-413c-9018-6d7b610f2b36",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1452801c-c455-4455-943b-055d401c411c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa43d01-5f2c-4e6d-82ae-272b281556a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e04d25-37cb-49f1-9d4b-6fed6622062f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ae0f7ed-2e92-4333-b83c-15ce4400fd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6cbbe4-e2e2-45b1-bb9d-48fc34b5d687",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954da877-de25-4662-b5e6-ed69e17f523d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b41939c-df46-49b5-8a5f-2fd65ace933b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709fec0b-9153-46e0-a4d1-91ab5a24d3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc1a1afb-c1d4-4a90-8e0b-c470916e98e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c73e9d-7854-4f7f-9c21-01631edbe054",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e906055c-654c-4cfc-b6a2-ba418004d2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a8592e-cd11-4eaa-8abf-40665f479601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89acd4c-3019-46aa-8bad-3067e37fcc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c79759f6-150d-41ea-b9b7-dfbc883adacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab30b9e7-66fb-4ed1-baa3-744ade9cba45",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2010c3db-3e2b-45b1-bb65-e732e6cf8279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25842e41-024f-422f-a044-76937cbd72eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22b8def-7b90-4d09-989d-12fc15f64115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f401a331-44ce-46d5-bd0b-a7285f0ea4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1567a6a9-d479-46d5-97bd-7047f8cda18a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30749464-d7da-45d4-986f-397a4b9e208b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0893e81e-885d-4953-adb8-f55a7f4d0c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b86c982-589f-4e75-b36f-8ce659fa5807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "050319e4-e462-41eb-9257-a3c4b77fc063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37073727-ebfb-4978-ab3d-6d907f46e0bf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b75945-42e0-4a0e-a598-62c7d81e186c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c29561-615a-4ee4-88bb-8b72f378ec64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650fa010-913f-4b8b-be97-c1e8cbd4c24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0a6ba01-72d8-4ad5-8d2b-308adf328a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4587a35-0ecb-41d3-93b7-a183773c7258",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ef9655-e6d6-46a5-baa6-5c7628e28457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f37c024-6185-4057-b49a-d5d2483984df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17381b4b-bd1a-4f0a-ab68-a00b001141f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b93b94c9-19cb-46aa-a3f0-ae43260fc4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61a079a-ddc0-4263-9c7b-11dab012c5c9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3491b664-2900-4463-b0fb-49edcbd5b369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae9c37a-c325-4ea1-b34d-85c9314d91d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714ae9aa-a4f1-4242-84fe-d2dce8ad3dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8bee917-f019-470e-bc91-1fc8f73dca7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d8b90a-27f2-43fb-9b13-db7f31b7314e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02eca8b2-e6d0-46b3-9c99-674d02054be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19433a36-a02c-445f-bda8-7ce0ad3d681e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e38d59f-95c5-4110-8938-2e8f5c6010cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0753f7f-ada0-4c61-bfd9-6602f4b2d042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fe05ee-9f79-4c47-b15e-31262dd4f05f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecee20ee-a29e-4dc6-b87a-57ff09f7f2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065d796c-7f82-49f8-b223-ee8143994479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbade7a-a1fe-400b-be31-cbbf2a38353c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d164746-22a8-4bbb-be11-824b3fea1b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0de507-4eae-47a0-a8df-69891afa7f5f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3af4fd-4dbb-48ee-ae61-9a4534682097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d736584-3394-42b6-8f2b-4025b038c9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35243ae3-d7da-4f6a-8e8b-a2f732b17a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5fddde0-c5ae-45c7-8440-54390ae58428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4204a19f-97a5-4821-9fca-32da686f47a7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9200e2a6-6d3d-4d37-bbbc-00cbe400b59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85af33c-2cce-4f6a-ad64-cb1b41f33882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb437d9f-03af-497d-b3c6-30807e18ca7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d0d63f-3f65-4594-87c7-fdf2caed1ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47589a2c-0b9d-4c5c-b682-3b65826f45e3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76148363-02ed-432d-a92e-cd4bde0c8549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcc4d97-1997-48f6-9a83-90030afc2abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd9c1b3-2d8f-4003-b53d-8aab7fc1fc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea260753-f3c2-41a5-9001-559e04b92311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4405e9cb-8b9a-4aeb-848b-ccae208af5e8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2a7d47-b2db-4982-a096-787c15ae6416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fb520c-2805-43c9-a804-c6ca1de522f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c684b654-0248-4848-b7b9-bc526812e7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d88d2e-b352-4740-a964-582a7d3edf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bd7d7e-c186-4d74-9a4b-d95aa8bce647",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501f91f0-4335-4c4b-8852-d34f5a0d9b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59806711-9640-464a-9f36-b19069fc117c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be9d145-1f65-446b-aee5-2cde1a9387ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "191c6fff-dd5e-47db-92c8-5023c99c95eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55892c7-6a14-41f4-823c-a60c0c4b8068",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bdba27-13cf-42ed-87e8-76852a67ad88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb0c7d5-3449-4027-81ee-8f17b08442bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377351d7-0644-4786-bbd3-6476418bdef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a648124-d0cd-4aea-a4e6-6f9e87629609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022372d5-382e-4af6-8c2f-f8956fb67b10",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53402a71-e803-40c7-bfb2-f6a5b4e5522f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16cd3fd-26ec-4b8c-a02a-f8f59bd1113e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4df78e7-0f48-4d96-8150-58d2ebce335b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0680ee61-d082-4f4b-a603-ed1e020c0b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff73872a-28f0-449a-b996-3b43f81f1c80",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e1a441-a23f-4290-a7cd-5f9091de48f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4363ffe7-70aa-4fe5-8ed1-c0ceb670f5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981971c5-42eb-4925-b884-7ab373b01d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7be5d48-f7ed-42b0-8636-62bc0a7621aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3108183-ea8c-4f7e-9972-df8940b1f5e0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5364491-91cc-42c3-8bee-60016c4cab9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa155641-1a4f-4c70-9553-cfa713987008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238ed148-e218-42c0-937c-89ed76c22eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd9ccfd-6eac-4203-9cf7-e0d989a9308a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2e3e19-32b3-4bea-be4f-5d9004254f26",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259fa892-19bd-4c93-8759-38416953c6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99ba680-b1ef-48cf-8d2c-d0a2fb9ff05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc65f5fe-670d-41fb-a588-df2579c9372d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a7a387-01e3-4cc8-82df-49535927bf9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826f2597-cc84-4ea2-b97b-3d30866dbd53",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c60348-18e8-4fb4-945d-3943b07357a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6eb50e-9a6e-47dc-b9be-71b53d44920f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b15526-58ac-4136-abc6-c4e438c9eb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c33dae7-88c5-4e40-8d91-95d7bfddd8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ceaf8c-74ea-4372-87ad-5eb0a4a5aec1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a17f40-76fc-4c14-9c78-1f3685f1deb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c421036-30d6-47bc-80ef-01cf0e636d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2f6220-dcb9-4eae-9396-2c7ae1c4485c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0f816f-b471-4cc7-83ae-0266de5f9bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1643459-165d-4988-82cf-3e1d7055e1af",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323d113f-a275-4f34-9800-7c0c3ac91287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f8c9f8-db21-493e-9db4-6a7b9c183202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878708db-7069-498a-9ca7-bf4ac6d20bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c967053-06fc-40cf-8de3-61f34d176669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d647b4c-96ea-44e8-a62a-972f54d91c5a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbb5a34-47ba-45fb-91ee-6505827ca9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1c1f28-248e-4371-bfe0-9497a5dbc009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15238d8-e19e-47fb-93ca-31a1eb562ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "57b3876d-1af4-4a0e-811b-928d6a547e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111a65e4-303d-4092-9e0a-010c9eec2657",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8643cf-73e4-455b-84af-0e46672ee56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1e76b5-c619-44ee-9d37-c67da8f3578e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebdced8-e8c7-407b-9c79-eaa6acbf1e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d347eee-6fbb-4e53-ad96-a74db92cc756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec6ffcb-599e-410d-a2be-46c249de642e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06a6677-ec2f-4116-8f63-bedf06ee1c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e0840a-ebe3-47ec-a58d-e7aea3161645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf23024-43f9-4be5-b654-826d139ebf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76446715-a2a2-431c-80ac-85f417690157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632bfc8c-7241-43fd-8aeb-91f6bb8c22ef",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc7b3a1-b1ac-49e7-be24-d1eee4be8df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5216b4c-97d5-4741-b583-1acb6c7541c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8b02b9-e460-4dc5-856b-b04fc75734d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48c21c81-f97b-4e1e-892c-adca045f2ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a63df3-cf8e-4c2c-89c6-5f643fd8939d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62459c90-e708-4577-a7ef-4c7a2592bf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aeb414a-317c-439f-a7c4-5ca8dfaf8162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6737d9f1-5fd9-4183-817a-f53544eb7c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1664f3ed-41bb-4d53-8c5a-e32d4a9eaa47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37257fd7-c7de-43f8-84a2-2b6abb0484bc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f7160b-76d0-4596-a7a5-0cb7bf553b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a26220c-edd5-4d86-9453-096d6416aac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d713fa9b-dc04-40d3-b788-4956cf0c71eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ad0abe-d14b-43d2-b020-fdc468bbd536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768fc61b-ed38-4a30-b08c-d388fcf19534",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0e7d46-207d-40a9-a0be-a3c14f820e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "241a6fb8-b857-427a-9b5c-220cd9cefcb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ff7c67-b69a-40e0-839a-725af26cbde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bde89e9e-b8b7-42e3-ac7b-f2d8d864afe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43af7907-6519-4dab-b415-f3ee2910e527",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7148b7fa-df9b-424f-9a14-fc09e385b607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4442a1f-4982-4c09-99fe-637035bcc091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61f54e5-9108-4355-a353-56c2cce6b91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1f2869-d1b3-4210-bcf0-54691b801238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cc2b2e-81f3-442b-b910-77da53b505a4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2420264b-3921-432a-a87a-9c165d13919f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b42808f-342b-4bdd-a625-67ed8cc54a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c1ac17-4d30-467b-81ae-b890eeacdfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "708ef522-eaa7-4c0f-b264-7c3a93fe91d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f27ddd-6aa7-4646-b741-34a28ca7c834",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c327c4-5617-4bd7-871f-19c1b5a339bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af49ba3a-83ce-4f45-8b82-40736043811d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6f7049-c319-422c-929e-b6ab601f0a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "78df8c59-d1fe-4aaf-b98b-092f19e8698e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fee18c5-9f57-45e6-ae33-7b610175093c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb9bafd-16ab-4ff0-83a2-dafba68fa602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab1ed7d-b1d6-4806-90f1-c4a8cbdfc39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46127789-2743-4657-a3da-f9b257e68295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1df119b3-330d-42ec-899f-a95d07708f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2572a784-f665-42d9-8c7b-a90031659854",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f27ce31-75c9-4548-ab55-cdda95575f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2cb023-66f6-42a2-9820-73ef715e65ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fcb2a6e-a646-4762-ad7a-c512eb3b7906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49e8726e-b784-47c9-9523-520e92b516be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e61e7f-98bc-4f22-bcff-b5166611921b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232d2481-6397-463c-a1ea-9771b0ce7bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4797b85d-ea48-47d7-995f-54857add1f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09e5dfd-6a2a-492f-8911-5729123d0331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "12415648-cb0f-4252-9dcd-6a44048cb5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcee3c6-83fc-4c8b-a4e8-0c40371c9707",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ccfc69c-ba10-4806-9695-17efaf1f16a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbb4c66-ed9a-4564-831a-ed5d28fc7065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34da34f-6aa2-4442-aaf0-b86f86c0cf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d020a15b-982e-4707-97ef-32b2c3d3bc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6af9e4-7422-4b05-ab80-e0bd9ef4e93b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f7abda-887b-4011-9c78-9520334b3899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9673c405-5ea1-4460-8ddc-715fea6433ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e360da73-447c-405f-8fd7-5b52aad755d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9acbbfa-e6da-473d-92ef-2ea11337f006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b3c0a9-c3b1-4c3a-b729-4dc02f2d31cd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c515dc-cc57-4213-bdbc-85ad74bc8ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac6ef18-8891-4967-b329-82e3da5fac57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19eb9fc-f47d-4ae9-b945-6c21f19fcdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f0dcab-77db-4643-b5bf-559022549dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00705d38-9f49-47b1-b26c-d54d7e37e2d3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a40e0c-408a-4641-8e2d-190ca11c0e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36c40a0-67fb-4e85-857f-80575227dddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8407166-e728-46ec-a910-58e9296ef379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b287ab35-e4a8-4107-b1f1-9e70006d19fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8970c803-c8c5-4f78-b60b-c566c0647978",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f01f6d9-fe66-405d-b3b7-12f82691b652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57998f81-b5d4-4e64-b2e7-77baacecbd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b1a10c-82ff-4517-beff-b31b3dcd3ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9ed66c-976a-42c4-9d9b-d68a8ecf0c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c47753-affe-4fb8-a137-2e19994037d9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88508d14-e022-467d-b13f-264f4a2e6bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd165523-550a-49b3-9398-7e5b3418cc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977974a6-61fa-4435-b36e-9879bd6a1aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7435f2a9-f2cb-4b8a-85a3-25db375aca09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0654743-0779-4b7d-a402-3a37916aa65c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1af298-1c41-4d27-a1e9-a92f4aecb093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0931ec89-5fad-45e1-a776-e8dd5c11dca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b00208-8471-4f7e-bd51-80293bab68dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "403f8d54-897a-47c9-8797-db36ef2a887b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a126eb-f37f-489d-bc03-b84527d29f62",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79668101-c89a-4526-8bf5-e30afa9798c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5cdbea-1956-4a47-84ad-4f2c55ad5a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d005bd-c31c-488d-9d64-bfd4ad744e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6f2909-624d-4c65-908c-4f6c1512e6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62960826-1efa-420f-bf9e-098987d51062",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e642dd69-628b-4bfe-afd2-591c710e3348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05123b5e-0120-4fbe-88ae-71c987eb904a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1cfae8-7b1c-4327-81d1-e31a5424bb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3e6aa6-7482-4e50-8ba8-169b32841aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d26834-2e53-4d1b-bf49-b949c2a859c7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7bf9c0-1796-4f17-964a-99d8fae5c508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe81427c-1adc-4d19-8107-d524ab4c8a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dc22f0-3a78-41d4-b8a2-f239126e66c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c76afc58-38bf-40cb-bb10-b1f28981d7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b9d4a2-7593-4904-bac0-cced5359636e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fc9444-633e-45d8-a10c-ba6735b21877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd50afe-4394-4b5a-a41f-bebd6ef019da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e319ea-f3f1-4b38-83ac-fd148b057aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a066258c-1ce8-4539-b000-b1dfccd5eb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513d7600-43fc-4aa2-8404-d86c8c2a19e6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6243e50e-1ab0-4aa3-b139-85c5bb15832d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45414c68-701f-4b3c-ad77-4685773b30c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecb783c-16d3-4f80-8dc9-29ea4081a55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f925613-fd91-490d-9945-127743f70946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73752841-c3fa-412d-bb46-abc9b48537e4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2adb5c-f49b-49ea-a6a4-ffb1774fa501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c20c7fc-f669-4e03-b6c7-d33e11f37402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7973631-379e-4574-98ec-43e6c73d9268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81b7690b-7b6d-4641-8708-e084de643bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee5a0da-b19c-4d6a-8bd0-b16e4c15a69c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ea4dea-b846-4d9d-9dd0-b822fda53559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc420784-e81a-4d20-a303-d84133f74ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545b6d45-8e63-4f59-9d1e-0cc05c6691b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f66299e9-9a47-4539-b9a3-f967e7c0c2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35528d5c-148c-4df3-86ba-14b8f6e570ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c3399d-654d-4485-8794-25546a4cdc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398add63-14cf-4d15-a0eb-65ee55fd352f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64029c1-b14d-447d-a8ed-15e376817f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7771ceb2-3572-4c65-bb62-286909b8168f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003b6664-e85c-403a-9fb2-308537bf097a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a64d31-efe7-4c2d-af18-7719c59663b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14f7cb3-bfcc-4347-af0e-2e1cbb5cbe2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f015b1a-e9b1-46ec-b744-28bf1b0d36e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "792b4ee4-5520-4c6d-9d4e-ed516b3b6e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d848a97-a41f-4dfe-a282-8d20bdfcb4d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a83abf7-46da-437d-bc06-412dc0ed7d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87f908b-9c02-4da4-9156-de88fb6cf50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6827ab21-d5d4-4a6d-8060-8c734f99c550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9583e8e1-bdb9-4728-91a7-4e3a89093389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcccc841-3516-45b8-a8cf-01126b3205b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad83532d-1354-4c79-b2e5-6b1a2c12cd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42279133-6e63-4011-95d3-0e5a58473aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cac0ced-2816-4d25-ad70-2c0937a94dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a513df4c-cd29-430d-85fa-e68b47dadbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0104662-b049-4567-800e-69bd54f61fca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2308643d-60f3-4d38-8030-2b8dbff18397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6719d831-9a55-4f77-9dd0-63ffcf1e5c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38b596d-f439-4e71-bfde-65b82a9e5881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "31260371-472b-4de3-9d99-5effdea59a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7d3caf-0cfa-4ea8-80c9-c4565ed44ba4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a47093-cee5-495e-899d-806207f319ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce51360-6532-47a7-8724-887e663e5f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60eae454-0d6e-4a4d-a2fc-d08a084762ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "43988eb5-0608-4f4a-91ba-554e59f8b714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbeed15-3fdb-4981-833b-b68c2d5d6e49",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e02deab-4264-46f2-9da9-b9c29b432723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317e7fa5-9935-4771-ab3f-3d826bc287c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c885433-66d7-453f-ba37-a64708b98e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "40d8fdfb-9735-4170-b461-2fb8fa1f7ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b84cffa-f557-498c-b839-d60b79918176",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bf7da2-2cca-46ac-9504-2a536c4bbabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbff86ea-0dfc-466e-bfa0-2188eb7261e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d704f568-0f2a-4643-aaf4-1a1150ae666f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d022585-a2fd-4a25-91b6-1fe062d4a613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a8d738-8d3c-49ab-9bf2-c8171b6512af",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1212e38d-cc19-4930-9cbb-2e2d26571335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec89ed43-6731-4479-9206-d367cb35b24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a9ad93-864f-4411-8939-e4409eb9e68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a031e899-3e8d-46a3-800e-fb222d468185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20264a36-1731-4da4-9eee-0a2d23b0d88e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff92c8e8-2799-4c06-8c3e-bc22d97f9ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "462cca09-878b-4734-a72a-b5569ea45cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d33da0f-f9a5-47bd-bac8-7ed287b1363c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83b8a84e-e4fa-4954-92ef-f84a7636b5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b8ff32-2173-49c1-bfa5-fe0a799ff009",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dea8e3d-3f7b-44be-a03b-7d38929b2e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789d966e-6ac3-4f7e-ab63-6fc978a4d8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5ca929-293a-4383-abb8-13fe85febc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14bc4ddc-89a9-4acb-a485-f11ad2c8b380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc763c5-02c9-4b95-91ee-4fcab4a5f0fe",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ff42d2-8648-4988-8b16-ddc18818dba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ede056b-9345-49e9-94d1-33377b0deda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ea5c19-82f8-49af-9eb8-ccc08d6008c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "76ad688a-d3e8-4fb6-9b22-91432cadc2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbce2aec-6808-40ef-a525-645df65f6f4d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcbd761-8181-4adc-9297-aad61bdcb8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690521fb-3003-4d5f-b60d-43d5cb137afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e192a3da-9766-4c22-a7be-c2c2eba45925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67539afe-ce98-47f6-9f5c-eafe34c07047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c251a7-7692-4392-b81e-9548947880f3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5553fc2d-a30d-427e-ad4e-b20005c99230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a98832b-b216-44c0-b20c-16b7ba60d9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a476ad-4776-4291-8e55-f7e2193490a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20c134bd-cac4-4554-a3df-b9f4a3a991d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3050176f-2505-4d5b-baf8-b2131a04fe81",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363aef15-0827-49c3-82a6-4d2c36db3161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4977e6b9-4a88-4568-ae55-44a2d8be302e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dff10b6-7f58-4340-a721-7b2a46f1de0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24072513-a702-4773-ab63-f57d461349c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca1c1ae-59c0-4425-95be-46f751315767",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c905d0ca-3bb6-4218-8780-568c2505a1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0139cf38-947f-4708-87d8-98ab03996e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a38e5b7-0382-4fc8-9f61-4578e8eff5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e78cc1bb-aee1-481d-9816-163704a17cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f7098f-6a4e-4599-9ef6-659f24caf70e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bade93-56d5-4977-b634-8da6c21def6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff74815-7d8b-4319-a22e-918dbd20a89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cacc2ee-f21c-46ca-be57-11c51bfc33d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cd12d1-5d1c-4878-aa7e-98922b97e1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecc49a9-5516-493b-b0a8-ed4500148ce8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e5bf88-6e7a-4057-ae37-b75cad8ec3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e6814b-0d1f-4b39-975e-7a97d55dc5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de59b9c-d5bb-4487-b87a-1b3be418d5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2107431d-fa06-4d58-b707-13012698732e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef507a3b-9ba8-4e8e-a5a5-deec56d5b6dd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e43851-e752-41af-b6d7-146351bd013c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c911f1-b242-4e96-8cfe-a90e40d7a832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbdfe8f-9a07-45fb-bdeb-7035c8b34243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "622ccad0-3e59-4713-b711-d7fa11efbd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b6789d-74e3-49a2-b1bc-896609094bc9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c8a48f-2ac4-4264-8d62-c366775e923c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60548952-3b1b-4ff3-bdf9-c7cc7f80a1a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a484a0ca-d098-4ca8-a216-6881adaf3cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a77efcf5-3095-4683-a40d-0d6c8978b6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953936ea-2f46-46d6-b7a5-f1ccc52f018d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787c0131-19e3-455a-b008-ef57f8f78bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc64c540-eeef-417c-b992-ae25d0daa313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78a92f7-cf1f-4276-b2e3-9c0de0f77625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef71761-41e1-42e4-871e-6ef9a5180e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d9ed6c-aed4-4e04-9e9e-9217690391b3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538fb40d-a5b5-4307-bf96-ad1fb8e8ebcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f51889-bfd7-491a-9355-a6dc4359b5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c169c43f-9eb6-4f92-a299-959231ad4be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93732704-cd0b-42c0-ba71-ebbede0f0471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf851cce-b4b3-4f35-b8d5-6bcfaca68312",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b69955d-d01a-4fbd-942e-98081dd21325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ac1abd-68ea-436c-94d5-22f3c8fe893b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef91262-30b9-4c5f-81a8-0922e3143d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aeac1e0-1644-40d0-a92f-7d10d4087ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35cf002-3372-4c0b-b454-2971e66808f4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f495a10-0b18-4209-ab1f-e8462d437eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf315b2f-a1e8-489f-9c13-d4baaf821e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8f4388-50d1-47da-9d83-25f819b043b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7790af07-6370-404c-9d85-cfdfa89e5393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cef2916-ac19-44a6-84e6-521f0c323f12",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d32c89-9c95-482d-a79b-90c075f259a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545d0c0a-13cd-46b7-ab11-a3e575553599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c88e182-5485-4489-bbae-fed3def26d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67686029-cb8c-4fd6-a175-1aea4a596638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a920335-a3a3-4fe6-abab-08287d61aca6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e291e0-cbd4-4f59-97a7-fdc305336132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e876397-1f03-4e7d-840e-388135618154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2fff92-8826-427a-a041-d7a2ea268443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb3e9c3-8e00-4c9d-b770-a49009df06e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f8617a-5366-4ef6-b244-dd7a55382ccd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08c703e-8490-4b47-8a31-6495b45a34cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ab9ffa-9792-4efd-9cfa-b95890fb8e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87490901-fb3a-428a-bd78-3725ecdad963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "928f1201-8e44-4401-87b0-b8ee820fb8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94acc68c-f59c-4f12-985f-01af57fe8b66",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045184b3-239c-440d-89be-16dcec24b239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e452e7ea-2603-420a-ae65-8264cbc16e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b2e658-6f8c-4d5d-9196-0bafe39330a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "146ccec2-df7f-4b81-afd6-14d61aa86f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4a49c1-28ad-47da-9bd7-853f67a297d5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45554de1-a093-4263-93b2-d8eb8ae1874f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea3b615-347b-4768-9310-4c41837bfbff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c3b703-e323-46c7-9012-6157f908b597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a05a98-74da-4f54-82bb-720da4074e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8871a4-58be-41d0-9197-3b7c0f33a3b0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc971a8-29ea-476c-a4d8-6b585062ac99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3035bc10-57ec-4516-beb1-7e85512f86af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99143f39-da32-423a-88ef-9aac2a6d9a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e267d82b-c3db-454c-9e48-0e828514b94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7078e278-9d9b-4998-bed5-70aefaf0cf72",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5a3327-fefb-48bf-b1e9-b1ad3b0c7154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56dba9af-a6f2-459a-a0f5-30290c2f6e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813cc392-df08-44fd-bd8e-19db1f7fdf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67dbf50d-4a1b-438f-ba6b-a65a5167aa29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d823a779-4b9f-4ff8-b2cc-b8bf78ddfd4f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42cf466-ffde-40e4-81b9-a2ce9b4b3d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3e4074-41c3-4d73-b9a6-3dc830b72932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c7702f-4377-45a6-ab6b-84b07f467a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a4dd32-dab8-4109-9635-f4c7741e9dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6f9b3a-b5ab-4eee-b4b2-4e2927cec379",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cc183d-36ee-44fa-97ae-e9380e8e9267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6004f268-f3b6-42a3-9465-9ce2591dc9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048f7a3e-6d5e-4923-90c4-345d2d678058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "99aa552e-f0ef-415d-8481-0a25d801a8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46d174f-cd2a-4ebe-89c5-86d54d749739",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c11fae-ece2-49ca-90ed-4c06e71e2de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19d8607-32de-4b5f-ad9a-c7d4ac2f2a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb71a731-94e4-4556-9ec4-c51926f5c94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "08b03c95-f08a-49ef-b305-6c61b784a1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196ea87e-d72f-4c8d-ba64-f6ae51e414fe",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479251ff-7353-4ab0-9923-8893f14327b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c88e2db-f632-4bd6-a74b-73c72dbc118e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8379fba-fc44-4c44-8f49-593f61bab8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f007b66-be32-496b-8e6f-da805d85ae55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10420649-d895-473d-940a-38d54d6dc23b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8e7188-23a7-48ba-bb21-b988da16c593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "071b9ca6-e620-4293-bdbd-dc15523064a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a715f6a-4e60-405e-8350-0da1c373fd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4efce0c4-9082-4c6c-a373-637c7e183c7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4667e414-3cf0-42bc-a288-e8532a03e98a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7010537d-bea6-4b85-b675-261c32be46eb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb216f78-6540-402e-9fbf-a08386280f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3009c87-11b9-4f46-a065-94da14c713bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcae94e4-a50e-4947-9f73-55505f706dba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30c53bbd-2d2c-42b8-8efa-ef1935dd6ee1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dc8bee4-e30a-48c4-997a-08dc47c7b355",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbbfbaeb-ca70-474f-a60c-ab3140c0e56d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e03bc862-f573-4ad0-8b4a-71ab82da6f6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efab49c8-7cf2-4209-8f03-de3e26a7980f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f3bc7e4-9d90-42a8-8533-32786f9591bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b5d1f7f-8f1b-4814-bbc5-ed9d1a3ab61c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "85a4d9eb-5b23-4836-b18d-1b5f0b47bc9d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73d8c035-2c3d-48cb-906d-d8a9b76baba6"
                }
              }
            ]
          },
          {
            "id": "27dd41b0-0c8b-43de-a1bd-b31d561ce9e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07895f87-9f99-4068-9ab1-a7b22b0e1129",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99bf0216-a949-41ec-a554-2e6ccec71428",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a68f8f9-95b2-4f8e-985b-a5c3524089f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e760ed4b-fe27-4bb6-96e5-d9edb93408ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0fafcd4-ea1c-4439-865b-29c3d572256c"
                    }
                  }
                ]
              },
              {
                "id": "99363e8e-b38f-4390-b1b7-fb2b268633b0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71b42689-8f11-4707-85f5-01cc2273ad4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "348ff92f-956c-4ec8-bf71-968de9e78446"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2bf8d74-daf9-4bec-9d61-b34bf5689841",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67ba86d6-5a2a-4d5b-8837-fb74b67f2be5"
                    }
                  }
                ]
              },
              {
                "id": "d4389d7e-d6ae-4009-8cef-c6c505ba54f0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1a3b216-4be1-4367-9927-909d7e81f41f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38d510ac-3cc3-4e85-97a6-323399889a86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b90a797-0a16-472e-b847-1a6978c30718",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b4f1602-63d3-48b7-9751-16efb712c517"
                    }
                  }
                ]
              },
              {
                "id": "84196570-3f52-4b32-af7f-b9c5cd3a9310",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ff62112-1a60-43ee-9b3f-405051672454",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7c9919a-60c0-4dd9-916f-270dfcad4b68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e55461a-287b-4c9f-bef6-0d137b2fcedd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2d269871-121a-464c-abea-5a854d606571"
                    }
                  }
                ]
              },
              {
                "id": "8c5b5db9-2544-4dac-ade7-4bf04c21f1bb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6845d235-ee1c-48be-bcdc-90e9bf0e8c95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c09a8df2-12ba-46c6-8ad6-f993517bce8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4cb7085-fba8-412e-935c-b0306b0d667a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1a9b19ef-2971-49c4-9537-92362881fead"
                    }
                  }
                ]
              },
              {
                "id": "d7f782bf-7280-4d34-990c-68d09bd053d5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "505c75db-891a-45f9-aee8-1b9d1ceaaaef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5913596c-f53e-415d-8815-454607e5e572"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "559eba74-74db-4a82-9cf9-8b42f1183fcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b938659c-fbd0-41d1-b0f8-19dbab75f007"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90915845-33f9-4c78-b1ec-a218c82830c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0311daac-7ba6-413f-b5b5-78a9fe4fe786"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3381cedb-503b-46a2-b198-ee3ebb5113f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7a7739b-0520-4a9f-988d-1bfa9480dcd5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d517700b-bc69-4255-8025-3efe1f2a8c6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3155edc5-f14d-48b0-bc08-a7de18796ccf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32f83b88-2c3d-44bc-a603-74b3d887e546",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4930dc89-420a-4b33-95f8-d68b2c552f33"
            }
          }
        ]
      },
      {
        "id": "163d2fea-2ba4-4151-8aff-d974f6342fea",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e31a8e6f-9cb1-40ca-9daa-0f6fa02c2c9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8dfcd92a-a13c-42c8-b5ad-542a094bf3b3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a68d24eb-cf3b-4660-8323-0e97db60c282",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d2c3c5-7496-4e29-95cc-229d515f72cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c01247-7a50-4728-a924-0c34db0a4c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1086cd7c-bbcd-4625-839d-008dd7b3a0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2957f5bb-adc8-4a46-9107-6cbaed2f8673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3749566b-585a-4e52-bf3e-1b82deae5fbf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6231ee-00b2-443d-b3df-af505b767d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073deb9d-94e9-493d-8e90-21df8cc7ac2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf8854e-9961-42e5-a5f6-d113fd36a601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54742f44-27b8-40b6-862a-ddf00ec6d01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75574ed4-f27c-4a73-bdf9-f960d5ecef18",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5cf796-8e9e-4e65-8b99-36466b4fd502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b61230-f2a0-4922-ab4b-e463e23c524a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bc1083-a650-4a39-bb99-743d239b0437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "238117e7-3634-4b47-9d26-149564c6c3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d37971-40f1-4b01-b2cd-5bb07c5beaf3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218f7be4-db44-4893-82eb-5deb0759fb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef6f0f5-76ba-42fc-9fc1-5cc1ac2c828b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e8c4b9-511e-4766-9c3a-a84fada93343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "103fc328-b54f-4f31-8bb2-080305de77e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96b220b-e516-4a83-9e30-04fdb4b68199",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3007d514-81ba-48a3-8b76-a014395639c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568ba824-601c-47a2-a2c7-5e8795699b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1114185e-9540-4c27-b55c-a5055f6b55c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fce5c7e3-b87f-4cdc-b534-628baf461fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcd3a99-57f2-4961-a193-28c8c16f2a05",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f25caff-f739-4ea4-9123-9fdfa56a4035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922da08b-1617-4b60-baa3-578a78677170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdfc62d-2db9-4d2d-b2cd-fcdd829abb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bd1eda-5464-4e99-8dcc-6fd7dd7ffd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0aa3c6-3f69-408e-9462-34131a286472",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93d5428-146b-4cba-bfc2-d340d0655827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25782014-3af7-40d5-8c78-4e762777eebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246e9aa6-0ed9-4e63-b7ab-c2aba2c5a6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "40bf5130-469b-432f-8d2e-e16ee324b076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec256e58-0565-4bbc-9c95-a5b17ffa1005",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7857b34e-27d2-4de6-9f43-fd2a4f778263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689a1a25-c3af-4159-a0ec-6a7090d9c23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8629e133-ef13-4842-9ba3-ee59dab5808e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7cee34d-dabb-4db1-a544-8c996dda1587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15644465-116b-4663-b456-6536159a8c89",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cdee4c-e4ff-4cc9-b013-79cc46cc8e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93e028a-1ce8-4ffa-807e-9a6f0aedcdde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c85df4d-8132-43d9-b418-2f81a3e257af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db91625a-e14d-413c-aed4-ea3e26fab9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f344754-f5f2-4400-bb25-aa77e90a78db",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eee90ee-af64-4d30-9288-95d21f727ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f9ef89-7014-44dc-8a20-9de02c9946da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2922277-b174-4bfd-828e-14dd099ec039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43d68011-b5a5-4f5f-b28b-827e7e16713a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039346d3-7e70-48f0-85ca-e0334d0e2bf9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd059f23-e368-4efb-9d24-b5e251da31f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a202d1-68bf-4016-ac2d-fd2c99b04eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27b881a-dca4-46db-966a-60ced1fc61d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "21c17e5c-b1d7-42b2-ad5a-d035ddce4ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ae2cee-60dc-4a37-a584-cd9e70043b85",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa98c8d5-3549-4d2e-8459-24bf701961b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1a1fe6-19b3-4c7c-bfa8-745a4637e288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b49f42f-3fec-4ca7-97a7-7d4da0b622a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "608f9aec-fa46-4288-9c1d-b6578f443d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8128e3e-826e-48d0-98dc-04cf3a6a2c2c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83518947-267c-4c86-a9bb-9ff5485e91db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b44b20-4022-471d-9d70-4f336b27677b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c19acc-0d75-4e96-8c06-34dc4546fa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "839d5cc9-abd5-4b50-bc89-5aa329079f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd68b045-932f-4523-97b0-35b0abca004b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342df14e-1aa2-423d-8b2c-617b695230fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516c20a3-106b-403e-875b-e3a258d71dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d419e320-f446-4253-8324-1b3b6f770995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "83552d62-4003-4916-8e24-2f0056c12c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab79fd7-ab9e-4892-8946-342e01425594",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61b3fbb-866d-4b67-ad9d-df556bae5527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd35911-36d2-47b4-9ddf-4b0a900d55df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d6c3c0-54a3-41e6-a1ad-1713fca4bf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9bf756-59ce-4c79-9742-aa1e2ffc92f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82da34e-b543-40cc-9bfa-a5e2be93dc25",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8350fc-e27e-4764-9807-4d34973128fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419f9c33-53b8-4664-8793-858eb9b1ed2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a07a9d4-7019-4fff-9688-d57724fc2b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2da67b8-77cf-42d6-8af4-48705749d613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f3999f-5004-4f45-a03c-c66a9657cbc2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee43dd2-7dee-43f3-b86e-c0322718e6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad45c6bd-4b01-4e6e-bb69-2c51701f8924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f524473b-b704-4ea3-82b1-72c1aadad683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb5c822-1bb7-4bda-9f9f-6fd4636e6541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a03b90d-add0-46e0-85d5-cb20f1d1a947",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1efe19-0f68-43e1-bae0-af3d62909699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31eed135-1b73-4892-aa63-747eba314a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea8c99d-9277-400d-9231-32bd17a0876b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe17fc67-0f20-4898-a5ac-5d272a64fded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8bd141-40ec-44e8-8bde-d490abb07554",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd12c4a4-9624-42a0-bbce-6b879683ef8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac054f0a-867d-4a4b-bbb0-eb7d3495f732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dd8708-0656-4492-adb2-a21a4a843ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "266a6888-8487-4f1d-8594-b7fec90ca136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30fe835-c1b0-4438-8710-29268979c794",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76da56e5-5989-40d5-bd9b-8c5c68eb980a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b926966-cc49-4102-8af4-18fbeba008ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be124a59-23c6-4967-8bab-0f9087045039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b30abc9-1da4-4bee-935e-9421e19709fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4691178-bd88-4bee-9a7b-a5432dacfe88",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f06e7b3-b4d8-4b5b-b20b-0fbbdc4291ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5167370-7f90-4ede-aa96-49c5153e0cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08539acf-db51-40fd-a17e-54ce40280b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19ccf2cb-7bf6-4729-8a20-d650a00684c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3882ee-f8b4-4514-9e5f-e2474872d5e3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4985e869-16b9-4200-a3f3-314bb97c3e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76f9225-4e71-434b-ae54-70f973ca4caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93397b21-7e75-463e-ac94-7661031ccf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40bbb65b-1db9-4891-8371-d1202da8b1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c94b2b0-2be1-4130-9a7a-b2cad1eba3c6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a1f14c-455e-4113-920e-a01dbcf227f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b59dc75-44e9-4c13-a945-d51647dcc000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506e6337-2b0c-4688-905a-a8bf2801c3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f604b9b4-e347-41d7-8177-8fb5066ae6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f637f01b-3f7a-4f23-94cc-266af4404add",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93b1db9-4cb3-4b12-9851-18e42cf5856c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fdb5f4-c9ce-490f-8ffd-b152b314b52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fe8598-21d0-4902-aa3b-9d5e8da006dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2dbdea-1f08-4ad7-8334-9b896aa65c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39999d9a-208d-467a-abc5-efb2416284e1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f2b589-e7fb-4c38-aa1b-857c1f99f379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebee545-5e38-4ee3-8513-85e3290e9c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e986614c-b3ff-493b-aeb3-ae96ec71a2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b12df16-f9db-4018-807d-ba2bd92d6266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f31174-0738-4a56-ad1b-f771ef2ce284",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbc4e63-cdf0-4b80-bdf5-d251e3f1df04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e972515-8cca-4dc0-8bbb-21781c49121b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c40163d-a136-416c-9c45-315f0b4d34fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3919d552-0dc1-45bc-a6f2-3b61ff14a005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61f0b33-3c64-43d7-b70d-d4f6e64ceca0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052b23eb-e2d5-4207-8145-c5a4e50b7626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c516a0d-ffcb-4628-980a-03056ecb20af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b2bc2a-cb76-4163-a90b-bfd58e9868a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cce00b1-f844-4219-accd-8db074562917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4008b83b-937c-44d2-8de9-f9f45fabd276",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616088f9-7bc9-40bc-8914-e0a4601f0220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28912ae7-c8f3-488a-a27d-4f555d3bc2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db598e1-29dd-4e31-be91-45f8677b44ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeea95a5-cecc-49ee-ba47-33449e6d82d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50104ab-65ed-4ccc-ad41-261536961b0c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb7f339-69c4-47a3-95e8-c33c278a0b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebcae47-9429-4e56-bd18-b19ef14e68c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761e39fb-3b59-4435-b15d-f2f91bdc13bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de200222-1269-46ef-88b7-17aa4fd1e1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3174866c-1748-4d43-84f7-5a4b45bb0523",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90c1bb5-555e-49df-84d2-931bac95e45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b1b40a-2c2d-4c28-a066-178d6e911ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614924c9-bad7-4141-bfe5-642783a49d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d01845e9-92c1-43da-8497-57b41e1538e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c8a89e-213f-4ab0-af8d-7b2537cd566d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eaaeff-c06f-405f-9b53-b7cf6c56c86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2612a6ae-1e0e-4ae9-93fe-3808fe2c17cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527908cd-b89f-4d2b-be9b-8336871d2b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d59da5-760f-4459-92b3-bd80d3c367cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ffdb49-d742-4280-927a-6fb877ecb039",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d92a5c-9472-42ae-959b-bf548c63ea04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01a03e3-fd7d-48f2-86a5-f0b446e25df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b88cbc6-6840-4899-b75c-049ddeef42d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1980fe6d-6e46-47bf-a8e6-295921f63359"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e4f4b50-accc-4fb9-ae3e-d24f8bfd6398",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9d8ce7c-e9d8-43f0-a1bf-dcedcc5db41d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402940aa-2a90-47aa-89af-ec0de38f5979",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ae71a1-c602-43fa-b6db-00439ecfde5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d395edb-88b8-43a1-bce4-bad061308b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91564eec-bd77-472a-8745-7903ebb15c5b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6efabdcb-09a1-418b-8033-f99172135b69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2864bd2c-f74c-4cd5-bbb8-6b437d7388c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28210cc3-9110-4075-8b12-725499ba60bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0322c00-8287-4003-9b94-41409aaeba34"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d733e57e-2d14-4d7c-b254-0ccb72f88186",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ece16443-11ea-473b-ba90-ef9287adad7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4ee0f02-ff8a-41c7-b05b-51ac7cb6f80e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ca31598-20dc-4b00-ae2f-dadad938913c"
            }
          }
        ]
      },
      {
        "id": "104622e9-974a-4eac-be7c-2ffa44551643",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "48f50e32-3836-4115-b756-bedf151c2bf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd3b5de5-3a7e-4803-b977-6ab480913c48",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a50fd1d-2b53-40e2-a583-4f287ea295bb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80924f1b-a911-4fd1-a0a0-5fd25f5bce1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19bddda6-5b06-4116-9a97-2d4b985fe941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f04a2ae-fc9c-43b4-bc63-8929b9797496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "572e9dba-48f3-4821-993a-15179ec86004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86edbe16-e2af-4837-9bbd-8224c116b0c0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06c5ef1-46d4-4073-bf5a-cdb23b859874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e622e77-8436-4995-a628-04d06a754499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847cf43c-0095-4fb4-86ad-429419324878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c076a3-dab1-4f18-be89-301d4706ef0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a043754-3e40-496e-9c6d-54daf6f31595",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535e7ae1-6093-4d7c-a63a-fa064fdbd6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09b660e-5a5c-4d67-b220-190927b0a3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9913bf-335e-451d-adf6-950dc25c2192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9bead9f-8463-4515-ad12-e8abac9704dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a7a435-8f42-42ae-8f67-cdc1f4465934",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a729f503-4cc9-4fa1-9109-7cd55c2918ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ffbcc1c-6343-4898-9409-b27e74704817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72427e3a-ed95-41ce-8f62-4d80ae945983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73b8784c-fbe4-42be-9ebd-9d12954ed579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2521248a-047a-42c4-9a0b-7b71a2e9eca0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4b608c-a6c7-4ee2-8fff-1736c6ae97fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1132404f-11fd-4533-8d59-4060ddfd4c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d652e80a-fa01-4a05-b764-05308616d01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75ecc786-eaa2-44d0-8e6d-b01dadcbcb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0531f6-6816-42d9-a9e8-bf199e3f443d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6912d7-2ee7-4939-be9c-f8f25df4a86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0327dff-ecab-48d6-ba81-ca0ea6d3785a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cf6264-b014-49b5-a3ba-96c7fe8f7fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9293cab5-f033-4818-b316-feb714e81a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2df35a-124b-4d14-87bd-2bb0da98ea9b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4716ba6f-d135-4687-b68d-c0b0406e36fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e110b08-e9b3-45ee-9436-ae562f4f5f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1a613c-047e-412d-b70a-f198760a964c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "77ed9e15-84b8-4571-9c60-c14fa14be73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d9c8be-4dac-4f25-a62c-72482497d256",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e50904-1e6b-4d43-96c9-78a594c3cc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3e5b39-1729-4503-aae2-b7c505186382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3bdb87-1661-41b6-b703-8fda30eb27fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1507b1-91e9-4524-97ea-fa86c41e617b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc246acd-1c58-46ba-81e2-0119125a6d0e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c314c17f-19c1-4852-b38f-7e5f43edafbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3aabf57-7c2e-4603-aa5f-fc38de315797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5879f9a4-cd65-4c48-81a7-8ed9031b4e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ec139d-e889-479b-b1f3-07032a27eacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325cdace-3288-4d7a-8a2c-9ebe9e2554e1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d523f3-48d7-486b-8e94-f75e386d49ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4bb3d8-863f-4df1-9526-79bf5a019a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047f0c3c-615e-49b1-8764-ea969b430a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "096c67f0-47c5-4b2e-a46d-05494bd77916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7a3485-8535-4626-809d-e8317a29fada",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce18c67-2e35-4f95-ac0e-ead626cd949a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b4ae2d-67b7-4333-bc9c-9d09310221d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25cbc33-d132-4d17-9a9c-bc42c848a435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e87111fa-65fc-4c18-b9b5-d718206c2860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b32851-d8a4-44fc-9dba-1489d95b4cba",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75cbbbe-7025-4d34-af16-9d63055ea098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5a031b-2bda-40ed-8f58-1bd6dec5b945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf822532-d55a-4e7a-8e23-07f25b6b9983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8955c49-8426-4d05-8e1b-4ed4328e5a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f676844f-0b65-40f1-a3d8-b59ce6edea3c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b3b3d8-f39e-4d82-8910-49373abe30fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c98cf6b-ab26-4c31-8180-6bd856e2d3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8552787-d2e9-4f8b-a54a-2be2a6807e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0e1650-92b3-4ba9-a166-1f622b2b9475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae18a25-6e59-42ae-88da-0189484caf79",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cafc3f8-caf2-4b4a-b0ce-01b028702e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e619eab-1a96-4bdb-a65d-17f92e52fd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95469778-a9ab-42d2-bdb5-f94c41bbd747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb004d7f-f003-4819-bd3b-1ffde1d1059e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108c9b7a-c7b6-4121-af4d-54ac8ba9d9b4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e078671-e177-4a94-8693-61380c60d63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1a3818-2709-4900-a97e-d17c0230b12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5989530e-f63f-49d7-819c-a4e0a6b7282d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a1edae-fa2c-4eb2-9f26-6237ba21fdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af975b4d-82a8-4b09-8c4e-1da1efd8091b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f096dc-4ef4-4157-be0c-6099f05204c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a031f231-4313-4b97-b861-d2c11523f75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3f6cb6-0b01-43fa-a7e4-265ce5bc714b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "82583468-c994-4f37-9b98-5aadb4cf5f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72bb9ba-7886-4376-ab73-398a570fefc4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c16f14-b5f6-4daf-9412-c5c403db5a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836a3162-1968-4f72-b9cd-208078fd04f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d326af1d-530d-456e-a38f-20029246547a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "36380f8e-5360-4f82-9ea6-3dc9742414c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77013699-e7cc-4664-a2cc-28d0bb9dba42",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78a5155-9fbf-426c-b241-24ec765c4262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426b9152-bd64-4716-94ec-199edf5cc0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6962e0a-36aa-4d0a-bddf-b647ce8f7784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab1cc7c-a0a1-4952-8213-460ef9f5d2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821eff3d-2486-4666-b742-9ecf602917e9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30eb06b3-520e-450d-8ee0-477d5acc046b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c49406-e5ab-44e2-82f8-87ecee23dcfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf21470f-16ba-4353-b36b-a789f53bfecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd37be0-6a39-4eb0-97f7-f79eb9c0745c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5acff92-45e2-496b-9014-b356a019857a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21c5e74-8a09-45b6-ac52-53c5316ce4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d79301-b358-4922-8a72-4d9bafb199de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52dee97-0176-44d1-bc4d-99c231c99652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a966a60-547f-4fbb-82e3-f24e30d281cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa05f96-514d-427c-b542-8722f007af19",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c194f4-93b8-4a56-b68d-d6ed648d7145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fbda76-8303-410f-8e07-2caa14468e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d59f515-bf9a-4ee7-9a97-5399c03a50b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0854a2d7-5489-4900-89af-0c23a8d00310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b38c37-e51d-460e-8da5-d683a045a580",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b9215f-5317-4a46-b221-bac1eba8f901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4655d0-5b40-4ee5-886b-f68fb66a8be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca05c235-47ab-4c8e-aee5-8f35e7d35a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "682b70bf-6c5c-4f1b-9420-57027da05d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dec11ed-a6a9-468f-a489-cdbe69e52b91",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf61a02b-e676-4449-ab56-84a688410d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77074c1-6be2-410e-90f6-7cf902412583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2401bad2-0e08-4fe5-bf72-0e6302d8466c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b46f08cf-09b3-4f6a-a501-fe1ed0304aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04aa623c-93c1-49ac-910b-c700a644bde5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d8af31-d38d-4a98-a555-33b028761bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e26f36d-ba35-4a47-8e0b-c4a74346f337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c530d8-0086-41bd-86c7-24f97ba9c695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e19090db-cd3c-4812-8798-31fcccc3da17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dac8657-f6d2-4e76-8de9-30c44bfb0cec",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaadc10c-8342-4287-819d-4bf199d24c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5ce14f-b72c-4db7-a18d-02d4230afe11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5214a2c-51e4-4f88-884d-acb234e0535d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5311921-364c-4f21-8b22-89e4697d6120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944e614d-9363-439f-b143-917351dce6e8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3d6c99-2f84-4f37-9aad-d56a71a1216f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc0b57b-efa5-4140-a8fc-0ec1f8be9f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad5360c-e200-4e9e-a21b-754685973eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c47f20f7-22ae-493a-ab8f-e109ca2a7128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459f0228-0b4c-4cd2-9d3c-42f64a231b5a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257c34ce-e081-4542-9cdf-8b5a2db10782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de6244f-179c-41cb-a2dd-33acd367609c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5b1095-8f4a-4a6e-b40c-25c665f394c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db974c7e-0ed1-4d47-a975-16dd8e21acc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390cd7dc-fd63-4a1f-8eb3-ad991aa2d3a8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b800eb99-4a07-47f0-be77-af8fe6b1494d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5dd3f6d-49cf-49c9-ac86-2ef202808e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c7bc07-6d7d-4026-b249-e7e8e435bd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e7f513-14ea-4d21-a108-ae091207c9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a085e9-bc09-42a3-b264-9754327d17d3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9e459e-50e4-41e8-b57a-2c4b9d958982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780d6127-cb74-45d4-a1a6-9b26a14d5d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbc9d26-cf7e-4efd-82e2-630e8fc7ad1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "599c33bf-ac08-4afc-ac00-86b76dda316e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc5825c-d152-4dc4-8628-b16c67c88cf7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c32790d-c5da-4c0f-b12c-8ba1146c75f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865665a5-4714-4480-a1eb-1ab167ce6266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902132b1-9b36-4998-afcd-b493c00755e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd41b8a-e305-453c-a5f2-e7d120c33fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b8b705-5322-4712-a496-8d0d03c05029",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062c325e-6ece-44f9-8e45-9eb4990f8e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54d3732-f909-4c11-9566-2d8e3a39a0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5d00c7-f447-45bf-a254-a43bf6d8b0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6fffb1-ab32-4d40-982c-42295ef3b9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44da6e6d-252e-4e6a-a1b6-15b604a373f6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8b4bd6-db85-4aa8-a440-f2fb9a0d1c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f5e28c-710b-42b8-aa22-b104bba72c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c20237-56f9-41a0-b275-9b51953a9e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93021dbd-859d-4323-baef-b44bfe0575b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f350c6-5f0b-4ef5-9499-1d756d800ddd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777f290e-4e1f-4716-9713-ddf0e4f96652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67b8fe6-9977-42da-8cee-0f8877476ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b782e5fd-cc5a-4d08-8d2b-e910c4ef79f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15e76555-d3a1-43ce-8d5a-380e5120e592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bdf29d-0b5e-4fca-9b41-c60da800e95b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e4803d-d40b-4509-99f4-de5de5a220ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5503f240-0999-4790-94ac-fe4bb8b936b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311dd573-3c12-479b-85f7-7c0b6bce805b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea97502-c8ed-4a83-a463-344d160e64e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81cf0a9-256d-48e7-96f2-75ba3857ff43",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5677b8c-6df9-4215-ac6a-34e64307f856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5041d0-b7dc-48ac-99d0-d9fee4d2af11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e838be1a-05e9-4836-bc4a-2a2240a2fa07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "459bb77a-8139-42f1-a938-903b11e91e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb35ff91-7f8d-45df-915e-ff2f944ab437",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c056bf-4a83-40ad-98e6-17629225efbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c85ed8-617a-4a99-b71f-47ab953a8361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccc0527-51d0-472b-9437-f9483c51a36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd689454-69eb-49a4-91a5-6a798b8cc1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4d7ea7-4e47-433e-a309-6ed8fbe4f3ae",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aef09c1-2421-4d7b-8fa9-64be05772121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71674343-657f-4526-95a6-8c02e032b149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f30d4a0-fc26-4373-a166-82ea14274a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a407d8-2afc-4e24-a401-cc44be712e31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed42af02-3788-4038-9706-3cdde7eaa96a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f09cbda2-ffe9-46a1-9e3c-2c340d0b20e4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f9a429-005e-4193-8840-de634717aff9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aec1e5b7-8b92-4832-a985-ce7633df0465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153bca20-1036-4cb7-9a45-cf3e66416b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1942c49-291c-45c5-83a5-49e80fe393e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7388fd64-8c73-476e-af3b-32e6ae40f11f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b0ec79b-6a3d-4e48-903d-3491a0f59a71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4344b003-7bd4-4a0d-82a7-57f6bfb722b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1324bcc-97a8-499e-9f6d-ec140ec283b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0400709-7f34-48c4-94bc-a74ef2db34c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50daf8e1-8116-4876-91f0-0c817a8e6275"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee623376-a145-4ebd-b948-3c05d6f06818",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7a0248b-c8ad-4dcd-a5bf-d4441071e648"
            }
          }
        ]
      },
      {
        "id": "8150d378-01a7-4bb6-b73e-8c9e0e361463",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "18932252-b90e-41c8-8b61-e458d136380c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82dca2d0-3a7e-4c99-b2e6-ace9addac67e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ebf9b743-e0f1-4aef-ba7b-20e954fb127c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d46c95-d301-44c0-8241-15c8a360c5f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4389ff7-ef8e-4170-97a8-0a998f067a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35c69b4-c680-4cb1-a1a8-2d260d652f2b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2542dcce-9fb0-43d9-a107-3093a31b6a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b97630e-efc9-4a20-8319-de9f96562382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d36e5b-14ac-4d2c-9ab9-651e88ae4f84",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ea3d6a-9c68-46e4-b401-19e211009fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486b3b1e-dd39-4344-9460-3274c4107c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487fa6d5-981c-489d-88c8-3dd84540dea2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4814cb0d-bcc8-485a-9a0b-25f4d006e432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32a683a-ce21-482e-9f3e-eadf8e263800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4ab29f-8297-40b1-8aee-9d7ec449b132",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe14a124-c3f2-4847-8ca2-52eb008afe04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58588b97-96e8-46e5-9590-1e22bd6d98d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f515043-1e65-464c-a08e-5c27f27136ea",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ab330c-9968-4190-8420-7dc9b24ad436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3edc9a-d84e-4dfa-9b95-69ace46d2c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3365f6-23ff-4fb9-8af6-600dae942645",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed67881-f797-475d-aa23-43117a379264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7629f00b-3258-4ce1-b3e7-d7620734b86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75e2fb7-8cfb-491f-bbe1-350a829cbb0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7747ec-e424-4905-829b-096a15465cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5b7e89-0736-42c7-b2e0-08d7a6d22831",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d35fa2-6a22-4f97-8bde-f7e02270f5cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ca00833-8000-4489-97b0-75bab8207a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e76d6c-1ca8-4bcf-a1cc-6f87bccadde2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce45be7-2e11-4ebd-8e37-840a1f89c3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9580d57a-2bc1-42c7-a34c-fac432b36d7f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7346172e-85fe-4aa1-a322-6321fc0fb56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87a6774a-69cf-401c-bab4-b241164b0b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9996a680-a7df-4a28-9f5f-0ff4aae4b128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1adbd9-6fa0-480e-bff1-a6bc583c4ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad118aeb-c3ad-4e13-ab97-3142f0a3a763",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e63b030-3c53-48e6-a8fd-44b65eb37a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28315e74-4a6b-4556-8a07-7f16ac1fc263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f09e3d-26e8-4f24-8420-eb8478b0c3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3a8ec3-9055-42ac-9ab5-cbfabbc9f5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cb5663-fdb7-4726-acad-4ac60dfcea42",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf2ce45-7dfd-4bbe-a55a-90d8ffbd443d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3bf716-5372-4dfe-b951-843d0fd69042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36912979-b612-4a6e-aabd-770689640748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e7fed3-93d8-4e26-a365-5f4b41406e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd77281-b6f2-4362-9657-ef6c0d093be8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fbbcb0-ff0b-4b60-bf69-3301cfbb9841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afabca7-dfcd-46e9-8ee8-152b60e13eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b98f0f-84ad-418e-9e38-b3084eba7804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fc7e57-3441-42ee-b3f9-d771d041fac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138fa26b-e486-4015-8838-a140caa0d0bf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3913eeff-41ab-41ff-a571-bb776f6a2659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1964dd9-7488-43bf-ba7f-0094b7aa6824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a4e8a1-4927-4bf3-936e-61645809ab26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ccf1d4-a598-4fd6-a99f-8a8b3efcdc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a55c05e-1745-4e1b-b8b7-7ab390accb35",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b28e64-d0f7-4019-b38e-4ea2bd3f43a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61fdd4f2-d759-40ed-8de2-3428b99e025d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b6bc4a-a8f2-4938-b556-81157ee5d091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870b1d9b-188f-40ab-9943-5c93dc0c79cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a90397-95d8-4ce6-89b3-a3783824ed43",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8884f1af-6df5-4661-ab02-0fe1aeb0a370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbeb97f7-dad9-4785-8bdb-6fe78468d984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512bd12e-39f4-4eed-952e-5f753495983d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09d9872-c7dd-4e6f-84b9-8057b73df1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467265cd-28ff-4380-8c5c-7c77d90d01e2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc7a41f-4172-4989-a870-344e9b7ee90c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a8a42bb-7ff9-4214-af28-283997052190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74a2e5b-c754-4aaf-b827-92ac99f970cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55aaf07d-555d-4ae8-be6b-9810f0bfba9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc599407-47c3-408d-af83-db96d8e18e68",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415e0da7-7362-4fcc-8664-5ccbf98ca9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993fe78f-4dd1-4417-85b8-bf873c6537e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb48f44-2087-4bc6-9a4d-e648328e3d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572bffd3-98f5-4a2c-a63f-14daaec33826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bf30d5-5f0d-4936-b02e-5fd5ffe5cdfd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd619d48-16a0-4878-82ed-f0f68b28d487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03478e5c-666d-4246-b714-d6212c778008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d65c7d-0253-48bf-893b-9f7ee5b77380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40da589-5640-425a-b9ed-24228adf34a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba19d0a-5a4f-4c1d-97cc-1836872dd675",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a8c397-0aa6-4adb-a1f4-a787a8aa8f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df46f64-5acd-44f5-81db-feaaf0dd53d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd540fd-1fdc-4d9d-8a1e-4292ff40d8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d06b734-a4e6-4b2f-85d2-16e00da48bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2129dd-cf86-4594-bfcd-3cc2d68092f3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e19063-3996-4a26-be97-2e482415795b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297de4be-fecc-434b-a03f-0fee4c710a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b766c1f-33c7-474a-a20d-c7f1e483ed59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf8df43-804b-4425-a5e5-1056296cf75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b382d2a2-220e-4311-82ef-a52fc8e7cfdd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6433cf8c-fc2d-4766-8e35-21065bd8e4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600b45a7-d366-480e-840d-72b24dc0c91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65054a6-3939-41d4-b7ce-af649441ffe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0676cc0a-5b10-492c-bd84-f1c44ed3816b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01331840-3402-43ef-96e6-21fa34430985",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ce631c-2e3a-4507-b891-a4a47749bbfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27019122-fd58-4ebf-976c-fed1b88b1411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f387ed-6fdb-442e-97d3-7b4d427b5e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48e5f5d-529e-40bb-af5e-4ef7388e4b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c616b8a7-a409-43aa-a578-53e2705f4f2d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fba3f33-9155-4f4a-9f7f-9826013b5fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03b9620-649b-4fd1-acb3-e9d0c9747515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1abe30e-3dfa-44a8-854e-a8a4f0235e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7065d3-badb-4e0b-b9aa-67686669ed10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41f8503-bacd-473f-b9ce-31c888723221",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a375a981-f88a-489b-827f-4892b501b160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0a486d4-f08e-4cc2-bc62-3be060fdf4bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12886c8c-584b-4639-b046-b26c7642dee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6842732-c400-49ad-8a43-2d469511da4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed64eb0-77d6-4c3d-bc08-81929a8158c8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e25a93a-3145-4b5b-9215-b919c21d1e5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e461e2df-e8bc-4e00-8f54-9956a65482e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e75cf7a-21bf-42fa-914e-e2d8a8257a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e43f22-3ac5-4a81-9172-cc797404ca55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076ad583-7112-4df6-9b28-ca8c07d5d091",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7995f782-da7f-4916-8efe-d86467a2505f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19060ca1-ee02-418c-8383-543f7d6b9c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc24d474-1810-4347-b682-f58b38dcceb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c3c4a6-4d00-4ab4-8e14-113550e232fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be85c0a7-d80b-4101-8ef4-55a4f893ccf8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20d91ab-651f-4a4d-b8a9-c7d005e4ae48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da6877b8-14ce-4684-a410-f804c75c79c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edfcfd1-f0bc-4618-81d2-3589fb2fc270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20b1ce6-70ec-412f-ad7e-e5e8063f1297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f5b042-8c66-4831-b914-d18cb0e4c30e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cadbe5-315d-456b-a9af-b017b6c0d325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10235684-c22e-4892-a383-de23da66162c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5e2650-4f1a-4dc1-8e58-7c86b8b6e2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623eac1e-3bfb-4156-81c6-28ee86912987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4199dd24-f2b1-4ad0-9891-612a319e04c4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbe60e8-22ca-4986-86ec-e9d8eeedec70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f964181d-c67d-4497-affa-a47b144e05e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f9296c-402a-442a-9c3b-dfafeb9b7fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529fd70a-c4e0-4b03-b54c-cd4dd65071cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a59cc7-dee3-4cbf-9ba8-584f07a33f5e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f188eeda-9422-44ce-83e9-e029d970b4e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42d859fa-74af-4728-8ca9-eee529a07767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5045249e-cc8f-4b7f-b0ec-0c39b23fd2f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aec638b-8f28-4e06-946b-3760e5c9f9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1e31ee-06c1-448c-8745-01f7a11a123e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4407f20a-9f5e-44c5-8d5a-f9a97b92367b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed1b6b55-3a44-45a1-9810-bdd478a4ec28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2032603-1fa0-40e2-a39a-4a3f69803feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd11ac5a-24c3-47e7-a314-7ea981528633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44380160-7830-49a4-94d6-035232dae7fe",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e95a32b-5b8d-4d27-a1d5-d8ec5ab18da6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40759487-cdda-456a-8c7d-5034eaaae56f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624828bd-8ee0-43b3-8991-5f861a280d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099ce6df-45d2-4ab6-8412-2cfc7ad8c666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a436c9-8f48-4b94-9f67-3f34a9cc9758",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886dbe9d-203c-4418-8b20-b3429216ad2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4020366-0c18-4ddc-97f3-7c6f7297754d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c69fcc0-b1c6-41a6-af9f-9a1d4fff12b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e327a4-dfa2-4acf-8b82-d7e078f7b074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187800e8-abe0-41a0-a4df-4387abdbaa2e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7827fa-549e-42aa-9289-d2ff4fdc6308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb75fcbd-39c3-4355-9c10-edccb49f2c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151ae370-68fe-49b4-b0da-5dad7a8f3806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a5ade7-25d3-42da-9b30-1d65b5519c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ba89c7-8bcf-4169-b7ae-21ca7c4fbf4a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2931e2-304c-4785-a601-6f622058b560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee1e0dd-38d7-444b-ac9e-dcb9791dd647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8bd302-9a87-4bcc-934e-49cc86260ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ebd29c-77ea-434b-9955-c11db1d81fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491895de-8eb1-4a6b-9ad8-5c55a76161bd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c31f14-b281-4bdf-b6c7-32f1c608e46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67500ab-2920-4076-b3ec-d77ca006289e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d247348-0e43-4fef-8fc6-6305d7bff504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99fcdf80-8173-405a-a51d-e05f5f46e9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5831a6ea-6227-4b81-828a-32faf0dcbcbc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce1c6f7-e161-4e49-8c05-5863233b4e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53359c58-57db-4ea4-bfe8-16df2300b21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6d2e52-7bb2-4499-aa0e-ef2fd3300946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def046a6-eac0-4bff-8888-7e1dc4850eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f0f875-2f3f-48e0-9a52-e4de6acce583",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632e6792-58e0-4c36-a5ec-687db1c8e25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca411d51-cef3-4fd0-bbda-486fe20c9844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa42bfc-c51c-433e-aaad-610b1137940e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ebbfb4-2cd0-4ccb-8a22-a93d0f0bf505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0640d50-82be-4d9f-82cf-eca39c0b85e8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d6f242-3758-448a-a0a2-a85d5844aa07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d322dbb3-2fe0-492a-a580-63fb0ebaeb37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77335e1c-9967-44f8-b554-dc3c00f695af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe23c7f6-e9ec-4025-980e-be86e7e47c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd4d724-47fa-4eb8-bb55-741da60dfd33",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8f4818-2b54-43e4-97b1-aa9e4863eba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9442e2c9-f44b-4b2c-af5f-c38e80aee22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e92a907-4c80-49f8-8ded-9c80d1c14fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc20581-8ea9-40ed-8b93-60bc1aac972f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b65d9f-68a0-4371-959e-da81d228845f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08213981-6800-4fcb-ba7f-e19baf0daa00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6678273-c4f3-43bc-b5eb-a7242bff6f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19de0463-f82b-4228-8bd2-5e8fd63b59f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1250720c-b363-44de-9f59-037faf0d4b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59bca6a-72f6-4193-805d-64ba1b6ee82d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9714ae05-22da-4e3c-b078-131293b8ca27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f852b772-17be-489b-8291-595b0b308594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb36a115-8201-4230-a994-663794ae3dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d98907-4f27-4f9a-95a1-614a2d717810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc91c9a-c4b0-4072-8163-d0cceb6fcd87",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48f4736-87ca-4fbb-9e38-f13c5f606f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5916c1-cd4b-4af1-9a2e-7298bf80245a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dc848e-85e9-41e0-a746-cbcdf1ea52b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f02cae9-3608-4f5e-882b-c3272ba98e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac2c048-81a9-46e8-adee-1b24088c4bf1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427e7f8d-f878-4ec5-bc6a-fb70bfcd9375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9cc92f-de01-4292-bc9e-03e0afb6cf02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32a74e9-91a0-46f3-afc4-2598511862e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee135e3-6a5e-49a5-bba6-311886a0e969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b786a86c-a6d7-4c00-9b69-1290880b82e6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012122db-bf5a-4a1d-99a0-960ee4205c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a308a9c-376d-46a1-b775-4997f4c2a30e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f812ac1c-f70a-4792-8f0e-36b9a4b9f8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617c60e1-c9e2-4398-b287-3738a80636dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962323b2-4cba-4fab-a938-4324574454ce",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46bbf59-c8d9-464a-a75c-b6a8f399ae1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d195ff-e798-4c54-ae9d-ffa2b4be34cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f899fd-8546-42cc-bbd7-a45e4aa1aab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d36d60-58bc-42e7-bab3-4109693aaca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae39877-fbc8-47ab-8fea-8ac6d431bc4a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68edc99-5017-49f8-a395-36a3dc0821a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b3a623-7948-4a23-860e-31f3627ba00c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a247bf09-72e2-4c7a-81a5-73f76af83b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f203ce5-c777-4018-8459-95e073f3f3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27d7ad3-e44e-4ecf-a971-e999cc90e8f5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209ab94e-494c-4330-a9e8-34761360a61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfb82dd-5b42-4232-8952-e1e2e98a8164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ad3f49-a4b9-45b3-829c-0d92a9389b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b33986-d9bd-4b65-a805-9d98f7a983f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d22956c-6bd3-464f-98dd-0f421771a3be",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ad4ac1-b8fa-431f-82c5-2e40ed18120e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3059f4b8-d989-449e-beae-c97443cd6fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c32b3d-4ec0-435f-9515-b4e56cbd38c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8422b7-dc16-40f6-a7e2-b30f3cc93d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9de54ea-04cc-4eea-b5b3-7ca9dea486f8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c358d21a-368b-4979-b9c5-aeb5c1eb29cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29953cbb-5827-4629-bd80-0a460a8cecce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2613688b-6095-4751-b86d-5fdd91cd50ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdab625-7932-4d4a-8b97-75e66f69b5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d0a4ca-fc8f-4161-922b-adc2cac997ae",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552dd8c4-4a8e-4727-9410-7180e61cba14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1e6b67-d203-4a04-bba1-af32d52a832f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86fac1f-38c8-4d83-88a9-6c04d34640d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d59000-5021-40f7-b5e7-30a7859da371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a614f6b-ee31-47b6-833b-bb19c248c509",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8311bd60-f16d-429b-a58b-7dcd3601c7b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d815701-9a2c-41ef-ade9-b62a9c96ce44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae32d37-6aa3-44b5-8f46-f9c26d3d68a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ee3a27-cfd4-4339-84a5-fffc9302d7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d254cd3-4aae-4033-9602-9c2c4965038d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae31328-a957-45f1-8afc-08d228ade0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97b916f-2856-4a79-addb-1213fc96292a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9fe7d8-4ae3-4398-8124-a93535bd8269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7c8e97-e962-4e5a-b6f8-a1ce161ae8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095166fd-9d4a-4c87-b1f8-fc440e0b0fc5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc69e17-63e5-42a0-90e0-e73371b5d856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e51e8cf5-4fec-4686-838b-d5669d3e2bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f703755e-b550-46e5-877e-0d1a203e0209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f4749d-5525-4861-a376-523acb771bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6545709-e6af-4bb1-905a-b1ca6bd1fde4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f89f3d-4f09-4576-8be2-b1e22cbaef2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f473e39f-8f51-483b-9602-fbdc94516ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a157047-15df-493c-8106-20dea239883f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af2f3c4-edd9-4941-8655-049cab81eeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3ada3f-5d52-4543-b0c1-5a7141c221be",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb065e1a-1103-4af6-979e-4752c0233a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5eea61f-fdca-4722-bfd1-11516d44185e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8123fc3f-0295-4d06-9b96-ca81a4b560a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc60bab2-9512-4fe3-8faf-72f852db3618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d027dea-a997-49eb-8e70-9e5641dca132",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e57fcdc-986f-4160-93e6-92b91db2acce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872889c2-17c0-4e31-8975-04594cdcc333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5c59c2-7e59-443c-9e13-95df28edc058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae200be-e496-428f-b675-3343ef50f4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae61f0a0-874e-4416-b30b-0618ba497c17",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1bdca9-8482-4a34-8739-6e588341bbd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7732b479-1edb-45ec-a566-466846409073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfa0c93-a185-4523-9d14-bae7889128ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41fa3aa7-7a2f-4d0e-91bb-ce91019bb71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c47f72-e16d-46f0-9a0a-e519f165b811",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a831df6-c4d9-4b61-ab96-fd84b49a7bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d3c8fe-b2c4-45f0-a037-8129e055b84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1a1560-f015-4576-b9a3-6792e25d6f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abcd415-0e4c-4f60-8082-e1e506c83a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd4e007-a054-4e6c-bcfc-0e29db8667f8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5319c179-d3e9-4bce-bb37-9a67c29b638b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011ee68f-7447-4d3d-800b-28e640f1c838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5206e00c-b5e7-4463-8df9-5852461a6dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641d35de-2fb8-407f-9993-551b7876f123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2befb8-14b7-461b-963e-b1e4101b5157",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9541bc75-f455-40fb-8b92-d501351d91cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405cd151-3b27-4e8e-8891-d1eee9f7d070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2781647a-7037-4d95-8785-4776f518a6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654ce837-a62f-42e6-a50f-ea1faf8c694a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d933f2-577a-42a7-a7da-8c869e25050d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174c7a1e-283d-4853-a3a9-01e8cf310a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94100764-9453-4b14-b2f5-c7a8e1c47b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872e4d63-3224-47e7-b79a-9bf8bc7985d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35570ec-3881-4024-9822-88c5af5cd349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd45d3fa-6a80-41ad-a96e-6282eb18d34a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a5003f-6ccb-4fe4-af14-dea44942959e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de13b747-5ac6-4ce5-97bc-6b457f5711cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6c8300-6c91-4232-bc90-83820a498247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba8da8c-c3da-4b06-8a9f-9831b0c67f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbf090a-a5f0-4e5e-8e97-16de810d777b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83eeb89d-6f3f-4d3a-8758-04175658e323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f767865-6a20-4368-9b1f-143fad40ce9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ce2927-2cd0-4ea9-a259-7c9ad724acde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a04332d-0928-4150-913c-1d6493622248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc017f0-d94e-4eb9-a50b-b98d1b125502",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a49bac5-02ce-474c-8675-56c4e0d55e21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d18747c-5672-45f6-8999-1c5f22f6d78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99ab4b5-c987-48f3-b40a-590bb030067b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd266e7-ef96-4e43-9742-dbe72f597c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11a9b8b-ed57-4447-9d0f-b84379fef6ae",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf18e6b5-516a-474e-b9b5-43ac5cc3be1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e62ee9a7-8940-43c2-945d-adb488a35b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5488e140-3a5d-4bad-a505-fb05c8f4793e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5bc3c3-d6de-47b0-a368-586606ec2320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a33cf07-a23b-4c68-ad79-86af663df672",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7aa448-e5fe-4d0c-99dc-1afb2e45cce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4dccf7e-8edc-4e08-94bf-96cdee8060a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2624461c-30ca-4113-9da6-f5f59be68273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f722cbd1-2f4d-4f5a-a4c9-764322062e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914c78f8-784a-4ba0-9a44-c4558204d5e8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede0bf11-d00e-4516-9f6c-b3e872985629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "466bf921-d405-4630-b3a2-b3d257abe56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c07b43-6ddb-4b51-9714-a85022b1fed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ce6812-2a55-446b-8a0a-384fed6fb2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c387dc3-f310-4451-8243-abe22d80f0ce",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f59bc38-8808-4049-a0ad-d01798e1e050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b24898b-019e-4fd1-8b23-5b7d2f80ce38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f05527-5863-4043-b55e-6f8ffa043441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5213981-efae-4603-9d0e-1eeaf33419d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95575c0b-4e2c-4cfa-a1fe-59ffc802e116",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1dac1a6-78a3-430e-82fb-273b787bbda0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb926d3-0d4f-48ee-9bdc-bc39fb49d282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc9ab6f-7011-4a46-bc5b-01073b232d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7c7e4c-1740-448e-96cd-d40d38145965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76de0ceb-7836-4e41-a71e-eda94c0bfc2a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934beb49-2824-4886-bd47-a3fd149f1d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a57468bc-925a-48ed-ada3-9ee72f0eca85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec12ffc1-cc91-4cb0-8fda-bc6fcd088c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea71aef1-d5c3-488e-b36d-f9d89bb83602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56360d89-8c89-4dff-9c58-176fc8ea8091",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcee19c-0a9a-48f9-a353-3514499aa8d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "699e5d19-414d-40f0-a213-d85c98fc0d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7e5162-c3b8-4d46-9bc6-862c2b1b8f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc0cbe0-1dd1-4261-ae3e-5d15d204b012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8989c03-c2ae-4695-9e2b-1361500b4be3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11285e4-6e3b-444b-b9ba-3e5a0a4381ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07afb9d2-2ad4-4aa4-9eca-83b474e12ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e53e39f-6c76-480b-b94e-330f56dd13d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bdab9e-26de-444c-b880-5a8c44c30bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa7e777-2d36-43b0-a1d7-6bcd3d4b4263",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b0c71d-a3c7-496d-b7de-876841af0b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc9565fd-d3d0-48ac-b979-4a1f73cab7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cd4f49-f53f-4d6f-98a5-2019b72280cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1089a859-dc14-4b89-a5f3-832766501e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238c2487-f737-4ae4-9e93-6750313172f3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404f800c-d0ce-47ae-b6d3-151c3f0ba896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "212c2971-1c4e-4376-bd87-95c1f2c1b091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5b17c2-521d-4b4c-bdd1-127b7cf46dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1883c3b2-6f8b-4a69-8641-ef91fef6e048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0f5f4a-0bea-45fa-a888-e7161e64941b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd32ab8-dc54-429c-aa8e-b1a2ee024f80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c5fa570-d195-454a-8708-0a32df12dbeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5ce0bc-906d-4993-9532-9881379b82c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f916cae-3e04-44c7-a6ec-c228570d710e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2d8aab-a603-49e8-896b-0c5cc42f052e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ca224a-8156-4917-b898-c135969bb1a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0adcd75-e1c0-4a25-83c3-686b31d448b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90805ef1-3ff0-49b3-87a9-edb0d396b4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bcb9f2-7e9b-4543-b4bb-eb42c6481334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b0aa5a-b71d-4e44-bef6-e1600b2cbed4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486d83bc-4ed5-42d7-be69-1d8ccb00152f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60435f60-886d-4149-916f-9abcb808eddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9119d2b2-fbff-4c31-bacc-c693136c7d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6d8021-7073-4f3a-8fdc-f9bc71b42f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e500bc22-64b0-4ea5-9962-374f46112d69",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed84a22-6c7c-4af5-828f-1bc619c8b6d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffda2f5c-a114-4022-a7e1-b30cb04329d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead9958b-b6f7-4b60-8c68-6463704b18be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df16fe2-53c0-4df6-a779-4728de6d3640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b23527-d4c9-4236-a65b-0d6d72fd363c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764bc36e-68ce-4745-8c00-fba33708df6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae09a7d0-26e7-47fc-ac8c-565dfc28bd41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b336e286-b573-4669-ad18-25ff29fb81dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649d3265-32be-4554-bf22-cf8e0500fd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfebf253-8da8-42ab-a00f-fe226a6f5e52",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec23be7-26ca-4b18-8f9f-33c7ad33d2ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b71affe0-0b29-400b-b3af-de6c83ca8943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "870b9675-2077-4b3b-a6e9-75c96df6d21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036ecc3f-b294-435c-bed0-793f8f4f3d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85511876-c3fe-42fe-94c5-a7b5aab1ff73",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d115dd47-8406-4a7b-85f6-486bc01321be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4829b4cc-b62a-4d2d-8133-29651c4ca0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bd6cda-df22-4021-bf9e-f1d0e2683d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1317807a-d95a-463b-b3b3-af2e7c802d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a53245f-ee61-4417-b674-698e74e8f314",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a90588e-73ab-42ed-9bac-f52874fc1511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00032341-98bd-4d69-9b92-a2496ff16eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7997ee-b640-4e73-9ea8-a99396330ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878a5a90-74ba-4158-af54-3d73d97e9cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14140adc-f2d6-45f4-879f-8fa81c5f0062",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972c2a79-ea6e-4ba4-88c7-a7969859a9e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d9bf46f-3c82-404f-86d5-cb6d194708d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0703938b-4ca3-41ea-ac5e-2f8871ba55bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cddb2f9-dd63-4713-b883-40d8dddaddec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818afaa6-7f2f-4564-abf9-97e9b9ff962e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b2c790-2c1c-4466-8c05-0bc5baca041d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc69e1eb-4d2d-4cb5-bd7f-ee5286c61e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d92b88c-e3fc-4a46-9b66-8975e6331e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ab4dca-d264-4285-b8f8-a27aa2c19006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f59d52-9e47-4e45-ad2c-b2af9ea96fd0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b58add-0779-49dd-bb85-59d04034dc63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d911e5-b51e-43f1-90ab-af05b9bb20f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7617b02-f2d0-4012-9b88-a3b4c644eb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c97acf-4d1c-47f3-95b0-a9bb14863686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3226c3-46ed-4b2d-87ee-e2872dc99398",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c19833-86fe-40cf-8576-244b91d9227d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5790dbb-73c0-4cfd-b0c7-4628a696e16b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696aa3c7-0121-4233-ac36-95f8e48cf41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d2dba8-f0f3-41e4-9450-960642a6e4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0e0d8e-7118-47d9-8e1a-70e3421fcee9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6f424f-c01a-4c44-8dbf-debbebce2708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b8619b-1a63-412d-b688-77ba3f9e1c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9104764-f6dc-456c-b588-0511a895df72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018bfb42-7573-4223-95e7-a7677bca59fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129d0e49-b6d6-44db-bbc9-963983f4e385",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c507a91b-69aa-40ef-a36f-0152d3d6c0f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96f1bbd8-8e49-4324-8c2e-c51973c7a3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0964d0-7f9d-4130-9876-8522dacc25a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17026b16-e5e6-405f-b387-e63b87117669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39beac3b-081c-4cdb-a11d-57cbb808430a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d009807-8a61-4004-baf7-d7cd71b10e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91046bce-ae84-4dce-aee8-c884c144c121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70954821-4843-4bb6-852b-43826acd52bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9407d08-a660-46d6-bd3f-45904023c6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc2a3d2-bbf4-41ec-b897-54dd3be172e3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17f5daf-32d6-475b-92a8-af041c774479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5617cd69-b5d4-450d-a1f4-e850f6cd4c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884ff1ec-d272-4a79-97cb-76b386cc1fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1307dd1-5409-465a-804e-5a6eec3fcc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5393b95-d303-4a29-a8a5-6b0ddf5d6223",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8a0e9d-c159-4eaf-aa56-5da71968c040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef83585c-d155-4b46-8d9c-3bb50287decc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0112053e-7213-4ee7-b5eb-d9bf4c9114a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc5e0bd-ab51-47f6-896f-38ce6520b092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431b1bfc-a61d-446e-847a-e05949408dfe",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66d1ba1-9fd2-4f69-805f-527e0360a3b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6066c598-54cd-4150-9c01-f8e35fc73547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f4c251-92c3-42d9-99a0-8b13f9dcb0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbfb650-7fe0-4a51-8907-3c05979fec26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a386e531-959d-4bca-8bc0-b04fc961136d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c4e1c0-c450-4ca2-8b06-f793ada36966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c79072d8-0d78-4228-8497-3348822dfed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fd80f0-c0bf-4664-801a-da258ad5d477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5779cfc-f7ea-4972-b666-7ebdadb14d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0ee441-ae20-4bbd-bc0f-81c7945884e1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5de6f4-1db1-415f-a415-5806c7e5cd00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b1a8d98-6917-4e5c-8452-220585b0255f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7a6589-078f-47c4-a846-57efb520f163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11014539-5031-4924-bc59-a981346e0445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fe9b8c-0fd4-4039-85c8-d3ff7ec94fbf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435a4bdd-a165-44de-8dc2-2e76fa88710c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bf90c7f-a1cd-4256-a74b-1e0c90f3e540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e87ea1-af8f-4df3-bf49-dc76cd94b029",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1d4fce-b7b9-4597-8b28-b7a6d92e006b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68e050f-1177-412b-ba29-1bebed481bec",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3142c60c-0488-489b-a72f-a4a6e7027f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3244e65-f8fa-43d6-937d-8c49653d0f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bfb1b7-aae7-4aad-bade-c6900eff0061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8c9dbf-d16c-475d-b134-73b1d62275ef"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43d9a850-afe5-4888-9289-03aa4057dd80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c168e2c2-f8ac-4a80-a876-8e241d9b11af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee9ee35a-8b50-4866-84c9-1138e7063d60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdd57ec7-fe06-48f9-9565-5890ffd3f7ab"
                    }
                  }
                ]
              },
              {
                "id": "918ad6ad-9ef4-46f7-8b4b-cf9101d07d5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aae538f1-e6ff-413c-84c1-37d14ad48e03",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129da305-522a-4521-ae7a-b91630918c8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fe22766e-0442-45eb-b460-6a66ddf48099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae74c6d1-2ec0-4a3b-b41a-bd20c5cfde56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "462ff163-621b-4da0-bbb8-481cd684b484"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdb8892b-6fb4-41df-81b6-e0781ac9ce4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5949ab89-e113-4fb1-a0a0-d19b8bbcf0d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8350b2d-5f53-4ff3-9a69-064158eaf3c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe83085a-8327-440e-a123-67d8f83b312c"
                    }
                  }
                ]
              },
              {
                "id": "8e80b15d-d2f5-4800-b499-57b231f0c981",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "00522185-7c41-4c52-a0d2-5b8d92e90c8d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49ad052-563a-4d09-9b97-c2a06dbd913c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4175d553-2913-40b1-a9e3-5145970466c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9fc231-d345-4f60-af9f-68e1b0257a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbe1699-61d0-4793-a94c-0d1edbf5ee0d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c71eac85-b2e7-4330-bf5d-7b8efb75a378",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f896d057-88c0-4a68-be76-5ec5d690bf94",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "baa4c652-6b8e-443e-940f-4407cf0fe6e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9173be3e-3c2b-4313-9e75-0aa7ecd52ba2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "760c86b8-7218-4387-9e63-92428b87f943",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e482bc78-f760-41aa-ba3e-2a173bc10c8e"
                    }
                  }
                ]
              },
              {
                "id": "3f25e327-f176-4c91-9bb9-07d9cbe5a288",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b9a7d2e-8e24-4ee3-b5e6-0c6cfcce8c93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a2835103-93d3-44e2-a7f9-198346384554"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb8e59e0-888c-4758-b532-2b78b88e2903",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3af41d99-96a2-40a2-966a-10ec674f9e46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e56ca59-816a-42c6-83ae-5d9aef60090e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bd1e7ea8-0fed-4043-90b9-299ad82b1b30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e08be016-6883-4852-9e01-dcc20164e643",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06b64451-1b0f-45c4-9993-ce0966206cfd"
            }
          }
        ]
      },
      {
        "id": "f9fca1a9-4408-476b-8fbd-58a7f9617e93",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "73769517-307b-463d-9038-135fba89573b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de594e09-2014-4b7d-b8c0-0c90121d2e61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29c71e4e-77cf-42f4-a639-4d5fe587411d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbc1edb-1966-4101-bbd6-d4ed49061a83",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "192fd514-ed54-416b-9f4d-af60ed3087b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89355ad-8b04-43e4-95ec-cd6a16601926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b765136-0ec9-4ad7-8193-4f47f596d03d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "838b165a-fb58-403b-8d92-d8bec1ad783c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f317bf5-0387-44cf-b928-f3c9bc3b4ebb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "889653a7-9f6d-491f-ae93-ef2925d59d63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea75d5f9-667a-4cb5-802e-df06fda6f6fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c648918-6a0b-43d1-9c96-fa6604c69beb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3cbb027c-1faf-42d6-8fe3-229f91eeee2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c96dd328-984f-4801-8e70-c4c25049e2bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac61ff46-7576-4a53-825d-ae47626246ff"
            }
          }
        ]
      },
      {
        "id": "1707c22a-8d24-47ff-89e4-e977aa3f5e28",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "00ec7ed9-0dae-47e7-8f18-7d0913173254",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3b407de-4026-447c-9b89-b5e13097cf01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ab478fd-5c75-49b6-a632-0d5ccce75753",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4505c5-b203-40c2-a376-6c07b4af77cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e9f6584-1621-47dd-9e67-d23cf7a20930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "365d6afa-1693-4255-a76a-ad154b2eb456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "893f84a5-fdd3-4386-88a1-ebf229ae58ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "863cb438-0fed-44fc-8150-5b877f5285a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbed5897-a694-485e-b729-d78a3de415da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e29b3fa-69dc-47e5-a28a-300f9657a67b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea217e2d-87cf-409d-9aed-bf69205fd8d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97aa1981-554d-4e81-a434-d8342e4c6df0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "365898e0-5aa8-4e68-92f7-29e58bc36a49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53241553-4a81-4789-ab48-4502e0ce7f92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1914dae-9fc2-4175-9197-359cf45dc89b"
            }
          }
        ]
      },
      {
        "id": "fcdc7932-a6f7-46f8-9501-701775401409",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5d6f07e6-b04a-434b-9360-1346b3c7df93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a792a06-ab36-4a5b-808f-46f0dc4560e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8d92da5-0439-48b9-8d61-76aac906cddc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bae1f4-7b06-4ba2-aea5-94e43519fbb6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "498266eb-5e0b-40aa-87fe-b26cd67b4bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbba4a7-9527-48e2-b786-0196463f2835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a2423b2-68d6-4658-8191-c0ecea55c42c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bb2eec8-5c3f-4e02-ad2c-c53e79574df4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e503eb54-a61d-4879-9014-24f9bae96e81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7383d70-7337-4530-a6d8-ab6dd00a8141",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f10fcb41-3b5b-40f4-8bac-33a7bd55349d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99d2c890-72e4-4fdf-b7f5-ff52272c937d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f84cd427-0377-4bcb-8d3e-aa60ba22f0da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "317906dc-6e2e-46af-bb53-5088c7884f1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd90236f-a9fa-48ac-8998-db6f76cb685b"
            }
          }
        ]
      },
      {
        "id": "404caa53-51ec-44f2-b2e4-01fee64d449f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcad9aa2-1988-4995-9c77-75da88ac7dde",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b58136c-5cc5-4399-841b-87a8840e0c56",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5069b258-9c59-4c5c-8487-f1fdeecb90f0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cc51cf5-5358-464d-9058-f2f0e7c67ac5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e740ab66-3777-462a-86c2-4a9b91428930",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 138.64788732394376,
      "responseMin": 7,
      "responseMax": 5076,
      "responseSd": 402.7750603700533,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695256393771,
      "completed": 1695256448805
    },
    "executions": [
      {
        "id": "ff4c1edd-1336-43b7-8df7-c1bb1831ee2e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "197b6b57-2f86-4656-ab6b-d0d860c540d3",
          "httpRequestId": "e8e04f30-52f1-48a3-923d-2e64e9e29e67"
        },
        "item": {
          "id": "ff4c1edd-1336-43b7-8df7-c1bb1831ee2e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e222004a-26e7-460b-bc9e-93f7d683ecf3",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "fbd67085-60e6-42a4-97ac-1730de519ff8",
        "cursor": {
          "ref": "761e162e-b5eb-4ac7-93db-d9306dc7aaf2",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cb10afef-2809-4649-9dd1-e32d5c79e535"
        },
        "item": {
          "id": "fbd67085-60e6-42a4-97ac-1730de519ff8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "46d9d56c-0a78-4b57-bc89-f09299b67ede",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "9329969a-5a06-4a9d-9014-7cc3d4a61dc9",
        "cursor": {
          "ref": "45514829-8674-4fff-a08a-5d7bb0539802",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d2758258-7bf8-4d3a-8590-6819dfa9a256"
        },
        "item": {
          "id": "9329969a-5a06-4a9d-9014-7cc3d4a61dc9",
          "name": "did_json"
        },
        "response": {
          "id": "01e9345d-8ac7-40a3-a441-127d5fd6524a",
          "status": "OK",
          "code": 200,
          "responseTime": 381,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c7fe28-1a83-4c65-9a3f-77e5b25d0d39",
        "cursor": {
          "ref": "275a9499-675a-4815-b8e4-d67bf0c1474d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7dda354-f023-4f6e-84eb-0aaf567b7b34"
        },
        "item": {
          "id": "c4c7fe28-1a83-4c65-9a3f-77e5b25d0d39",
          "name": "did:invalid"
        },
        "response": {
          "id": "7ff75a54-38c4-4546-aa93-56209bf7c3d0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 454,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c7fe28-1a83-4c65-9a3f-77e5b25d0d39",
        "cursor": {
          "ref": "275a9499-675a-4815-b8e4-d67bf0c1474d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7dda354-f023-4f6e-84eb-0aaf567b7b34"
        },
        "item": {
          "id": "c4c7fe28-1a83-4c65-9a3f-77e5b25d0d39",
          "name": "did:invalid"
        },
        "response": {
          "id": "7ff75a54-38c4-4546-aa93-56209bf7c3d0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 454,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59eda5ee-9319-4bb1-afb4-733e1e7b39f7",
        "cursor": {
          "ref": "99bb6e2a-97b2-4c1b-9842-4935f25089cf",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e1f07efa-e768-46b7-9632-9cbf5abe010f"
        },
        "item": {
          "id": "59eda5ee-9319-4bb1-afb4-733e1e7b39f7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "60de65b3-d557-40e8-b7f2-f5a96ab4e5fd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d6581e-e14f-4026-88ce-762e703d69c4",
        "cursor": {
          "ref": "fd4ce309-8d71-487c-b108-cc619432d77c",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "00d2f8d4-a34d-4ba5-9a5f-97c97491e4f8"
        },
        "item": {
          "id": "d1d6581e-e14f-4026-88ce-762e703d69c4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "500aaa3f-f211-4cb2-966f-2143750a3f75",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224c4141-d525-4d63-9ddc-bef91ce086b9",
        "cursor": {
          "ref": "622b4d8f-3ff8-4017-bc0a-ca4923e0f39d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ea9b3a47-ee8f-4427-8ba3-ddb0f5b69228"
        },
        "item": {
          "id": "224c4141-d525-4d63-9ddc-bef91ce086b9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5864ddc1-625e-4090-9e4f-367bbd66eb85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959f6962-f0ef-4328-875a-7b9558dac1b5",
        "cursor": {
          "ref": "9dae5f3e-4919-4043-9711-eff1ad13bf57",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b7352693-5f1c-4899-861b-55872f671818"
        },
        "item": {
          "id": "959f6962-f0ef-4328-875a-7b9558dac1b5",
          "name": "identifiers"
        },
        "response": {
          "id": "73ab5e23-381a-48e4-8a67-76ed89093c86",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a04916-93b2-44b2-9689-27f849ecdc68",
        "cursor": {
          "ref": "3b4ee655-98de-48d0-a80f-19759b847c01",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7074bddb-f03a-4a14-a3b4-4bf27a6ea2ad"
        },
        "item": {
          "id": "b2a04916-93b2-44b2-9689-27f849ecdc68",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3f8d1d20-1d16-4212-95f6-589c0da51d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3549783d-75c2-4ae5-bb95-2ded57c77303",
        "cursor": {
          "ref": "6486de56-3b32-4a26-8035-fb6379246615",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a33d8c48-17f5-477f-be3f-ecbfde0c9d8c"
        },
        "item": {
          "id": "3549783d-75c2-4ae5-bb95-2ded57c77303",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "adeb9f5f-36fa-4c20-9c9c-1b7111c1302c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7419118-ad47-4c87-9750-2f1437abb9eb",
        "cursor": {
          "ref": "5b99e0a9-dd45-4a6a-9327-a3bf93a49779",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2cab20a7-e642-42b9-b1fc-2947c19fd0a2"
        },
        "item": {
          "id": "b7419118-ad47-4c87-9750-2f1437abb9eb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d82fd4ac-063f-4f03-abad-1a8c5afa9a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbdf3a8-0ac4-4c9a-b531-c772718c5f53",
        "cursor": {
          "ref": "e4e40847-76e6-45b1-98d6-77e4e837bda0",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "58c6ca04-c830-400c-955a-0334188afcbf"
        },
        "item": {
          "id": "afbdf3a8-0ac4-4c9a-b531-c772718c5f53",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d55da44a-c190-4bbf-9aa4-c4ea688616cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae02505-066e-4be6-8d2b-56cb60f22953",
        "cursor": {
          "ref": "6ec6cf16-7443-4639-9cfb-97da67407d5f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a1857aec-6494-4082-b5cc-9c8150439ec0"
        },
        "item": {
          "id": "bae02505-066e-4be6-8d2b-56cb60f22953",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e724c88d-b48b-4bc2-9131-7790714bcdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138951e0-e9a2-4aec-a0ac-088b8af10581",
        "cursor": {
          "ref": "6fa07dc4-635a-4b5e-adc5-b49e72a91839",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fca19bd0-6ca4-4001-9646-c4da86cce4a0"
        },
        "item": {
          "id": "138951e0-e9a2-4aec-a0ac-088b8af10581",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6fda7d51-d3e9-4c70-8c2b-30877e1b619b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f0717b-e419-413c-9018-6d7b610f2b36",
        "cursor": {
          "ref": "de8fa9c0-7e3d-4911-9957-7dc5229853a0",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e526602e-aef1-4fe9-9045-ab63a03598bd"
        },
        "item": {
          "id": "a0f0717b-e419-413c-9018-6d7b610f2b36",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5e32d92f-6a95-4983-9a9a-53bc205e4d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6cbbe4-e2e2-45b1-bb9d-48fc34b5d687",
        "cursor": {
          "ref": "b35f73e2-731b-4b0a-8122-f9e596f23343",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "531546c6-f250-4397-a56b-bbf5ef90b773"
        },
        "item": {
          "id": "3e6cbbe4-e2e2-45b1-bb9d-48fc34b5d687",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c1039068-71e9-4e7d-9d0b-02fd7c6fd91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c73e9d-7854-4f7f-9c21-01631edbe054",
        "cursor": {
          "ref": "b930a6f1-b4a4-4796-a415-d8a3dc4cadfb",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c144350d-a349-47bd-9322-ce4522f985b9"
        },
        "item": {
          "id": "a7c73e9d-7854-4f7f-9c21-01631edbe054",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "31978f6b-1e13-4437-9c04-7b50f155810d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab30b9e7-66fb-4ed1-baa3-744ade9cba45",
        "cursor": {
          "ref": "cc48d6b5-0db8-46d5-b938-fdd93fa057a9",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "18cdae82-6095-45b8-9f4a-8d9cb736dc16"
        },
        "item": {
          "id": "ab30b9e7-66fb-4ed1-baa3-744ade9cba45",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "18a43ebc-fbeb-4da1-a8d5-3bd836e39380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1567a6a9-d479-46d5-97bd-7047f8cda18a",
        "cursor": {
          "ref": "af2a46eb-253a-4c60-afd6-7b2ec58b0016",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "45c44aca-aaa9-4a89-80b6-72be59eade09"
        },
        "item": {
          "id": "1567a6a9-d479-46d5-97bd-7047f8cda18a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0a8bd7f4-ffa2-4e74-80ad-357f178cac53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37073727-ebfb-4978-ab3d-6d907f46e0bf",
        "cursor": {
          "ref": "e7da4d68-f658-4614-99e8-eb1a7a93118b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e35da260-c524-439d-9666-63fbd2a712d8"
        },
        "item": {
          "id": "37073727-ebfb-4978-ab3d-6d907f46e0bf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "05e81e2a-ca77-45fa-a0fe-6931f946d5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4587a35-0ecb-41d3-93b7-a183773c7258",
        "cursor": {
          "ref": "085aba93-bf19-41b9-aac0-6aa4a3c6c09d",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "12f0f5cc-aaa9-456d-88d0-5980a5267fd7"
        },
        "item": {
          "id": "c4587a35-0ecb-41d3-93b7-a183773c7258",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c59397a8-e737-4d19-a6af-2cb47b145442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61a079a-ddc0-4263-9c7b-11dab012c5c9",
        "cursor": {
          "ref": "80a870f4-9c37-4d75-a1c8-1d7853b2e973",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8c93513b-1f63-41da-a3f5-8afaafe002b0"
        },
        "item": {
          "id": "e61a079a-ddc0-4263-9c7b-11dab012c5c9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "296a3fd3-a9ee-4873-a977-437f4cb4c039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d8b90a-27f2-43fb-9b13-db7f31b7314e",
        "cursor": {
          "ref": "61c4cccc-4cf2-48ac-9e75-b3bbbfc67bc6",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d1e467ac-6a50-4bf6-a2db-c4b3659e5032"
        },
        "item": {
          "id": "80d8b90a-27f2-43fb-9b13-db7f31b7314e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e25aec59-4bab-4348-ac99-69ecce6a8a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fe05ee-9f79-4c47-b15e-31262dd4f05f",
        "cursor": {
          "ref": "7bcfc7bb-6413-4f8a-a6e0-aa63ac30bf4c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e90f90b0-62a2-47b1-b745-40bc34254955"
        },
        "item": {
          "id": "01fe05ee-9f79-4c47-b15e-31262dd4f05f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "33cd9c3b-5e4d-401e-ba0a-fb5e7d4b501a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0de507-4eae-47a0-a8df-69891afa7f5f",
        "cursor": {
          "ref": "dcb3ad1d-b2b3-41b7-ae99-f5abf3d3dde6",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "657f9c04-595b-49ae-93db-2f4114245f78"
        },
        "item": {
          "id": "cc0de507-4eae-47a0-a8df-69891afa7f5f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d0e996c1-163c-4882-914a-767027811566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4204a19f-97a5-4821-9fca-32da686f47a7",
        "cursor": {
          "ref": "f4d05284-ceeb-4e84-98b3-38e6852a45f7",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "db37285b-8574-43f5-a6df-bd392892298e"
        },
        "item": {
          "id": "4204a19f-97a5-4821-9fca-32da686f47a7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1271aa79-ddf8-4452-b1e1-db967b42558c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47589a2c-0b9d-4c5c-b682-3b65826f45e3",
        "cursor": {
          "ref": "c49899b0-0414-4fb3-a6ea-e76b45ca6819",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3a8c118a-7dcf-4731-87e3-05d36d5cc9cf"
        },
        "item": {
          "id": "47589a2c-0b9d-4c5c-b682-3b65826f45e3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "388fe036-d382-4015-ad41-9fd67e736612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4405e9cb-8b9a-4aeb-848b-ccae208af5e8",
        "cursor": {
          "ref": "99517bcd-b407-4fff-a54c-a08f1beba816",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ea9130d4-07d5-42f4-aedb-8e92c8939487"
        },
        "item": {
          "id": "4405e9cb-8b9a-4aeb-848b-ccae208af5e8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fdd88a4f-3981-435e-9a48-624bf4f02f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bd7d7e-c186-4d74-9a4b-d95aa8bce647",
        "cursor": {
          "ref": "e6f75f5d-e03d-4a0e-b6ae-0e977ece6542",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ae83d9e1-3b3d-456b-8f22-82e20b2f7d3e"
        },
        "item": {
          "id": "b1bd7d7e-c186-4d74-9a4b-d95aa8bce647",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4ee4030c-5919-4801-89da-202c7c31df49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55892c7-6a14-41f4-823c-a60c0c4b8068",
        "cursor": {
          "ref": "39c8f42f-a99a-40d2-b639-fe06a488fc83",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e295eaab-e568-438f-a53a-232ec89f3d9d"
        },
        "item": {
          "id": "a55892c7-6a14-41f4-823c-a60c0c4b8068",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2e7b398d-b0e5-4a1b-b57e-f0905e02af0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022372d5-382e-4af6-8c2f-f8956fb67b10",
        "cursor": {
          "ref": "a19c8a90-42c9-4f35-a4be-9fbb5bc167fd",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "456e213f-2833-472a-b328-c4c38a65c2f0"
        },
        "item": {
          "id": "022372d5-382e-4af6-8c2f-f8956fb67b10",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "00f08e70-b14e-4160-8d6e-192abf86ee54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff73872a-28f0-449a-b996-3b43f81f1c80",
        "cursor": {
          "ref": "eaa9526e-9c62-435d-98cc-13f0b51aef00",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e7aec6d6-a384-46bc-98ac-922edf833c7d"
        },
        "item": {
          "id": "ff73872a-28f0-449a-b996-3b43f81f1c80",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5fd969af-f3c3-48fc-b326-48b516bf3ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3108183-ea8c-4f7e-9972-df8940b1f5e0",
        "cursor": {
          "ref": "acdf43d2-7eb9-4948-8180-e976555b98d7",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ea0938ed-f0d0-4b6c-96fa-f879ef526956"
        },
        "item": {
          "id": "c3108183-ea8c-4f7e-9972-df8940b1f5e0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "df9a7ed1-60f8-4a32-980f-4f9465a2b95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2e3e19-32b3-4bea-be4f-5d9004254f26",
        "cursor": {
          "ref": "9e38c099-ec29-4b33-b5c1-1e2cfd885a86",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fb5a912f-fb1a-49f2-acbc-385b2c003bba"
        },
        "item": {
          "id": "4e2e3e19-32b3-4bea-be4f-5d9004254f26",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d7b9505f-8525-4fbd-ae99-83141e40b23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826f2597-cc84-4ea2-b97b-3d30866dbd53",
        "cursor": {
          "ref": "025afb15-9210-41be-8689-b192b56855bd",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9260e209-e1de-457a-a02f-b7f7580ea09b"
        },
        "item": {
          "id": "826f2597-cc84-4ea2-b97b-3d30866dbd53",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "61bbb1a7-6be9-44a8-a9f4-da19e126d083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ceaf8c-74ea-4372-87ad-5eb0a4a5aec1",
        "cursor": {
          "ref": "61f9606c-96e4-4557-9cf0-1c0eb8ab3334",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5208268f-3d0e-47f4-83d0-17302e3521af"
        },
        "item": {
          "id": "81ceaf8c-74ea-4372-87ad-5eb0a4a5aec1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4d1077a3-2007-409f-b370-8f90eff11871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1643459-165d-4988-82cf-3e1d7055e1af",
        "cursor": {
          "ref": "b6ee0834-8097-44f1-915e-ed528a9d08e6",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5b6208e3-1dc1-4e59-bca2-567a3fed3f77"
        },
        "item": {
          "id": "e1643459-165d-4988-82cf-3e1d7055e1af",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1323663a-fe29-4b71-8e06-417de1ada304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d647b4c-96ea-44e8-a62a-972f54d91c5a",
        "cursor": {
          "ref": "d506a7f0-bc2b-46aa-9f27-8ebb582a1a3f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2dfa7812-07dc-4672-9792-54bcfcd28a4c"
        },
        "item": {
          "id": "5d647b4c-96ea-44e8-a62a-972f54d91c5a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "352ca29e-6519-47e1-ae7f-a5895c8a3c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111a65e4-303d-4092-9e0a-010c9eec2657",
        "cursor": {
          "ref": "3b667c33-ff20-4c66-ba7a-8fc1263de37c",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "43d49dcc-f6bc-43c7-8985-1d12d2c0a3e2"
        },
        "item": {
          "id": "111a65e4-303d-4092-9e0a-010c9eec2657",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ff6ddc5a-ea06-4e2b-81af-523b98106211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec6ffcb-599e-410d-a2be-46c249de642e",
        "cursor": {
          "ref": "3398a3d4-3830-420a-84f0-eb7e006c0c72",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "188f85d1-2a32-4a93-8480-53c533cff3b1"
        },
        "item": {
          "id": "0ec6ffcb-599e-410d-a2be-46c249de642e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4cdcc7bf-2868-44a6-b1be-6e2516ef568a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632bfc8c-7241-43fd-8aeb-91f6bb8c22ef",
        "cursor": {
          "ref": "2785c6d3-b8bd-4019-9f59-b73736fc0551",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d94dda4d-1b6a-45c5-8c1d-4bd1d3ea4c7e"
        },
        "item": {
          "id": "632bfc8c-7241-43fd-8aeb-91f6bb8c22ef",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "33a0b1cf-ac27-4950-ab73-a26e47645bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a63df3-cf8e-4c2c-89c6-5f643fd8939d",
        "cursor": {
          "ref": "60237e90-a9c1-4cc5-b89b-8fc31990dc79",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ed5a4a09-c20b-412d-a8cb-2d6c2d5c5a87"
        },
        "item": {
          "id": "d8a63df3-cf8e-4c2c-89c6-5f643fd8939d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "352e9e4e-c63e-4697-a305-d0f2a6186993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37257fd7-c7de-43f8-84a2-2b6abb0484bc",
        "cursor": {
          "ref": "c2f00ce1-2240-446c-a280-b2333e9e7fb2",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5dbcd8a3-5652-451d-9b31-564b367ef705"
        },
        "item": {
          "id": "37257fd7-c7de-43f8-84a2-2b6abb0484bc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5e3e671e-61cc-43ba-8584-c4810e0e609d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768fc61b-ed38-4a30-b08c-d388fcf19534",
        "cursor": {
          "ref": "981f84ae-aba4-4b9e-ab24-182d1524af45",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "36c28ed2-1a9d-4073-9a77-99870d03bd6a"
        },
        "item": {
          "id": "768fc61b-ed38-4a30-b08c-d388fcf19534",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d991ddba-9576-4df0-9c13-c1dab874d9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43af7907-6519-4dab-b415-f3ee2910e527",
        "cursor": {
          "ref": "6a676152-c450-4e6a-a88d-4061d840eb06",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "090cdaaf-8a7b-459d-bad8-1c16b8c5e215"
        },
        "item": {
          "id": "43af7907-6519-4dab-b415-f3ee2910e527",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ac4a34c7-3349-4e32-b92d-90465b4c3e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cc2b2e-81f3-442b-b910-77da53b505a4",
        "cursor": {
          "ref": "81baadc3-825c-43d8-8742-f3d6432336e2",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "eeb126fb-4332-4592-ba6c-edc2c354a709"
        },
        "item": {
          "id": "e9cc2b2e-81f3-442b-b910-77da53b505a4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b3f33359-e153-498f-b8c8-6c810a80c665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f27ddd-6aa7-4646-b741-34a28ca7c834",
        "cursor": {
          "ref": "bf978152-83b3-492d-ab45-9c3dd7e0c070",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e0dc3fea-9ba9-4872-91f3-f621084acc20"
        },
        "item": {
          "id": "41f27ddd-6aa7-4646-b741-34a28ca7c834",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6cd483fb-d46a-41e0-a0b6-9bb73c940b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fee18c5-9f57-45e6-ae33-7b610175093c",
        "cursor": {
          "ref": "82a5067b-7dcc-4cdf-a4b0-662c12fb20f5",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4b9f7759-7ef7-4bad-a55f-3ba7b94a5695"
        },
        "item": {
          "id": "6fee18c5-9f57-45e6-ae33-7b610175093c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3cabe1cb-7246-40c3-b92f-6e0f51537f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2572a784-f665-42d9-8c7b-a90031659854",
        "cursor": {
          "ref": "8069ff0f-5c25-4a3f-bcf8-2825011dba55",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b6fd5103-2426-4d44-ab4d-487aef97c9e1"
        },
        "item": {
          "id": "2572a784-f665-42d9-8c7b-a90031659854",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "32b35777-6262-40e7-9c9e-318bc727bab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e61e7f-98bc-4f22-bcff-b5166611921b",
        "cursor": {
          "ref": "74b7a3ed-b105-4ab5-a857-d3b76ede230d",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a1007ee6-8bf4-4b06-a073-38f21e029cc8"
        },
        "item": {
          "id": "94e61e7f-98bc-4f22-bcff-b5166611921b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "32b5b7f4-9f9f-4f97-aadd-8e2f926a5a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcee3c6-83fc-4c8b-a4e8-0c40371c9707",
        "cursor": {
          "ref": "b3554470-2bcc-4b67-bc5e-5fbfcd4cb925",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5888fe65-c37a-4c5e-a3cc-a5914b2df0c0"
        },
        "item": {
          "id": "3fcee3c6-83fc-4c8b-a4e8-0c40371c9707",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "56c82fc3-4a3a-4f96-a14b-aaf7906652de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6af9e4-7422-4b05-ab80-e0bd9ef4e93b",
        "cursor": {
          "ref": "bd29e9cd-0a59-435c-a69e-69ca8ca8d7da",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8f4ac904-5fb0-4ce2-8632-b932d6fd157f"
        },
        "item": {
          "id": "3d6af9e4-7422-4b05-ab80-e0bd9ef4e93b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "96c2fbc1-47e4-424f-a537-73d713d906ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b3c0a9-c3b1-4c3a-b729-4dc02f2d31cd",
        "cursor": {
          "ref": "f93a29da-b47c-4817-add6-71fcc3b68dc4",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "988b37ff-ebe2-47f8-9db2-13a121a42b5a"
        },
        "item": {
          "id": "26b3c0a9-c3b1-4c3a-b729-4dc02f2d31cd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f18478c4-2cdf-468d-87ae-5a9c7156901a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00705d38-9f49-47b1-b26c-d54d7e37e2d3",
        "cursor": {
          "ref": "9035e1ac-7deb-4e77-be77-3232cc8e14ce",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "aea965b8-377d-4670-a242-bb44e94650d4"
        },
        "item": {
          "id": "00705d38-9f49-47b1-b26c-d54d7e37e2d3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "04241e1d-6a7b-4ad6-a2b0-53ff3dddf014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8970c803-c8c5-4f78-b60b-c566c0647978",
        "cursor": {
          "ref": "96cc702f-850d-45d7-b36f-ac949647df1c",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8d4a24ca-ece3-4e94-ae0e-95626f764542"
        },
        "item": {
          "id": "8970c803-c8c5-4f78-b60b-c566c0647978",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a3fa1b39-0b85-43a9-9dbe-f0b57fa703ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c47753-affe-4fb8-a137-2e19994037d9",
        "cursor": {
          "ref": "035d7705-09bc-4fc8-b5e6-ed6f0b4c358c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d6ccfd20-f1fe-4470-b58b-d0774ff50044"
        },
        "item": {
          "id": "26c47753-affe-4fb8-a137-2e19994037d9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8e9720f1-d888-4453-87d4-af2cced48112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0654743-0779-4b7d-a402-3a37916aa65c",
        "cursor": {
          "ref": "70b3e5ed-f2b4-4cfe-a7e6-4be6dc7dfe33",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "993bcbbb-95bd-4f53-905c-1464cdf8c096"
        },
        "item": {
          "id": "d0654743-0779-4b7d-a402-3a37916aa65c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "db32392c-9a7e-4470-836d-fbfa28e63079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a126eb-f37f-489d-bc03-b84527d29f62",
        "cursor": {
          "ref": "0e1dc89d-2e97-4a44-bf88-e58ed594c3b9",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ced80737-829b-43f8-82ec-87da629cadaa"
        },
        "item": {
          "id": "11a126eb-f37f-489d-bc03-b84527d29f62",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7b4928db-fe94-4b9c-9f09-7a9329e3450f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62960826-1efa-420f-bf9e-098987d51062",
        "cursor": {
          "ref": "0af89f6a-246b-43d6-806d-0e4a72a64321",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "357b02df-b62f-409c-9fcd-80349dbddab0"
        },
        "item": {
          "id": "62960826-1efa-420f-bf9e-098987d51062",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d52de9c2-258a-4894-be54-3a984eddfcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d26834-2e53-4d1b-bf49-b949c2a859c7",
        "cursor": {
          "ref": "6fed14e3-cd70-4497-884a-c5595c9f844c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a5a97ea3-2c73-45ad-a410-a7ffd6eedcc7"
        },
        "item": {
          "id": "99d26834-2e53-4d1b-bf49-b949c2a859c7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0bcacf2f-04c1-482b-854d-109dc3a6e308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b9d4a2-7593-4904-bac0-cced5359636e",
        "cursor": {
          "ref": "d8d5e169-ab4e-4aa8-bd5c-5579641156e9",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b952cef6-95ad-4477-bd90-fe67aff438a5"
        },
        "item": {
          "id": "98b9d4a2-7593-4904-bac0-cced5359636e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f5f05975-75b5-44ed-9909-df4b8a8a3840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513d7600-43fc-4aa2-8404-d86c8c2a19e6",
        "cursor": {
          "ref": "2ad058d0-08a9-4880-8705-d544f3fb3a40",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6836b6c5-6966-47ab-9998-b20c971c338c"
        },
        "item": {
          "id": "513d7600-43fc-4aa2-8404-d86c8c2a19e6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d104f5e6-1062-4d62-a359-fe136eff94ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73752841-c3fa-412d-bb46-abc9b48537e4",
        "cursor": {
          "ref": "1b07f5d4-7be3-44a3-b614-85f68d496aea",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1fd948b1-fd11-41e3-8781-45a34beeccf1"
        },
        "item": {
          "id": "73752841-c3fa-412d-bb46-abc9b48537e4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fc57dd54-5bca-441d-95b6-daeed7313f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee5a0da-b19c-4d6a-8bd0-b16e4c15a69c",
        "cursor": {
          "ref": "5c38d04c-220c-4da7-8bab-2c26d9e74f8f",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "81d9610c-bb03-4dec-aa4a-156edd21cf61"
        },
        "item": {
          "id": "aee5a0da-b19c-4d6a-8bd0-b16e4c15a69c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8c26f4e2-bca2-4d9f-a7f0-1ac137fcc8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35528d5c-148c-4df3-86ba-14b8f6e570ba",
        "cursor": {
          "ref": "08f46ff2-890a-4cef-8733-34f56ca54820",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5d88a373-6cca-412b-9547-fe7d2885433a"
        },
        "item": {
          "id": "35528d5c-148c-4df3-86ba-14b8f6e570ba",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9996bfa9-99be-4a73-9709-6c4dcb190b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003b6664-e85c-403a-9fb2-308537bf097a",
        "cursor": {
          "ref": "91b70a05-9c43-4ecd-9286-1a27868b3049",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0711ccd2-cb59-4e4d-8e44-30aede46383c"
        },
        "item": {
          "id": "003b6664-e85c-403a-9fb2-308537bf097a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "91aea5bb-03a3-4088-b6fc-2c6be37e2214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d848a97-a41f-4dfe-a282-8d20bdfcb4d1",
        "cursor": {
          "ref": "5eb44c94-fc27-4f55-8198-aee493ee2064",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "96509274-917d-4a76-9408-49c0bff3d7f6"
        },
        "item": {
          "id": "2d848a97-a41f-4dfe-a282-8d20bdfcb4d1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e69690c4-acef-4437-aff2-593a0e0ced77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcccc841-3516-45b8-a8cf-01126b3205b1",
        "cursor": {
          "ref": "5fb13908-31df-45c3-bc74-87ce6c15f61d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e78386d5-922f-4fdc-9fab-ad3ce2364436"
        },
        "item": {
          "id": "bcccc841-3516-45b8-a8cf-01126b3205b1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "26e6805d-715c-49d3-9eae-68659b68ea43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0104662-b049-4567-800e-69bd54f61fca",
        "cursor": {
          "ref": "b6f295cd-e6b1-4b1f-a4a4-a1fc7ce0c35e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "018005b5-790a-428c-9820-1bfb4f0f503c"
        },
        "item": {
          "id": "e0104662-b049-4567-800e-69bd54f61fca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "09f15b75-d0f6-4c94-836a-96c3d6f0567c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7d3caf-0cfa-4ea8-80c9-c4565ed44ba4",
        "cursor": {
          "ref": "e01f0175-8608-4f23-afd6-496f42c37e3a",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "472604d6-302e-431a-83b7-ac6528775ed1"
        },
        "item": {
          "id": "5e7d3caf-0cfa-4ea8-80c9-c4565ed44ba4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4cfe2486-2733-4cb1-aca7-4dfa50d7706b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbeed15-3fdb-4981-833b-b68c2d5d6e49",
        "cursor": {
          "ref": "fc4ada2e-be0a-4c44-a165-2839b5d2de3e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "45a800b1-38e0-409f-ac4e-d8652b54b0fe"
        },
        "item": {
          "id": "9dbeed15-3fdb-4981-833b-b68c2d5d6e49",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d4b0b97c-a50a-41a5-8913-083b2af9ec42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b84cffa-f557-498c-b839-d60b79918176",
        "cursor": {
          "ref": "48b92598-d4f1-40ce-ba3f-595021d7225b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d8fcf72c-451d-40f2-b292-e16f5ba1d783"
        },
        "item": {
          "id": "7b84cffa-f557-498c-b839-d60b79918176",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fd814042-08b1-41ea-abc6-f592d9dea56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a8d738-8d3c-49ab-9bf2-c8171b6512af",
        "cursor": {
          "ref": "3c6114c4-bf32-49d0-9427-81a4a6b480a4",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b245cab8-0c00-41d4-872a-ea996f8c82dc"
        },
        "item": {
          "id": "d9a8d738-8d3c-49ab-9bf2-c8171b6512af",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ca79bd15-71f7-4f23-95ec-52546b9de413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20264a36-1731-4da4-9eee-0a2d23b0d88e",
        "cursor": {
          "ref": "bf816375-aa12-43a3-9638-bfc5611124dc",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "980badc5-4056-4066-a105-9b9f5552070a"
        },
        "item": {
          "id": "20264a36-1731-4da4-9eee-0a2d23b0d88e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5b0d76bc-119d-4cd5-b06e-502688246cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b8ff32-2173-49c1-bfa5-fe0a799ff009",
        "cursor": {
          "ref": "7c3e0adc-ac96-48fe-ad6e-ed7dbf1e50de",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "69cdaf48-4218-4da2-a569-e3cd7aeb3fe4"
        },
        "item": {
          "id": "f2b8ff32-2173-49c1-bfa5-fe0a799ff009",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e6a9e1fe-b517-4c85-813c-fb2fa428dbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc763c5-02c9-4b95-91ee-4fcab4a5f0fe",
        "cursor": {
          "ref": "4418f727-d82d-4f8b-a786-7a130bb9c292",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7021ced7-cb91-4991-8784-9833013928ab"
        },
        "item": {
          "id": "dbc763c5-02c9-4b95-91ee-4fcab4a5f0fe",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "16427a85-8981-4c0c-bf9b-e9f2670df09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbce2aec-6808-40ef-a525-645df65f6f4d",
        "cursor": {
          "ref": "2b7423e7-ebe5-4adb-b306-95f4be150c8d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4a7250da-b322-4f1d-a411-3c0d40e52558"
        },
        "item": {
          "id": "bbce2aec-6808-40ef-a525-645df65f6f4d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c7572aaa-a6b5-40ee-9ed2-c2411f171319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c251a7-7692-4392-b81e-9548947880f3",
        "cursor": {
          "ref": "fa29b938-06e9-4161-8150-ff3d53ccfb81",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e1c29f81-fc25-4dd0-8d3b-f3e879b9963f"
        },
        "item": {
          "id": "63c251a7-7692-4392-b81e-9548947880f3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2384033b-740d-477f-8baf-c64960608f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3050176f-2505-4d5b-baf8-b2131a04fe81",
        "cursor": {
          "ref": "dba805cb-eca6-47d4-a580-29207fd412dd",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f1d33429-ebf1-4edd-9233-9ca7835f6d2d"
        },
        "item": {
          "id": "3050176f-2505-4d5b-baf8-b2131a04fe81",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1d5ade82-32eb-437f-a9fb-3b9a8c46bf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca1c1ae-59c0-4425-95be-46f751315767",
        "cursor": {
          "ref": "12b115c4-0a86-40e2-839b-e84c87f549e1",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7d82f81f-7734-4be8-a945-6e0b8942cd78"
        },
        "item": {
          "id": "dca1c1ae-59c0-4425-95be-46f751315767",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "00349550-1ef0-4777-9d6f-61cc4d12d24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f7098f-6a4e-4599-9ef6-659f24caf70e",
        "cursor": {
          "ref": "40ec3454-f42a-480f-9a8b-215bec518e1f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e5921077-62d2-496f-93dc-5ea823eb6caa"
        },
        "item": {
          "id": "70f7098f-6a4e-4599-9ef6-659f24caf70e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e6bd4d62-a733-462d-abb6-822e7ba8dbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecc49a9-5516-493b-b0a8-ed4500148ce8",
        "cursor": {
          "ref": "815a9fec-3a46-4817-8fe2-98f486ee953e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "449bedea-989c-4060-8b5b-6e45c6446634"
        },
        "item": {
          "id": "fecc49a9-5516-493b-b0a8-ed4500148ce8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "105f06d7-241d-4835-94db-db9e9d4078e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef507a3b-9ba8-4e8e-a5a5-deec56d5b6dd",
        "cursor": {
          "ref": "20e78f8b-7b08-492e-9b76-7fade5c7534e",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8d7263bc-eba1-4e0f-9d6f-63b883579918"
        },
        "item": {
          "id": "ef507a3b-9ba8-4e8e-a5a5-deec56d5b6dd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d5703c34-639e-4ac7-b165-1f86146e5587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b6789d-74e3-49a2-b1bc-896609094bc9",
        "cursor": {
          "ref": "a2552537-869c-4580-bf9a-475d5417cf24",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "24b8ddd9-6eb6-4d58-80c9-f4141440cd0f"
        },
        "item": {
          "id": "57b6789d-74e3-49a2-b1bc-896609094bc9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b93bc306-b0a0-44f3-be74-0b7aa1b252be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953936ea-2f46-46d6-b7a5-f1ccc52f018d",
        "cursor": {
          "ref": "660262cf-0d9b-41f0-b24a-a500b4fb253c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a56c9096-bae8-4e78-8277-57333338e06a"
        },
        "item": {
          "id": "953936ea-2f46-46d6-b7a5-f1ccc52f018d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b6312291-d882-4705-a8c0-7bfdecd69b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d9ed6c-aed4-4e04-9e9e-9217690391b3",
        "cursor": {
          "ref": "266a25ec-8aad-4363-9b59-b1ab3669474d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b3e0a0c5-43fd-4148-8a25-3e986a753d5b"
        },
        "item": {
          "id": "21d9ed6c-aed4-4e04-9e9e-9217690391b3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7faab27e-d031-4cf3-8f58-c63bf665219c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf851cce-b4b3-4f35-b8d5-6bcfaca68312",
        "cursor": {
          "ref": "c620d399-433a-483c-8e92-49dc975aa572",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6646c5e4-db1d-450d-b4de-25818c9628f0"
        },
        "item": {
          "id": "cf851cce-b4b3-4f35-b8d5-6bcfaca68312",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "61c7ea8c-5b75-444d-b9a2-16ceb288e6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35cf002-3372-4c0b-b454-2971e66808f4",
        "cursor": {
          "ref": "6108ab84-4fd7-4a15-b984-f3cbd37801ce",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1d4aa757-4d67-456a-848d-b15246749e40"
        },
        "item": {
          "id": "f35cf002-3372-4c0b-b454-2971e66808f4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7405acf8-f924-47ad-88fd-323ba3c4d444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cef2916-ac19-44a6-84e6-521f0c323f12",
        "cursor": {
          "ref": "3d012dc1-6dd7-4d40-a559-fb933634c006",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f26ef4fb-cc2d-4697-a5ab-e700f70e3061"
        },
        "item": {
          "id": "0cef2916-ac19-44a6-84e6-521f0c323f12",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b2b86ca2-8f7a-48e9-b66f-14ed427e7b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a920335-a3a3-4fe6-abab-08287d61aca6",
        "cursor": {
          "ref": "12541a7c-6fc1-4dd6-8654-3778bc0d25f1",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "58d67f4e-98b7-410e-bf76-2f0b715b453b"
        },
        "item": {
          "id": "5a920335-a3a3-4fe6-abab-08287d61aca6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "47bcac5b-3f66-4b5c-97d2-7eb8a97758f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f8617a-5366-4ef6-b244-dd7a55382ccd",
        "cursor": {
          "ref": "ff9e8367-1236-428e-a69d-e088e1fc6569",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bda631c6-363f-4b27-808b-bb290a42ba4f"
        },
        "item": {
          "id": "34f8617a-5366-4ef6-b244-dd7a55382ccd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b816cdbc-0e82-4554-9396-e031cd864c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94acc68c-f59c-4f12-985f-01af57fe8b66",
        "cursor": {
          "ref": "2d0c5ee4-8347-4579-a63f-b98015b93d55",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "efc8afdd-5143-4297-ade6-6d092944c4a2"
        },
        "item": {
          "id": "94acc68c-f59c-4f12-985f-01af57fe8b66",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "540ccc45-d4cf-4def-b3d3-6729173113cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4a49c1-28ad-47da-9bd7-853f67a297d5",
        "cursor": {
          "ref": "aa5dcd90-1830-47bd-b7dc-aac5794f3a7b",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7518ad36-8afa-42aa-a552-22e132c5d354"
        },
        "item": {
          "id": "1e4a49c1-28ad-47da-9bd7-853f67a297d5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ba023f34-3b7b-452e-82c5-a3e4bffed204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8871a4-58be-41d0-9197-3b7c0f33a3b0",
        "cursor": {
          "ref": "ec11d905-a12e-4ef5-8952-15dc142e3e0c",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ca3becd3-3797-4b89-9162-d187f45a5fdb"
        },
        "item": {
          "id": "6e8871a4-58be-41d0-9197-3b7c0f33a3b0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "348e1d8e-09c8-4416-b7c8-b8f299483eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7078e278-9d9b-4998-bed5-70aefaf0cf72",
        "cursor": {
          "ref": "1caac80b-4059-4460-afee-3980ebab7499",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "70033066-e883-4c8e-8255-172fe543a741"
        },
        "item": {
          "id": "7078e278-9d9b-4998-bed5-70aefaf0cf72",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8a407c84-4f10-4c44-8c22-812922390637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d823a779-4b9f-4ff8-b2cc-b8bf78ddfd4f",
        "cursor": {
          "ref": "041de5b7-9a23-4d3c-b4b8-d40babafa814",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e57d98c2-ca8a-49cf-82a2-812280fe37e6"
        },
        "item": {
          "id": "d823a779-4b9f-4ff8-b2cc-b8bf78ddfd4f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9b4e9638-ff15-4b67-b89d-9208e98d74b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6f9b3a-b5ab-4eee-b4b2-4e2927cec379",
        "cursor": {
          "ref": "c3f55b5c-ef8e-41d7-985f-49647f0df820",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7d3ec621-5cdf-437b-913d-edde91871a21"
        },
        "item": {
          "id": "3e6f9b3a-b5ab-4eee-b4b2-4e2927cec379",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "037f76f7-cfa9-4831-b524-362a26067349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46d174f-cd2a-4ebe-89c5-86d54d749739",
        "cursor": {
          "ref": "42f24f2f-1a37-456c-8da8-ae097e03431f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "938c62ed-c279-4464-ae56-122a9abdc65b"
        },
        "item": {
          "id": "f46d174f-cd2a-4ebe-89c5-86d54d749739",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "851ce389-56e3-4400-bc05-dba50e4fe4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196ea87e-d72f-4c8d-ba64-f6ae51e414fe",
        "cursor": {
          "ref": "5523f9cc-b958-421b-a047-be5d4c4f93e0",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "46b90e84-c5d4-4e26-89df-421f1b3e0541"
        },
        "item": {
          "id": "196ea87e-d72f-4c8d-ba64-f6ae51e414fe",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "39b8bfeb-012f-4ff4-854a-a2e6aff5a7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10420649-d895-473d-940a-38d54d6dc23b",
        "cursor": {
          "ref": "e5c33c41-6573-421a-bc7c-c90f176697f4",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a8ae901d-e41e-4b33-a4b6-40cfd7573908"
        },
        "item": {
          "id": "10420649-d895-473d-940a-38d54d6dc23b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8119157a-6392-40b4-a948-a7d6478c7207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7010537d-bea6-4b85-b675-261c32be46eb",
        "cursor": {
          "ref": "21360f41-7799-442d-9ea5-6fd4a999d9ac",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "38f4ecf7-2e74-4726-be35-c70f78d7d0b3"
        },
        "item": {
          "id": "7010537d-bea6-4b85-b675-261c32be46eb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f2364184-d32c-4581-a1d8-93bacfce095b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07895f87-9f99-4068-9ab1-a7b22b0e1129",
        "cursor": {
          "ref": "fa11059e-100c-437b-bd01-319a95f0dda9",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2dbf0b00-4f9a-4db6-ba3e-7e999894e856"
        },
        "item": {
          "id": "07895f87-9f99-4068-9ab1-a7b22b0e1129",
          "name": "credentials_issue"
        },
        "response": {
          "id": "97f188d3-72f1-4b15-80d7-290829f26b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "99363e8e-b38f-4390-b1b7-fb2b268633b0",
        "cursor": {
          "ref": "9c35524e-2124-4182-a265-0f170d811a9e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "da87ff67-6848-4bbb-8879-7481fe50bc19"
        },
        "item": {
          "id": "99363e8e-b38f-4390-b1b7-fb2b268633b0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "737acfe3-7e75-4d7c-8da9-fed779ca5e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "d4389d7e-d6ae-4009-8cef-c6c505ba54f0",
        "cursor": {
          "ref": "de662e8d-65a8-4e4e-852d-68a51354a83b",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e089a442-f716-4712-b515-046032c015d5"
        },
        "item": {
          "id": "d4389d7e-d6ae-4009-8cef-c6c505ba54f0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8e1e6752-16b7-44bc-bc82-1a48f4c2874a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "84196570-3f52-4b32-af7f-b9c5cd3a9310",
        "cursor": {
          "ref": "65b2cb9b-9b4f-4625-afe8-be9a2cc42118",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7ba6c092-5649-4560-a00a-8e6f91d2de7b"
        },
        "item": {
          "id": "84196570-3f52-4b32-af7f-b9c5cd3a9310",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6c095fe3-7372-4a10-bf44-4e2a97ecb3a7",
          "status": "Created",
          "code": 201,
          "responseTime": 5076,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5b5db9-2544-4dac-ade7-4bf04c21f1bb",
        "cursor": {
          "ref": "490de666-e1ff-4885-8de0-477ce4e1373b",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "80ab761d-2edc-4bb7-b1ea-40f3f930f466"
        },
        "item": {
          "id": "8c5b5db9-2544-4dac-ade7-4bf04c21f1bb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e90261fe-37e0-43f7-9cd8-0b14f2e48eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d7f782bf-7280-4d34-990c-68d09bd053d5",
        "cursor": {
          "ref": "73e3318c-5cd8-4e53-bf92-0fe454dfa138",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f231c485-cf9e-4622-8557-40e9cb240264"
        },
        "item": {
          "id": "d7f782bf-7280-4d34-990c-68d09bd053d5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "be3faf43-e415-495e-aa09-07b8e6e47607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "a68d24eb-cf3b-4660-8323-0e97db60c282",
        "cursor": {
          "ref": "42cad558-041c-437e-8c75-327e966b9bc3",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "344a2681-52ab-4389-8a74-a628129d3ced"
        },
        "item": {
          "id": "a68d24eb-cf3b-4660-8323-0e97db60c282",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c1921abb-63bc-4faa-ba96-034916f0032e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3749566b-585a-4e52-bf3e-1b82deae5fbf",
        "cursor": {
          "ref": "31f86733-8d50-4f71-a9a7-0dc3df152a2b",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "98636a6e-f01a-42f9-99a4-dfdfeca9c3e1"
        },
        "item": {
          "id": "3749566b-585a-4e52-bf3e-1b82deae5fbf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8fadedb7-628b-42bc-b8f3-ed97cdfa095a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75574ed4-f27c-4a73-bdf9-f960d5ecef18",
        "cursor": {
          "ref": "44f95885-b00f-4348-bb0e-2a8b603c3bf9",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ed2a465d-b75b-473f-942f-43a2ce3fca3f"
        },
        "item": {
          "id": "75574ed4-f27c-4a73-bdf9-f960d5ecef18",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5adcdea0-8ba6-4567-ac03-3086aa38f80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d37971-40f1-4b01-b2cd-5bb07c5beaf3",
        "cursor": {
          "ref": "8e1928a9-30da-4648-8ea9-9d1a61d7245b",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "99434bc9-6461-4db8-aecc-9f3425613099"
        },
        "item": {
          "id": "76d37971-40f1-4b01-b2cd-5bb07c5beaf3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "82470ead-57f0-4c91-88e6-379c494c491e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96b220b-e516-4a83-9e30-04fdb4b68199",
        "cursor": {
          "ref": "e921c0ef-ec09-42b3-b2c2-1f18384b964f",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bc4d8d6a-61cd-4e90-a30a-9f9acfec3548"
        },
        "item": {
          "id": "e96b220b-e516-4a83-9e30-04fdb4b68199",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b0fda83b-accf-45e2-891a-1421f36edd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcd3a99-57f2-4961-a193-28c8c16f2a05",
        "cursor": {
          "ref": "ed3ab235-1b98-40a7-bcb1-a9305f6dfd86",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a51eb239-7e79-42e3-98e3-b34fcdc744fb"
        },
        "item": {
          "id": "1bcd3a99-57f2-4961-a193-28c8c16f2a05",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a5aa94cd-080e-444a-8ac2-7c8687e72196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0aa3c6-3f69-408e-9462-34131a286472",
        "cursor": {
          "ref": "12bb9c1a-8762-425c-a3c6-667b2dc77d5c",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "35c72c76-dc0b-41bc-b6aa-944462febb5b"
        },
        "item": {
          "id": "2e0aa3c6-3f69-408e-9462-34131a286472",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "45cb5a38-592a-422f-b90c-f1b0ac82079b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec256e58-0565-4bbc-9c95-a5b17ffa1005",
        "cursor": {
          "ref": "798e8f75-efd5-4e10-9b86-4fa296cc9d69",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bcfff35a-e77f-4771-b068-3cfb14e37f79"
        },
        "item": {
          "id": "ec256e58-0565-4bbc-9c95-a5b17ffa1005",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9e417999-4bc1-47c4-8fa4-058c5d5f8038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15644465-116b-4663-b456-6536159a8c89",
        "cursor": {
          "ref": "52dd2d9d-f5a9-4cb5-a87d-9f495eabeee1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f6624925-1d38-4a49-b831-8c76ee514dcb"
        },
        "item": {
          "id": "15644465-116b-4663-b456-6536159a8c89",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3891efe4-5109-40a2-8979-5f6f65b5fad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f344754-f5f2-4400-bb25-aa77e90a78db",
        "cursor": {
          "ref": "911512c7-aaaa-4255-a4c6-5cd38666d1f3",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4f039edc-69dd-4cd1-a040-dd831d24bd47"
        },
        "item": {
          "id": "0f344754-f5f2-4400-bb25-aa77e90a78db",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e2cdf88a-8e88-4f94-9532-21ad9ad167f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039346d3-7e70-48f0-85ca-e0334d0e2bf9",
        "cursor": {
          "ref": "1734813a-8376-447b-9146-07c60a5ad93d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c217b1eb-97c6-4f0c-9278-c2be66bb372d"
        },
        "item": {
          "id": "039346d3-7e70-48f0-85ca-e0334d0e2bf9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "02e5b626-b11e-4538-b738-e797c5f05d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ae2cee-60dc-4a37-a584-cd9e70043b85",
        "cursor": {
          "ref": "9eb89058-f95f-4e5d-b213-fdcd0b403b20",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3c6d4d34-e8a3-417b-a949-9616145fe341"
        },
        "item": {
          "id": "41ae2cee-60dc-4a37-a584-cd9e70043b85",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ab9c0ea0-e021-47cd-9dc8-5707afbb10dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8128e3e-826e-48d0-98dc-04cf3a6a2c2c",
        "cursor": {
          "ref": "3fc94d60-4724-4608-bf7c-fdb036842e18",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "48f82ccb-a0c4-4824-be71-0defda4add0a"
        },
        "item": {
          "id": "f8128e3e-826e-48d0-98dc-04cf3a6a2c2c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "13add5e8-a419-4a6c-a583-f3d6091aad46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd68b045-932f-4523-97b0-35b0abca004b",
        "cursor": {
          "ref": "b7b5467a-b993-4f08-8cda-61ca0f4e36c6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fc9f4aa4-4144-4ede-8058-c45a49bd310a"
        },
        "item": {
          "id": "bd68b045-932f-4523-97b0-35b0abca004b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aa616dc0-e59f-4ff8-a551-5a8e230c6251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab79fd7-ab9e-4892-8946-342e01425594",
        "cursor": {
          "ref": "e5aa2664-3723-4b6d-9d23-d04d2a52d1fd",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f6aa9620-f388-4b73-b14d-16414a44718b"
        },
        "item": {
          "id": "8ab79fd7-ab9e-4892-8946-342e01425594",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8eae39d2-2df0-4f8c-a7fb-6c5a8ca6aafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82da34e-b543-40cc-9bfa-a5e2be93dc25",
        "cursor": {
          "ref": "16df2c44-934f-431c-9451-fdaa225d4f9c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7f9acb26-a5b0-4538-8d7a-748df60d0a71"
        },
        "item": {
          "id": "b82da34e-b543-40cc-9bfa-a5e2be93dc25",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7009776f-16ee-4d68-9286-03e0ed591865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f3999f-5004-4f45-a03c-c66a9657cbc2",
        "cursor": {
          "ref": "87718436-97bc-4f4a-a39a-47f78a48564f",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b62a8116-3245-4d19-952f-f7783f591551"
        },
        "item": {
          "id": "59f3999f-5004-4f45-a03c-c66a9657cbc2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5eb4ec74-76b1-4b1e-b2bb-1c6b3b87a4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a03b90d-add0-46e0-85d5-cb20f1d1a947",
        "cursor": {
          "ref": "9fddf0ab-58cd-4fd5-89a4-f7fcd2e2493a",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "56ed62d5-d789-4f6d-b3c8-e7eec95a8dca"
        },
        "item": {
          "id": "9a03b90d-add0-46e0-85d5-cb20f1d1a947",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "383df672-5344-478a-8e4d-4f3b32b3ad76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8bd141-40ec-44e8-8bde-d490abb07554",
        "cursor": {
          "ref": "da77b002-aa9c-4c31-9e1d-68fff85d243a",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9183dce9-fcac-4b2a-a0a4-29b06e4bc66b"
        },
        "item": {
          "id": "9a8bd141-40ec-44e8-8bde-d490abb07554",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ca462ff4-cce7-482a-b01b-c572391f2663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30fe835-c1b0-4438-8710-29268979c794",
        "cursor": {
          "ref": "e2cd8972-29a8-4c0e-a6a8-c04dd1bfa10e",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "36d06166-892d-462c-997a-8bbdd77b1060"
        },
        "item": {
          "id": "e30fe835-c1b0-4438-8710-29268979c794",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0167296d-189b-48b5-9dc2-5cf16e6a484a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4691178-bd88-4bee-9a7b-a5432dacfe88",
        "cursor": {
          "ref": "4f58fa90-2185-4ef5-bd6d-f7aef3b82b12",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3599beb7-0baf-4dd9-8c5c-78b8d13e9d9c"
        },
        "item": {
          "id": "d4691178-bd88-4bee-9a7b-a5432dacfe88",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a7044bee-6f32-451d-9c87-8fad0a2ba88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3882ee-f8b4-4514-9e5f-e2474872d5e3",
        "cursor": {
          "ref": "63c1d597-e2a7-4d64-8aa8-9a22aa4fa9a1",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "624a0029-0e97-468c-8b0f-b4b1af31a0ce"
        },
        "item": {
          "id": "2d3882ee-f8b4-4514-9e5f-e2474872d5e3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6fad94a3-7ce7-448b-8cb8-dd0b22c51af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c94b2b0-2be1-4130-9a7a-b2cad1eba3c6",
        "cursor": {
          "ref": "933d7db2-ec2a-4653-a701-47797ad7f193",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "90a2eeb2-a1f7-432d-bdcc-d1164660e71c"
        },
        "item": {
          "id": "9c94b2b0-2be1-4130-9a7a-b2cad1eba3c6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "939696b7-4b32-462f-bcf3-349985298604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f637f01b-3f7a-4f23-94cc-266af4404add",
        "cursor": {
          "ref": "44a436eb-993b-4d23-bade-5cbf8028fb0e",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b54ea7d6-21dc-49aa-a880-cf8052c5a38e"
        },
        "item": {
          "id": "f637f01b-3f7a-4f23-94cc-266af4404add",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9a4abda6-fe97-4f0e-80ac-261424ce8a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39999d9a-208d-467a-abc5-efb2416284e1",
        "cursor": {
          "ref": "f0380852-82e0-445f-85ad-934fb992d87d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dc7d1a0f-e70e-478d-9102-f2a7be06e47a"
        },
        "item": {
          "id": "39999d9a-208d-467a-abc5-efb2416284e1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "20332232-b5cf-473c-a9fd-f132bc5d654f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f31174-0738-4a56-ad1b-f771ef2ce284",
        "cursor": {
          "ref": "ecf259d4-bc8d-4f74-ab6a-54a6e28cd3ad",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d8517769-fb91-4530-af8e-179c70533e92"
        },
        "item": {
          "id": "31f31174-0738-4a56-ad1b-f771ef2ce284",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2c84dac0-ae06-4e7d-9993-f002bda313eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61f0b33-3c64-43d7-b70d-d4f6e64ceca0",
        "cursor": {
          "ref": "faaa47c1-bc86-4195-8208-34efc37434b2",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "42c45e65-78ec-4549-91be-6d4d2fe88ec7"
        },
        "item": {
          "id": "f61f0b33-3c64-43d7-b70d-d4f6e64ceca0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c96bac01-f681-4bf4-ba78-67d041936910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4008b83b-937c-44d2-8de9-f9f45fabd276",
        "cursor": {
          "ref": "5a4a45fb-c1f4-48db-b793-f0b13de73276",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "aeafc8da-dd3e-4afe-a783-a193b7da5d85"
        },
        "item": {
          "id": "4008b83b-937c-44d2-8de9-f9f45fabd276",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "18d1ec1f-6b30-4faf-affb-e1281d239d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50104ab-65ed-4ccc-ad41-261536961b0c",
        "cursor": {
          "ref": "e3746e26-7e01-4d25-a625-fa086528fae8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cc505343-05be-4b70-a6bf-cc9661a6dea4"
        },
        "item": {
          "id": "c50104ab-65ed-4ccc-ad41-261536961b0c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b67a8aee-dab8-4521-90ad-13576d61745a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3174866c-1748-4d43-84f7-5a4b45bb0523",
        "cursor": {
          "ref": "d191fa42-838e-42a1-8af6-35f1ef837b4f",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "483e96e6-edd4-4fac-b552-3ef7a76c44f4"
        },
        "item": {
          "id": "3174866c-1748-4d43-84f7-5a4b45bb0523",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "eaf8f9cd-6fad-4f2a-bd33-81008beb6dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c8a89e-213f-4ab0-af8d-7b2537cd566d",
        "cursor": {
          "ref": "5b430a48-f565-468e-a04a-ca360af481de",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e4b05430-b1a4-4df7-8bc8-f6875a752f5e"
        },
        "item": {
          "id": "29c8a89e-213f-4ab0-af8d-7b2537cd566d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "13a27bc5-e0dd-4abc-b53b-3da6845151a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ffdb49-d742-4280-927a-6fb877ecb039",
        "cursor": {
          "ref": "bd7cbca9-98b8-483a-ae76-0e8266702c62",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "59d9c2c1-677a-4e06-8cc7-6a308b81ce82"
        },
        "item": {
          "id": "64ffdb49-d742-4280-927a-6fb877ecb039",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cb98a1ed-9e2c-41a5-a990-9ef3302757ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d8ce7c-e9d8-43f0-a1bf-dcedcc5db41d",
        "cursor": {
          "ref": "bfe0e1a0-8f89-44cf-90ba-548c92f00812",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fa7f52ca-fda5-4ee0-9032-cf2b6a4fbddb"
        },
        "item": {
          "id": "c9d8ce7c-e9d8-43f0-a1bf-dcedcc5db41d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "12f58ea6-cb50-4395-b136-93b6c35708db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a50fd1d-2b53-40e2-a583-4f287ea295bb",
        "cursor": {
          "ref": "d1e6f368-07ac-4779-959d-733c00c0f87d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "23fe4823-a282-4405-b308-62d9eb00ad56"
        },
        "item": {
          "id": "6a50fd1d-2b53-40e2-a583-4f287ea295bb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b8b96336-d22c-4ce5-b47a-11fe6adaa5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86edbe16-e2af-4837-9bbd-8224c116b0c0",
        "cursor": {
          "ref": "366ed4d8-e5d0-4360-a57e-9cd5e2fee844",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a55b6181-4953-4f04-8091-7098bd7e288f"
        },
        "item": {
          "id": "86edbe16-e2af-4837-9bbd-8224c116b0c0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "06eb5f88-fe05-4dda-917f-d2fc522e4801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a043754-3e40-496e-9c6d-54daf6f31595",
        "cursor": {
          "ref": "fe668f77-73ae-4769-8393-08cb889d5768",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cf1142a9-bc02-4857-9413-f7b03be21533"
        },
        "item": {
          "id": "0a043754-3e40-496e-9c6d-54daf6f31595",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5ac13bf1-26f5-43d7-bf8b-86352bda831f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a7a435-8f42-42ae-8f67-cdc1f4465934",
        "cursor": {
          "ref": "43cc9972-6ae6-4baf-9edc-81643d8630ee",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0f1ad098-edb3-442d-a49a-0eeddd14f1a2"
        },
        "item": {
          "id": "a1a7a435-8f42-42ae-8f67-cdc1f4465934",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "163b610f-bad6-43ae-a048-b0a47da76ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2521248a-047a-42c4-9a0b-7b71a2e9eca0",
        "cursor": {
          "ref": "64cd463a-ddb4-4f54-9646-7184485e912a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2c833b36-c177-4a7a-b9fe-ece3e90574e3"
        },
        "item": {
          "id": "2521248a-047a-42c4-9a0b-7b71a2e9eca0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5e300553-22b9-43af-878c-6844488237e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0531f6-6816-42d9-a9e8-bf199e3f443d",
        "cursor": {
          "ref": "4cbfc141-283a-4460-a9d8-c241e41818f0",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4a902638-803b-45b7-a913-0fefa6452fac"
        },
        "item": {
          "id": "fa0531f6-6816-42d9-a9e8-bf199e3f443d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "946a3572-a34f-43c1-b91d-cc73771e0756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2df35a-124b-4d14-87bd-2bb0da98ea9b",
        "cursor": {
          "ref": "b6ae29cc-8cea-429d-b3e8-0ef0a1a1e640",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8c75bf29-e662-4471-87ca-af8b61f80f35"
        },
        "item": {
          "id": "fa2df35a-124b-4d14-87bd-2bb0da98ea9b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "de5ed197-2eba-4d50-b196-ca19b830058a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d9c8be-4dac-4f25-a62c-72482497d256",
        "cursor": {
          "ref": "ac1d53b8-f156-4f3e-ab23-13ed5bf570c1",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3d08f018-be86-48f6-b57b-9f94138ee31b"
        },
        "item": {
          "id": "74d9c8be-4dac-4f25-a62c-72482497d256",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "94cae015-12b0-4b5b-9a1c-ede1b8a37ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc246acd-1c58-46ba-81e2-0119125a6d0e",
        "cursor": {
          "ref": "54f49bec-67fb-424e-8225-59f51d365073",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0bca4b06-5c7a-4a0d-9c47-ed0c0595949e"
        },
        "item": {
          "id": "bc246acd-1c58-46ba-81e2-0119125a6d0e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6e8df7d1-6a48-4dc6-a02e-e9ff6d5e1358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325cdace-3288-4d7a-8a2c-9ebe9e2554e1",
        "cursor": {
          "ref": "1160c32d-560f-4bba-827e-32907d232ad1",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "da45e052-1511-4ddb-80ee-09927577badd"
        },
        "item": {
          "id": "325cdace-3288-4d7a-8a2c-9ebe9e2554e1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6cdd6e1e-286c-49a7-96e8-d07d8396a13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7a3485-8535-4626-809d-e8317a29fada",
        "cursor": {
          "ref": "88978e7c-ba20-4422-9b3a-dc9262c0ff28",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b6213830-a637-43a1-b775-4a13d5c39737"
        },
        "item": {
          "id": "6e7a3485-8535-4626-809d-e8317a29fada",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c8d3d143-6deb-4d4b-877b-8abcc8241c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b32851-d8a4-44fc-9dba-1489d95b4cba",
        "cursor": {
          "ref": "70861fa5-d473-4ac7-8a84-ac130942cc6c",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b1fe64d1-54b6-42fa-b706-c089eb5a0c10"
        },
        "item": {
          "id": "f2b32851-d8a4-44fc-9dba-1489d95b4cba",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2b2999be-925c-4bb4-845b-c4facb8efbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f676844f-0b65-40f1-a3d8-b59ce6edea3c",
        "cursor": {
          "ref": "630f9866-2e1d-492f-becd-3057d271dffb",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7b0bcf9b-ea7a-4047-90b3-1cbc3e9f275b"
        },
        "item": {
          "id": "f676844f-0b65-40f1-a3d8-b59ce6edea3c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f879017d-ea15-4203-adbf-e5e6bdfb4189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae18a25-6e59-42ae-88da-0189484caf79",
        "cursor": {
          "ref": "d3dbe694-0404-4c19-a57f-f47888cff77b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "509291a1-2723-47eb-bcd6-deb488e25917"
        },
        "item": {
          "id": "1ae18a25-6e59-42ae-88da-0189484caf79",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "00f65cc3-c730-46e6-85e3-a3ff0700a64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108c9b7a-c7b6-4121-af4d-54ac8ba9d9b4",
        "cursor": {
          "ref": "725cbc8c-5eb6-46c0-962e-c22c67201b78",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "00789e70-dba9-4a28-bbc2-2e89beefc685"
        },
        "item": {
          "id": "108c9b7a-c7b6-4121-af4d-54ac8ba9d9b4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "649a6f78-6ffe-443e-8296-86b7df749280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af975b4d-82a8-4b09-8c4e-1da1efd8091b",
        "cursor": {
          "ref": "01bd924e-cd6e-47bf-9936-c19fc63c2385",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5c57e979-c869-45bb-96fc-105054c13c25"
        },
        "item": {
          "id": "af975b4d-82a8-4b09-8c4e-1da1efd8091b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8bdc2230-3b43-42b8-8f23-c3ef9a1eb857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72bb9ba-7886-4376-ab73-398a570fefc4",
        "cursor": {
          "ref": "5334b193-568a-4565-8d94-e9fa8bf8a34d",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f6ae547b-45fc-40cd-ac1d-367271e0e817"
        },
        "item": {
          "id": "e72bb9ba-7886-4376-ab73-398a570fefc4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6b6a884a-5487-4b7e-a937-56f9bd576403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77013699-e7cc-4664-a2cc-28d0bb9dba42",
        "cursor": {
          "ref": "1d5431f1-6067-4d90-9f91-122b1f4dcbbe",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dd56a568-e67a-4dbc-9442-7457f9d8947c"
        },
        "item": {
          "id": "77013699-e7cc-4664-a2cc-28d0bb9dba42",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "604734e7-d611-4a8a-b5aa-6ec3e956c9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821eff3d-2486-4666-b742-9ecf602917e9",
        "cursor": {
          "ref": "fbd977c2-65c0-45cb-bdec-03e91780fb0c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "78050a74-ac8b-4ce3-9031-418a0ba98500"
        },
        "item": {
          "id": "821eff3d-2486-4666-b742-9ecf602917e9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d5a68cf6-c217-4642-941a-2fea2a5b267a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5acff92-45e2-496b-9014-b356a019857a",
        "cursor": {
          "ref": "0352d14b-b099-4aae-92cf-3325f336e6fa",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "84225330-6035-45d5-98f9-ce2d70e45c1d"
        },
        "item": {
          "id": "b5acff92-45e2-496b-9014-b356a019857a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "84954cde-be56-4935-a7ba-b477422b52f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa05f96-514d-427c-b542-8722f007af19",
        "cursor": {
          "ref": "1fab7097-5793-4828-a846-d217df7168e7",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "be1a87af-3e70-4dc7-8b6f-22b07ee42525"
        },
        "item": {
          "id": "efa05f96-514d-427c-b542-8722f007af19",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "20c86d83-50b6-4310-a72b-acc2e29dc6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b38c37-e51d-460e-8da5-d683a045a580",
        "cursor": {
          "ref": "601ec2d6-7ec2-4503-868b-b562fd1df921",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f192e1ff-2280-481a-9693-1cc2721f9dc7"
        },
        "item": {
          "id": "65b38c37-e51d-460e-8da5-d683a045a580",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dc521d8c-64c5-44b4-8941-c923af0e2658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dec11ed-a6a9-468f-a489-cdbe69e52b91",
        "cursor": {
          "ref": "1666d138-f1a8-4476-9e44-96e3384be1f5",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8de96486-5859-4d08-bdcd-b4f9fcb08049"
        },
        "item": {
          "id": "1dec11ed-a6a9-468f-a489-cdbe69e52b91",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fd3b04b5-7822-4193-ad45-a473ffaf0b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04aa623c-93c1-49ac-910b-c700a644bde5",
        "cursor": {
          "ref": "69b75e39-b41b-461b-b844-9eb51ffcb36f",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bce66e5f-554c-42d9-a9e8-ef5211a7f3dd"
        },
        "item": {
          "id": "04aa623c-93c1-49ac-910b-c700a644bde5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "48508af6-3cb2-442f-b5de-6f6393acc24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dac8657-f6d2-4e76-8de9-30c44bfb0cec",
        "cursor": {
          "ref": "6a7c9f2d-5b32-49dc-a388-9f6cb9602129",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "96c80501-935f-4a3f-9d46-26b7f689246a"
        },
        "item": {
          "id": "2dac8657-f6d2-4e76-8de9-30c44bfb0cec",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "08d34b0d-5b7d-494c-a464-369069324f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944e614d-9363-439f-b143-917351dce6e8",
        "cursor": {
          "ref": "2b65d80c-1bb7-495c-859c-7dce2eb1e0d2",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "20901b5c-a438-41b0-b507-8f95fab49fd4"
        },
        "item": {
          "id": "944e614d-9363-439f-b143-917351dce6e8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f09fb7a1-3030-40ee-b22a-0551f8e11fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459f0228-0b4c-4cd2-9d3c-42f64a231b5a",
        "cursor": {
          "ref": "87c8c732-6656-41dc-87c7-5e84fb060b40",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "354c4520-282e-4914-aa27-6d4cafa07c91"
        },
        "item": {
          "id": "459f0228-0b4c-4cd2-9d3c-42f64a231b5a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2a4ea49c-5f55-4881-a307-9b14d0227ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390cd7dc-fd63-4a1f-8eb3-ad991aa2d3a8",
        "cursor": {
          "ref": "f4b68e55-4d62-4b84-99a0-9465deb503ff",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "70c7d671-d747-400a-aee6-c9e31668823b"
        },
        "item": {
          "id": "390cd7dc-fd63-4a1f-8eb3-ad991aa2d3a8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cf53ce96-a942-4cb6-8062-c7fbc2eea4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a085e9-bc09-42a3-b264-9754327d17d3",
        "cursor": {
          "ref": "6f1c60e7-b21c-418f-b614-2b9781860b1c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5e0d686c-3f54-4057-a231-0d1e00dda199"
        },
        "item": {
          "id": "68a085e9-bc09-42a3-b264-9754327d17d3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "309ddf0e-98f6-4d1f-87b0-0df4a03f278c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc5825c-d152-4dc4-8628-b16c67c88cf7",
        "cursor": {
          "ref": "4f2f6286-a0ae-4508-a742-5265c6780d4c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "32a43b7d-82f0-4056-94a3-1bb7c9a5e477"
        },
        "item": {
          "id": "8dc5825c-d152-4dc4-8628-b16c67c88cf7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "371549d4-70d6-4c01-b4ed-661f3c49134f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b8b705-5322-4712-a496-8d0d03c05029",
        "cursor": {
          "ref": "e0a54504-f845-479b-bda1-26039079b389",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2d8b3c27-23a0-448f-be9e-c6efc10e2dda"
        },
        "item": {
          "id": "41b8b705-5322-4712-a496-8d0d03c05029",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "27a191e6-2ab4-4f4b-807d-d3158c3a2f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44da6e6d-252e-4e6a-a1b6-15b604a373f6",
        "cursor": {
          "ref": "3c2aeb78-59de-4ab5-bfb6-5b4f94fc03f7",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f15d28fc-3f1c-4e95-a75a-65efa41dd242"
        },
        "item": {
          "id": "44da6e6d-252e-4e6a-a1b6-15b604a373f6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "61beb7c2-5660-4179-9a0d-b247556f8cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f350c6-5f0b-4ef5-9499-1d756d800ddd",
        "cursor": {
          "ref": "4defe22a-ac26-4ecf-af20-6ec18e8a754b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "30a6a20d-9566-4f4e-9577-ca9e4a28063f"
        },
        "item": {
          "id": "17f350c6-5f0b-4ef5-9499-1d756d800ddd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "22ac4283-50e7-4e35-af9d-54edc3849a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bdf29d-0b5e-4fca-9b41-c60da800e95b",
        "cursor": {
          "ref": "24dc842c-481e-4d8d-8a0c-b8abb0c36760",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "43138895-448c-4740-a70c-6c8e78404294"
        },
        "item": {
          "id": "18bdf29d-0b5e-4fca-9b41-c60da800e95b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8dc2f455-32b8-410e-8391-9b0f3aae18cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81cf0a9-256d-48e7-96f2-75ba3857ff43",
        "cursor": {
          "ref": "063f5284-5b96-4b75-b2c6-86cfb015e3e5",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "20039158-a5fd-4614-a618-332773593524"
        },
        "item": {
          "id": "e81cf0a9-256d-48e7-96f2-75ba3857ff43",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "007ff726-e064-480d-aef5-693f8c67421a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb35ff91-7f8d-45df-915e-ff2f944ab437",
        "cursor": {
          "ref": "aeff04c5-ba98-449c-ac15-3a5a7179d575",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6d81c5d3-b2d3-4c8a-8538-3af68a48a2f1"
        },
        "item": {
          "id": "bb35ff91-7f8d-45df-915e-ff2f944ab437",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ce09f224-ca3f-431a-86fe-eb290ddf0cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4d7ea7-4e47-433e-a309-6ed8fbe4f3ae",
        "cursor": {
          "ref": "37b2000c-478b-4338-a439-e0715e70960e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5cfc5d7a-0a22-4bbf-b13c-b985f7159a8e"
        },
        "item": {
          "id": "fa4d7ea7-4e47-433e-a309-6ed8fbe4f3ae",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6a25b8cd-00cb-4840-88ff-2f3a141e2c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09cbda2-ffe9-46a1-9e3c-2c340d0b20e4",
        "cursor": {
          "ref": "6598a080-6dcc-4759-b89f-3ac1044b5447",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0fe829ed-ac80-48c9-8ab3-46c3d16f8f4b"
        },
        "item": {
          "id": "f09cbda2-ffe9-46a1-9e3c-2c340d0b20e4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9e5f94c8-e8f2-48df-a1c2-85bb5d019566",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf9b743-e0f1-4aef-ba7b-20e954fb127c",
        "cursor": {
          "ref": "b5819349-ac6d-453c-8809-fe9cb641de8d",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9a5b1804-bb32-4454-920c-0d8d882b1797"
        },
        "item": {
          "id": "ebf9b743-e0f1-4aef-ba7b-20e954fb127c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dec2b7db-c4e2-4696-844a-9b33973cc86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35c69b4-c680-4cb1-a1a8-2d260d652f2b",
        "cursor": {
          "ref": "1040ab01-0796-41bd-b37a-ee33ecff77a0",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "073a5539-6762-4cba-9d4c-e5ddf1f9c642"
        },
        "item": {
          "id": "a35c69b4-c680-4cb1-a1a8-2d260d652f2b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "23c9898c-517c-4595-8ec0-b5c128942140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d36e5b-14ac-4d2c-9ab9-651e88ae4f84",
        "cursor": {
          "ref": "ff7d69c3-5e78-411c-acf0-36eeec91be01",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "df050500-85c6-4630-9fe0-1ee06b7a3e61"
        },
        "item": {
          "id": "f1d36e5b-14ac-4d2c-9ab9-651e88ae4f84",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a7214729-b190-42b6-9f15-336d0b8b6221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487fa6d5-981c-489d-88c8-3dd84540dea2",
        "cursor": {
          "ref": "92f61f5c-954a-4fe3-8139-2049b7151229",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1f365a7f-bcd7-4789-81d9-41b31998c73a"
        },
        "item": {
          "id": "487fa6d5-981c-489d-88c8-3dd84540dea2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f6218db0-de88-49f7-bc06-04bc806e6102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4ab29f-8297-40b1-8aee-9d7ec449b132",
        "cursor": {
          "ref": "ae3e020f-f990-4695-ab7e-6a67df974f85",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f00a1ff4-39f3-48c9-a257-a441a442af9e"
        },
        "item": {
          "id": "8b4ab29f-8297-40b1-8aee-9d7ec449b132",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "01ba73af-ab14-4cb1-a711-4469ab8e9740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f515043-1e65-464c-a08e-5c27f27136ea",
        "cursor": {
          "ref": "613ec36e-37f9-42be-bc9f-60563497fd8f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c43fe552-50e4-4a69-b5a2-4dcc75174d10"
        },
        "item": {
          "id": "4f515043-1e65-464c-a08e-5c27f27136ea",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "936444d8-3330-4808-aef9-376a8a6712a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3365f6-23ff-4fb9-8af6-600dae942645",
        "cursor": {
          "ref": "567235ea-da6c-491b-a3d2-194057763e12",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c73a27ba-7527-43fd-bf6d-e650bd81726d"
        },
        "item": {
          "id": "7e3365f6-23ff-4fb9-8af6-600dae942645",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fb6d59ad-0c8b-48ad-aeda-a830a1a2df4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5b7e89-0736-42c7-b2e0-08d7a6d22831",
        "cursor": {
          "ref": "f29dec3f-7ef1-4279-9487-2bed021ccfd3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "291df69e-b16f-4f53-8f33-3b4e77305af7"
        },
        "item": {
          "id": "ba5b7e89-0736-42c7-b2e0-08d7a6d22831",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "859adb61-0f25-45a1-86f7-086b279c7656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9580d57a-2bc1-42c7-a34c-fac432b36d7f",
        "cursor": {
          "ref": "8f407a47-6ba7-4775-bd1c-5e447d200473",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ae4f0d3a-7f4e-49fa-8a62-248d18c0882f"
        },
        "item": {
          "id": "9580d57a-2bc1-42c7-a34c-fac432b36d7f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "30d536fc-f4ad-4c27-a511-055983e68edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad118aeb-c3ad-4e13-ab97-3142f0a3a763",
        "cursor": {
          "ref": "f1e01168-e1a1-487c-baeb-82a94a1234db",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "25d300b4-4fc9-4088-bd32-aff8b4a30145"
        },
        "item": {
          "id": "ad118aeb-c3ad-4e13-ab97-3142f0a3a763",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c61f877f-63fc-44a2-881e-b22323b29a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cb5663-fdb7-4726-acad-4ac60dfcea42",
        "cursor": {
          "ref": "113c9983-af33-4aa6-ad49-11db9ad4a649",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "931354ed-ff90-4dad-a70d-3d7cb45e9410"
        },
        "item": {
          "id": "48cb5663-fdb7-4726-acad-4ac60dfcea42",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bdfb2fe5-a5af-4a52-9d4e-fe2a96de968e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd77281-b6f2-4362-9657-ef6c0d093be8",
        "cursor": {
          "ref": "b93fcb73-05dd-4b13-a734-46d07183db6e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f6a89b40-f9a6-4bab-92aa-c1c90f60cbe0"
        },
        "item": {
          "id": "5dd77281-b6f2-4362-9657-ef6c0d093be8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "11e2444c-53b4-45bb-bb36-782b63e777f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138fa26b-e486-4015-8838-a140caa0d0bf",
        "cursor": {
          "ref": "bf8789b6-445b-469e-b150-6d71cf980d0f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1025dd43-decf-4597-ad9f-a4bc2c076388"
        },
        "item": {
          "id": "138fa26b-e486-4015-8838-a140caa0d0bf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "578c1f48-fed5-4e3b-9409-1b29924e52a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a55c05e-1745-4e1b-b8b7-7ab390accb35",
        "cursor": {
          "ref": "c6cc8ee6-807d-481a-b5e7-b8d9eda4613e",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "607f62ee-2b63-4451-87d3-c59403b9d2f8"
        },
        "item": {
          "id": "1a55c05e-1745-4e1b-b8b7-7ab390accb35",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8f4ed717-2d1f-4a1d-8701-1a91c9618644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a90397-95d8-4ce6-89b3-a3783824ed43",
        "cursor": {
          "ref": "b933b1cc-2505-434f-bcd2-411163ad4abf",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "273e54ab-4b03-40df-ae9d-49c4d9f198f4"
        },
        "item": {
          "id": "85a90397-95d8-4ce6-89b3-a3783824ed43",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "562c62d8-263e-4b38-aea3-b91fde5e6f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467265cd-28ff-4380-8c5c-7c77d90d01e2",
        "cursor": {
          "ref": "a1d0c940-b001-4fb7-b57b-24baa890c6f3",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fb36af2a-8a24-4502-8f3d-66e8a7cf5b97"
        },
        "item": {
          "id": "467265cd-28ff-4380-8c5c-7c77d90d01e2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9ac585d8-4c30-4d26-bb52-1361882a7d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc599407-47c3-408d-af83-db96d8e18e68",
        "cursor": {
          "ref": "551f058b-3f02-4e35-9ee4-b32affe836dd",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e81da58a-29b0-4112-910c-8663375cbd8f"
        },
        "item": {
          "id": "fc599407-47c3-408d-af83-db96d8e18e68",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "91ed2624-8d8e-48c1-b966-b07fa5056767",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "e3bf30d5-5f0d-4936-b02e-5fd5ffe5cdfd",
        "cursor": {
          "ref": "9c59bca5-fd6e-4af9-8223-c27e1801ed4d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "84e67568-efc0-43c2-b5bb-fa5d08bf881a"
        },
        "item": {
          "id": "e3bf30d5-5f0d-4936-b02e-5fd5ffe5cdfd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b8904c95-fde0-4c2f-842d-3f5dec3a07a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba19d0a-5a4f-4c1d-97cc-1836872dd675",
        "cursor": {
          "ref": "57a36f6f-a2e5-45eb-ac18-0c3ee8e3a931",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d5bab63e-1a49-4094-9bee-1d7f69598ada"
        },
        "item": {
          "id": "eba19d0a-5a4f-4c1d-97cc-1836872dd675",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "df9caf67-f684-4a25-9a35-a76af36398a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2129dd-cf86-4594-bfcd-3cc2d68092f3",
        "cursor": {
          "ref": "8eb9e72b-7d6e-4e0c-ae61-cd0abfa23322",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "51800b28-4b17-49d6-b684-20608850de29"
        },
        "item": {
          "id": "6f2129dd-cf86-4594-bfcd-3cc2d68092f3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f5346e6f-0838-4c09-ba00-fcfc911cbfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b382d2a2-220e-4311-82ef-a52fc8e7cfdd",
        "cursor": {
          "ref": "923a5cd4-6e80-4ad1-bd2c-5f711e322d69",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "71dc81d4-5fb8-4595-9b56-58669721d415"
        },
        "item": {
          "id": "b382d2a2-220e-4311-82ef-a52fc8e7cfdd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9c465306-a03f-4ad1-89f1-9c07b844aecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01331840-3402-43ef-96e6-21fa34430985",
        "cursor": {
          "ref": "61d77ff9-3dca-4e95-b88e-0a74e34e0b76",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "80b19ee1-e54c-4b5a-9354-9d46edaf7889"
        },
        "item": {
          "id": "01331840-3402-43ef-96e6-21fa34430985",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8e0f91b3-1e0f-4908-84c6-266eae955967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c616b8a7-a409-43aa-a578-53e2705f4f2d",
        "cursor": {
          "ref": "25429d51-2ec4-43ca-919c-0071df05bed9",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f1749288-ef24-4f88-8b57-d370b33771f3"
        },
        "item": {
          "id": "c616b8a7-a409-43aa-a578-53e2705f4f2d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "23bd45eb-6052-466f-b99d-fac8b90f82a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41f8503-bacd-473f-b9ce-31c888723221",
        "cursor": {
          "ref": "09fb7ba7-50a0-42ed-85de-99d588926729",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "be5f69eb-35f5-4ea1-b5cc-9c9682954e02"
        },
        "item": {
          "id": "e41f8503-bacd-473f-b9ce-31c888723221",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "25247cdc-911a-415f-90fb-f0d09ebd6d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed64eb0-77d6-4c3d-bc08-81929a8158c8",
        "cursor": {
          "ref": "fe56454d-1c2c-4266-a38f-b2cd7b5e6992",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5ebc95dd-d3f3-4116-b28c-28b6f7524d61"
        },
        "item": {
          "id": "aed64eb0-77d6-4c3d-bc08-81929a8158c8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d9ca81a0-4f50-4020-a570-b5a7e5ec8639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076ad583-7112-4df6-9b28-ca8c07d5d091",
        "cursor": {
          "ref": "a42b7304-10de-4fd3-984b-5e060de8bbb1",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1fa24593-baa6-461e-8dd0-d9f6ba9a376b"
        },
        "item": {
          "id": "076ad583-7112-4df6-9b28-ca8c07d5d091",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "506277e5-1c6e-41e8-a220-f143bde33604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be85c0a7-d80b-4101-8ef4-55a4f893ccf8",
        "cursor": {
          "ref": "c7c81d98-0699-4d35-8a46-9904f6e0f107",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5510c207-8799-4234-b1a2-4550c3429bd8"
        },
        "item": {
          "id": "be85c0a7-d80b-4101-8ef4-55a4f893ccf8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e027883b-a5ef-44f8-8b72-46fef7fee71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f5b042-8c66-4831-b914-d18cb0e4c30e",
        "cursor": {
          "ref": "f4473667-b14c-4eac-ba76-c0b50b31063b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "47d76735-c91d-4545-9c55-265107b2b903"
        },
        "item": {
          "id": "01f5b042-8c66-4831-b914-d18cb0e4c30e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8244cfc8-2ecf-4d0a-b793-8a7b2286cf38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4199dd24-f2b1-4ad0-9891-612a319e04c4",
        "cursor": {
          "ref": "c7fada17-56b8-4799-9e73-f08ebf2fdc56",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "90f026a7-3f6c-4cf4-9516-8b01fed1ec36"
        },
        "item": {
          "id": "4199dd24-f2b1-4ad0-9891-612a319e04c4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fa058a84-1fd1-411d-b7ab-db5ea7f9ce52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a59cc7-dee3-4cbf-9ba8-584f07a33f5e",
        "cursor": {
          "ref": "8a00270c-827a-4f5f-9952-87cbb35618ff",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5a2dece4-0f8b-4795-beeb-8be4074f1e24"
        },
        "item": {
          "id": "d6a59cc7-dee3-4cbf-9ba8-584f07a33f5e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d16c4544-495c-4983-bbce-70119227d1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1e31ee-06c1-448c-8745-01f7a11a123e",
        "cursor": {
          "ref": "c6d595ab-9149-4994-be39-da0ac0db4cd5",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a9045f9f-6a5b-4f06-9f59-d56519b94ad1"
        },
        "item": {
          "id": "0e1e31ee-06c1-448c-8745-01f7a11a123e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bfa5bb89-c016-4412-ae9f-496c292dc48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44380160-7830-49a4-94d6-035232dae7fe",
        "cursor": {
          "ref": "2d25f136-26ca-4898-9fa7-89a14dba5963",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2151b6d0-fe5a-4f00-bea3-9611c444d6b6"
        },
        "item": {
          "id": "44380160-7830-49a4-94d6-035232dae7fe",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3181bda7-b42a-4da0-b228-b299453cebe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a436c9-8f48-4b94-9f67-3f34a9cc9758",
        "cursor": {
          "ref": "f45cb6c4-967e-4b6e-afaa-0464d79024ae",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "12c0384e-c1ed-43e0-80d3-ed9504df3ea5"
        },
        "item": {
          "id": "c7a436c9-8f48-4b94-9f67-3f34a9cc9758",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b3ed2b01-9140-43ac-a6c8-d47d360b980c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187800e8-abe0-41a0-a4df-4387abdbaa2e",
        "cursor": {
          "ref": "6e9bef9b-d322-41d9-b81e-17d26824c8bf",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b6a3caa9-3668-490a-9bf6-1ae2d796d279"
        },
        "item": {
          "id": "187800e8-abe0-41a0-a4df-4387abdbaa2e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "88d775f5-f79a-4d72-811f-00f9050ef3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ba89c7-8bcf-4169-b7ae-21ca7c4fbf4a",
        "cursor": {
          "ref": "b1afade3-34a5-4805-9332-9f86be5d4bfd",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8f65d224-a344-4fbc-b269-8782b44645dd"
        },
        "item": {
          "id": "81ba89c7-8bcf-4169-b7ae-21ca7c4fbf4a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ce013a4a-32e4-4aa4-bb8b-764917d71503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491895de-8eb1-4a6b-9ad8-5c55a76161bd",
        "cursor": {
          "ref": "9f290b90-6eeb-461f-bf72-7d3360266748",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "02b0fb49-5055-43e0-b517-57c85b164f42"
        },
        "item": {
          "id": "491895de-8eb1-4a6b-9ad8-5c55a76161bd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2062e62a-14b3-4ce7-85c3-a07c46ed0077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5831a6ea-6227-4b81-828a-32faf0dcbcbc",
        "cursor": {
          "ref": "52078e9c-71f1-49a6-a393-a8d85c687dc3",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f8cff976-ab6f-415c-ae66-e706f9a709de"
        },
        "item": {
          "id": "5831a6ea-6227-4b81-828a-32faf0dcbcbc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b6d57fb5-c799-447f-9bfd-b303d708bf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f0f875-2f3f-48e0-9a52-e4de6acce583",
        "cursor": {
          "ref": "6ba522f4-309f-4a71-974b-373a888ae4c3",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5553b0b2-15c6-450b-ac97-8f24c3a11169"
        },
        "item": {
          "id": "a7f0f875-2f3f-48e0-9a52-e4de6acce583",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "23ca92ae-9b76-4671-b605-781ad2dae5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0640d50-82be-4d9f-82cf-eca39c0b85e8",
        "cursor": {
          "ref": "d13b9ef4-6fc0-4269-9ba2-cd4cdcb63158",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ff7d3331-910e-45a9-929c-2632b733db68"
        },
        "item": {
          "id": "f0640d50-82be-4d9f-82cf-eca39c0b85e8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5c88f452-ec75-439a-8bdb-0e5cefbd3e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd4d724-47fa-4eb8-bb55-741da60dfd33",
        "cursor": {
          "ref": "0832e338-47f1-4753-9afc-73cb13754a8e",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e47a5bd8-9b20-4a0f-9767-cef05ec7c3be"
        },
        "item": {
          "id": "8fd4d724-47fa-4eb8-bb55-741da60dfd33",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "502a373a-5d55-472c-b7a2-dd9a55609097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b65d9f-68a0-4371-959e-da81d228845f",
        "cursor": {
          "ref": "0a66d200-bebe-490e-975d-cca784675517",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1461ed4c-b01f-4afb-91a4-64de9592457c"
        },
        "item": {
          "id": "72b65d9f-68a0-4371-959e-da81d228845f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ee712974-449c-4fbd-831c-08d4aea96675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59bca6a-72f6-4193-805d-64ba1b6ee82d",
        "cursor": {
          "ref": "d058c6bf-e5c6-4f8e-9a98-1e2acab78810",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e4bfba20-c1a7-49df-a0bf-eb4de59d0259"
        },
        "item": {
          "id": "b59bca6a-72f6-4193-805d-64ba1b6ee82d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5f948f14-4ecd-4a85-a530-348a10587f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc91c9a-c4b0-4072-8163-d0cceb6fcd87",
        "cursor": {
          "ref": "84de9bf4-eec3-44e7-bec6-e81eb9c8d312",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "13bce10b-3659-463d-9372-1ebc23142688"
        },
        "item": {
          "id": "4cc91c9a-c4b0-4072-8163-d0cceb6fcd87",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2e2bf1cb-794e-46fb-9021-a40a3f608311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac2c048-81a9-46e8-adee-1b24088c4bf1",
        "cursor": {
          "ref": "733c3355-d9b9-4ea5-a3fb-d87b23b0e9a8",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bad7412e-2dde-4e28-8ab6-b5c76f128e7e"
        },
        "item": {
          "id": "8ac2c048-81a9-46e8-adee-1b24088c4bf1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7803e2a9-1039-4a64-a611-965775dfd772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b786a86c-a6d7-4c00-9b69-1290880b82e6",
        "cursor": {
          "ref": "554ae3bb-ce5b-4a0d-83f8-cb2d8e1c2560",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "898882eb-9fe7-4f38-b7fa-3abbb3692fe3"
        },
        "item": {
          "id": "b786a86c-a6d7-4c00-9b69-1290880b82e6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9cbd7882-c11a-4bff-800c-6753a823227c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962323b2-4cba-4fab-a938-4324574454ce",
        "cursor": {
          "ref": "01918485-0fd0-4383-ae15-72b9b405831a",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "29b94934-c2c4-4da8-b637-559035bc38bc"
        },
        "item": {
          "id": "962323b2-4cba-4fab-a938-4324574454ce",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c09a95df-860f-47fe-b49e-55fa7254f144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae39877-fbc8-47ab-8fea-8ac6d431bc4a",
        "cursor": {
          "ref": "5e6a9dfe-a915-4cab-8a8a-168cafaaf9df",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a49be2af-7ce3-412a-ac80-d4048f6405b9"
        },
        "item": {
          "id": "2ae39877-fbc8-47ab-8fea-8ac6d431bc4a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8cae8156-f382-4497-9729-2ffc932d369b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27d7ad3-e44e-4ecf-a971-e999cc90e8f5",
        "cursor": {
          "ref": "c9d211be-2ed6-41a3-89e8-21c13315d7b1",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5c078e01-f5db-4f1b-ad9d-7b3b13707f62"
        },
        "item": {
          "id": "a27d7ad3-e44e-4ecf-a971-e999cc90e8f5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e5c9cee5-aeda-45a3-899e-505a213ee89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d22956c-6bd3-464f-98dd-0f421771a3be",
        "cursor": {
          "ref": "c86e6729-11d3-4d27-b50a-c5539bbd493e",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "87b6f6c5-da71-4c58-b526-6f4076a037c4"
        },
        "item": {
          "id": "2d22956c-6bd3-464f-98dd-0f421771a3be",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3b8187c0-b3fa-42ce-8ef9-7a5fdb03999c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9de54ea-04cc-4eea-b5b3-7ca9dea486f8",
        "cursor": {
          "ref": "7869ee55-8faa-487f-8387-f3eec0e9635e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e3969f79-98fd-4119-b51b-42c134dd8e1f"
        },
        "item": {
          "id": "f9de54ea-04cc-4eea-b5b3-7ca9dea486f8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9edd8002-3d26-4e21-84fe-ce725cdf7bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d0a4ca-fc8f-4161-922b-adc2cac997ae",
        "cursor": {
          "ref": "6032f866-f386-47bf-9858-820fa3d1feab",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ae017659-2200-4b43-920b-78b29e7f7afe"
        },
        "item": {
          "id": "46d0a4ca-fc8f-4161-922b-adc2cac997ae",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ee2fee10-e1dd-404c-acb0-472d478726ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a614f6b-ee31-47b6-833b-bb19c248c509",
        "cursor": {
          "ref": "5dfc7e89-716a-4a29-8cbb-77780b9336f1",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dd3c31c6-03e7-4f3b-a20b-7fa06aa8c547"
        },
        "item": {
          "id": "0a614f6b-ee31-47b6-833b-bb19c248c509",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2c08f21b-2314-49d4-b901-40e235d80010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d254cd3-4aae-4033-9602-9c2c4965038d",
        "cursor": {
          "ref": "bf39cdda-4772-4ad4-b230-bed967c99b7c",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b23b82c1-0698-463f-9c27-2ccd8349cae8"
        },
        "item": {
          "id": "7d254cd3-4aae-4033-9602-9c2c4965038d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "25a0e1b7-8e4c-4f60-98e6-6f00af1aa422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095166fd-9d4a-4c87-b1f8-fc440e0b0fc5",
        "cursor": {
          "ref": "8542a876-8f7d-4ac2-aac2-38964c2b17ef",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fcb95048-1aaf-40de-b089-e5c808bb4a64"
        },
        "item": {
          "id": "095166fd-9d4a-4c87-b1f8-fc440e0b0fc5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b8443994-7179-4c7e-b66e-488ac6c20eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6545709-e6af-4bb1-905a-b1ca6bd1fde4",
        "cursor": {
          "ref": "aa16a9a6-5a3b-4d5c-93ae-2fd21fea8278",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f660bb8a-a1ca-407b-b5a8-204e277bf616"
        },
        "item": {
          "id": "a6545709-e6af-4bb1-905a-b1ca6bd1fde4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c39ed348-ceef-484a-88d7-e4b6f160662f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3ada3f-5d52-4543-b0c1-5a7141c221be",
        "cursor": {
          "ref": "0631c760-7399-4bed-ae17-4658e75e6565",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "458c7222-d8dc-46a9-a180-40b0f8abf971"
        },
        "item": {
          "id": "4b3ada3f-5d52-4543-b0c1-5a7141c221be",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c03518b0-35d3-414c-aaf3-b0a2a137c333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d027dea-a997-49eb-8e70-9e5641dca132",
        "cursor": {
          "ref": "2aa0e409-88fb-4efd-9e90-b8c257fa6bdf",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "da83b157-9f19-4d14-a985-3e2d9492843f"
        },
        "item": {
          "id": "6d027dea-a997-49eb-8e70-9e5641dca132",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1ec83a44-0802-4299-8222-623334d001cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae61f0a0-874e-4416-b30b-0618ba497c17",
        "cursor": {
          "ref": "5e4d2bcd-3ba0-4c80-8c6f-f0997dee8c52",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f15d07e1-fec2-437f-aa36-1a995a873dac"
        },
        "item": {
          "id": "ae61f0a0-874e-4416-b30b-0618ba497c17",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "299961f9-7a55-47b8-9036-4933e29bcd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c47f72-e16d-46f0-9a0a-e519f165b811",
        "cursor": {
          "ref": "7db56dda-286e-4f39-b734-31dd926e2726",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c199d731-9bd4-47fa-aa71-51c47183ea78"
        },
        "item": {
          "id": "75c47f72-e16d-46f0-9a0a-e519f165b811",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1a826c65-6794-4da3-8955-40b8318b93e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd4e007-a054-4e6c-bcfc-0e29db8667f8",
        "cursor": {
          "ref": "f4652ee3-fceb-45ee-be1b-52046e910949",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "59f3c369-36d5-4ada-bb77-3fb236244a3f"
        },
        "item": {
          "id": "7dd4e007-a054-4e6c-bcfc-0e29db8667f8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b8beb744-be54-4d0d-a39c-e13f46cb913b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2befb8-14b7-461b-963e-b1e4101b5157",
        "cursor": {
          "ref": "6c9e857e-8a4d-408f-8631-60587d4a9b02",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "152a3e55-16df-475d-8964-abaa3cfdc680"
        },
        "item": {
          "id": "7d2befb8-14b7-461b-963e-b1e4101b5157",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "46e11dc9-7afc-42fc-b7d6-1f0f6378a0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d933f2-577a-42a7-a7da-8c869e25050d",
        "cursor": {
          "ref": "aff7e98f-89d4-48a0-ba8f-6836c3dd0744",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "79f45439-ccc4-47ac-8838-76d5ed2f77da"
        },
        "item": {
          "id": "63d933f2-577a-42a7-a7da-8c869e25050d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2fb7a0d5-405d-4625-b298-d95ca92e6750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd45d3fa-6a80-41ad-a96e-6282eb18d34a",
        "cursor": {
          "ref": "1b8fd2da-ba72-4465-aaca-73788652c343",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fe7c0ddc-85ce-49c1-8917-58ba5e2cd91b"
        },
        "item": {
          "id": "bd45d3fa-6a80-41ad-a96e-6282eb18d34a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "29d47a75-d7e5-4270-8344-8862787e357a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbf090a-a5f0-4e5e-8e97-16de810d777b",
        "cursor": {
          "ref": "9b3f2ddd-ec0b-4089-a2ff-dc87774df8aa",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c9572b73-1860-473a-9eae-0821f5e06caa"
        },
        "item": {
          "id": "fbbf090a-a5f0-4e5e-8e97-16de810d777b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "de2ff72e-2d00-4975-91f7-d5f744a856d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc017f0-d94e-4eb9-a50b-b98d1b125502",
        "cursor": {
          "ref": "7e44b2a2-168c-463b-8de5-db185eba3902",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9e6d0196-954a-4289-8144-3238f07121cd"
        },
        "item": {
          "id": "3bc017f0-d94e-4eb9-a50b-b98d1b125502",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fa64fa0e-f53a-4346-8614-ac59497ee44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11a9b8b-ed57-4447-9d0f-b84379fef6ae",
        "cursor": {
          "ref": "60dc511a-5156-45eb-98ec-e221b7fed0ab",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "34edb699-1547-41b9-b6e6-7e4d40303e8e"
        },
        "item": {
          "id": "c11a9b8b-ed57-4447-9d0f-b84379fef6ae",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f939edce-fac9-48d4-ab21-63dc39452a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a33cf07-a23b-4c68-ad79-86af663df672",
        "cursor": {
          "ref": "a48c5068-aafe-4349-8352-a3f20eafa3fa",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0a4fe038-e1d0-4714-b86e-849cdd291975"
        },
        "item": {
          "id": "3a33cf07-a23b-4c68-ad79-86af663df672",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c02a9269-6583-452d-baf5-5785dc792c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914c78f8-784a-4ba0-9a44-c4558204d5e8",
        "cursor": {
          "ref": "78038043-0be1-412a-b0e4-c5ca0c39dfe0",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c3a5e51e-5f5a-41f3-9a45-b9ee539ea187"
        },
        "item": {
          "id": "914c78f8-784a-4ba0-9a44-c4558204d5e8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "60046c3c-d1a5-4de2-b37d-401239af3528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c387dc3-f310-4451-8243-abe22d80f0ce",
        "cursor": {
          "ref": "c26b7fe6-98e7-47a4-99a9-68f5460474db",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "29bb9908-8ea5-43fb-b8ad-6c8587adf42d"
        },
        "item": {
          "id": "8c387dc3-f310-4451-8243-abe22d80f0ce",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cebf7c6d-c1aa-417a-939c-6360fa303ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95575c0b-4e2c-4cfa-a1fe-59ffc802e116",
        "cursor": {
          "ref": "1ddb5223-3481-4577-b742-8779678d3702",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8a1cf312-fd4b-4313-bb59-d3a920e9e970"
        },
        "item": {
          "id": "95575c0b-4e2c-4cfa-a1fe-59ffc802e116",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9f4d4d00-4caa-4f6f-9d39-cc7364c6792d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76de0ceb-7836-4e41-a71e-eda94c0bfc2a",
        "cursor": {
          "ref": "0d0a962b-e9b0-4c3b-bef5-17ed931123b8",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ca91410d-a25e-498f-a96b-3d5d4aff4bf9"
        },
        "item": {
          "id": "76de0ceb-7836-4e41-a71e-eda94c0bfc2a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ab45b4a6-8d7d-4f5e-acc2-ebc6a9081f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56360d89-8c89-4dff-9c58-176fc8ea8091",
        "cursor": {
          "ref": "76d23fc4-701d-417e-a2d2-9adeeef50abf",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "332dcd9c-7401-460a-9d90-a6dabc3c1674"
        },
        "item": {
          "id": "56360d89-8c89-4dff-9c58-176fc8ea8091",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c96b85c8-26ea-424f-bb3d-202c791020f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8989c03-c2ae-4695-9e2b-1361500b4be3",
        "cursor": {
          "ref": "6f9a91a8-920e-43cc-9c9e-6424fab58f91",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f9606136-e0ae-4eb6-be16-c745779da480"
        },
        "item": {
          "id": "f8989c03-c2ae-4695-9e2b-1361500b4be3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c9a4b123-0eb8-4435-929a-04473cd3ce62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa7e777-2d36-43b0-a1d7-6bcd3d4b4263",
        "cursor": {
          "ref": "f9f1154f-9997-4898-bace-2bcd9b1711ce",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8c7a844a-84d0-4f13-ac38-3aceb94d01a0"
        },
        "item": {
          "id": "8aa7e777-2d36-43b0-a1d7-6bcd3d4b4263",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5142f3a9-594c-4f89-9053-49551654b3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238c2487-f737-4ae4-9e93-6750313172f3",
        "cursor": {
          "ref": "104bbc68-a198-4d11-8d35-e2eb8c18da39",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "aafa0b0c-ec6f-44e2-8b94-4f2b01cc3b66"
        },
        "item": {
          "id": "238c2487-f737-4ae4-9e93-6750313172f3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e4656614-25f9-4f88-b8dd-428e12e9ef08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0f5f4a-0bea-45fa-a888-e7161e64941b",
        "cursor": {
          "ref": "9cbf2f1e-595c-4e0e-bea0-529bbac46141",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "963090a6-5692-4138-8a15-fe54229cbde1"
        },
        "item": {
          "id": "2e0f5f4a-0bea-45fa-a888-e7161e64941b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7b06ddd9-efa5-4f3e-9438-0e7795c15111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2d8aab-a603-49e8-896b-0c5cc42f052e",
        "cursor": {
          "ref": "e402827a-cbf5-4ed9-87cf-d3ca32c48f29",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "95bb1883-8982-4f7f-9964-92b2c500d0b9"
        },
        "item": {
          "id": "ca2d8aab-a603-49e8-896b-0c5cc42f052e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8ae31b7a-caf7-4ef4-9000-17469a62b046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b0aa5a-b71d-4e44-bef6-e1600b2cbed4",
        "cursor": {
          "ref": "933403e2-884c-478f-87af-dbdba0eda125",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2c5b789c-36e9-44f3-8773-8675630f3646"
        },
        "item": {
          "id": "14b0aa5a-b71d-4e44-bef6-e1600b2cbed4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "04baa445-bded-4271-a6b6-bae34b46041d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e500bc22-64b0-4ea5-9962-374f46112d69",
        "cursor": {
          "ref": "58538825-c46b-4180-9187-31e5ff4ea128",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bdaddf43-b379-4405-ab60-220b6d1e6a5f"
        },
        "item": {
          "id": "e500bc22-64b0-4ea5-9962-374f46112d69",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4913eecf-e694-4f2f-9772-aa4edfdc1bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b23527-d4c9-4236-a65b-0d6d72fd363c",
        "cursor": {
          "ref": "a1e28819-ad6f-4d37-865b-071d31fbac95",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a34991ed-c538-4856-bbdf-74ea925ca2ce"
        },
        "item": {
          "id": "37b23527-d4c9-4236-a65b-0d6d72fd363c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "268452e4-d8d2-4740-a7e5-b805b3ad05f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfebf253-8da8-42ab-a00f-fe226a6f5e52",
        "cursor": {
          "ref": "4f111239-6d96-4fbc-ad17-031fe0e73bbd",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d0156e79-8477-4157-99a1-277a48e80512"
        },
        "item": {
          "id": "dfebf253-8da8-42ab-a00f-fe226a6f5e52",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c6467983-d2c6-4f6b-8f98-cc2bc2cc5234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85511876-c3fe-42fe-94c5-a7b5aab1ff73",
        "cursor": {
          "ref": "ab8aedd3-f418-459a-96e9-4c8cf1a4bd64",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f376122c-0422-49e5-a0bc-f130cbdf3db7"
        },
        "item": {
          "id": "85511876-c3fe-42fe-94c5-a7b5aab1ff73",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "46d3c147-ab04-402e-a296-5543cce3319f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a53245f-ee61-4417-b674-698e74e8f314",
        "cursor": {
          "ref": "bf8d79ae-c9ec-47f4-8b24-a86730edbe4e",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ea80e1bb-9cc0-444b-9c59-a9adf8b1ca04"
        },
        "item": {
          "id": "9a53245f-ee61-4417-b674-698e74e8f314",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2e41696d-1ffc-446e-8fae-1750448b0af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14140adc-f2d6-45f4-879f-8fa81c5f0062",
        "cursor": {
          "ref": "5c1c4f47-0e5e-4213-a74e-17bc1ad79fff",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "09d0b116-1f54-4e3d-965e-35fce96d1f6e"
        },
        "item": {
          "id": "14140adc-f2d6-45f4-879f-8fa81c5f0062",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8248537b-a078-48b2-9258-ca3c57e28734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818afaa6-7f2f-4564-abf9-97e9b9ff962e",
        "cursor": {
          "ref": "5537e440-6cf5-42f2-aad1-742b60438f87",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "89b0e1a9-920d-4e22-90c4-e519dff3a64b"
        },
        "item": {
          "id": "818afaa6-7f2f-4564-abf9-97e9b9ff962e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "96fca140-879b-4880-b808-3ef5d2ad640e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f59d52-9e47-4e45-ad2c-b2af9ea96fd0",
        "cursor": {
          "ref": "14e2b3a0-c9ed-4c4c-a4d5-e2aae6f4c66c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "256ae1f2-3868-4f10-aea8-3ced03604240"
        },
        "item": {
          "id": "95f59d52-9e47-4e45-ad2c-b2af9ea96fd0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ce8e8446-d0c5-45f0-b944-acf3498c8373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3226c3-46ed-4b2d-87ee-e2872dc99398",
        "cursor": {
          "ref": "ee231158-3901-4d8f-8d39-0058d4750fb9",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d4454543-0c83-4c60-9137-47ec7280c4bd"
        },
        "item": {
          "id": "2d3226c3-46ed-4b2d-87ee-e2872dc99398",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4f96f651-e70c-4dd2-91e8-38158325ce3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0e0d8e-7118-47d9-8e1a-70e3421fcee9",
        "cursor": {
          "ref": "7125b978-c0b6-4137-9340-f258d848fbf6",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "81737aee-a8e3-4897-9010-ab3c2ff11092"
        },
        "item": {
          "id": "bc0e0d8e-7118-47d9-8e1a-70e3421fcee9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e6d021df-d7dc-4bce-826f-6ea707bb11d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129d0e49-b6d6-44db-bbc9-963983f4e385",
        "cursor": {
          "ref": "30f9438c-a04e-4942-a582-edccd1680c2a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6c75418c-c596-4f55-948b-dd7036927ba9"
        },
        "item": {
          "id": "129d0e49-b6d6-44db-bbc9-963983f4e385",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1d94bf99-f61c-461a-9200-49365e01d055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39beac3b-081c-4cdb-a11d-57cbb808430a",
        "cursor": {
          "ref": "cd5070cb-681f-4c12-a474-b9f244d6f001",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "dcd874f9-e34e-4d15-b04a-f7facb9b9b47"
        },
        "item": {
          "id": "39beac3b-081c-4cdb-a11d-57cbb808430a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "acfccdc9-218b-497f-92c2-1498273bf148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc2a3d2-bbf4-41ec-b897-54dd3be172e3",
        "cursor": {
          "ref": "aa8ebe27-9f49-4c62-82e0-0166b0b3f701",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a27ea6c7-4ad3-4403-9f68-6b5df0612ab9"
        },
        "item": {
          "id": "ebc2a3d2-bbf4-41ec-b897-54dd3be172e3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "19ba09c1-3824-4426-92e2-93b6863c42cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5393b95-d303-4a29-a8a5-6b0ddf5d6223",
        "cursor": {
          "ref": "031953dd-24a8-4a24-a342-b09c9494fa67",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dc5afa8b-38d7-4032-9710-d4e93b4f5795"
        },
        "item": {
          "id": "d5393b95-d303-4a29-a8a5-6b0ddf5d6223",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7005dbaf-acd4-4805-9c34-86723d45e233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431b1bfc-a61d-446e-847a-e05949408dfe",
        "cursor": {
          "ref": "ad905414-9169-4a58-a421-c2cb01471872",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "04a630fe-5268-4ce4-9f84-ffc4dd63bbf2"
        },
        "item": {
          "id": "431b1bfc-a61d-446e-847a-e05949408dfe",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1abed753-0ef7-42f3-ab34-441cea4a120e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a386e531-959d-4bca-8bc0-b04fc961136d",
        "cursor": {
          "ref": "ab1915bf-d0df-4f7e-96e5-4868f168a367",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "18dc97a6-1e08-4e1d-8089-a46fa1b732b0"
        },
        "item": {
          "id": "a386e531-959d-4bca-8bc0-b04fc961136d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ea5f24be-f49a-40da-b833-8f5f164aa58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0ee441-ae20-4bbd-bc0f-81c7945884e1",
        "cursor": {
          "ref": "45df3ecc-1c95-4a6d-bf60-78a8c583a128",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "52278f85-a150-4c8a-9622-818ce2f2739f"
        },
        "item": {
          "id": "3b0ee441-ae20-4bbd-bc0f-81c7945884e1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "664b7437-7efe-4224-9110-c59063e26bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fe9b8c-0fd4-4039-85c8-d3ff7ec94fbf",
        "cursor": {
          "ref": "52ef93c9-cc8d-48ad-9923-ce4d69cb110e",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "acf84f53-c1a4-4433-ba21-047d8de0c0e2"
        },
        "item": {
          "id": "d0fe9b8c-0fd4-4039-85c8-d3ff7ec94fbf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bb84097f-e288-44e7-a5ac-c14e6eaa6bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68e050f-1177-412b-ba29-1bebed481bec",
        "cursor": {
          "ref": "09cb3065-842f-4f2d-8a3f-a8e91f0cd0d9",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9a3d4ba7-09ae-4fb2-94f6-639dd4cba58e"
        },
        "item": {
          "id": "b68e050f-1177-412b-ba29-1bebed481bec",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3fa5df3a-2544-4b0d-a84c-dcb7fecd7607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae538f1-e6ff-413c-84c1-37d14ad48e03",
        "cursor": {
          "ref": "f60ecbd0-95ac-4525-be52-37c912594566",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fdec3a54-e146-474c-8539-f047c9f1f0c5"
        },
        "item": {
          "id": "aae538f1-e6ff-413c-84c1-37d14ad48e03",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "52aa909e-e70b-4767-9165-6464b0296ad6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00522185-7c41-4c52-a0d2-5b8d92e90c8d",
        "cursor": {
          "ref": "344a77ee-49a3-4ace-9450-7a9fff9cc72c",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d196e9b5-b2b0-41e1-96dd-e198ff66663b"
        },
        "item": {
          "id": "00522185-7c41-4c52-a0d2-5b8d92e90c8d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0000f34d-c8dd-4932-a071-2cd712dc31cf",
          "status": "OK",
          "code": 200,
          "responseTime": 849,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f896d057-88c0-4a68-be76-5ec5d690bf94",
        "cursor": {
          "ref": "9b4379ea-8fd0-435c-8d71-ad370209f256",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0bcf7e32-e289-4ff3-b8c2-b30e43aa4b16"
        },
        "item": {
          "id": "f896d057-88c0-4a68-be76-5ec5d690bf94",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8ecf5b5e-fc94-400e-9328-78934bc15ed4",
          "status": "OK",
          "code": 200,
          "responseTime": 3425,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f25e327-f176-4c91-9bb9-07d9cbe5a288",
        "cursor": {
          "ref": "b403f988-2c48-40df-a15a-b471005f9a13",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ed57a31f-2f47-4275-aea2-9e0c022aa982"
        },
        "item": {
          "id": "3f25e327-f176-4c91-9bb9-07d9cbe5a288",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d95a0bb4-c562-462b-804a-38f58240f8e5",
          "status": "OK",
          "code": 200,
          "responseTime": 2474,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c71e4e-77cf-42f4-a639-4d5fe587411d",
        "cursor": {
          "ref": "aa6f3766-063e-4eb7-966c-93f15cb9c40a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5442a25b-2e50-4a55-a644-1f9ba9c2b1ac"
        },
        "item": {
          "id": "29c71e4e-77cf-42f4-a639-4d5fe587411d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "90454b73-b02c-4443-abf2-78ebfb93b01b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 87,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c71e4e-77cf-42f4-a639-4d5fe587411d",
        "cursor": {
          "ref": "aa6f3766-063e-4eb7-966c-93f15cb9c40a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5442a25b-2e50-4a55-a644-1f9ba9c2b1ac"
        },
        "item": {
          "id": "29c71e4e-77cf-42f4-a639-4d5fe587411d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "90454b73-b02c-4443-abf2-78ebfb93b01b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 87,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab478fd-5c75-49b6-a632-0d5ccce75753",
        "cursor": {
          "ref": "5c98132e-25f5-4a62-9846-bb5b540d4e63",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e8df0519-b1a7-4066-b4d5-89990af6374a"
        },
        "item": {
          "id": "7ab478fd-5c75-49b6-a632-0d5ccce75753",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b4f9ff92-9ca3-4186-bdfb-8ce20d7c2836",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 104,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d92da5-0439-48b9-8d61-76aac906cddc",
        "cursor": {
          "ref": "844fcd91-29a8-4c06-a58d-fbd43e5d9ce5",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "14bf2d83-b7b4-4503-9b74-bd41fb94faea"
        },
        "item": {
          "id": "e8d92da5-0439-48b9-8d61-76aac906cddc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "10bb49f9-0a66-49b6-a32b-507454370544",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}