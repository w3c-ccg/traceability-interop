{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "377bd0fb-88d9-4eae-a1bf-187b7a631dfa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b0d6b57a-951d-45b5-8844-5898782d3e42",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7dab1b48-e721-4e4e-b63f-4e06fe159bcf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "98006e02-efd7-46e1-9ce2-ae3cd4076c77"
                }
              }
            ]
          },
          {
            "id": "e9f5f9cc-b59b-41c4-9858-065e9d120b2e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7aedb64b-f676-465b-a696-987d3f655a0f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "59719106-4690-412c-b9d9-e9a019eb4422"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "73416378-37e9-4bce-b775-54faf576e71e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f58e436c-f524-4b63-8779-0096ded0e585",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fbf2b0af-3488-470f-b452-115e61cee93f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c34bad7-eaed-4253-9359-746794ef43bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fae25d9f-579d-429b-88d8-f73b5bbce08d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eadb3b1e-b619-4e75-afad-62ceaf99825f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e6d20bc7-7c42-4f57-9de0-71a9e8df3905"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f04c851e-dfcc-4b27-a300-4a46414fa3eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "425ea8c8-bbb0-4935-b912-2f6516660a7f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b73d7e3-c186-4a89-936e-97b05df09939",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "673f14c1-4a14-48e1-b47e-fc4a66b122c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "480ca883-365e-42cd-a0b1-c496a6b31ebb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d603af98-8e2e-416a-837e-b729d79b71ed"
            }
          }
        ]
      },
      {
        "id": "a109a76a-e0db-4f92-a69b-2c1dc55bcb95",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b041b3b3-0418-4015-994d-9dab61cfd1f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1488b8d2-0e45-4f86-8fac-5aa60c391ecf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "29e909f2-3af9-42f0-8cc3-f326e3ae0054",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c55603-2b65-47fc-aa27-7db90ed4bd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "378ff67a-4217-4e53-9924-517846a8db59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3d38c4-c36e-4a97-a8d9-7f424e1f3407",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c56bb28-0687-46b1-81b7-fd24104a95b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b310021-0e24-4130-816d-6e336a4f256b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585afe0a-b123-4522-9cfa-acc2113ffc97",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46226392-452a-4e5a-8fa6-9942dfb924e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ae0648b-df74-4004-a605-ea0916ee28e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ab57c6a-41f3-49f2-9aa1-faa1bcd8cee0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "542010de-19cc-4562-a1ec-a32499165543",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de115386-fade-44e4-9cf2-8a72b251d925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1dfdbf8-5c21-4666-a945-7e70ba2cf499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93eb54a7-7b56-4357-b43c-73603d3002c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2446e12d-0653-4c0d-b1bf-9b56aa4866e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a9b460fd-8857-40c1-b5ea-0ff0367dc41c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a9574ed-b145-4712-82a6-5a71d5ddac15",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36fe7ebc-547e-4377-b7da-d8957b84afec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "14f1338b-0f95-4baf-9815-ab78a923774e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd628b2f-d9f0-4de6-a3ee-e0f1264d9472",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4f8c9299-b660-4a75-bbf6-3c5bbfea45a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32f5cb94-cc90-468f-9f23-de32dcdaf4c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37be40ac-f959-4a46-8be4-d75118d63457"
            }
          }
        ]
      },
      {
        "id": "860e4b6e-3a9d-48cf-9efb-dded96438611",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "03d0e2b0-7d20-42ff-a16a-893566f2d539",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98bcd6eb-7c00-4cdf-8592-1dc22b66a783",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "839352f3-0c71-46e6-b12a-4dc1f528cccc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5f163c-37d0-4aa8-bab8-c12254d4a873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a34ad3-bec7-47d1-b4e7-1920d9bb48d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6511e5dc-58c6-4be6-b540-63900d0eea22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efc8ded2-cc1a-444e-aecd-226b886a11e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f4e68b-e96f-478b-869b-6c3a06e903fb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc61fac-69e7-47e6-accc-fb1ae0442a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5593e2db-7992-4992-b861-2f497e7a4f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5a74e1-3ca9-4ddd-b95c-fe314cf58982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1bbdbac-5f99-43e1-b2c6-57f1c06d2f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae5a71f-d9bd-4a72-8dd9-e01af6446094",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00eb5cb-6860-4b84-ac7e-63694d6bf5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befae9c3-9c09-438b-8cd8-133309e44a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3caa4741-484d-47a3-96f7-316bb51e9801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ee80a5c-3e66-4129-bf31-b0f75b86b88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1359904d-bb3e-4ddd-8dc7-026650950bab",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858da589-cfe0-48c9-b5ba-c0529bee4de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8794ec13-eb03-4aa9-bc54-d84607489428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f994c6-d64a-4134-b80f-436a977fbdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86a8d7e8-2a19-45b8-934f-ddf9ec0adbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e01a05-20f9-4322-acd3-23752e037cab",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d90ca09-464c-4232-8b9a-8901c297c6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a99382-8880-4cf7-8f4e-1822679e983b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae612551-7567-49b6-ba73-7b7121ae1428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23f2b791-ff35-4bc8-873a-354ad402c4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e6a2c0-7fdf-4cb9-8ad0-14860cf9d92d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a95f58d-84d1-4574-b010-cfd4eab39914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4054035-72ef-4e8c-9207-9e157cbc372e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b13a5e-148a-4dbc-96d1-104d3974f47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66470fc2-e5d7-4159-ad58-c1afcbe52fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd15c9a1-aae4-46a2-a537-543d5ce41951",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a242fa-facd-42e2-8087-e0495bcf2b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181bb4ab-21e4-4395-bcb2-2d2bdea87873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54404748-cf62-45c0-87be-ab06520da450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98e84cc2-bedf-4e4b-8fd9-ac7dd67b1885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b94b69a-cb5d-4653-8156-89033822938a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9422bfac-841c-4473-adfc-ce43a997770c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c117f8e-3f73-449b-b582-b7c562a973b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c8d5af-9d08-4c2c-86c7-3ce998f03ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac24f251-de47-4105-80a3-1f91b52ff5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38eb1f6-e779-4199-8fe8-e7200d8cce04",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e07e164-58b2-4491-86f5-f3128ced8134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed879d74-21c2-4988-8edd-3c9b02740805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a40c636-48c6-48b9-96f7-30514748517d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92cd8419-e820-4cb5-b7fc-646b619b5dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0561fd-5c58-433a-a2e7-7cef9d749750",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1862a8c-47f2-4ea0-9f4c-b02a7c2ba982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89d1867-aa51-451f-bbd2-c1ea8eb83486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0360e2e-2da2-43a8-ba91-64f950ba382a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b590bd4c-6171-4534-8e74-71ce475122f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a71306-f76f-4068-83b3-cf4601447fb0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec95c3e-190d-4be4-8cca-54e47551c1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4359f03-c3a2-45d4-87ef-c9878422de8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00868f79-fe78-4ec6-bbed-25612d11288b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9f98200-db4e-43bd-8a54-783347fa068b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a720219c-43f4-4b61-a14c-5db8ea60edd9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1eb1b8-4b98-48e5-ac1e-458cd73ca873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c2595c-5dc4-4e58-9384-b0d2919db4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d684697-bd95-4b52-978b-133590676dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9088dbd2-99b9-4ae4-a3a1-b85a50d1be31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2e50e3-bde4-4eea-8258-2a1a124cca61",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca3fc06-2c5b-4ea3-a0a2-b3c8d53048ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9916f1-be46-4f5b-b10a-05ecdd4d02b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571e0411-b43a-4aaf-97b8-bd2ac67b0cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dcfc617-49ad-4b7f-892b-dd238b0bc0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20200d3-63b4-4104-adb8-180e6d8a0b35",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631b2fee-6748-480b-9316-d5a04cf66b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc442c48-0aae-4844-a7bb-681dfc486608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b8e526-24f1-4972-9c9e-057d938121a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43185f72-7cf5-4f0b-90d9-813434f1b08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1b1924-f47c-4769-bb25-5ab9c3d874a1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba545cf7-f8ac-4e6e-8575-f8c9e325bd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1100f3ec-3d25-4d8c-88dc-707ed25e1534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787456c5-41ac-4268-8373-db836bc272be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "904a57d1-9de0-4155-b224-911077f79ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb63ce3-631d-4532-9dca-c4318458ada5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a6ab2a-37c8-4e12-a689-ceaea3473a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84974a49-b754-447d-a9b3-61e6c816461d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be7f62c-3c5b-4c6f-9142-b020bee0a836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0c43e51-0838-4c44-b56e-8d223fdcdc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97645895-f8d0-43cc-ac2b-c9268b3d20a4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d86ac48-c74d-4503-9110-7b837a959d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106f9863-81b4-498a-b454-d54dc6f81c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46650601-054f-4f85-8474-cd7865698574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "262908ac-71fb-4165-8275-f2b7cef2f110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cc9325-1267-4fc1-8cca-a2e256553e25",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb0d611-9180-4e14-aea0-96853a6c205c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5abc02b-5577-4c36-b6bc-3fa1c80b9537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc58567-1193-4ee2-ab89-13e8c0c492f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e626cc7-be07-47a0-a213-fb0a07850693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b891133e-189e-4c5a-ada9-8c0feaff5201",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ae7374-76ea-45f9-b8bb-128bbeb7ad12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c11a62-fc9d-400c-97bd-6a06a4f63d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a08dfd-285d-47a7-90f9-ee89101d5451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cdf901c-32ab-4cb7-9ff5-af017bf2b849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d4172c-f23d-417b-be71-127f824418f7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49285035-775f-40bf-a8fe-cf840d00d1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8be1cda-5ada-45e7-8578-a9b8862d9353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c63d6f6-37f9-42d6-80d9-cb26dde44709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "111132bf-7e3d-49c0-93ee-56083c88d708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4d56ab-35dc-4484-85bd-a8dfd334d6d9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7587723-cca6-447d-a6bb-56e58dcd9e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c33771-a169-4f00-93f8-8dffc09a8565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b8aea2-2502-4802-aab6-be8eeb52b926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56a9aebb-71f6-43ee-a2fb-607c6570d5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bb4806-de61-4058-b63b-2f19c011908b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4e2846-45c1-4a04-ab40-ad136b4cf6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983b1002-81e8-4b44-a719-ebc07d2ff4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af09314-ece3-4b54-8234-55a3eaf0029d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4be6f0-db32-4f29-8171-c68e2acd12b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b638bf5-153a-4f16-a3b1-d8607c5844d4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16fe992-cf07-4ae1-84e9-1340a3af311a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd8149c-9b0a-4fb4-84f2-4deb038badb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b298e368-9a49-4f4c-9910-659c4369489e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3d40ee-4b5e-4d27-b84f-ae352d4a3421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9ee5bb-53fd-4e43-bdad-4c8a5a4a002e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3aa0213-bb51-4717-a281-91f228f734f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a8307c-c3db-4a65-a59a-ef89b419d0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602437f2-aba5-4860-a772-4f6aab91650e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b738b9fd-2627-4211-b238-a4d674c8f455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabd0487-00f9-4d9f-b25f-6cf597ce70b3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e52b79-a019-4754-a33c-fd5ac21148b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb14bfa2-4689-414f-a306-e5126d32f6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e462bfb-b9a6-4770-bc70-6230f00b4f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aadf0df-58d7-4b78-b625-7d95fb0488ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9145caff-c653-4fb9-9992-9ce46b1aac7f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227f833a-cee6-4059-b7bf-73db31e92243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a1cfed-22fd-4466-bb40-ad116ddf9d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcf44b8-ecd2-4eea-af05-f9d525f4066c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d43718-9040-471a-8d0e-73c274d6d21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091d1372-89ef-4c8f-8e14-2f3dc323726b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc06ef15-3e83-4a25-9810-8e9325fe204f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4cf938b-63c7-48d0-9708-56e6c49882d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288ba711-0513-4e5e-aac0-4e950b2d9067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "201b1859-7619-4bca-a83e-bd29d6c686b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b2bd78-f4ed-43fc-a432-c6667ec4f861",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f99b85-ca2c-4427-bc2d-5794e8affd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e78baef-a346-447f-8978-3cc4c77a2159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253d8017-1cb6-40be-9e82-55f35dfc74dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7852d8be-3e7b-45cb-a8c5-4c64e2d27e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4500c3-fb5f-4585-9a6b-0027016dc6c8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349b6605-3a0c-4303-8c8e-b0418d921a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7bf59ad-2b7d-4747-be63-32405a4046be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10f6a9f-5f84-4834-ac39-3e6cd1818696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd45ae06-ed64-421d-be95-a629161055b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87896feb-5a6f-4977-9bd1-75bb6cf58431",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c09327a-f73b-4bec-a787-b573ac8b83ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7015033-c0a5-444a-a8c6-229cf57355f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5fa61a-2c21-4548-8026-43a09efc2fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "01571863-eea8-4371-91ad-c550060fece9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d2a944-cbce-4496-85cf-0930c2bb8412",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ed7a47-5458-4d14-bf0a-e041ba1c4fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8c11b8-7f32-4475-a147-155d68cc331f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808b695e-d58f-4435-931c-437cd73dc443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d72a9e27-f33c-41aa-ac7a-1d57174a3ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2213cd90-2671-47bf-984a-bb7c978ef2f1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13925bf8-6147-40bb-9f1e-5db16a3d51ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60acee93-fd7c-4326-ac10-17d1f56d4ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668f3cb2-b380-4c7e-bdb3-6024248515dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90fb962e-e65a-41c6-b828-1db1befd0a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315ff24f-58bc-4476-8bdb-373e3c508c81",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2004ba0e-eddb-406f-ad3f-4e63a72af658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2768cd68-afb9-4717-acfe-03e44736a213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7f322a-a497-4e12-bd5b-091b26184869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36334e9a-c1f3-4db0-94a3-8568211a7025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80897f5-ff42-487f-8b86-3c4466ed8ca2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ff7c58-fc1d-4960-9e1d-4082cefd4790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803ed133-8411-4f3d-98aa-b0ced37eb388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d43876-0e8a-4830-8630-b5475e9fe443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87d74ed8-d43b-4035-ab73-e3e7c0c271b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40752ba2-c666-4962-8d09-bc47fe20e893",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b524d1-2d3b-407f-9f49-5d9c149ce3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46aec89b-7bab-45a4-b330-64ce4677dbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efd4212-8c94-400c-b253-2f33c03ff9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "41ed54fb-b20a-48aa-ad75-64435e12c71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d7f21a-11dd-4bcf-a877-0d495704b0d0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50be531-0e7b-4af3-a766-2c3c8723d230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c4073d7-f00c-46b7-91e4-21c4b1d849eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d377bd08-71d0-47f4-9a2d-fc69c60ff345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8d90a7-9876-49e8-8008-c98292568323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0eb63c2-50fd-469b-a8f4-58bdc58f928c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa45cb8-f578-4b99-9363-3232470f3ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73204bfb-7fd0-4d8f-a216-90295fccb02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8841a4-45b1-4179-b3d3-bf236655100d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34cdc651-105c-4bba-81cb-3ea86e76547c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d8269c-973c-48c0-a403-f567c109a535",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72da8f66-b104-47d2-90c5-832902c886ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5e2e56-c170-4c2d-856f-615ca4073b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172c47eb-78f4-4000-8ae3-aa64074af20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "68630df7-403c-4fdc-8e42-4f5879c65403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4ad50a-34c5-4e8a-b528-ecf197e37aa8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb00c695-67b6-4379-950d-4f23a9a816da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1f2f0c-6854-4fa8-9df6-df9875924606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832664fc-6caf-408a-94dd-d9dde61ef02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "09e6a6c3-3ccf-4de1-9bb8-5c00e342d01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad21ae9-7ccc-49ea-b5ff-8903a8646643",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ed1046-a8e9-4723-a23d-b190d16da1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03fcc05b-6085-4538-a48f-28107dfc4b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f03d827-9465-4854-9f76-f448ae02d32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2aa151-67c9-4c58-81ed-cfd5a11498ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca6bb75-e9c3-4017-85b2-e1c07941ed62",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b522ab9e-8d7b-4303-b6f8-d2ec0c262823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61856be3-5d0d-4f3e-91c2-00c0aac05b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62a5b61-f3c6-4243-9534-4793883a767b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "deb06569-9495-4f6a-9e21-e59f1172ec44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ad3075-08a3-41a0-a0e2-69919eb4e3cf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74abe052-a98c-43cc-971b-e8b2d1c384b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9fd84f-e607-4266-8488-6eea03daa31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccaa1c9-0ed9-4495-98ec-5b3c7bf2ea76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f167fdfb-6774-45d3-b2f5-dc79d5b9d048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af61ecc7-63be-4e46-bf4f-f97d79b8ef24",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dbf94a-7d09-462b-b11a-749530bfb120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99ccda9-42f9-4e77-84d6-0480f2548948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf27a9c-dff1-4e20-bc2f-10dbfbb2e990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b66af017-212e-4d80-933c-396e1736861c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff40635-2087-4f04-b116-95c8f7cfa324",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f186ea2a-fe37-40c2-ab76-2104599c780b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca630d5c-2a1c-493d-93be-69995d80d0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b0909d-c703-435e-b08a-ddfa80ba6c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b528e17-2271-425a-8017-db4125b4591b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94aa44d3-f525-42d6-8bf7-479b5674f176",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b43dead-925d-4bf5-8cfc-3980a4e9f72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881bcdd6-3d9e-4119-a11c-3de57be1cb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fe02f2-2ee5-411b-b0ca-4e56bba6872d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "081df1ee-8de8-4fe6-bf8f-6715d8586672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad4438c-2bba-4894-a545-89a93f22911c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce22d8f8-1e0f-48ab-a9f8-dc1c9e99fddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2195af42-4230-4117-978a-f86db4cc6eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae403b2-f529-4307-a9fe-5311c69d22c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb51cf7-76e1-4ebc-8b56-90037e3a4aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a51b49-8c65-499a-8686-90d85f369af6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee38df3f-7136-4a22-b3cf-49af89528d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43468402-bc71-4705-8b42-12fd64fcba56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e476e7f1-7ab9-4db7-a217-2d02d395d2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba3e4ab-ff8b-46d5-b96d-4257953f662e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725d7c6a-9cd2-43ba-9921-d4cfe7ab30d5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba6aa3d-0476-4ca7-994c-f37e83c32ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23ead98-8e4e-4a7c-8a60-4956747e2ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8a266a-845a-4e1b-9844-d8d1a853e348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6de99d63-7983-4b43-bd28-e544ce097dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49165fc5-3cee-4827-b340-f868cdfb534e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ca44cc-33a9-48b8-bb28-7d789a05e6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd4524f-68a3-49c8-9c3a-68832d5c4180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc36c5d-7ba3-4568-91f8-4189881f50fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "441d647e-4a38-4330-866d-0688c2d50019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab39f368-5d86-4802-9321-7630728884ba",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8993c604-16ff-43d9-9002-9b2070cd62ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83894c12-21c4-4310-9cb1-699ac36be4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ab9f93-9541-41b8-a3e0-a2a1e95d84a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3452fe1-1f2b-4415-a5a6-9c779db08572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074cc4d1-034d-4b43-8c30-82bd386f00e8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7a6566-9316-45d5-9906-2c1aeaaccdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea61ee0-6d66-4825-bf14-6ad6a14234c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae59001-7304-4e5a-82ea-d69761af7c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3057e4-6279-46f6-95ae-8094a212a96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622d0a57-1624-432e-a1d2-f8af603d8ce8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea00b4b-4132-4b16-bd75-f06b6df9d548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61117260-58a2-4827-8c2e-a8ad77ca9a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a781616-ced7-4ddd-b312-b9af0bb911ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a87969c-0006-46b7-8d76-3da79a9f295c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257650f1-5466-4fcb-b98f-9c55743c2e3a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4b587b-0f3c-4e89-8a04-d0143fe7ac70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1508833f-4870-4a5a-a50e-d578f28985e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef75824c-6a33-4210-92f9-d2fb2b0d5cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8f4d51-148f-4aa6-a118-deaef215540c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdc7a0d-a46a-4683-9980-b2050ec8609c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407adddd-8f3f-497e-a8ec-93e4512a18bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccb7259-7911-47dc-ab42-8e57b1e8a5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb28c9d-5fcf-4240-910d-58098cfdf639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b00443-cac5-4f19-a910-0cc433a1dcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f2ff78-a129-464f-81d9-4e19140bb212",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e39bc4-b2e5-4343-badc-24f4ec7e288b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0a0512-aea2-4b7e-a254-e9dc8e9c83d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf719d9-bb44-4878-a4a2-a7d81c82e677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c01b87c-58e1-4785-8edd-e2090a41259c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b612c95-4308-4cce-95b3-4d7b8b99c233",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8889aeef-e2e9-4e4d-a4fe-1dedafd4d651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fe9a56-241d-4071-839b-da080ab7cf90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecbc000-7b1c-4a89-82a8-08fd803f05ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ad956e6a-74ea-4711-86f9-cccab6fcb03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154316fe-4ed8-4db6-bcfe-7a4e839c9075",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29d262e-4411-478d-80c2-16fedd0b9d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc456d4-dd0b-405f-b9d0-c49f3206a1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568074df-188a-4d51-93ec-3ffe186467d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e302a0b-4533-484e-b4c8-abc177b6bfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3657842f-0dbd-4076-986b-29b0ae2c9d3f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dfe9c7-f39c-4fae-8ea1-932b627a2293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab406286-4f0b-4dae-bb01-e9aa9e5efbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df2f753-7d19-4c12-b072-38eead936b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "23898f53-a609-4088-b351-48b16882ebe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fead02a5-fd4b-4923-a8a7-263cf39fd982",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95157219-75fa-4223-b661-c9495d4383dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbf3687-eeb4-489c-9163-39053a8f506e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fee239-a0a8-4d7e-83eb-ef06d0e080aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f75fdca4-2247-4c99-aeef-751d3b1c830b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519f738f-14aa-4311-ad82-4e142809e0a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773d702f-5eaa-4cdb-b944-1ff96d3a6cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b26d445-31cb-4a88-8415-b941f2abaa08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19abdf7-5796-43eb-b51e-18d79af4491d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d217255c-9a98-4d6f-abdc-23292590c3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e00f45-67c8-4ca8-9f74-eadb1fd09eb8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd0996c-edcd-48d7-9356-48da4e63a3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efba704-97ca-4c9f-8b68-57e8c8de8131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8dd75a2-7616-4667-8a40-f7924f4362f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "054a9b1f-bf65-446f-9ff4-161831d57eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0fbd6a-1dae-4734-b9cf-56ec76983a2b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a4ffb9-436a-4af3-b287-323bd59d55df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43a1d98-925a-4095-b5b4-481b1bcabaf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bff911c-ea00-40ce-b231-478f5731fb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf14a35-608b-4e8e-9f45-b83a2c50c145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a40b220-7174-4478-9a39-0792612a59e7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec15672-a8bb-4137-8e02-ec7f102f57f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95530f16-5225-4f88-9ed0-6879b7fc7d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851d14e8-5ad9-42e5-8a97-1c0ba48e395e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba637b1a-4674-4505-a272-efc9c311b41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08f74f6-8c00-402b-b9cb-5014086ee47b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4035c6a5-f848-44af-9a4f-297d753d8292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf8fee1-f78c-49bf-9663-b48e118e7b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3196d36f-9bff-4e70-bef4-a63b3d3667fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "add27205-7cbf-4f74-ba2c-12d98072a658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97f7b2f-b8d5-4cd6-9974-b277c0c2c737",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c34d0b1-aa5a-4349-984a-102d44ea28f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a51088-cc38-4b42-82d1-60a2ec0b9c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0eb27a-a75f-4d34-8f51-08bb82a2f786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c67b4baa-2d41-4aea-bb8f-e751206b3382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fbfdf1-8ead-4fc7-8420-b88c86b97844",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5fe38b-3b8a-480c-a571-4643d94d6abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ccb70c3-5ff4-433f-96f6-c29bc37a406a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7232cb38-a9b7-463e-b999-5e50c45e45ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8357c5-683e-4b94-9f0b-56cf4935a042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26db2b98-8f28-4eed-b17d-a280ac1feffe",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb76702-853c-437b-b388-15d0650aa13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b5ed9c-4e8c-4923-aac9-fb047de03f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b1f5c6-2f0a-40d8-a599-cb0e85abdc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "803a11c0-5c66-47e3-8032-6c1e20f571b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211885e6-79de-4941-b4c0-eebbb7e06ed2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7f0461-c95c-4167-8ba9-c04080d8ed49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169ae709-91d2-4d70-ac49-ba19f01926f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f0ab2e-3ef5-4ba8-bfb0-f976cc78ddb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9db853b6-0838-46fc-a2f0-7434f2bee31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83deda19-e7dd-4513-8a80-8641639faa03",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9b7caf-56bd-4c46-a44b-d05b76ec20aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9816338c-3d32-4ec8-bcee-83af20dd2203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea26a48-9f43-4fae-be50-494bdcf253d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "47ad5d47-8b13-4dda-873b-a5150b64c323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050f8174-d37f-4660-9f04-9293bf71a3e6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a826c6ae-6c04-491d-bb84-a89ca829f240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d662117-2b9d-4f14-8806-400bb1cabe7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519eae23-4e2a-46ce-8930-e225c38a1668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6f3d4a-76d3-4e3a-b932-9d6c5356f216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079b5050-dcbb-49b5-ac82-301702a27181",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc98402d-7851-4228-8bf4-9bc1f89c0f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2d1a7f-2c55-47d3-b3e9-f0300e52145e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe4525c-2311-4b54-80e4-7c9d71c42b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e46b3018-208c-407b-9cde-e5a5e05c725c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5420caac-b6f8-4e59-b096-ee47223f7705",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b46487f-9f16-40c1-8dab-8c20e2dfbba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051476e4-1482-4fcb-afbd-8688db3177b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6848c59-806f-49c0-be3d-5169810d81de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f6caa0-7f10-481d-be1a-086e0ccab49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ce961b-10b2-466c-9090-f7ef46385ea2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908cfe3d-8ae0-418f-a6ca-75df97bb0b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c960a6d-c996-47c2-89a4-4f0c6e900429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7883338b-e56e-4a12-be12-b87a216ff0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef611c7-5366-44d2-be7a-9e9e2f1c9f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9101e189-71fe-4562-8bf5-c0a97e33b171",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666431fa-7861-424a-bdfe-5ab2ff84525f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d121144-24c8-4063-b105-9fdd2c4b6ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089080e9-e79f-486b-aa86-3a7190055a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4447bee5-4ae8-4fc2-a10a-8ecad84e5ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d7fcde-6019-443a-a96e-acb8e87b8786",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6731be-f294-46e2-8f26-a8cbe08e4b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49ea60b-a3aa-49de-95cc-995ae22aa994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7023ddf1-f237-4b96-a323-de1d74cdada8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67a2f6df-455c-4f04-95dc-ed94608b2fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ff39e4-a6f1-49b5-8a5a-ed6b318ed914",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb936d0-8f5f-4c4a-8d57-91b50ab480d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b00b65c-d75d-4ddd-8f73-d31c270f1926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ea2b5c-905e-41a2-9859-54c9472070f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "895145b7-1bf6-4793-bfd5-a9bfedbbe8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e661680-a8a1-4cc7-916e-71e6f97ca377",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9f575a-6a08-47e2-a235-2d87bf1aa9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31aed96c-4bdc-4ee9-aeb4-155a469632aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf5598f-02f0-41b7-9fd5-c78ab26e61bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fec147d-d6a6-41ed-9859-88329b426103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca897b06-b7a5-4440-a4da-7bc247df1b1f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4eb1511-166b-473c-918d-e936b85b7223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca74ab9a-8ffe-4434-b853-622018cfc5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd21c0fe-1ddc-455e-8ca1-081bc73758e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b472f20-f4af-48f2-8d9b-1e4ea03e27e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c28ce7-4cf5-4d94-b446-6fbab702606f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6699b682-a5fd-41cd-93df-3ef04e6ecbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a5d00f-b6bd-441b-8fb9-f3c1541dda51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a2726a-87ca-4614-ad17-68be9ab4cb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa951ee-fc95-44c6-a0e6-1d4192a28397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc4813a-0835-46e0-be63-a6881c74ea63",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f0f3a5-3fa7-4c4a-b824-593ac8af4a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ea1414-a4bb-47ac-ad44-05125b463317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e21248-7ead-4aa4-8f30-0b71c8af8a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92ad8293-f022-4427-9039-a290aa53532c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4e8e1c-5d1c-416e-aae7-ed0e812df535",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db55eb9e-f469-477d-ab38-ba9bb9c7fdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b97791d-7f7e-4223-84fa-ae81e46f3fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fe03fa-7f05-4b8b-b186-695d6dbec087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "96dd5798-8ea4-4b33-a88f-b0ab1c0fab8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b342ab-2a74-457a-9e19-e40c495835cd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dcc3a9-a03c-45f5-82b3-8babb22872e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171b644d-aeac-4f51-9f29-cf96aafad2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d70235-6a17-4d35-9384-a1f403a63551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba372f2-2da8-42ea-8037-0311257ba664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab0ffb9-50b0-4006-8dc6-85a8845c4113",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9610a6f5-f940-4836-b533-5ffea6b635df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01042d7d-73a2-4bf1-b144-bc278bd27b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b287a94-faa7-4e13-9f8b-98b5fea991a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56241765-a14b-4262-a931-1b381f903e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bba00c-e949-4934-b058-654f9cf4fe62",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d320a5e1-48b2-4bda-8c88-9aa136d0192b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5aa75f-bc53-41ca-bab2-2730c05e0434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59b8f1c-350e-4aa8-b1d5-2390e391e41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1535e7f9-61c3-4d93-a325-741b5637d835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2976bc62-e6ac-41dc-95a4-0a2954b8aaeb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefad59a-3cce-4ea6-b31b-8c5c9574283d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60383496-3895-4ab9-a009-5a50b5a92a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980f26f6-9169-42b1-ba12-d81176715f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b70c155-1ceb-45a0-ae93-8d1d5fb777ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbed0c2-bb22-4088-81de-98808c7ffa4b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228cc247-70bd-4588-b700-93d3b0a0d6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f479d1df-9968-4275-89f6-c971ad910913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51465c2-43d4-4821-bd85-ee74017091ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8199bac-2e5b-4cf6-affa-adba3bad5b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74bc5d3-d0c9-414d-840c-de5081ca704c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1797f7-ae2a-429c-a77b-c993eee1fe77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a7e178-ea18-4aa9-a969-100546559631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e63eb5c-71e3-461e-9808-1a6487c6a8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c44e8ed-d814-4817-8111-a4cabd16d468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4430cd-10cd-415b-b292-e84f61066de5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ed7c17-d964-4eab-9377-e1ef79a42c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2030c2a7-4de5-43f1-b478-a0ea9cf275c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834ccc43-8c13-4c5e-8100-29f9d730ddb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f69817eb-dfaa-47a7-9714-dffbeaa473f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775d9f32-d532-446a-8fb9-416c09767c5d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9de1049-5642-478d-b29f-f3c3417e1d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90cdeb41-0c8b-4f2d-9d35-20098398750b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6ec83d-cc3f-4d34-b641-5222be0ef2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6f4997-f065-46e0-8df7-fd7ccda58d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadd173b-ffaf-4d55-bdda-13bbf51a2b71",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb4c0f8-c252-4c1a-a21e-83c51ac8ddd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bba160-8996-4aaf-affd-33baad238f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46660c3f-0edf-406c-85f8-70d4371f6a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce1b762-3a1b-4227-9a76-7b0f8fe6b59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a8b9bb-2be8-488b-b640-35d254fb6755",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fe188a-0591-47ca-8700-4f4543e7791e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5c84da-883a-4fa7-b0c0-d8da200990ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37aa6d2-5c02-461c-a138-713f157360c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c29dfc3a-f772-4c30-a8a8-adbb205e2f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38c7c96-9693-4a48-af2f-65b7e5468220",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf542df0-71bc-4a84-bde7-3569267055d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "56154610-2a1c-4a90-8f96-88795ea443b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdc5c4f-dde2-4e7e-9194-7dbb91cce769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecdd113e-793f-4022-aa6f-d018f366eb04"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04d31d9a-88f8-4409-be34-d15c72d1e554",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60205040-dc30-4d03-943e-874a0fd95875",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114d3b0d-36ea-4b51-bc1c-fe2cbec7cab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c0a1bd7-95e0-4189-ac72-0015c83a784e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24fd302-2949-4ecd-a153-afedcbbefdd0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4916466-f107-4373-a90c-6d07aad6f88c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92bbbe51-2f42-41c4-a01c-4de3d7d61c3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0504960-864e-4c41-95a5-2ba7d87c8090"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64fd3508-7e1f-43f9-88d4-2d12241c42f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60f00f62-5cdd-47df-8aba-025ad558cdf9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07b4cdc7-77d8-4ead-ae02-590c4d41aa43",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d13c8606-61e8-4d0f-8945-6cfddacc3883"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "07b4fa46-d02b-40b1-9e59-96b045a13a0c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d9da9ec-1768-4175-8c61-40ea7e8e6719"
                }
              }
            ]
          },
          {
            "id": "c5eac547-0bfa-46d1-a3e4-5ce9943d5635",
            "name": "Positive Testing",
            "item": [
              {
                "id": "781ddf84-2ac8-4c98-8969-7cb755516f38",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "992c6d07-8871-40fe-b0c0-4c1ad34ddee8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2851fe4e-921d-450c-8715-b42b38d92210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c33ae747-4d32-47f2-b904-4c9f2d41e68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779824c5-38ae-45dc-9f0b-a742d0b53f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79749819-26a2-4a06-b29a-913661e3a237"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4df965b-bcf3-42b3-8419-702048dab00b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b5b1dc8-d752-4f46-b21e-da0be5103069",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77c492ed-9fed-4070-88ce-ae411e4f0090"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1e6eccc-a488-49aa-94c4-5cae75f053be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b2fb2834-ddd0-4730-9c52-020cf903f615"
                    }
                  }
                ]
              },
              {
                "id": "5dce3079-eee5-4e01-a658-35988bd8c03a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b07c9988-d89c-44e6-81ac-28dae639bea9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78caa135-d666-4e65-b6fe-d467b2e96105"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c8d0540-f026-4ee8-9086-ff0f42968298",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84eafd4c-c14b-4195-97e1-b39981c4736e"
                    }
                  }
                ]
              },
              {
                "id": "4cf9ad9c-5a17-4ec6-bf1a-248118723512",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7cbd8e8-ee07-4238-9b8b-0e6557010bb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e806333-4b83-41db-8879-05ec9f0da62e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1f8ea7b-5726-4eee-9398-2a4e4231a1c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d16eef9-a5a1-4ed3-b585-825fafc40066"
                    }
                  }
                ]
              },
              {
                "id": "2ae9cffd-2ab7-44c5-9972-3c87704710a2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c6c0842-54da-489d-a056-4bce7dd946b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2bba3f8-7d9a-44bd-871c-2d856d636db5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ebabd49-ed62-49b8-bc5e-ff04c698cb0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f80ad345-535f-4ca2-b872-cb11b0af52d4"
                    }
                  }
                ]
              },
              {
                "id": "3ea761e9-1cca-46c8-ac9c-08a6c47e3094",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0c5c643-f253-48f6-94a4-30dbdbc0e23f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ef7b247-8186-4f5f-a12f-84f8c9644fe6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99e9ec08-dc71-4025-a121-b550aa1740cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4d4883d8-d050-4840-840d-419843e38d90"
                    }
                  }
                ]
              },
              {
                "id": "77fe58f4-3b57-4645-b17e-8f17d3524824",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42cc8a40-8b82-43a2-bc8b-3d5cca843671",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbdfc643-9120-4b1c-9950-583971851b49"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c8cea0a-729f-4e0c-a044-577c1c7e00ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a15fbd7-4e23-4e2f-924b-c067d09d2cfa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6413e396-f472-41f8-935d-4a46307f6d53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d90e487-c125-4475-9507-1a05dd1176f8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f09de0b6-9656-4d33-acd4-3f00d1a26d1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54f6cbc8-8998-4e6d-9152-dcc782e61c80"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be2a62e0-a36f-4d16-95ea-c08c67aed734",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e7dbccca-8796-4f1c-8485-9d6a1959e55b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0501381-c24f-48c2-9acb-4e741316f9d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb7fb89a-4681-451f-bd2e-dab5fef7f7e4"
            }
          }
        ]
      },
      {
        "id": "28e912ae-b91a-4830-963c-8d21475797ad",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bc929054-f574-4cd2-ad35-8a62fe9b5dfc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da4eb70c-f251-45c4-872a-1c04130a97a6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "130e6521-d113-4b8d-bed4-b4c83c455e2c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8202d4d3-1b7a-469c-b1a5-54d56c8dae40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d08abe-3212-4d0c-a7db-ed2be8e837e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6cf302-83a8-4fcb-9d17-41a7e9f6cd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc7b2c8-cd6b-41c5-9ad5-68a3e8130cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53abcc8-def7-44a9-8049-b2f670cc8e04",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2a2fa2-a779-4c96-9bd5-e00027aca52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8444f980-eccf-4686-9737-be4adeca19e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9f6313-cf79-40e7-8eed-b724b162c4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90c62d12-bf59-44b5-9b3f-c75253fdea84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5791de36-73fc-4d79-bcd2-a58ffbc5da2c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91470c01-0164-4260-8627-b0f8fc6ffc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603addee-58dc-44b4-b517-6e0bd27dade5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69946e43-1219-4ca8-9bf5-f5d2f77ddc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47bd4e4f-4cba-4c21-ae8b-f7d102fd21e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e193be-4c7f-49b8-bd0d-275908b825aa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50bd4d4-61e7-467b-9111-24929d511a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6420769f-eaab-424b-a7b5-1ae9394471f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb2a683-ecc1-44e1-b579-d8a7817559db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3e6d18-f8eb-4a63-a622-8aa0bc2fd5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52adf5b-e03c-4a1e-b51b-208d12111d95",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad59c5d-5c5d-4af7-8ce6-f242f110c78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4131fb59-478a-4ba7-bb33-e2b9bc310693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e29ea16-cc98-4e73-b359-e5e643c795b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b2ba17-cbb6-4ab5-ae02-83828f40ea14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9574a193-ef7b-4cbc-a3b1-0908814d71c8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78561946-3267-4d4f-b9a6-776c6a8974e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073c2df2-3a25-44e8-92c9-a8ee082f522b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9239cb3d-3b87-404e-841c-8984ccddbab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41628f2b-6730-4c8c-aecd-bf9f50fad999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4e3e75-cddc-4247-bbaa-a73e77efdfbe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83204416-c4bb-4b74-963a-edde613ad2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42264473-ad3a-463f-9915-0ae584672ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acad67cf-7146-4e62-93b6-fb52b4b4bc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f45495c1-d917-40c3-8c71-53b3af8e8c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d875a422-200e-41cd-a463-d8dce6cea332",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f74653-bc95-44dd-b860-9d99f141af53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d581d85-48d9-4bd0-af91-9d7ae0467533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7beb7d7c-c40e-44c7-b8c7-8cd929a8db7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f44edcac-c7b1-4d61-9692-d2428f34f864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00669699-ca69-4c7e-ba0a-efd3c54a840f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c166c6-dda3-4145-8099-8b08d00014d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cfd54c-363a-4716-9c07-4d39e3a94da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96f3bbf-b2f1-4a2e-98a6-47d416fc750b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07afb141-6dac-4c2b-80bf-f97e3841949e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cdf836-d026-443c-9d13-a8d61f6aba36",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f09cfe-0711-477f-9a23-631e4303dc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b487a519-cedb-4774-8736-7c8c07bffae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b233f13e-b91e-4cd9-b8b0-abbc239faa1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd331963-3dcb-40bc-a800-8c57de5f9d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c05c3d9-6b51-45dc-a07d-ada28388c88b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772c49e7-1fe7-4d44-a7a6-49de4f9ee616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cb5429-861c-40d8-a35f-44b655269d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ee015a-c0e6-4f40-959f-ec5beb3d3ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8281798e-b4f7-45c5-9938-c3257f6cfbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b834e886-0b75-420a-9eef-693959ccbfbc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03068205-e9e1-4f77-8e2a-698522a29bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5a5f15-fbc2-46dc-8328-a3b4f124c581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed35416-4c3f-4a3b-9ee7-f8ce7e445660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb991875-de95-4325-959a-048bcf18f537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03eb6ea-8a00-4caa-8a76-38df6950deb2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5808e97f-7b53-46b6-a65a-d5b2cd0aa83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac037626-1828-42cf-8afc-fae62dbfdfaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4174aa-6411-4a4d-b3a5-7186f47a9cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e081053b-da19-4ceb-bb3e-3256258c3f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba701d4-4108-4a8c-91c0-cd8d552c159e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4d2ea9-5838-4d24-8207-49c6a3ea29a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1811be-c4e3-4d81-923e-af9cb707ba3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab578a94-b614-428f-b993-5c284687591c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c14d9bdd-7574-4225-b926-4f1048433541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd78155-bb56-403c-be40-890931fc0c46",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108d5a5b-b7be-4afe-a4b7-2669f8ffd536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256fcd85-43a5-4288-98a7-7bd7cbce58eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3776e558-945f-4663-b764-be6f86f98ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "35805bc0-581f-4bbe-a58f-3aac2e0e91a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df6a8d0-1eb8-4a0c-ac1d-7307a9c30b13",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827e1dfe-2bf4-46c1-a943-655f32f2c1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76a24f5-981b-43aa-b973-80beac4245a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62322fde-e698-4389-9dd6-342f97db48d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf2deb5-c777-4e0c-a2cb-4e51d8b04ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c66feb-0aa4-4167-9d05-8f1e1c213945",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f31ff6e-6aa1-4c3d-91c5-03bfea023660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4c9351-394f-4db6-8fb0-7ce04f584daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6e610e-36d3-433d-8d1e-73d176c4b637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "40255121-e4b2-4454-93bf-d347575a385e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a787be95-b3d1-4178-8657-f41bdb27f427",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c0957e-c692-42f2-b0ff-f85dccc48dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699ce04a-c668-4abb-ab5f-ad96e786893d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa8aaa5-ad11-4ff5-84ce-f6536d6935cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "60a5e284-b07d-413e-919f-3f43a4bba5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5180596-4101-48ea-a07f-019b09081ee8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd471f5-188f-4187-974d-a77b8239301a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282d1c67-1948-419d-86e9-adb9b6ad6d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b384ff9-0139-42ea-8e8a-d8be7ede248d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8221fa-3a3b-4dde-9bf0-e1c16f67545f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5f5850-36b5-4520-bd78-fb506e9b5b76",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583a2e74-1013-4ae0-97be-4ce81eb456bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236a38e4-9f23-433c-964c-a7f0549ae48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd8c148-546c-4386-b04b-1b6890aad806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "464479e6-d575-4c89-8d82-408a2ad7e53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467351cd-dcab-4500-a6e1-8ffb2ae4afbb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd06fd2c-5ffa-4f77-b036-9c65c70cee5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3221c59a-fa27-4ea0-adb0-e1bc3208e812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72c6b4e-e8cd-4228-98e8-0c3a2104970a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bdc173-0a8e-448c-90f5-4258f768c984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3c4ef1-8a6f-4862-a1b8-46b35fb3a602",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4f5abe-890d-4968-8650-c18125599806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf8d536-862b-4555-809e-367ed830a0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1761458c-54c2-470a-971b-c6941fbcd063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efffc8d0-1f90-476e-b1d9-04c16f6ca29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f79cc9-78e9-4541-a160-8116567e1c01",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d8872b-1a03-4db6-bb0f-c4792322e636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caff09ca-b87c-4270-9638-9a6ec8e4f856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b501dd75-ff81-4879-a018-eed90cd2d3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b52c27e-9145-46db-9a96-ed2b8425bc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77e1bb7-d4cc-4152-9a5e-6ea4e6a62053",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fababc97-f858-4ca1-9a97-aad1e74ce955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c8bc28-d0e5-4bbf-9dd2-e620ef0ebada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2105d061-25af-473a-9580-a1e645e95e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5d4c23-5bdd-475c-a8c7-5d26a0df2a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0168e312-91fb-4838-a3f7-e25c8c44a483",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03f9714-93a3-4ac1-8516-e1483d911cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ae92e7-a6d1-4332-9f84-e8a490e20b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca4542a-0c3a-476d-98d6-7ae6aa2fc2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3799ff16-90eb-4f89-914c-7f159e854b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86581154-e63f-4a1d-8528-5d61e6715d70",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2af8cb7-7b7d-494a-a0ef-4663e1ca7d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182192e6-de82-4461-b8b8-51fe926f11be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078623df-0659-4279-90fa-a122bd3fc00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ec1fd0-7399-4c5d-af41-1e4eae8086b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f30c79d-f66c-47d5-ba16-0d434e5f136e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f712f9-fb56-4a35-968b-8778fbb84d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25ab401-05b4-48be-adf1-50d2f3e18d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3122f8db-823e-459d-b639-253a6fe49e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2de3f61-b12e-47b2-baf2-09c9b6300395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35d1c89-2bfe-4de1-83b5-b55ca4e1e809",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423e39f2-1cc8-40f8-8933-695aa2a14999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c96f65-ae71-4b11-b432-d555c82c2da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8264a0d-c6fb-4a89-bf8e-2c2c3ff10230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccdf372-ba25-495d-99b9-24627e52354e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51526b0-e29e-4b0a-99f9-07ace3416f6a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b45d651-ed47-4e7a-922d-f8c1e51a78ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82389b00-1098-4502-a887-d94e8ea76ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e767d3f1-1528-4aa8-907a-55fd1a1d6b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edef5675-9711-4721-b177-0bed05406641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d575756-9646-41ec-b4d4-f0a1ad7b4468",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdc839e-20d4-4276-a75b-59f4b7dc74c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be6a7d8-f1dc-486d-be53-7996350ff84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c5a41f-8968-487c-86d3-1caa0c11aa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20b8a713-887c-4c48-9ce1-81a247a61706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cdb2a4-590e-4282-84f2-ae264ee23f5a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cec5577-556b-48d1-b7e5-374e643a9c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e0a50d-29f6-4e52-a56b-2aa297bc2ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a644ce-70b0-44d4-939f-5a12929be4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15fe335d-abb3-4416-98c9-c9b0b624a12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5c9d46-f86c-44c5-9a1d-19aa95a0fecf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e895671-99c0-400a-91d2-374fbeea988c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d061b50a-9dd9-4253-8ed1-c64a7a83ea47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc4b1d7-4c5d-492a-a312-e9d22d3b8930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67e55dab-f22f-4c8d-a17c-94122ddf38a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fca2f4dd-6abf-4eb9-8041-3386ccb2901c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b650eda3-fe1c-42b6-b925-f5d81229acd6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad27206-f762-4d65-bc53-22e84627dcca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfcff5d-613c-43aa-b19c-4ef616a7a7b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "473371a3-797f-4cd3-9b32-85f453919bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c33a9d9d-00bb-432e-996f-62f1e05c1b1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05243d5d-87df-4de1-9c0e-d225bcb39b06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4407488b-24f2-4fb1-b71f-f42a0b8717cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00ecbdb7-e86b-4fb2-a5a4-e116bc701691",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb2ca2b5-5ecc-4c20-b042-cf65af2ea5af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e258e7d-3b29-4313-9269-e22899d89ab2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "973756b0-e0dd-4c50-9ec9-03d2cc46ab86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afdd2627-7dbd-4656-9e24-8a78261254a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "666db365-954a-4242-adda-f49e9cef9d0a"
            }
          }
        ]
      },
      {
        "id": "b402062e-447a-4c05-b991-4c1ae1bb6495",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1d9a62ae-c9ad-4604-867c-a403e87286a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "043437fa-6176-4deb-a3c8-83b98d56e32a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f2463677-13b4-4c32-bb71-37126a3844a1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6510d64d-3497-48ba-aff2-a43c960538af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9f40f4-653f-4b66-bed1-84992602b5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab257a8-4f3f-4997-b576-406685d86274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2204da03-7fa9-41f1-8331-612a9e17f8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc89450-a2d3-4f6a-934c-dcadb5881ac2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c70e62d-8178-42f6-a22c-ba986aa07fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9269f9a-46c5-45fb-b3eb-27657735e42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc6678e-f0bc-40e7-a82a-92769c0eebc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d33613b-4660-4070-818c-4e51cb310d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2564a3ab-ee8c-4ed6-9799-71f076f6820d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4858dc5a-70c0-4668-b049-308cf3eb0631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00692f0-d293-4392-b4ce-93f181d6fe7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fed319-957d-4b2d-bd98-94647da934d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1745d559-2ab4-41d9-89c0-d63c14ea5036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0269b2-3703-4bd3-9446-56abc06ba0aa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e129c5-b240-4f5b-8b83-893bcced9d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28290746-25c2-4865-9014-53212f4b96bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22020b8d-9d70-4460-9f7d-214efb601c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4382d24f-a3cb-4484-88e4-b90309a40357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d387fa0-6208-44a7-83e0-34a3a6236511",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbda1222-3a81-46ad-95d0-82b0bfcfc3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73dc5728-eb74-48f9-8b02-6b05addba5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661e46e4-0889-4566-8a3d-572ffda5aae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f7e9cf-059d-4548-a6d7-a316b59cc2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95da8d0b-d5ec-40b8-8c1d-720dce2c39ac",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa24b514-701b-4a4e-b83c-0bc409f2b3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0332dc-9a93-4ee6-9a0d-f06f6bec9fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ece2aa-926f-4b78-9286-0c288d86a478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e215ffbf-acf6-4b79-8dbe-9c3f68013744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888b2c1d-1ee2-4bf7-afb4-a12a4b0ffc80",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc2a56d-a660-4584-a3c1-664dfb2b29d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b467773-3562-42a4-98f6-8d8c6ea9ea9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad61de8a-ecf0-4edc-9b72-e3ef999eebde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7be059-a684-44ac-bacd-50bb1c7384fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df97130-7206-4d6a-a66e-a4ea6569e7ec",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d1390e-8e53-4285-bd6f-0fbedb1a5c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7108ab96-0f13-49c4-86f7-f0548837d801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a85426e-c3f8-4676-91b8-9974d481ec66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b69c10a7-315d-4311-b19e-7fe142783644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6df1d85-3be1-447f-a0b9-b673f2c8cc66",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1485c0c-b2e6-4938-96b7-d34caf35a2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a557153-fa20-4324-b57e-fa494adb6b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c67e7a-5999-4bae-a7cd-b7f2543fb765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db04772c-5cf3-46b2-b214-75242997f4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e9bc31-0101-4f52-9caf-13899592f0b3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0476b7-8479-49ef-a79b-df392f4563e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b700a5-de36-461d-b48c-cf66603c139b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e8203c-3077-4bb0-b16b-de1265b0e65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41122304-ff1f-403f-aa0f-ce71e9aa61dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab80304-4822-41d6-8b13-b2bddd398ce2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5fc019-d978-45bc-8f21-237e36aeac96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a21666-8f03-495a-a36a-c8298f3dcc8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf11e5b9-c8f9-4993-a7e0-9ebae6268cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c1a032-5f72-4b8d-8922-b13fe11c8e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8539061-d602-4920-b8c5-37c9912f5721",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90a02df-2f24-4ce2-a6ad-23f828ceaa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9c9f4b-bc9a-4cb4-804f-dc8dd72a6124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c676b66-7f8f-4c74-9bf9-dffd917cf45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0550d7-4017-4fc4-b344-d26fc56c4142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba8ac78-1f27-4ad7-9d8d-3caa2ee82292",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592a5dbc-0b80-46ff-b6ae-05270999b1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7fed94-eea8-48f8-a790-29b7654f237f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35325fa2-e492-4b52-be4b-8396919cf8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95aec643-c9df-48c4-8591-422f29fea2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e31fb3-7e87-407e-b60a-6b7618c9e324",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5036b8-793f-486f-967a-6268935be191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59dbae19-7c36-4e00-9e0d-8313641ce422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc02f298-1d99-413f-983e-2d9ece25ef3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bed4137-9bd5-44a4-8ad6-ddf4133d9b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeadbd79-03c0-4077-a9b2-d8180ea379cb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c672c55-fe89-4949-a0ec-5d456748bf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb226776-a077-470f-b391-9c54f4a116e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d78a20a-50e2-446c-b088-941b8f32fb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e53089bb-8bf2-4cfb-b273-41f1a59255cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585d48fa-8dea-4e8d-8878-f472b2fe68f9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c3fc6e-4bc3-4d13-adb2-72e8d81678bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9146ad60-5a31-413c-b8eb-9341c1373253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a11f5c0-5b16-4867-8521-3bbdbb528a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "221150be-5bef-4031-8d93-cb209d6863b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0798c93-53ce-437e-93d8-a307e099db7c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197d1aa0-13d8-443d-9fb4-070ce88a7077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9e5ec2-3bc9-4a4f-b360-391337f7b5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f7c0d1-d38e-4954-8efb-86cdf49feb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "85549042-d7d5-4d02-bed9-b48abc55eb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e045b05-070a-4e72-9704-72f82f5f5c52",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c727482-8c1d-4f9f-8c1f-ee312a51819c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925120d6-7e67-4b39-a9f7-60e6e1eac949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b31a819-69e1-45c8-ba29-441135225377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86268f29-ebe2-4f39-a97f-d81c4dfd75b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bf80b3-de51-47f5-bdca-8748f3ca0173",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189ca9a8-7fc6-45b4-8534-73fd40308887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787c6810-a3ac-4390-a2fe-96fbe1aed722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b969acad-f2ed-4e30-846b-05f35f02afa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3495d3b1-f76c-4719-bf5e-088674998325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574002fe-101a-4468-8d9f-31345d6e4bae",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b7e731-5ab3-4e86-8dcb-f662bbc1e3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2331cc58-f47b-4777-a050-f3a3521ff0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38abb82-13b4-4f9e-abda-e122ae5b514d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59e2ca04-5cee-45e2-ba70-17b60cd8a17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a847a505-4acb-47ef-9c93-56eb1c865627",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36abd6e-cfb4-4164-86fb-ec04539d8b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf94ffa2-69a1-4025-a758-a43dffa7392b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88bb83e-aaa3-49eb-ae64-d809d740425e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "760b9e76-1b9c-4ca8-9fa8-80a2dab2ae67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec50281-f2af-48b9-8d6b-cdf0d2bb75dd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d967a55-750f-4cbd-aae5-490a3c89477f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2503e6-34a1-4a8a-ba03-41e5cf1b95c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001297f3-57d1-44c3-bb0a-517d3e92e98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "080e7dbb-acd2-4d7f-8489-68d6aa9acd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dced863-969e-4b53-b27b-3f8cfeea38b8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e97e2f3-6286-4a14-8dd8-4f0ab6d3fa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d101ec6e-6496-41dc-9aba-f58472f44d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d954fbd-0c2e-4707-b2df-5a8e309abf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c90c467c-3739-45ee-98c3-760ac5578f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a897057c-f139-412f-b415-2eb4c5df8f0d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28ecdae-26d0-4201-afbb-5c2c0afbe593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abde4dd-1d18-4579-8580-9bd9db79514a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a00cd64-0cfe-4e42-b8f8-ad7c3bb6b824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42e50de9-eb9c-4197-b04c-b8d7375b2687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b82cc78-7ab7-4567-a5f1-f8afcf05d4a5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f38955a-f8e9-453d-9f0a-a93e16fd48cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ce5e7e-d9ae-46ce-a393-914694787830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d8bbc0-6c00-4916-a43c-e33304dec6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae834da7-1593-43f1-b71c-022de0bf84d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92689d3c-bcc1-487a-9bd1-c94f8f4ffccc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7471c2e-c7be-4d82-8da4-8583f5fd7218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58922a20-c9b3-47c3-87f6-dee9c6dae07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab73e028-ba66-4743-85fa-c1852ab8ac51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d5845c-324e-4574-ae66-96056fb27f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bdf5e5-afb2-4930-9578-aa0dd4fe3779",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86a2944-60f8-4464-8645-6851e0ecd40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e5a596-96cb-49f9-864c-d727adaaebad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cb7530-6a0d-44e1-9278-fb7651dc5394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb2e9a0-3c7b-42f9-9f0e-2805393f6686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363e6adc-4e7d-4e4b-b107-aae2938d0923",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a35ad75-51ee-45c2-9022-a02db1a374b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2bfde8-c97c-44da-bb06-68e583e0ad78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760e729b-ca13-4644-8ab6-7f5383155d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31204298-0811-4595-99ef-0dc6778c08b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367bff5e-fd81-4018-97dd-d5dc53aa10e4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef9af49-f52a-4fc9-bf67-50e333e97db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41262b58-20c1-4be7-a768-a82febd94c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001d2bd6-f0c2-4227-bcf2-205b7c73c6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "305faacd-5c51-469c-bf9d-204d041b5a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74063aa8-b94f-4b5e-ab23-3cca3e13ffb8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657a0b8a-4b39-4dba-aa76-f7156acb9291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588af733-2ca5-4368-87cf-dbf2c4cbeeb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8471cd-1d7c-4857-967d-305625fbe978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "581ece57-3934-45bd-aa2c-d0b14b41f2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c939ba-a4e2-444e-8983-0c9621a35724",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49186aa5-ce6e-4cea-8fb7-88fc57fe09be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d64afa3-9f4f-450e-9fd2-2eae543be7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770b4f18-ee5e-474a-9bf0-93b73a23059e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "501c78e3-3ab5-47a0-98b4-4428ef12276e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e24091f-4c69-428b-9e88-a89271e04958",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20f84fc-576c-49af-b992-c488df32450b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e60e682-c06f-444d-a289-5b9dc129c7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3578985a-1035-499c-a396-9bc7f778070a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8579d2-49ea-4aaf-bb1f-85efc7698a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68278773-5345-4413-b1f5-6d7eb39e7bec",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13817517-fc39-4bd2-9123-ec8548ba046d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fabba52c-ca1e-4d48-80d9-23de529a0226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cb646a-77cc-45e6-a5e6-750a688765bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6e1d08-b6f5-4bc9-863f-a1b9e5de3f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6aeb12-6015-4a3c-b666-257565dda158",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24209c6d-6f4b-46dd-9b85-82e507a317c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449179c8-7076-4b08-b835-754cdf2ed77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00855000-e0e0-4a8a-9459-1a0b533050c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df4c8b2-c415-4b5c-b8ba-bc83fdc0f8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670e0efb-fa6c-4dc1-ae1d-ca96c63773ee",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629c9f4d-8358-4a3b-a9ac-25b03ff7995d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b50929-de3a-45cf-ac17-42f4d578d3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2778c3f-6dff-44fd-8e2c-e4ac04ea5252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a6565b-bbe2-4520-9970-29dea3e208e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37febb39-dd03-4835-923b-563dfb56c855",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ac47c1-c274-4ade-b77f-26ae4be627bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4734b6-0080-4c0d-a892-95e614db8ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc93a5f-27c9-46cf-9b52-471889c44138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7801317-23b0-486b-b9ce-89c2ed8f17c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fb9c4d-724d-447b-b743-febb1845bda1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e074841e-88cd-4fb5-81b5-bbba121926f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014e6643-ce2f-431b-819b-f9cc60b6643f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a405e1-de79-4234-bbd1-525695c53540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89112ca7-bd09-4b38-a576-a56789ea920f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "524af42c-f70e-4477-92d0-51d4565de00a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a2d39b5-6d54-4a6b-9871-f8022820f104",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555815a1-a32c-4e6f-b1b9-b0d94d803089",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "93ca2e9c-a211-44b6-afbb-c89609cad01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d56a3d3-9dcc-4c2b-a29b-a9c9eebbb027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "924d1da6-bcfd-4be7-9c80-06c27e642b2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14213b70-76b3-45c1-a547-d84a3e2f5d17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f42691e-2a51-4895-959b-811d00f52e91"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6c8e411-25e8-4260-a1b2-27fabc2df1c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20390c4d-c7af-4f5d-b3d2-f5b0612dc812"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45d17c1e-a1d9-4c68-80f3-0dda17c397e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e071072f-01fd-4429-b55a-0cded886aacc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac04e719-f81e-46ac-838e-03a51a106294",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cab398c-db5f-472b-b8cb-33072c126576"
            }
          }
        ]
      },
      {
        "id": "4b8b7071-09d9-4b6d-ab73-81465f7c16b5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fa0e878c-6d4f-4700-8c00-1c5c1fdb66ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8b312cf-a777-4619-ba5e-0e8bd3b11900",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d3d67fba-fb38-4467-9dcf-b9bba2f5ee39",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e38e3c-e689-4dfd-989c-f2d8f75e875a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8633bf6-5880-45fd-b3c8-b37afc99193a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663264e6-e4e3-454d-ab41-74c58e0724ff",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fbe827-5867-4eb7-9c98-66bfdb954707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8befabc-e96d-4357-bedc-b0127fdfc523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fc5dcf-d147-4bfa-bea6-aa41beb0a8fd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e077626-4c6b-4a21-bb09-c2a0db2b100b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6276490-0be5-48ad-814c-a05b4247a257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0371d81-a847-4eab-805e-91ed1ca1b31c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dbc763-2b42-4f9e-8634-bcc4b8c6a217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae740f0-3c22-4ef2-a8b5-a5b3773de08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1409b33e-eae1-49d5-8e13-ebeb18f04b84",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a41ff8-407b-49b8-8138-58a5f35ed3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfe4a97-926b-4aba-bfc5-8ff084e0336f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f068d79-a666-438a-bbec-dc1a3c39537b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc67ddd-7810-4354-9a94-305d2131ca91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d65276-bc14-4f98-915c-b0ce790d49ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd444799-df3d-4fa0-a019-3812fe818754",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f564fcfa-ac40-4f1b-89f7-d47867e2957b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54cf2150-50fd-49cc-8015-143e5d8cabef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63222c3e-a55a-411f-94ca-67043c90b89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06895271-14f9-4a1f-a017-932fc4201ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206269cd-dadf-4e79-8677-ef2512e47fe2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bf294b-6e98-4f89-8b2a-8c73ce9fecf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0473d9c0-851e-4fcc-abe8-de9e85eb3a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb4b93c-899f-4aba-afe0-1561dd257ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30243c4-4c03-4552-8a4b-474a372fe8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad40566-fd97-4df6-9e79-d74ad56e1532",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fbb734-ad05-419e-b638-c1b499dd19a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc4b6233-a201-41d2-82bf-b8b5f1826d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ca753d-15cf-499d-9000-0f1184f9b377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b770f6-e2ac-4a1b-9a5c-f34bd055e614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1de4a3-bd13-41e8-aa44-f12477b22690",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194a363b-3358-4945-8a39-86c36522ee87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54b27181-b15f-43b7-ae93-bad112806af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11b6a5a-5572-4456-b8f0-6a9e128c3796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b44f70-260c-4dda-87f8-50edf4b6adb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e901d8d4-8de5-4120-b043-9d51ce5dab91",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560398af-fadf-4610-9c55-04e507a09430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931e977d-0fae-4ca2-ac67-8b0cb633e14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c5ca36-6754-4400-8c76-f90dec296981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2865cc5-86d2-49d4-8c94-1f4e5425b4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb351746-5807-471e-b9f6-d7102c49d91c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0daa8087-be2e-4685-b035-7eaf13bfc569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dd9c3c-1a11-4386-8399-1e3081ac3cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e53a2b7-9f40-430b-bb11-9411b18fed97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229b0c2a-42ad-4a30-be1d-2824693dfa61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f916b0ea-2b0b-45ea-a651-3c558a4868f3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaf0799-d6d7-4627-90aa-cdc1e1354557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4280bb40-e366-4629-b063-c5a7f40b7190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b988316a-c750-4079-b60e-7986d8097a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f904a1a2-bf83-4a8f-a562-33b80e3f8723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1daa35d2-e31c-4010-a126-bfc4d848ea5a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dee2c3f-bbfc-4a71-b396-8a8b99d44ddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daf3256c-1a40-463d-bd4a-1e573c3b2888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631aab84-2646-481c-ac6e-e65200417bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b659dc-7c66-43a6-9b66-7ce3c48849c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89d4093-0c1a-46af-b788-225a749e56da",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b011e05-0ee2-46e5-bc83-581443ad01ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4cea4c1-427a-47c9-a8b8-5555f374323d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc907ab-013c-41b2-b6aa-ab5b75895626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46e0873-9813-42a5-81b9-3cb0eaa9de48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9202459-f96d-482b-bf48-b3b23615b175",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af992792-02c8-4b78-9fdd-77f1b8b0c262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b251f3-35ce-43b8-9e6a-46ee6dcbb25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0473e9-5ab8-49e1-b33b-4fc4fb93fc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a69646-0d05-4caf-b5d7-d3cbeb50fe25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3b2fa5-9499-4b29-a1b6-8c5e528dd4ff",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9189a394-1658-4b01-b791-5d88eb71f238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f36292f-0123-4dff-91cf-1ffb745b7e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c52724-7ac2-4cf0-8b36-85fce6dbafde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcca2b4-a5cd-4e3e-82fb-7dfd9cbcfca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00282679-dfe1-40ce-a5aa-49a28c8f8c08",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7031cab2-d52e-48c0-96cb-57bb599a8921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee34fc77-b200-4c59-a044-674bf6419430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b53a7e0-de3a-495c-8b16-1cc5083b54c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3301cf45-c8cc-4366-bf22-a14a694d8d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3dd629-6eb2-4ada-8dfa-b6f10a3422fe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb0edc4-55ee-443d-8897-c19f048a0677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a275386e-f334-4b70-ba4b-fc5e6f0e30dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c5f3a4-e40b-492e-bba2-28fdebe82a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3217d9-454c-4584-9ef3-ed829710ef80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8833fbe3-4431-4080-afee-3bd58af7ec06",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae54c50-e7a4-41c9-b6c2-a7f8ba4fecc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c3a756-1b75-47d5-b325-11a6b7e96eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611dccf7-6aa2-41ee-966f-93323c13c281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7189c438-609c-4c93-bb28-317171d8499b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a6b4cd-4580-48a0-b7a1-a246c887b954",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696539f5-cc6e-4983-b94d-a27191eed738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c861afe4-7c51-4d1b-8ac1-0a44eb7c09d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cc6db9-3161-4b85-9f59-251baccf0143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75f385c-996c-42e1-93b0-eca564038573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd513f1-5bd8-4985-acf3-af3c397d06fb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7f664f-775a-4a6b-9d14-0797e0f9c477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffcb6a7-25a1-4bac-a532-71457b4d2efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f62aa7-6ade-4206-9ab1-07d91f99896f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11a9dc4-5f72-42d9-b73d-3b73680c2a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6db66a-2a0c-4f23-b32a-7d507d392213",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0f7bb3-f467-4c18-b392-39c7b875a97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a451b9af-ae16-4c4b-9c96-933767935f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "303025e8-9672-4cfd-8f39-e2f311cccb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2bb9db3-ce12-42ba-a2df-9d1f691ff412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c58e21d-6b3f-446c-9370-85308ae640ea",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4940b2ef-d3b7-42dc-9888-364ad3d9fe97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b060af6-6e00-4f16-92c4-4390c4ac3938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a183b295-b08b-498d-a711-b0b684124c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46750fdc-af98-485d-ab7c-5ac240c147e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d0e5ae-be06-4328-9ab2-621d4ce4b34e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d8ed6c-2a04-4047-a3f6-7c9a90e2e240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6d11763-1e57-43ee-97ef-c3dadead8cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc12ee56-b616-42ee-bc28-d8b6e88b935d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02523c30-3cd9-48cf-9e91-926fceba7abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156b47a9-9316-4a67-ae3a-fa34c5b478ff",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f61dd6-529c-45f2-8a21-ddb67e23eda5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe597da4-f449-4895-a383-bc8770f5ad3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658e72a5-c460-418e-9508-7a3b48b45f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8426874-afa4-424a-b7b5-e1e58dd92bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acab1c9-78ab-4b73-9558-cb1e02b12fad",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a413634-3e00-457b-8ce2-ecbfaf714091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72bd0f83-054a-41e2-a5dc-098c02ea37a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab73e5dd-6b26-42a9-a7a9-74ed06baa8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3c628b-892d-45ad-9bd1-aa8c23b87356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ad975f-be5d-4d97-9ab5-38b50f199292",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b465f1-15a5-4bde-ac22-ea98897ce206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a4e60e-ba3b-4061-ae0a-bef6eda005a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e2b129-f245-4307-9452-d4fb5e95f002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdcc7e46-480c-4fe2-ad98-20d783c26dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5dface-2229-4988-892e-bcec6f2797d3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633e70b8-1d3a-4946-8a47-847b066532f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eb0e9b1-00fa-4733-a942-431207880822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff9106b-f4b1-4384-80aa-c76b05c8f399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45dd70a1-fcdc-454f-a29a-d3b85eb38167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8884b6fd-d2d6-45cb-96ca-1a7bf19fd94a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65abf73-452d-49e8-8a1f-260a4a16acf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5ca476e-fd82-4277-b7e1-8574a4a1ad0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1baf2460-a73b-49fe-ad29-e1aeae951adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252dd073-13d5-4685-b443-8ace336b60af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3354fca-b31f-4d8b-bf37-8554668cfc0b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9c8e0c-9982-4339-a801-32eb12d08e90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78e0b9a8-be32-4a86-af0e-f1978079aada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6737d29-461b-42c7-a480-316cf6fb73bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6e179c-5243-49c7-9132-e0909b03a480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf88255-4897-4e5f-be9b-8afc1d864e04",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73dde59-3566-407e-a2cd-bf5c687edeeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfb5323d-aebd-4002-8373-fb405c185480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627e304d-5dc7-4b42-a551-b14b8cf5bf37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544d4568-c69f-468c-a559-64fa5de6aec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ab65e7-1cfd-42c5-9127-0f4aba6be85c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef7fa64-73b3-42a5-9e3f-c0519cab3829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "803415ef-a555-4be1-a87c-784393878031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a9d409-81d2-471c-b6e9-8c2080fdb42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebeac5ec-a97d-4dec-8539-b7dc0a9e3838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae41f7b-182c-406d-857c-ef2d30006594",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91deca2-8b62-41e3-b36a-314ffa1aa87e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c756dfb1-6222-4356-8e6d-dd4323eb1504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c81209e-ad27-498c-92b4-1dff15347009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5981d0-8cf4-4779-92fe-74be0f1bf4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd06faf-f849-4321-9189-87acb5665988",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396ec45e-97e9-4893-8407-9f05ea2f9fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee2836a-6c45-4e12-ade9-b6544799f51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab875eac-4efd-4978-a684-da57b9c8faa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77362efe-c4d2-409d-b13c-1d4f1924687c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c65e43e-d9dc-42ce-a248-c24fee625b82",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623d70e9-6795-41fe-859a-9e45e0bbea14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482b5c93-b937-4cf5-80dd-92e6884b72f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0594223d-93a4-4b53-9f62-c273510e7bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9baff38a-9480-45d4-b930-4a6438789498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a7e37f-fd6a-4099-a47e-89ef89b99f1c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cb59c3-b5ad-467a-b607-db85288da32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c44ef8-87a6-42a4-b947-11da77acc1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048e0c92-8762-465e-b1e2-b2f81ad2c63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91814a5-e034-4859-8cc7-77325d07d5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5031b65f-0d31-45f7-8665-e6b49d4ba1b0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5107f4-b66a-4742-9fed-5821b0709cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed262114-c2a2-4062-af55-e38503252a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0dc6b9-2825-4d23-a808-c84af97d889a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8761ed16-5cd5-4a5d-b758-6e045c45246f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80a0f7e-c13b-45d5-86b0-04344075ad52",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f5d8e8-8ec3-451b-b8b4-5e7624adce08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1208b210-39d3-447e-b15c-174e23690ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a2ea70-b318-49a4-8edb-65ff683e3063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c6fcd7-240e-41aa-9393-8c9a7622298b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b619e8-579b-47d8-ad43-eddf0a671d80",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c28022-778a-4c73-a7b8-165dfae449a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a44b48-e5e2-4ae2-b88b-2d764a83f2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1230e60-4768-4ba7-96d6-81c447d84f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae684316-098c-49f3-9de1-bb3bb32822f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921f77dd-6e4c-4bc8-ad17-8afdfe715b97",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162f1e5a-66ee-488c-b205-76c6c8996b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc85a4d-9152-49ca-aad1-3f6ba97bcc4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03106482-1fd0-4a74-9714-046b19211094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124ac9ae-af8d-489b-b322-236798145b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09d7004-a89d-46e6-a486-10974cfc717c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576dd9b0-f041-473e-8bb5-8cfbd1122f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f44f4d-07e0-4982-8194-f6655f127cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5081f352-32b5-4882-ba4a-21599c45e654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fae15b1-6e82-4c25-9b1c-714758e00ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f96d7d-6895-45e1-9734-f8c4968775b3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406cc121-e287-453f-9e2f-39166460932a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e347c6-227e-49c9-aad0-1ca070511e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ce6ed9-7b2d-44b6-a3cd-9f85a9fa5447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a37d046-99e5-4b70-be02-ac717adbc75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e94807-b758-4db5-ac36-6d2fd1e2d84e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06ac29d-5512-412f-bf39-8d49b9c22a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d9b329-183b-4d0e-b525-8bf8ba07647f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ccb2f5-63f1-4b0e-87db-babb0fdf8c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ed434a-ce5d-4373-9918-7f7d001f52f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d31cf3-2496-474b-826b-fbab6a6e59e1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9898e242-5743-4742-b29b-47a2af3feb34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c870ff-69cc-4f39-af47-41ecf80c959e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6355ce7b-69c1-4892-b105-08fc06a9115e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258466fd-7223-4d1f-b926-f915decfd510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a01349-c893-43f1-a9a4-d52556b3f2c2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2fb6f3-52e5-4de2-af3d-2f85a7b36435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f54c377-420a-415b-bda1-9e51128e4ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6fb977-4b5b-47c1-8ec0-e41794190a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98892eea-4dc2-45b9-ac70-66b0bec66d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa9dd2a-6628-4e94-8d0b-56e45ae168c8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5193e6-553c-4ca0-8244-d1349f33e170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d8d85e-d3c1-409b-a086-bf092a72ab8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04022ad-177f-4fa6-b197-f4441b440aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16599a3-3b69-4db9-bd28-c3d061c07ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72858b96-b4ab-46a5-a368-a07e821b41f1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b7d86e-6b2a-483f-8970-d017d2c0e92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c66223-1e97-434f-97ac-9d6a2fe27477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8deba6b4-69e2-4e48-96c2-2bc45d12a54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0793829f-6e23-482e-ba78-aa1cb3125f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a477aaa1-ddbc-4350-b7a1-16edc574c8a7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d482deb4-cae3-49f1-a083-dc20e8a7fac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd98fb25-d8a2-4919-9005-7e5b6880b907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b5638b-f7bd-4ebe-8d3d-01b77f6464b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde9aa73-647d-43d4-9390-db500a6b04b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d1e66d-dbcf-4c6d-81e7-580579eafeb8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692fe9dd-45dd-446c-ad2b-3d25fc962ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45baf082-50cc-43f9-8ba3-0b20994599c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98f68eb-d6b7-4de3-b06e-3cf74c3d86ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605649c9-63df-4fd3-8000-03e5498ba75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930b9f67-5678-4dcb-a8a1-c7f88973da54",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2672c0-b1a4-4b3b-91d0-c6760206c0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13cc881a-e8d7-4036-8d81-5fc5e3d97931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2548d04-b2f1-4ab7-85a5-b36e19d0f564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69490d06-0e42-4c66-b597-cdf24d306dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1a69cf-175a-4df0-9486-41d031624bb1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee22ab4-45b2-4821-9b7d-ea06b96bd7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24b3f8d-7c90-42ee-8a20-7b7d437db946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24e9b06-17b9-4fcf-98bd-e8bb686d1e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72ce47b-6a2f-4313-833d-9cd156ec9170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5384a238-c608-496c-bcb1-c07b90d41d3e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71b57b2-98e8-48c8-a472-dfaf174daded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec0ebe9-09f5-46f6-8160-acda84a5d26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70993663-7c6f-43d7-91db-9c2f09524663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1b744f-7535-4ff6-9568-14293f992fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b38a3c-3a00-4273-8d9e-31a569ca063a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a379603-3d34-4563-858d-e36fc76ea6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff2c199-800f-43c1-9d46-7929842a2fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62954905-d521-4322-b0d1-91cbd1c0d425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9f8629-b729-41e8-96eb-c682d1d5c149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97926504-1480-4e91-896e-d869a897b6f3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5298ce-adc3-40af-b2c3-384fa8241fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcfb923-a2ec-404f-8c43-da83496a572a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398946cf-8d81-48de-852b-174244fa29ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0aff64-9222-4765-bb80-eda9fcefa81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf7ff65-9f9d-4f46-a9c9-cf39f600ed2a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97114752-fc5c-4477-9de9-50ee5da51199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e9ea53c-0c52-4903-9ff0-672e3ca3c8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66be85b9-4110-4d36-97a0-92ab1de8777d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bac0eec-fcf3-4c76-942e-b0942dc64527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592fd21b-51f1-4a54-9861-256f94c14173",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0d2aeb-7046-40f3-93e9-c4f4050364c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a5fbaa-b999-4f36-bd21-c8a13ea7ed02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c50986-dad0-45f3-9fb8-b95d21c0fdd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2715f8d1-a5a2-4323-b694-be7853fe4632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cbbd71-2fb2-4775-a7ac-c2ec965193c2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea0285a-1337-40e9-ae02-861c188f3472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dce9cd9-1d8c-43d4-9602-d51bfe2f635b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2632e83-b43c-40ab-91fd-aa8a47851e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa93d1ca-d4da-478b-83eb-6c987011cf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2453494-7438-4e91-af4f-2df21cb139b1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb1a862-0953-45ed-8ba5-ef5a35171108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6629dc48-eca2-4339-b9bb-f3c3d2ad3878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9640a51-9742-446a-a174-e6d8f600a36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ecfa03-dea3-4798-b957-a1573e40fa53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c3c557-5a20-4160-be6c-09eb403f9b67",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfedfc4-5b6c-4823-a5e2-ef2ecafe0497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6be44d1-2fd1-402e-a4da-fb1f67487189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be277c86-db3e-4011-abf9-d868629c4a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44015481-026d-4bd5-a469-02cd822a7fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d6b357-b5c2-4233-8841-5ec05917a0a0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f90ba4-1439-4fa9-bf8b-9b43f734236a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a547501-4d38-470c-be10-ed20bc87ad9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2325a0a-0e5e-46f0-9094-4b2581366a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651d6b9a-ab79-4be9-9b59-3d7a6e1557a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78961369-3d30-4aee-a21a-d713d834e102",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517dce06-8776-4ca9-9f47-6fb1130827b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc8c4e9-b771-4737-8ca9-5d7ab8c07776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c03e05-47e8-4524-ae44-2a45ffa1c153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cd23cc-8087-4e79-95df-32dc392eea2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85953acb-46af-4ffc-868e-2791473c47f2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef095788-848e-4ae4-8e64-28ed36bc9155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8b24e1-753d-4b51-b3fb-3d4cc57c7f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2cf201-76d8-4488-a928-645a7a8df0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947c40ac-e907-47d3-9cb3-4f45d696fe2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cfb6de-ea6d-4721-ba20-caee5f054f52",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf62c189-4c8a-4ff7-8237-7dbc573e33d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "843efbc1-5139-470a-a73a-c352b2f84cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f94670e-f38e-47bf-b64f-50af2869a766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdf5051-666e-4e23-b275-56b0546ecec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b3afb4-65ce-4336-82bb-9dee42f920c9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018c45c1-f7a5-4e80-8907-3f62f00a469d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67aaf278-db91-496a-8f64-8b3f8610c7b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306a3f04-2f8a-4975-ac02-f697dc200a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3dbf3c-c66d-46e9-9059-7d4b45155010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70256f8-a5ed-4a0a-a084-5607fa10b23d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e7ccf3-de86-4ed2-9eda-e638ddbbff30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25be49be-a8b7-4a54-ad7b-f20b97452bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a355c637-1952-4639-8715-29ee1b0cd854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e271484c-a138-401e-baca-f52d43e31b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4c3f59-2273-40d4-b938-3cc37ac757e9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5d6e08-f10d-4229-9a30-191b47cf8980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ded4bd9-db06-4724-8fad-fcdbac8afffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98481819-a02f-42fd-a075-98ac95245cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47c0ac1-8d48-4525-8723-c68a7c054ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3fc3a9-3c61-4608-9d80-a0dae3606114",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77a104f-3323-4d85-ac6b-f987c9f2a6fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df16dde9-eca9-42ff-b642-1f7c6485408d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5107421a-623b-4e06-9950-762e98278d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "754e53f0-a0dd-4116-9cfa-a55c59b0c138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1caaaf2f-64a5-4ac3-8288-99eba584bc5f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f185233-a638-49c1-ac40-491d19d61905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64333219-6539-4c03-99bb-b0debd4123c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71be6e0-ce60-4ba1-a316-fc7d7c77e760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98dce3df-be77-4f92-aa33-aea29926b33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1f4287-781d-42b4-9e89-b56476e4ef22",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53adcaa6-845b-4c20-8be5-5a073e43ea4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0e34284-8137-4e17-8b74-657520bda98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383ae4ce-b091-403c-b2e2-5987bda50034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9ac3aa-6dc0-46cf-88ca-93e30a45ec08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8d12f7-7c45-4885-a7a2-1f162ec865eb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39625cb5-1ccf-49d9-8402-3631c93540bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be1def7b-8529-4dfe-9695-65e424cacf80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d180d0-d03e-4475-8d6e-0de2fdedec82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7baf64ef-fa37-407d-a9ab-9129a8c11575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75aa9dc-fcfd-4636-85f8-7c118da1b504",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891b1745-635d-4c13-9077-17b1b8b890c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6196de-e1b3-499e-b0f2-7c47a2fa8187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3b831c-5d5c-4646-a3a6-beaebc217a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a568e2-fcc4-47fb-af18-9cdd0696254c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c3ed52-0957-4ff8-b9b2-407bab2790a9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091f7e15-63d0-4cb5-8881-c64f72025cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c29a57b-d2f8-451d-a4d6-2e3444059b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184bf344-627c-4fd1-8062-1db5ec3cc0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba41e89-5660-488a-b63e-eee555619fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123bdee1-2037-438d-84fa-df2a9e85e670",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e21189-71e8-4910-8382-242e49a13d2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "249a8239-686f-4997-9627-bd22dc24e6ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674a9ad7-e520-468b-b5ad-01dcd8b534c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85b5900-692c-4dd2-b3bb-a1d6b33f5896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a27de7-45e8-4823-9785-f2726eaf2574",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d97ea58-fccd-4bb1-94fa-babeeaed888a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c834778-8a9b-40b7-8470-b2108d36c804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea1f41a-0b18-4953-a46b-303079d23bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bd16e2-78eb-42f8-809b-12fecc8e4b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334ab256-4cf8-4dee-af81-60b6d1c53f90",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d6aa45-508c-434c-b6d1-47eb6fafcc01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20a5493b-2035-4e0c-adec-ec19237b9692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a466b9a-cb01-4120-aaf5-53f91fd0aa33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd47153-373f-47f5-a735-b2aa880b0a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d34a4f-0c57-43cd-9338-2119c1edb87c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008e1952-62df-4533-87ba-e6a9b1f6f189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "881efa6c-0877-472b-96f9-bc9deab28c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc8ecdb-9141-4e17-adac-4e58bc8338e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173de552-740f-4ad2-be63-c489e3a318d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cff23a6-0784-401d-be06-7290f25d9f07",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3daecedd-52cc-4b62-a83d-9fb788310657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2cfbb0b-c9dd-43ec-834c-834da2f345e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1228833b-5afc-4e83-8756-921f9a497730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3967a98c-f3bf-4fbe-90ba-0774d3381d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d98b95-08a6-4242-a2f0-09cd6c758099",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975a75f6-e106-44dd-9003-d6054b0c70be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae723d9a-8f21-4eab-8576-884e4d148dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f0a36d-2013-468d-b8bb-aa9989514fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03521e03-2f62-4e29-b71b-0a0160ae277f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fae66dd-d58b-4c11-9cf6-1c04b3f87b83",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbe37bf-4d45-45c9-ad0f-891cb99a97a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e80b75d6-0802-41d6-85e0-71eb91f48f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8a45a2-b47a-448e-9ebc-cabb78d79780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452dc4f4-ffa0-4d7f-bbef-0946bbab6054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5ecb1f-c7f5-4321-8cda-05c6eb3466c9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffa8c40-9795-47ca-bdde-559b0762fc74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c791cef4-6100-47fe-abaa-0c9aea5e6a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be13bca-1078-4ff7-b7d2-500b35236db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86caae99-4728-49f7-ab68-707aff8ef938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641c3c7a-a601-4d8a-a5fc-4b9248854a65",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48712caf-19d5-4f5d-bfa9-9ff5eca2932b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72accbdd-c648-4758-8a49-6f9f8d4d2a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11126e78-cf97-4b11-af51-7852c8b57d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfbc289-61a0-44f7-886f-981fd4571a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fee3dc-7708-45b8-ba4a-af36e86a1436",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ee42a8-0e9b-4c23-8110-0d4b73231b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8015d4fb-9d56-40d0-ae20-1036ca86f416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed95d9de-c988-4579-afcf-f257c04815ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf9cc64-d54f-413f-921e-46a60760e17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3068c7a-7988-4939-8baa-774d0a226639",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2ce5c8-0d58-4046-9a64-ab0449edc6a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e0eb3e6-8177-4663-b353-f831e1e9c473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a8ea51-e2a7-424b-aa7b-6662d2edcefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e80c76-d734-4b57-9b79-5e9c811e8434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d58ff78-2622-4328-99b2-7c21c7cf1fd4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaf232e-caef-4630-b118-c590bbf5e667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc310556-fc7b-4805-92bb-c0e86ca6529b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e8cc51-dfda-4113-81f3-0841220fe4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0565e50c-1219-45f1-9454-de97e842986c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f36922-0eee-49ee-af7e-9494eecb7208",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89460944-4dcc-4060-bce1-78ae3a623c5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527d4dd7-4f97-4034-8296-b625bbdfe1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c45b15-10bc-4270-8340-4e6c217fca85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0592c6f0-d251-4156-9d15-ff2365a495f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9deaa33-9134-4aa4-82d6-5c6ceb402826",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7d3868-f1bf-4c00-8437-ab9ff537a68b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14bc4058-94d2-4e1b-8db6-0477f6aa2be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33dfd83-7048-4664-8536-4dbb0b8ab9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70daaace-3579-475b-8e0c-cbf71221ac15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5e6158-2d39-4fa3-b4ee-35f92e39c293",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660d3bdb-f41f-4beb-88bb-88b11afd0f24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcac6a1e-0174-4b96-82c2-2feb5552a8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab52cc6-7fd1-440b-a890-fe180a6cb238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475eab0d-2d0c-4d48-859f-94dc20430bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2c2861-20d2-4290-9e9e-fdc05d0f0098",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c8c393-a260-489a-a3d9-ea444f6b651b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "951bcf44-0658-4e72-bca8-7ceb2d6c7ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b42468d-8afd-41b8-9b97-2e7257236a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67f90ca-7399-40b4-9ffb-2f84ae727fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594ffa9c-42d7-4117-855f-50312ab1f81e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728d6f61-739f-4526-b9ec-e4855eef97f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "320fbf0e-7393-4270-87e1-61954218a64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10d5dd7-8a70-46db-81f8-4e5a43fe8e05",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df716d52-b7b9-438a-a2aa-3c550ca3edc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e0a145-0327-4a35-b52e-8812b556455c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95689fd4-7963-4277-91e3-54aca193fe26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "807dafdb-900b-4b24-a88d-0eea02f575d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f69ba5f-2918-4bc4-9121-60fb31e97a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dff3651-8a17-49a0-b75d-b38cf366a7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29f1ace-c429-40d9-b27b-fd36c0388481",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cb9a20-3416-4139-bb6c-4ead1f5a49ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9a85268-5e56-4f84-a3b3-ebd961793a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0a026b-c144-4e85-ba1f-ba5801171b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e5caaf-5d08-4d29-8b3d-914b2520abf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d21ee9-f9a9-4639-be86-b15ab7b1fdc9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e36813-39ed-4725-889a-8fdc8a0225da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62ed81d6-2ad9-45ad-a325-eeebef46fd17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10000cd6-5706-404d-b4a0-2cfa26cbed22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b38b6e-3e55-4f8c-8b05-9996d074a09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40000f53-b442-472c-b9e2-083070df1ab5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6177494d-0fd6-4906-8fbb-1ca4ed299d48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0010e2bf-714a-4b09-9e62-ca15ee15cb7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c672b9d4-3909-4d20-a68b-bce3a80cc36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1790300-4930-42bf-aff1-e3823b5b13c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e7b76b-3de2-4d3c-9151-ab9e92fcfa62",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d57da23-00ef-4699-a096-a2d447f9ed9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6b89056-1d2b-4c58-8ba8-153d5eac930f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2185a59-b633-4d7c-8659-75e94863ef92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98dd47b4-649d-428e-97f0-f2fb372d6acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5f1930-19af-4780-a12f-4a9bade7f6c3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c01b87-0ec7-4673-b57b-463e38c2d1cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "387f085f-ff89-4e21-9050-a9dd59802e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6c1377-2f50-429c-a0f3-e34dccd2f7f7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782e0e26-b140-470a-826a-0f33a81759e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fe56b1-0c4b-4c58-aa3c-d4301905a836",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5429c411-a809-47cc-927f-41d72cdbd9ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7f0005c-9ca0-4582-9b8f-58e209f3426d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a13bc4-4c60-440e-bcb1-2d229f4869d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50b72d4-00c2-49d1-a959-5146bff76d98"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19852520-9689-4c15-bffd-cdc53224d6ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ab77554-6f9f-4be4-ad01-53228ed148cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e166a9ce-3dfb-41e2-af7d-7df5020cf290",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33164046-3c2b-4d37-8abd-57e017a505b7"
                    }
                  }
                ]
              },
              {
                "id": "4f6dfee9-223f-4c20-9a6f-3120d3e6f2e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a5294c1-8707-4ecd-967e-34d7d8f0b783",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69081b7b-aae5-438a-ab44-e7ea136753dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1d0b3317-e8f9-4a38-b7ea-18061f474e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f05547-6936-4789-9cdf-92cb0b6cc8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8481b8e-7f42-46b6-ac79-735545f1733f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd556d6a-7135-437e-babc-903933660eda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8f4104f-2696-45f9-9731-c540f4db5ae1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "680e106e-a210-431d-bbca-acf9aa533392",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f35dc506-da74-489f-88f5-ce50fbcef05f"
                    }
                  }
                ]
              },
              {
                "id": "c1a3bb32-b132-496c-a9df-fb173955ccb7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2d713aa7-407c-44ff-8d37-d2d49142c0aa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c55503e-6eae-4944-8702-d9693894239e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a311c078-95ba-42c1-b124-9429d6deb03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70e25c0-e9e4-4005-a0f2-51750ad084e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f074076c-94b5-4e32-9c1a-3d8ae0aebff8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "57a3923d-f128-471b-aa9c-c85ebb6ee392",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e4232ed7-543b-4d90-b1de-6783644265d0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff47bfb8-4a61-44fc-b3ad-c941a2a1d70e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8f925089-b762-40a5-8564-e06da7536d03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80890bcc-7b7d-44f0-81bc-bf4da9ca8401",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88edd050-fe3e-4e5b-bf8b-d1cb01fdd679"
                    }
                  }
                ]
              },
              {
                "id": "d641eb8d-f2a6-42a3-b647-3f3e26693d2d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af5afdfb-afbb-4910-aa09-96e9037c0536",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "63666580-7669-4563-84a2-6be683bb8d1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed013183-16ab-43a8-97e7-70cdbf2aaa17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf29b0d1-a611-4bda-ae97-f428f00791ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11c7798b-e53b-42fe-8b85-86967f4e5ca1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1d27eb59-35d5-4433-b494-508ab4a1b0f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43f0c32a-7ed2-42f1-aeaa-a04e1ed4db9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5177498d-e6eb-40dd-a6d0-5c2825834fdd"
            }
          }
        ]
      },
      {
        "id": "58d08f7b-2cc7-47c5-bad9-1a8ab859b167",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ec2f9ecd-a00d-4c58-aeb2-96b083f06a46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4596dc48-4a20-4b2a-a3c6-6c14bccee79b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66bcee27-50c2-4dfa-aee7-ae745bfefaa4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9734deb-5949-44d6-8856-428b3ad87527",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a4bb3669-cf84-4e86-9147-8d04e0d6176b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd16dab-28ed-4d52-ac62-90039d09a866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b92916c8-ce4e-4998-9c2b-bd29a4e854d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65c59e6d-c3b8-4b1c-9136-d5bf0d1e4431",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7781bade-c2ec-4904-a9e9-75f30f83cb95"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5b7e31a-64f3-4871-baec-61394c87fee6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1c97576-2254-4449-997c-944207d12baa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2755afd-f8c3-421f-9c6e-2598eb312ff4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d692d14f-05e9-4694-b496-c9c4f2b9fc5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8465731f-c055-4dc2-98db-571e7a3591e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31cf66c9-89a1-4830-b9a2-f6e965beafc1"
            }
          }
        ]
      },
      {
        "id": "015c5d37-a7a6-47bb-99dd-aefbd76a2a42",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a466f4a2-2971-4f63-b79e-a3c5f7b3a908",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f0541d4-6860-41b6-b9df-b7ca2cc06232",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7f6c04e-c1d4-4eb4-a8b3-48f0ddd3ebbb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd32838b-1cfb-48d6-a732-0e78f23aaed8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce125b5b-39de-41e2-8127-506f5c31acbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcaa516b-28ab-49b3-b3af-ab9648e81f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16703e4b-bc4f-4710-bef5-df30f1aafcb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af63ed10-7675-488c-a469-27dc2ef7c9b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31397a12-6c2c-47f4-8ad9-e18a1a65f573"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ac6bd61-adce-4cdd-805b-0e847fe5a3bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2cc82bd-138d-4d6e-982e-35a3ab4dcedf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13af3ebb-ff67-4c1a-b390-0c6ccc6f8ca9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cddd6a5b-d07c-418c-9154-1e82fbd2055d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94eb4877-e74c-4340-bdd0-e857ac51b7c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f6c4ff7-cc9b-41d4-ac05-8c4f3e6f63d3"
            }
          }
        ]
      },
      {
        "id": "d0cdc687-c0bd-4a35-a004-e30a917a15ff",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c3768a65-2035-45c5-a91a-818848311388",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e4e85f5-4867-45f0-82f0-ef72d7c6a026",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71bc9ad2-839f-4b38-9b99-331a9872a939",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d605b9-d0b8-40b7-b961-bca5be65f8cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4d29183-01a3-4946-bba9-defeda4e6d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dc0101-f299-4ac6-9290-147764f31c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c0f4287-b17b-4636-a355-e8de87127237"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb2bcd86-3af1-4902-b84d-311ab7faea98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba8ab63f-216d-4727-b777-3b36abba22b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "87277429-c58e-484c-ac62-85376c2613a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62643626-1477-4d49-b204-4e02e75692c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd130bfb-e892-4e15-88f9-9219ad296b95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5177beeb-555e-470e-b141-ad89812ce074"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7f8b71e-16d2-461b-a3f2-d226bda77124",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5d5674a-8321-4458-a2da-8de2fcf5e0c2"
            }
          }
        ]
      },
      {
        "id": "2b78701a-dd70-479d-9b07-e39ef79981f7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a1be521-c645-40cf-b410-a9094c741608",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf29ab41-7291-4836-b9eb-06591ac612ae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d5d646d7-6b4c-467b-9253-092ad4279251",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c341c66-2ec7-483e-b7f6-a119755b9494",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0059ebb-d6ec-4b49-bae9-73d128c27bad",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 57.094736842105256,
      "responseMin": 21,
      "responseMax": 322,
      "responseSd": 23.041110635486113,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705019792450,
      "completed": 1705019817984
    },
    "executions": [
      {
        "id": "b0d6b57a-951d-45b5-8844-5898782d3e42",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4caf137c-0cc0-4095-b892-03af5cb56cff",
          "httpRequestId": "7d1b8e38-eae3-4461-89a2-098a3f8232b7"
        },
        "item": {
          "id": "b0d6b57a-951d-45b5-8844-5898782d3e42",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "877bcea7-2977-4b9b-adbb-0f5926b647e3",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "e9f5f9cc-b59b-41c4-9858-065e9d120b2e",
        "cursor": {
          "ref": "7cb8ed9a-da2a-4980-b8c9-cb9150acbd46",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4c56c221-9369-4fa9-bd3e-c869539874e7"
        },
        "item": {
          "id": "e9f5f9cc-b59b-41c4-9858-065e9d120b2e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3ea994d3-0c3c-40d4-8683-c855623be297",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "fbf2b0af-3488-470f-b452-115e61cee93f",
        "cursor": {
          "ref": "a73a5824-25d3-4b6f-b239-3329c7912107",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "704ddb6b-b08e-46f2-b821-16d0445c8235"
        },
        "item": {
          "id": "fbf2b0af-3488-470f-b452-115e61cee93f",
          "name": "did_json"
        },
        "response": {
          "id": "99077296-b73a-4917-af8a-70d498781336",
          "status": "OK",
          "code": 200,
          "responseTime": 322,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e909f2-3af9-42f0-8cc3-f326e3ae0054",
        "cursor": {
          "ref": "8e5e91ad-a617-4c5a-bb51-a128249cb042",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "68e7ff3c-485a-4e37-8fed-c323d15cab88"
        },
        "item": {
          "id": "29e909f2-3af9-42f0-8cc3-f326e3ae0054",
          "name": "did:invalid"
        },
        "response": {
          "id": "f18487c9-f612-4cca-8b6f-1a4d04901344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e909f2-3af9-42f0-8cc3-f326e3ae0054",
        "cursor": {
          "ref": "8e5e91ad-a617-4c5a-bb51-a128249cb042",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "68e7ff3c-485a-4e37-8fed-c323d15cab88"
        },
        "item": {
          "id": "29e909f2-3af9-42f0-8cc3-f326e3ae0054",
          "name": "did:invalid"
        },
        "response": {
          "id": "f18487c9-f612-4cca-8b6f-1a4d04901344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3d38c4-c36e-4a97-a8d9-7f424e1f3407",
        "cursor": {
          "ref": "3e13ee2b-9130-41be-8386-6da668c9be84",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b11361ba-d8a1-4c1b-a23b-499de258d1a4"
        },
        "item": {
          "id": "9d3d38c4-c36e-4a97-a8d9-7f424e1f3407",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6e63cc71-0aa3-45c8-a1ab-a4c74e995e61",
          "status": "Not Found",
          "code": 404,
          "responseTime": 97,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585afe0a-b123-4522-9cfa-acc2113ffc97",
        "cursor": {
          "ref": "c4766380-a53f-4f24-9dd5-59d0297bc423",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2919b206-f4bd-48c8-a575-04646a2c6550"
        },
        "item": {
          "id": "585afe0a-b123-4522-9cfa-acc2113ffc97",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6d359bd5-fd51-4389-b2a2-e098e990da48",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542010de-19cc-4562-a1ec-a32499165543",
        "cursor": {
          "ref": "5b35dcf2-582a-4263-9baa-eaacd3b78282",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f1bab965-77f0-48da-890d-2eb65b75d571"
        },
        "item": {
          "id": "542010de-19cc-4562-a1ec-a32499165543",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3b67e6f0-b535-458b-bb96-d2949c7ff013",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9574ed-b145-4712-82a6-5a71d5ddac15",
        "cursor": {
          "ref": "a85ca497-4cce-41b7-aeef-39439246dd01",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6663f480-ecbc-4481-b42b-009006803414"
        },
        "item": {
          "id": "7a9574ed-b145-4712-82a6-5a71d5ddac15",
          "name": "identifiers"
        },
        "response": {
          "id": "637a2842-f16c-49d9-9667-524532fb33a6",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839352f3-0c71-46e6-b12a-4dc1f528cccc",
        "cursor": {
          "ref": "ac2cfa32-4f48-4c9d-ba68-1c8a7fbeab44",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b9fc9f35-497b-46cb-8256-26bb7a4f11b6"
        },
        "item": {
          "id": "839352f3-0c71-46e6-b12a-4dc1f528cccc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "eb7ef4ba-03e9-4738-bdc7-f6f908ef4eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f4e68b-e96f-478b-869b-6c3a06e903fb",
        "cursor": {
          "ref": "657fb2cf-f881-4ea2-ac25-f9c752555f2c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3fc24650-2f82-48e3-ae69-6f83632ff065"
        },
        "item": {
          "id": "89f4e68b-e96f-478b-869b-6c3a06e903fb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0461f2ea-90cd-4fb6-916f-2f4bdfa1fb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae5a71f-d9bd-4a72-8dd9-e01af6446094",
        "cursor": {
          "ref": "2cf16a66-c535-46ca-9993-5d5c8204d88d",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "371c9dc3-dec7-4c26-8fa5-edc77ef85246"
        },
        "item": {
          "id": "2ae5a71f-d9bd-4a72-8dd9-e01af6446094",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4c0967ac-51a5-4704-8a9f-b70e67772c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1359904d-bb3e-4ddd-8dc7-026650950bab",
        "cursor": {
          "ref": "d136e406-54ae-4f08-8cef-7d3313dd1fd3",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2944bf1e-b050-4e70-8382-6b9f603c96bf"
        },
        "item": {
          "id": "1359904d-bb3e-4ddd-8dc7-026650950bab",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bb566dc1-e9bf-44cc-8289-d660b4fd6eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e01a05-20f9-4322-acd3-23752e037cab",
        "cursor": {
          "ref": "af4a98d1-3f12-4852-9db5-079d97df3be9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "04a03c7d-408e-4715-81fa-3073fecd1400"
        },
        "item": {
          "id": "d4e01a05-20f9-4322-acd3-23752e037cab",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fbf2a8db-4731-43be-87e6-2c4992926d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e6a2c0-7fdf-4cb9-8ad0-14860cf9d92d",
        "cursor": {
          "ref": "f2b349c2-770c-4f0b-9592-a1e69ef6df3f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "44c6fe26-b55d-464b-8655-ee4180074c07"
        },
        "item": {
          "id": "46e6a2c0-7fdf-4cb9-8ad0-14860cf9d92d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b96b0836-f9c0-406e-999d-7a8ab87b59aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd15c9a1-aae4-46a2-a537-543d5ce41951",
        "cursor": {
          "ref": "f83cab56-b109-49b1-ad23-973ed37ecf37",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9434c6fd-4090-4a51-ba4d-3c9f2152a45d"
        },
        "item": {
          "id": "fd15c9a1-aae4-46a2-a537-543d5ce41951",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "112d5838-f3ed-4d8c-b79a-06a491df3364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b94b69a-cb5d-4653-8156-89033822938a",
        "cursor": {
          "ref": "0f95aa3d-d2cc-4964-a214-2734107e88d1",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "487a553e-52e3-4311-bf9c-052a954e7cbc"
        },
        "item": {
          "id": "3b94b69a-cb5d-4653-8156-89033822938a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "354f1742-b9e8-47e1-870e-3831181cde82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38eb1f6-e779-4199-8fe8-e7200d8cce04",
        "cursor": {
          "ref": "064617a3-02ae-4383-8d61-e0e32a0c42fb",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b505b358-c862-4662-90ba-79c28c88c99e"
        },
        "item": {
          "id": "b38eb1f6-e779-4199-8fe8-e7200d8cce04",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2dba2af5-f56f-4091-8821-af29d7ceff31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0561fd-5c58-433a-a2e7-7cef9d749750",
        "cursor": {
          "ref": "04e4d3ef-0990-4b82-94b0-9fbbb99b81fb",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "64d19010-9772-44f9-b162-d4af1f9c5249"
        },
        "item": {
          "id": "5d0561fd-5c58-433a-a2e7-7cef9d749750",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ff9f2ca6-82c5-42fb-8cab-3e9e7c33b9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a71306-f76f-4068-83b3-cf4601447fb0",
        "cursor": {
          "ref": "fa7e204a-c929-4272-977c-3226ed669280",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b4053fbf-fbf1-4832-bf11-583cd27b52f4"
        },
        "item": {
          "id": "e1a71306-f76f-4068-83b3-cf4601447fb0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c9123635-aefa-49b9-9bd0-c6b8059f1101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a720219c-43f4-4b61-a14c-5db8ea60edd9",
        "cursor": {
          "ref": "b455ea5f-c3ef-498f-a623-c3a0f8d90a1b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "93dda3ee-b6d2-4ec9-be59-6b542666cbc9"
        },
        "item": {
          "id": "a720219c-43f4-4b61-a14c-5db8ea60edd9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1cb27e07-2dd3-4100-9965-47d75d974872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2e50e3-bde4-4eea-8258-2a1a124cca61",
        "cursor": {
          "ref": "dbfb538d-1c40-49bb-9aa0-366388a4d1ba",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9c4b3dad-663f-40e1-aa79-0c9ab96b3d9a"
        },
        "item": {
          "id": "8a2e50e3-bde4-4eea-8258-2a1a124cca61",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "380ec1fe-b4e4-4a33-a5d9-165a784cf6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20200d3-63b4-4104-adb8-180e6d8a0b35",
        "cursor": {
          "ref": "2dd37639-6ffc-4aee-842e-94d5a65a23d9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f1e9f481-c021-4a6b-8d9c-b68adaca9640"
        },
        "item": {
          "id": "b20200d3-63b4-4104-adb8-180e6d8a0b35",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "877141f3-e802-420f-8aad-7e7e206abeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1b1924-f47c-4769-bb25-5ab9c3d874a1",
        "cursor": {
          "ref": "8943e98f-7be5-40b8-b8e3-0f2a3bd158ac",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8ba47b88-46e8-407d-8ea4-77e9b5ec43c1"
        },
        "item": {
          "id": "7f1b1924-f47c-4769-bb25-5ab9c3d874a1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8b8fe66b-041b-4fa3-a77c-e2d3e5af75cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb63ce3-631d-4532-9dca-c4318458ada5",
        "cursor": {
          "ref": "ee56eb34-cc6a-4356-9a1a-7223682c9878",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5d194372-7231-4640-b08f-a6b573ac8b1b"
        },
        "item": {
          "id": "bcb63ce3-631d-4532-9dca-c4318458ada5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bd9fcdbf-2ae7-4893-8475-e153382158db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97645895-f8d0-43cc-ac2b-c9268b3d20a4",
        "cursor": {
          "ref": "9a30db64-0939-4c2b-bf55-52be446d0737",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8295564b-90f2-4bea-a30a-81d6ee3eb379"
        },
        "item": {
          "id": "97645895-f8d0-43cc-ac2b-c9268b3d20a4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e580358d-02fa-4cdd-8792-376ba86ac94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cc9325-1267-4fc1-8cca-a2e256553e25",
        "cursor": {
          "ref": "b5813104-f3d3-49c0-9ec7-96c8770581c3",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0018c96d-a17a-439a-80ad-20901a2d3e77"
        },
        "item": {
          "id": "18cc9325-1267-4fc1-8cca-a2e256553e25",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "334752bc-c49c-4de0-89e4-77f4efe973c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b891133e-189e-4c5a-ada9-8c0feaff5201",
        "cursor": {
          "ref": "9357e05c-fd99-407b-8a0f-4fdaabf6872b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "da75a5c3-6c39-4f13-8885-004c0633b39d"
        },
        "item": {
          "id": "b891133e-189e-4c5a-ada9-8c0feaff5201",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "05796eba-7483-468a-bff7-dfbfafcb9119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d4172c-f23d-417b-be71-127f824418f7",
        "cursor": {
          "ref": "306ae9e2-9c59-439e-a639-139dd0b5869a",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5fb6ae28-8e89-4ac1-b46d-e90a5b710c6b"
        },
        "item": {
          "id": "f1d4172c-f23d-417b-be71-127f824418f7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1bbccaad-28e7-480c-9470-172e7dd737cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4d56ab-35dc-4484-85bd-a8dfd334d6d9",
        "cursor": {
          "ref": "9e6ccf28-ce82-42bc-945d-13d044357d23",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bf519e76-fbbb-4c96-8107-e624019e86f4"
        },
        "item": {
          "id": "4d4d56ab-35dc-4484-85bd-a8dfd334d6d9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "77fd9ca7-a9fc-4afe-a80f-e2575905dbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bb4806-de61-4058-b63b-2f19c011908b",
        "cursor": {
          "ref": "66562130-5950-4e70-b2d8-6b59d647401f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "54f426d6-a4e5-4e5e-8ab1-083ba3e25587"
        },
        "item": {
          "id": "83bb4806-de61-4058-b63b-2f19c011908b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "20301f58-a898-411a-be5c-ea11fb09add7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b638bf5-153a-4f16-a3b1-d8607c5844d4",
        "cursor": {
          "ref": "014d7f14-1788-4e6c-b4bd-91e889bbee1d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "edc89c7f-c5c7-4dd7-b2e5-d243a4d1081f"
        },
        "item": {
          "id": "0b638bf5-153a-4f16-a3b1-d8607c5844d4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "68d9106f-8a62-464c-b69a-7260e496d02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9ee5bb-53fd-4e43-bdad-4c8a5a4a002e",
        "cursor": {
          "ref": "d0d9d53a-e732-4ee5-be97-752d0aea9b3c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "84e337a1-cf2f-40bb-806a-7ee4156c37f6"
        },
        "item": {
          "id": "4b9ee5bb-53fd-4e43-bdad-4c8a5a4a002e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "13c1ebfb-9333-4698-aeb0-1a85b5bbc62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabd0487-00f9-4d9f-b25f-6cf597ce70b3",
        "cursor": {
          "ref": "042c972e-6c55-462a-be77-4e7b3f65ab37",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "df2d76c7-294b-4ddf-b1c5-4d81199e43d5"
        },
        "item": {
          "id": "aabd0487-00f9-4d9f-b25f-6cf597ce70b3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "20e56c81-4cf3-46ac-9347-bace365dcb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9145caff-c653-4fb9-9992-9ce46b1aac7f",
        "cursor": {
          "ref": "07daa272-68de-46b4-a6c4-8275212721c8",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6a2ae1d5-a46f-409f-993f-845f0a436446"
        },
        "item": {
          "id": "9145caff-c653-4fb9-9992-9ce46b1aac7f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f6c1e014-4de4-4dd5-affe-611cc9b5f85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091d1372-89ef-4c8f-8e14-2f3dc323726b",
        "cursor": {
          "ref": "4fc53ffd-aa39-45d4-99cd-9bd2104ef340",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c62a8c1a-2903-437a-9ac9-e3d3dac8b335"
        },
        "item": {
          "id": "091d1372-89ef-4c8f-8e14-2f3dc323726b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8e4db447-f302-48fe-9f33-0bb3978a5ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b2bd78-f4ed-43fc-a432-c6667ec4f861",
        "cursor": {
          "ref": "3e053099-eb22-41a8-b196-2cc97cd8eafb",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "118c9bc2-13b9-47e2-b433-3d4198f4dbe6"
        },
        "item": {
          "id": "30b2bd78-f4ed-43fc-a432-c6667ec4f861",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "328dcad8-5d7c-4bc2-9fc0-0962386d51a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4500c3-fb5f-4585-9a6b-0027016dc6c8",
        "cursor": {
          "ref": "8ed22f27-304d-4595-8ebd-3f95534b6a46",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "21ac76d7-b58c-46b4-b435-0c951482d77a"
        },
        "item": {
          "id": "6b4500c3-fb5f-4585-9a6b-0027016dc6c8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d3eea976-d7ba-4035-a9e7-0d71ada3dfd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87896feb-5a6f-4977-9bd1-75bb6cf58431",
        "cursor": {
          "ref": "cde9f85b-c39f-4f4f-b0ec-cb2aa40912a1",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5bc18b2a-1ae4-4e48-93e8-389eb98ebf1d"
        },
        "item": {
          "id": "87896feb-5a6f-4977-9bd1-75bb6cf58431",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1971fab7-1b64-49ce-bf77-3d5ef8c2349d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d2a944-cbce-4496-85cf-0930c2bb8412",
        "cursor": {
          "ref": "657e800b-66a3-4834-a55e-fd117b6f5af8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "69615d39-46a7-40c0-ae32-04a70ea3f856"
        },
        "item": {
          "id": "b3d2a944-cbce-4496-85cf-0930c2bb8412",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8a5048df-1caf-48c8-a3aa-fd6082437993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2213cd90-2671-47bf-984a-bb7c978ef2f1",
        "cursor": {
          "ref": "141cda5c-386e-4aaa-b0f3-ff818f8ddb06",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d0564fa5-29c0-4a09-ba83-8b1b1007e9c7"
        },
        "item": {
          "id": "2213cd90-2671-47bf-984a-bb7c978ef2f1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "90e088c9-a3ce-4179-a9d2-7822e9826776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315ff24f-58bc-4476-8bdb-373e3c508c81",
        "cursor": {
          "ref": "a1bf6953-0e35-487b-8fda-f33b193c29e6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ae3975df-c270-46ee-9787-fa1500c3373b"
        },
        "item": {
          "id": "315ff24f-58bc-4476-8bdb-373e3c508c81",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b1e17af3-5693-417c-a074-63594d756259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80897f5-ff42-487f-8b86-3c4466ed8ca2",
        "cursor": {
          "ref": "170d2ae3-f5a4-478f-a8d1-3e29c472de5e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bb4056c7-9c9b-4cad-94a1-f86bf68b5673"
        },
        "item": {
          "id": "c80897f5-ff42-487f-8b86-3c4466ed8ca2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0b65141b-0eff-4470-a250-4d34acbd791f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40752ba2-c666-4962-8d09-bc47fe20e893",
        "cursor": {
          "ref": "9f3d8b67-8d1f-4f06-9864-d331b453ee30",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cf49d06d-d351-4281-bcb7-d2c41d161c45"
        },
        "item": {
          "id": "40752ba2-c666-4962-8d09-bc47fe20e893",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1f23ccca-6cfc-4f1d-9980-42c6059e0fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d7f21a-11dd-4bcf-a877-0d495704b0d0",
        "cursor": {
          "ref": "9840dfec-55ec-41a8-a510-58bf804e7a12",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f26eaa8e-01e6-478e-88d6-223b32b0f1cc"
        },
        "item": {
          "id": "08d7f21a-11dd-4bcf-a877-0d495704b0d0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a95cc3ee-9f36-469e-8e49-421eee12fbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0eb63c2-50fd-469b-a8f4-58bdc58f928c",
        "cursor": {
          "ref": "6c4ca98d-bcb6-40e2-9a01-43c3545dfc36",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b261d8af-d96f-400f-afc0-a00a05fcfcb9"
        },
        "item": {
          "id": "a0eb63c2-50fd-469b-a8f4-58bdc58f928c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "efa459d6-f8e8-408c-bad8-bb9bbfafd1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d8269c-973c-48c0-a403-f567c109a535",
        "cursor": {
          "ref": "dde68a6e-5ab0-41f4-97f5-47f28a54b67a",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6016c12d-7c40-44c4-bcf7-d392013a8127"
        },
        "item": {
          "id": "64d8269c-973c-48c0-a403-f567c109a535",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "183dabc4-84d7-455d-9c91-46cbb1cb5ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4ad50a-34c5-4e8a-b528-ecf197e37aa8",
        "cursor": {
          "ref": "890e97ec-b0a5-4e8b-a880-b93cf1de3f7e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eead478d-d0c1-4c86-8704-6e2a9bfa49fe"
        },
        "item": {
          "id": "ca4ad50a-34c5-4e8a-b528-ecf197e37aa8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5e3da8f7-4392-4fa2-8372-0e75de42aab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad21ae9-7ccc-49ea-b5ff-8903a8646643",
        "cursor": {
          "ref": "2c498d1f-e3a6-4353-a673-bc8cbf238d39",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7bc7ca57-cd46-4312-9a74-962461995eeb"
        },
        "item": {
          "id": "aad21ae9-7ccc-49ea-b5ff-8903a8646643",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b41cf5c3-8e51-4224-b25e-5b29687ee79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca6bb75-e9c3-4017-85b2-e1c07941ed62",
        "cursor": {
          "ref": "3b04a907-1c57-41ab-8bdd-9eabba7828ec",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "32d28d5e-6f17-429f-a27a-1a0bc734c34c"
        },
        "item": {
          "id": "eca6bb75-e9c3-4017-85b2-e1c07941ed62",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0ff9371d-818f-4b6e-bfe2-e1afe75ebd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ad3075-08a3-41a0-a0e2-69919eb4e3cf",
        "cursor": {
          "ref": "88b68760-33a7-44a5-922b-8b8c0aefed8c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cea7451a-1b8b-4f15-9684-f4e98f59101c"
        },
        "item": {
          "id": "66ad3075-08a3-41a0-a0e2-69919eb4e3cf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2eefa7ed-7995-4020-bc74-2e10b89e8ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af61ecc7-63be-4e46-bf4f-f97d79b8ef24",
        "cursor": {
          "ref": "bfbdf51f-7a8a-412b-82c0-2256ca8bcac0",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "18056e0d-5c25-4f6d-8e54-df27aefcbf44"
        },
        "item": {
          "id": "af61ecc7-63be-4e46-bf4f-f97d79b8ef24",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "45adfe8b-3bb8-4210-a9dd-7ded81506b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff40635-2087-4f04-b116-95c8f7cfa324",
        "cursor": {
          "ref": "d9efc323-b536-4407-85f6-3d81f8c3e4d5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "642a510d-f40b-4ad3-871e-ac5e6f31f6d6"
        },
        "item": {
          "id": "2ff40635-2087-4f04-b116-95c8f7cfa324",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "65dc127e-0b77-45bb-badf-3306e5162868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94aa44d3-f525-42d6-8bf7-479b5674f176",
        "cursor": {
          "ref": "bda01a45-1497-4eda-a55e-3b1c9f1bae1a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "17cc813a-7a02-49c2-9a40-0bcfbefa5a47"
        },
        "item": {
          "id": "94aa44d3-f525-42d6-8bf7-479b5674f176",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "15f8b4d7-2e68-4a2b-8f93-807de525fcf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad4438c-2bba-4894-a545-89a93f22911c",
        "cursor": {
          "ref": "fb34b7b4-4f1d-40fe-8b6d-f128e6893146",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b282d0ed-f8ec-47fd-a289-14eedb0ee9b2"
        },
        "item": {
          "id": "3ad4438c-2bba-4894-a545-89a93f22911c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "10512b76-03e2-4afd-9487-e585db3135de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a51b49-8c65-499a-8686-90d85f369af6",
        "cursor": {
          "ref": "b61e1173-598e-4e3e-870e-be25fe5a5b2a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "64242987-8570-4d6b-a5ed-3d0d0f59a9e6"
        },
        "item": {
          "id": "f5a51b49-8c65-499a-8686-90d85f369af6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "93d617ab-c28e-417f-a53b-ab14e468a2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725d7c6a-9cd2-43ba-9921-d4cfe7ab30d5",
        "cursor": {
          "ref": "c143bf3a-a751-4b42-ab59-abf8f072493e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "645387c1-9fe9-4945-87a4-84cf775c1dc2"
        },
        "item": {
          "id": "725d7c6a-9cd2-43ba-9921-d4cfe7ab30d5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8440cfa6-92fc-491d-8dd5-dc428fef2a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49165fc5-3cee-4827-b340-f868cdfb534e",
        "cursor": {
          "ref": "79b2586b-228e-486a-a790-a95495c4fb6d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "eb6b245e-f6a9-4792-a870-14b24c5a93ff"
        },
        "item": {
          "id": "49165fc5-3cee-4827-b340-f868cdfb534e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "96191e5e-0736-424f-bb59-0a8dbc34a35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab39f368-5d86-4802-9321-7630728884ba",
        "cursor": {
          "ref": "40584a43-82db-4d93-abf3-6f52417657bb",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ead9723d-447f-404e-b2a5-dcb0984e7a30"
        },
        "item": {
          "id": "ab39f368-5d86-4802-9321-7630728884ba",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f0ea5c15-b8de-4438-bc7d-d52185aa26d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074cc4d1-034d-4b43-8c30-82bd386f00e8",
        "cursor": {
          "ref": "bf963b72-9547-4d55-a41a-7f052d9a79ad",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8812838d-74f0-4696-8482-dbfa36531852"
        },
        "item": {
          "id": "074cc4d1-034d-4b43-8c30-82bd386f00e8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ca54de3f-c8e5-4762-ba36-5179207ebce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622d0a57-1624-432e-a1d2-f8af603d8ce8",
        "cursor": {
          "ref": "34a38c1b-a9c2-4e43-b2d5-13004ce882ff",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ce6e6b79-e5ca-4d80-b73a-eb388e78fc33"
        },
        "item": {
          "id": "622d0a57-1624-432e-a1d2-f8af603d8ce8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "228ae708-b0e0-4f71-a4e7-e8a37e347c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257650f1-5466-4fcb-b98f-9c55743c2e3a",
        "cursor": {
          "ref": "dfd9735b-1465-4c13-bd62-a35763886dd5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "76696b98-87aa-4868-9861-72899a89977d"
        },
        "item": {
          "id": "257650f1-5466-4fcb-b98f-9c55743c2e3a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4885b6d3-c9ba-4566-9c21-884c382d7736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdc7a0d-a46a-4683-9980-b2050ec8609c",
        "cursor": {
          "ref": "e3c1a0f0-33eb-4d78-a299-f642f4e1f5ab",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1effe619-3421-47d6-b5b1-6be8cd5ff25d"
        },
        "item": {
          "id": "2bdc7a0d-a46a-4683-9980-b2050ec8609c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "afbf5a81-c86a-43c9-81b6-820b89bbf2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f2ff78-a129-464f-81d9-4e19140bb212",
        "cursor": {
          "ref": "54f94817-f246-49f2-8733-69176155b5aa",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6f17de37-8a50-479f-aa9e-613c59ae2be5"
        },
        "item": {
          "id": "b9f2ff78-a129-464f-81d9-4e19140bb212",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "51640ddb-9ff4-454b-ba63-168f97be77f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b612c95-4308-4cce-95b3-4d7b8b99c233",
        "cursor": {
          "ref": "eefde90c-9c5e-4f3e-906f-2abf1358a7cb",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "be010997-84d1-4b74-9765-22277e03833f"
        },
        "item": {
          "id": "5b612c95-4308-4cce-95b3-4d7b8b99c233",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6414d8c9-528b-4976-8c83-5703e120f979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154316fe-4ed8-4db6-bcfe-7a4e839c9075",
        "cursor": {
          "ref": "37e9722e-ed57-4044-954a-8389e7b06221",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b6c55781-762e-4866-8f68-1ce5af0dd0e0"
        },
        "item": {
          "id": "154316fe-4ed8-4db6-bcfe-7a4e839c9075",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2132eee8-4f79-43ad-99a3-f4c845d15c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3657842f-0dbd-4076-986b-29b0ae2c9d3f",
        "cursor": {
          "ref": "2b87b787-cf8a-49e1-bf54-0515fdff800c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "29d0b0f4-3041-4065-bc33-2a156a57c27c"
        },
        "item": {
          "id": "3657842f-0dbd-4076-986b-29b0ae2c9d3f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3665f3bc-615c-4520-b4ea-06d7d0607768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fead02a5-fd4b-4923-a8a7-263cf39fd982",
        "cursor": {
          "ref": "3a5449e2-d437-4c2d-89dc-8aa6b3d9e413",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e1d4d0ec-3023-4559-9dfd-5a74aaf29255"
        },
        "item": {
          "id": "fead02a5-fd4b-4923-a8a7-263cf39fd982",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3dd77cde-3474-4964-a3ab-a9880867946a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519f738f-14aa-4311-ad82-4e142809e0a2",
        "cursor": {
          "ref": "e5c3b9e4-d6a3-4ba8-bf64-35b541d29dac",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eeca4538-31cb-4b7b-aecf-590c1db3bd51"
        },
        "item": {
          "id": "519f738f-14aa-4311-ad82-4e142809e0a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0d22b9d8-45bc-4165-8567-d3b8ba0cae0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e00f45-67c8-4ca8-9f74-eadb1fd09eb8",
        "cursor": {
          "ref": "36a612e3-4731-4430-a2f5-ae31bad2663a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f2702aeb-3d78-46b3-9b00-247ca0781ba5"
        },
        "item": {
          "id": "24e00f45-67c8-4ca8-9f74-eadb1fd09eb8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fece3ac1-bbee-477d-b1c8-7a717f163582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0fbd6a-1dae-4734-b9cf-56ec76983a2b",
        "cursor": {
          "ref": "d26c6ef6-fd1d-4cd7-9d92-0ddf086cc0cb",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fc66c025-4b42-4eb6-acff-234c0d36c675"
        },
        "item": {
          "id": "8a0fbd6a-1dae-4734-b9cf-56ec76983a2b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d1a3eb84-d3cb-4a6b-ab2f-3bac6c4d5b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a40b220-7174-4478-9a39-0792612a59e7",
        "cursor": {
          "ref": "8488e709-cc4d-49c2-a5b4-0dbc91998fba",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c02f5159-aac1-4019-ae05-adc8a957770a"
        },
        "item": {
          "id": "2a40b220-7174-4478-9a39-0792612a59e7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "57b29198-4f59-4e6e-a12a-b3e312b963ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08f74f6-8c00-402b-b9cb-5014086ee47b",
        "cursor": {
          "ref": "7a3279cb-9605-4b15-99f6-72223bab473b",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "42a3bca6-8fa8-4302-9a0f-b6f6535ccbcf"
        },
        "item": {
          "id": "a08f74f6-8c00-402b-b9cb-5014086ee47b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "17630a03-882a-4f0d-b06d-5ef79c101557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97f7b2f-b8d5-4cd6-9974-b277c0c2c737",
        "cursor": {
          "ref": "d8c46e84-2fee-4a90-8fa5-7f0bd1bfd814",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d5536faf-815f-4f48-850f-cf08f8170d22"
        },
        "item": {
          "id": "a97f7b2f-b8d5-4cd6-9974-b277c0c2c737",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "aee893c8-d0f3-4d0c-bc7b-fafb70cfbf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fbfdf1-8ead-4fc7-8420-b88c86b97844",
        "cursor": {
          "ref": "8af895ea-f7cb-45b7-9f0c-ad34270aadac",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7296057a-d37c-47cf-9fbe-4190f9928980"
        },
        "item": {
          "id": "54fbfdf1-8ead-4fc7-8420-b88c86b97844",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "be536315-b974-4539-8c18-ff2aed0c15fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26db2b98-8f28-4eed-b17d-a280ac1feffe",
        "cursor": {
          "ref": "9f4b4cf9-eae2-43e8-9938-5ebb64b45853",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4bc16e8a-7cf9-4931-9d83-b1e9cbb497a3"
        },
        "item": {
          "id": "26db2b98-8f28-4eed-b17d-a280ac1feffe",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3dc36534-7f1f-4928-ac2e-6f0cbda2d686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211885e6-79de-4941-b4c0-eebbb7e06ed2",
        "cursor": {
          "ref": "468da586-0d04-4278-82ee-b785c4539583",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "50a0a0d6-3044-435a-93d8-294910dfb377"
        },
        "item": {
          "id": "211885e6-79de-4941-b4c0-eebbb7e06ed2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "31791f08-72a5-4168-ac29-edfb18f70eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83deda19-e7dd-4513-8a80-8641639faa03",
        "cursor": {
          "ref": "90ca7e3f-5c7d-4c3f-a26d-ffcbce460eb8",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4b2adcf3-49f5-4866-ac34-192ebea0bc00"
        },
        "item": {
          "id": "83deda19-e7dd-4513-8a80-8641639faa03",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6151f821-e724-4b4a-a254-893e8b9b7c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050f8174-d37f-4660-9f04-9293bf71a3e6",
        "cursor": {
          "ref": "175f9a73-2c12-4146-bb13-aec586714af6",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "78d53005-fb20-4fd6-9673-4910c3a4c3fb"
        },
        "item": {
          "id": "050f8174-d37f-4660-9f04-9293bf71a3e6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d6da4f06-e143-4204-8181-1a01d6b3f347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079b5050-dcbb-49b5-ac82-301702a27181",
        "cursor": {
          "ref": "4438f04c-7c25-428d-abb5-705aec730327",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "497fd83f-c84e-4e56-8c17-491d83d6f82e"
        },
        "item": {
          "id": "079b5050-dcbb-49b5-ac82-301702a27181",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5f8137bd-afb3-4a78-b8d6-2b97f2e3d695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5420caac-b6f8-4e59-b096-ee47223f7705",
        "cursor": {
          "ref": "aa48567d-4bf6-4697-9d2e-c4e14504dd5f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fc79d2db-663a-4333-836b-5d01a48d7736"
        },
        "item": {
          "id": "5420caac-b6f8-4e59-b096-ee47223f7705",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "60a5a7d7-d3ef-4eff-bcfd-f081150dd940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ce961b-10b2-466c-9090-f7ef46385ea2",
        "cursor": {
          "ref": "ccaac16d-e557-46ec-ac03-604c3c638af0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fc39e69b-4bdf-4fee-8db3-238dbde7dc7f"
        },
        "item": {
          "id": "79ce961b-10b2-466c-9090-f7ef46385ea2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cc1bd569-0021-4f14-8aee-f569d73cbabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9101e189-71fe-4562-8bf5-c0a97e33b171",
        "cursor": {
          "ref": "6b4bd665-3819-43ce-9f52-ffe47d89db35",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2e778fc1-2ef2-47cb-85b2-b58c5d618b8d"
        },
        "item": {
          "id": "9101e189-71fe-4562-8bf5-c0a97e33b171",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "da748e14-481f-4701-a5f4-11073cd4af34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d7fcde-6019-443a-a96e-acb8e87b8786",
        "cursor": {
          "ref": "498e72f8-22dc-42ff-a7aa-9a240acd0d08",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c51426fe-29e3-4964-b5c9-f8d9ace3eb5b"
        },
        "item": {
          "id": "b9d7fcde-6019-443a-a96e-acb8e87b8786",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "84a843d8-24c0-4856-8cc5-63a3884a2fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ff39e4-a6f1-49b5-8a5a-ed6b318ed914",
        "cursor": {
          "ref": "6d4d4eb1-1c3d-4ba4-9b95-266da964dc6a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9be804fd-f280-4979-9d07-2a1afd7c61b9"
        },
        "item": {
          "id": "31ff39e4-a6f1-49b5-8a5a-ed6b318ed914",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b124137c-1c14-4f36-ad25-da3a3db13b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e661680-a8a1-4cc7-916e-71e6f97ca377",
        "cursor": {
          "ref": "402a21ac-354d-4c5d-b50f-137d4273f77a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8b29da4e-e4ab-4cc4-affd-400f2c026564"
        },
        "item": {
          "id": "2e661680-a8a1-4cc7-916e-71e6f97ca377",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e6cdecc4-207c-463a-9ccc-e49b53ae02bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca897b06-b7a5-4440-a4da-7bc247df1b1f",
        "cursor": {
          "ref": "c4114d43-42e7-47fb-a7e0-d3a0e6d67219",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "deed8b42-b5f4-449c-a6a2-9f9b74ef5bef"
        },
        "item": {
          "id": "ca897b06-b7a5-4440-a4da-7bc247df1b1f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "85854f09-3bc0-4c2e-a24f-c026658493ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c28ce7-4cf5-4d94-b446-6fbab702606f",
        "cursor": {
          "ref": "b15d9f16-14a0-4449-a769-d32588405c57",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7479fe0f-bbce-419a-9919-de73b9986dd9"
        },
        "item": {
          "id": "a8c28ce7-4cf5-4d94-b446-6fbab702606f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fb80d074-69a6-4031-9d77-70c054d5f4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc4813a-0835-46e0-be63-a6881c74ea63",
        "cursor": {
          "ref": "dd92d529-8d7f-47b3-93cd-07fb0d00b6cd",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b439cb66-0cb8-4a04-a26f-856897451112"
        },
        "item": {
          "id": "7bc4813a-0835-46e0-be63-a6881c74ea63",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "56561f55-a88c-4552-847c-3ab911d80834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4e8e1c-5d1c-416e-aae7-ed0e812df535",
        "cursor": {
          "ref": "54fb59aa-34d3-4f07-a9d8-c39d2d3a68a4",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "51b40c30-ab55-47ac-8e96-2530897940f6"
        },
        "item": {
          "id": "ba4e8e1c-5d1c-416e-aae7-ed0e812df535",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3a2f010e-6b3e-4980-aff3-2da049c490c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b342ab-2a74-457a-9e19-e40c495835cd",
        "cursor": {
          "ref": "5c7b6af5-d02a-4747-b197-df70191e9f7b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "62b6fff7-b4a3-4bb7-b58d-8f1f9746ca59"
        },
        "item": {
          "id": "f6b342ab-2a74-457a-9e19-e40c495835cd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b6484980-3523-4b81-acab-724398c749a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab0ffb9-50b0-4006-8dc6-85a8845c4113",
        "cursor": {
          "ref": "4203688b-5cd3-4681-9b94-a2d126d42963",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dc65f2a6-611f-4fb8-828d-770125372352"
        },
        "item": {
          "id": "6ab0ffb9-50b0-4006-8dc6-85a8845c4113",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "87808857-feff-499d-8f77-f3c7f67e643f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bba00c-e949-4934-b058-654f9cf4fe62",
        "cursor": {
          "ref": "79de1a3b-374e-40ba-b8f0-3759dcde8f6f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "928a8e9d-c0b4-4db4-a494-b00968860784"
        },
        "item": {
          "id": "f2bba00c-e949-4934-b058-654f9cf4fe62",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "97de7f07-2842-4054-8611-8a78147f8ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2976bc62-e6ac-41dc-95a4-0a2954b8aaeb",
        "cursor": {
          "ref": "daf1d352-9fce-4907-9eba-6664216a8cd6",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bcca7cd9-27ab-4e29-99ca-904e7acf4561"
        },
        "item": {
          "id": "2976bc62-e6ac-41dc-95a4-0a2954b8aaeb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c1abadc9-1fda-43a0-880b-4a3bfd6f9c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbed0c2-bb22-4088-81de-98808c7ffa4b",
        "cursor": {
          "ref": "a0838b30-e646-4579-8825-72bb90b704e6",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "be7eb951-ccb1-4e5a-a4c1-77ff2b6c9898"
        },
        "item": {
          "id": "ccbed0c2-bb22-4088-81de-98808c7ffa4b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "60a7d057-b58a-4890-891b-a1193e6ce4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74bc5d3-d0c9-414d-840c-de5081ca704c",
        "cursor": {
          "ref": "2f9d359a-6128-4cfb-9d3e-9bfc17cabb2c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "738fc484-90c0-4e00-9b51-10b81ed79553"
        },
        "item": {
          "id": "a74bc5d3-d0c9-414d-840c-de5081ca704c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0144470d-fbdc-4a1c-b99b-1c7733f2ca2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4430cd-10cd-415b-b292-e84f61066de5",
        "cursor": {
          "ref": "c9ed252c-f887-42d6-aa9d-a258f1d9acb7",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "970a3308-15ef-4e14-9436-2f1089bdb641"
        },
        "item": {
          "id": "1b4430cd-10cd-415b-b292-e84f61066de5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b7dceb18-64dc-4e74-83d4-4bccbf0b4eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775d9f32-d532-446a-8fb9-416c09767c5d",
        "cursor": {
          "ref": "5e95732b-281d-486e-89b8-053267dc40aa",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "625b5e95-480b-47ad-be5b-79495d9856f0"
        },
        "item": {
          "id": "775d9f32-d532-446a-8fb9-416c09767c5d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c6a52bdc-118b-4564-8b00-c32b9fd809bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadd173b-ffaf-4d55-bdda-13bbf51a2b71",
        "cursor": {
          "ref": "0834c877-81de-446b-9ddc-338be6245343",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3a87db74-ec4d-456d-b39d-5fa6ab18bbf4"
        },
        "item": {
          "id": "dadd173b-ffaf-4d55-bdda-13bbf51a2b71",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bcdbf476-ebbd-4951-999c-18c606c36aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a8b9bb-2be8-488b-b640-35d254fb6755",
        "cursor": {
          "ref": "e0a0f20a-9740-4cea-8002-996d42db1147",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "06dad307-686e-40ca-9a24-dfe700f0a79c"
        },
        "item": {
          "id": "81a8b9bb-2be8-488b-b640-35d254fb6755",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a8bc86c4-08b2-4239-8291-b5117f895499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38c7c96-9693-4a48-af2f-65b7e5468220",
        "cursor": {
          "ref": "dcfa8a56-ce37-41e0-96d8-b00833407c72",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ef7cb4bf-b98b-45a6-a1a3-db2c7f3e5606"
        },
        "item": {
          "id": "f38c7c96-9693-4a48-af2f-65b7e5468220",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c2b1a4b9-f3ee-4438-aed4-a554fd4f01f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60205040-dc30-4d03-943e-874a0fd95875",
        "cursor": {
          "ref": "2ee83d1e-7b86-4e42-b010-0364d6c5c0f1",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e6e2861b-ebd7-4af2-b002-b20ff4263eb6"
        },
        "item": {
          "id": "60205040-dc30-4d03-943e-874a0fd95875",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1fcbb5fb-cb13-459a-8a3f-d9e12f6ea911",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992c6d07-8871-40fe-b0c0-4c1ad34ddee8",
        "cursor": {
          "ref": "60273fe4-a9eb-4dc8-aff0-42900ffe3159",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "124d7518-4907-4e05-9d4a-534718959afb"
        },
        "item": {
          "id": "992c6d07-8871-40fe-b0c0-4c1ad34ddee8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "926f4e8a-9f77-41ab-9e04-07dcccd6136b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b4df965b-bcf3-42b3-8419-702048dab00b",
        "cursor": {
          "ref": "f032a4fe-ca45-4fd8-876d-735ea5590227",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a4d73903-1b8a-4a51-a382-34a2eb1f0ca9"
        },
        "item": {
          "id": "b4df965b-bcf3-42b3-8419-702048dab00b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e5765b9e-3e9e-4442-b279-6cc0eedb6f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5dce3079-eee5-4e01-a658-35988bd8c03a",
        "cursor": {
          "ref": "9091cc57-de6f-44af-9737-e249b0797565",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "82814cc8-758c-453b-b2b2-56f12f27a828"
        },
        "item": {
          "id": "5dce3079-eee5-4e01-a658-35988bd8c03a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "02bb0b65-c04b-4d04-8463-d92aa0967640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4cf9ad9c-5a17-4ec6-bf1a-248118723512",
        "cursor": {
          "ref": "e3d444cd-c369-4fc5-9b8e-755d18cc7866",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "24eee95d-d222-477e-b26a-34911fee552d"
        },
        "item": {
          "id": "4cf9ad9c-5a17-4ec6-bf1a-248118723512",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d821fff9-5a4f-442b-afe5-4409bf10f626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2ae9cffd-2ab7-44c5-9972-3c87704710a2",
        "cursor": {
          "ref": "2eb2e0b1-5866-485d-9359-b736dec06b79",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "31128059-0376-4ba2-b2c3-2eb46a78051e"
        },
        "item": {
          "id": "2ae9cffd-2ab7-44c5-9972-3c87704710a2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6c7bc3bc-e44e-4e8b-90a7-022fee6c72bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3ea761e9-1cca-46c8-ac9c-08a6c47e3094",
        "cursor": {
          "ref": "501063a1-d0b7-46e2-acc2-8a4a58f244d3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b2f67963-e68a-41c6-9928-3c37a5193fe3"
        },
        "item": {
          "id": "3ea761e9-1cca-46c8-ac9c-08a6c47e3094",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dbc8c057-8156-4a47-93d5-4b7f7752f349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "77fe58f4-3b57-4645-b17e-8f17d3524824",
        "cursor": {
          "ref": "076c4bea-d0e1-442d-a70c-0845ee93a5be",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1c68c331-2ca2-4759-a38f-8282d9389cbc"
        },
        "item": {
          "id": "77fe58f4-3b57-4645-b17e-8f17d3524824",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "94051211-9001-403f-b211-cb1dd3c9e7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "130e6521-d113-4b8d-bed4-b4c83c455e2c",
        "cursor": {
          "ref": "7035d038-11eb-430d-9b39-6eab1b0fc5ee",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d950a2f7-ce8a-49a4-81b2-d0256e083485"
        },
        "item": {
          "id": "130e6521-d113-4b8d-bed4-b4c83c455e2c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3aec2b54-8fbc-4891-8dc8-7dd5e3b6905f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53abcc8-def7-44a9-8049-b2f670cc8e04",
        "cursor": {
          "ref": "442c921e-89b7-4f86-b30e-f662a3e2ed54",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7df79a41-161d-45c2-a26f-3eb5f5cc0504"
        },
        "item": {
          "id": "b53abcc8-def7-44a9-8049-b2f670cc8e04",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2552a243-0c8c-4353-b97c-92ffc21a877b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5791de36-73fc-4d79-bcd2-a58ffbc5da2c",
        "cursor": {
          "ref": "812f6302-c918-4fdb-8ed3-15c22351e3c8",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "db464ffc-80e7-4dfd-a698-8bc4d96a165f"
        },
        "item": {
          "id": "5791de36-73fc-4d79-bcd2-a58ffbc5da2c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "83e4af88-b621-44f2-ad48-f1422459b63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e193be-4c7f-49b8-bd0d-275908b825aa",
        "cursor": {
          "ref": "aec147d9-1bd1-414f-99e6-85cb9b0a8687",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ed9fe381-5022-4008-b657-b2be448d8cd6"
        },
        "item": {
          "id": "30e193be-4c7f-49b8-bd0d-275908b825aa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9491568c-5b7d-4a6d-a460-670399fc50e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52adf5b-e03c-4a1e-b51b-208d12111d95",
        "cursor": {
          "ref": "a8932f0a-75ad-4967-aace-bbc87d1d7570",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2187622b-73a8-445a-afc9-b052f41c93c2"
        },
        "item": {
          "id": "e52adf5b-e03c-4a1e-b51b-208d12111d95",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "80298ccd-ee0f-4a26-b7c3-eeaffdad2041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9574a193-ef7b-4cbc-a3b1-0908814d71c8",
        "cursor": {
          "ref": "04aea476-d312-40cb-bf53-afffbea8e9f2",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2ee881ce-800d-4041-912d-57288ce52d38"
        },
        "item": {
          "id": "9574a193-ef7b-4cbc-a3b1-0908814d71c8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a2b8f4d0-e86d-46c1-8bda-a334d94fcefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4e3e75-cddc-4247-bbaa-a73e77efdfbe",
        "cursor": {
          "ref": "0b4b857f-aa22-4ff5-8bb8-4d7f1afc44fc",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b50f85c2-8258-4c4a-b13d-9b57b0e0d201"
        },
        "item": {
          "id": "cc4e3e75-cddc-4247-bbaa-a73e77efdfbe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dc39dacf-4ca1-4955-8c81-ff78775b4b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d875a422-200e-41cd-a463-d8dce6cea332",
        "cursor": {
          "ref": "831a4b85-546d-4510-8f06-f976f54bf856",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5fb88d27-9a57-43a1-9a15-15492fb29dc9"
        },
        "item": {
          "id": "d875a422-200e-41cd-a463-d8dce6cea332",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "87711042-e458-4a8b-9270-e09f6d9a9d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00669699-ca69-4c7e-ba0a-efd3c54a840f",
        "cursor": {
          "ref": "4eb10e67-9c90-490f-913d-25f17e12ce8c",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "48726ca2-af7d-4e22-827d-befe86ddfc3a"
        },
        "item": {
          "id": "00669699-ca69-4c7e-ba0a-efd3c54a840f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3c98878c-bf25-400c-b16f-df6660d1d035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cdf836-d026-443c-9d13-a8d61f6aba36",
        "cursor": {
          "ref": "a7eba45f-97d3-4950-8fa0-53a0ac6a5b43",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "453170ec-36ce-4de3-a1a8-3b4de2a062d0"
        },
        "item": {
          "id": "08cdf836-d026-443c-9d13-a8d61f6aba36",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f2360664-7ad6-4ea1-81fa-d3e227e50c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c05c3d9-6b51-45dc-a07d-ada28388c88b",
        "cursor": {
          "ref": "e43387d2-dfce-4eee-a0d0-fea2073f8e7e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "55d7a000-822a-4a22-9b05-cd16e4f6863f"
        },
        "item": {
          "id": "2c05c3d9-6b51-45dc-a07d-ada28388c88b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "54933f12-18ae-41b2-9ed0-e0e81a453069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b834e886-0b75-420a-9eef-693959ccbfbc",
        "cursor": {
          "ref": "d94c48e7-37ad-4ffc-8454-56a9202d93d9",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ae04b3c8-dd7e-4e8b-9a44-880822de1915"
        },
        "item": {
          "id": "b834e886-0b75-420a-9eef-693959ccbfbc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "15308f91-0426-4585-afad-447d2022d863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03eb6ea-8a00-4caa-8a76-38df6950deb2",
        "cursor": {
          "ref": "f48fd1c7-04a3-412c-bc7c-16b47a4a0a0b",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "aaabd673-9900-4d7f-b9de-b2bb0665d0b0"
        },
        "item": {
          "id": "b03eb6ea-8a00-4caa-8a76-38df6950deb2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a375dfa4-df4f-43d6-850b-0ab931a7d4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba701d4-4108-4a8c-91c0-cd8d552c159e",
        "cursor": {
          "ref": "4453a116-b954-4816-b54e-59ae1af153da",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "80748d08-b4ea-4247-b5f3-b5631bbef630"
        },
        "item": {
          "id": "7ba701d4-4108-4a8c-91c0-cd8d552c159e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "af7f267e-a9c0-4940-a22d-826fd2c91a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd78155-bb56-403c-be40-890931fc0c46",
        "cursor": {
          "ref": "85acdb58-5112-4821-97d5-cea7dc271895",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1aeaf3a8-8993-4d76-bfe4-2ae063de0cae"
        },
        "item": {
          "id": "4bd78155-bb56-403c-be40-890931fc0c46",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "77353d11-7190-4f5d-9180-9ef0138516ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df6a8d0-1eb8-4a0c-ac1d-7307a9c30b13",
        "cursor": {
          "ref": "703faa6c-2d0e-45eb-aed3-71fc4f1af661",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1ebf206b-6a87-4a3f-b7fb-99c1ad9c31f8"
        },
        "item": {
          "id": "6df6a8d0-1eb8-4a0c-ac1d-7307a9c30b13",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "eb66f52a-5726-437f-a285-12456a063a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c66feb-0aa4-4167-9d05-8f1e1c213945",
        "cursor": {
          "ref": "0ebca074-3303-43e1-919b-3007a704e40f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7c7567e6-93aa-4537-bdba-279d820a2cf9"
        },
        "item": {
          "id": "85c66feb-0aa4-4167-9d05-8f1e1c213945",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "832a722f-2970-4513-b3a2-8a1bfb74f902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a787be95-b3d1-4178-8657-f41bdb27f427",
        "cursor": {
          "ref": "7728c5bd-3f7c-41ed-8f57-8f626df96da8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "97e8791c-d6ed-4a39-8dcf-6c1b0a4690a6"
        },
        "item": {
          "id": "a787be95-b3d1-4178-8657-f41bdb27f427",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8f0d4755-b084-43d0-8ca3-3f1d17dba56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5180596-4101-48ea-a07f-019b09081ee8",
        "cursor": {
          "ref": "14e43fa9-3c6b-428b-881a-10fe6c5cbd3a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "268f3cd4-8c3d-4003-a035-97216947bf28"
        },
        "item": {
          "id": "d5180596-4101-48ea-a07f-019b09081ee8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "474e8836-3fa0-4cf6-b814-d4f0cbc77001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5f5850-36b5-4520-bd78-fb506e9b5b76",
        "cursor": {
          "ref": "708abe19-08f7-4b96-a7c2-40d3c56c1dc4",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7806315e-84ce-435b-bfc7-c0d53e1f21ed"
        },
        "item": {
          "id": "8a5f5850-36b5-4520-bd78-fb506e9b5b76",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "efb02309-67d4-46d6-9618-412062e7561a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467351cd-dcab-4500-a6e1-8ffb2ae4afbb",
        "cursor": {
          "ref": "ee4e3e5e-961d-42ac-b1a0-d1ee5c24594a",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "566fcb47-3cdf-4f08-81cf-d512644757b7"
        },
        "item": {
          "id": "467351cd-dcab-4500-a6e1-8ffb2ae4afbb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "29d7d0d5-bfdc-44be-a3da-984e944afba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3c4ef1-8a6f-4862-a1b8-46b35fb3a602",
        "cursor": {
          "ref": "92dab039-12ed-46cb-a0b5-7c55f472283f",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f27c7609-c311-4515-971c-3942b0872680"
        },
        "item": {
          "id": "9a3c4ef1-8a6f-4862-a1b8-46b35fb3a602",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0d2d18d8-9ffc-42cf-9a65-9f14c25dfdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f79cc9-78e9-4541-a160-8116567e1c01",
        "cursor": {
          "ref": "f6238eb6-f4ce-44ad-bf3d-51979b9d4864",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c1928e35-22e3-4885-96b5-c052b140f61f"
        },
        "item": {
          "id": "c6f79cc9-78e9-4541-a160-8116567e1c01",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6b9517b6-80f0-462e-b701-58206f12dec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77e1bb7-d4cc-4152-9a5e-6ea4e6a62053",
        "cursor": {
          "ref": "cdadcd45-6e4f-4942-85cb-5f7fe10e52a1",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "aec8097f-5f20-476d-be86-e2bd2a7478aa"
        },
        "item": {
          "id": "b77e1bb7-d4cc-4152-9a5e-6ea4e6a62053",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "67fe7181-51b6-485f-9266-640fc2d17038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0168e312-91fb-4838-a3f7-e25c8c44a483",
        "cursor": {
          "ref": "2b6ab359-349f-4f76-9172-676e98afaefe",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9bf9eedd-c681-46f5-8d53-841221499fe8"
        },
        "item": {
          "id": "0168e312-91fb-4838-a3f7-e25c8c44a483",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2315e526-56f8-4316-a35f-b2b9f93451b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86581154-e63f-4a1d-8528-5d61e6715d70",
        "cursor": {
          "ref": "fe6b464e-795b-4f12-8e2c-90f00b0ce53d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7f00999b-4fdd-4ced-866a-40ee520821f6"
        },
        "item": {
          "id": "86581154-e63f-4a1d-8528-5d61e6715d70",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "298f8a1e-531c-45c9-820a-0f3d62736fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f30c79d-f66c-47d5-ba16-0d434e5f136e",
        "cursor": {
          "ref": "62d6460a-a683-416e-b1bb-18b59dfceb53",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b5373363-39a7-43c2-8878-201f175b3791"
        },
        "item": {
          "id": "2f30c79d-f66c-47d5-ba16-0d434e5f136e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f7eb8050-1378-449b-95bc-59024057ee41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35d1c89-2bfe-4de1-83b5-b55ca4e1e809",
        "cursor": {
          "ref": "c700ba1e-8767-45f3-80e7-5b5eb338d943",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f47cc46d-b382-4371-9325-608775174fac"
        },
        "item": {
          "id": "f35d1c89-2bfe-4de1-83b5-b55ca4e1e809",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0d325b3a-af2e-4e1d-aa38-69470ec8000f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51526b0-e29e-4b0a-99f9-07ace3416f6a",
        "cursor": {
          "ref": "eb5e7df9-c7d9-4f7e-944f-35f24fc5e359",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fb633aae-efc1-405c-a42e-2dafac164e2a"
        },
        "item": {
          "id": "e51526b0-e29e-4b0a-99f9-07ace3416f6a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cbfebee1-44ee-47ed-a9d3-d31ae47582fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d575756-9646-41ec-b4d4-f0a1ad7b4468",
        "cursor": {
          "ref": "233e489e-a68e-4219-a360-c64010891f2b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "eac7675e-ec68-4d47-87ab-de1d9f695cd0"
        },
        "item": {
          "id": "6d575756-9646-41ec-b4d4-f0a1ad7b4468",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "eb71a841-bd7a-4528-83fe-0170ad26ed74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cdb2a4-590e-4282-84f2-ae264ee23f5a",
        "cursor": {
          "ref": "9041290f-c438-413d-b337-6902378637a3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bd62fb9c-cb81-4adb-9aa1-b199ff4b6717"
        },
        "item": {
          "id": "78cdb2a4-590e-4282-84f2-ae264ee23f5a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2c89576e-4a6d-4cc1-9e34-a046b9a59b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5c9d46-f86c-44c5-9a1d-19aa95a0fecf",
        "cursor": {
          "ref": "b88a4208-403e-4378-b26a-2f0c27678203",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d617161f-fa6a-4973-a904-0f3ce5e5febd"
        },
        "item": {
          "id": "cc5c9d46-f86c-44c5-9a1d-19aa95a0fecf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ce55f155-f361-4811-92d4-8920dab14784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b650eda3-fe1c-42b6-b925-f5d81229acd6",
        "cursor": {
          "ref": "f3468462-e72f-49a0-94bc-c9836b16da2d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a80258f1-0a96-4187-89a0-95ad31533ee7"
        },
        "item": {
          "id": "b650eda3-fe1c-42b6-b925-f5d81229acd6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f92f67d4-2551-4a4e-acdd-5ef95bd6d73a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2463677-13b4-4c32-bb71-37126a3844a1",
        "cursor": {
          "ref": "6f82129c-2d61-4d6d-b086-29bdec5ac311",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "14c357ad-0f33-4ff8-b522-cdce7c186b63"
        },
        "item": {
          "id": "f2463677-13b4-4c32-bb71-37126a3844a1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d62bb819-d93c-48ef-b0e7-2e8499384cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc89450-a2d3-4f6a-934c-dcadb5881ac2",
        "cursor": {
          "ref": "4ff3e514-e775-4d0e-af51-7b75d52626ae",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "054819b1-3201-4ffc-a99c-f42708edb5cf"
        },
        "item": {
          "id": "edc89450-a2d3-4f6a-934c-dcadb5881ac2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "99b4a377-9be1-4fb8-a788-c2e21c341da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2564a3ab-ee8c-4ed6-9799-71f076f6820d",
        "cursor": {
          "ref": "2609057b-4676-41c2-b8ea-3d0ca10dc49f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "03a64dbd-4435-44a5-88e4-d179c6449f8d"
        },
        "item": {
          "id": "2564a3ab-ee8c-4ed6-9799-71f076f6820d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b9748750-a1a4-4b39-b34d-d4cf9c7b71bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0269b2-3703-4bd3-9446-56abc06ba0aa",
        "cursor": {
          "ref": "ce9266d5-b521-4749-86eb-5636ea59e326",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a1b309c4-7318-4178-8ac9-3e01d5022910"
        },
        "item": {
          "id": "2c0269b2-3703-4bd3-9446-56abc06ba0aa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "94914d38-0796-4310-89ea-a39cb8e5f851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d387fa0-6208-44a7-83e0-34a3a6236511",
        "cursor": {
          "ref": "018977ec-f172-47f9-9ece-d29c09c136a7",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9793e7d9-bed5-4fa8-880d-1b5d2f16e4ea"
        },
        "item": {
          "id": "8d387fa0-6208-44a7-83e0-34a3a6236511",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4258ca28-e5ef-4736-9b19-80c2b65869f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95da8d0b-d5ec-40b8-8c1d-720dce2c39ac",
        "cursor": {
          "ref": "c7ef96b5-755e-4213-98be-e66b1519a223",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "12668828-2fc6-4893-8cf3-009e37ba17a4"
        },
        "item": {
          "id": "95da8d0b-d5ec-40b8-8c1d-720dce2c39ac",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e8541ca2-598c-43e3-b555-faa4802bb6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888b2c1d-1ee2-4bf7-afb4-a12a4b0ffc80",
        "cursor": {
          "ref": "f5a0441c-3e63-4c28-8a68-7678cee977a6",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8a863abe-573b-4a56-b315-fb17f81f57fc"
        },
        "item": {
          "id": "888b2c1d-1ee2-4bf7-afb4-a12a4b0ffc80",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4b6fc24d-d77e-4367-9d02-bfa5da7d1a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df97130-7206-4d6a-a66e-a4ea6569e7ec",
        "cursor": {
          "ref": "9c106cfc-3952-4ed3-8870-817128df3f14",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "dfd71cbc-3364-4ae0-8fdf-8fbb7bbd823b"
        },
        "item": {
          "id": "7df97130-7206-4d6a-a66e-a4ea6569e7ec",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "537b5f17-ba07-4e79-93a3-583ced4e26c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6df1d85-3be1-447f-a0b9-b673f2c8cc66",
        "cursor": {
          "ref": "ea955763-7e61-49c6-ac81-39dce512d3d2",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0782a581-517e-4ad3-adcf-b421e554f8da"
        },
        "item": {
          "id": "b6df1d85-3be1-447f-a0b9-b673f2c8cc66",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cac64235-958e-448e-820d-b23a5501568e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e9bc31-0101-4f52-9caf-13899592f0b3",
        "cursor": {
          "ref": "ca58f528-f654-40a9-86b3-cae2ca6aaef5",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "962a93e9-4feb-46c0-90de-3c09f1d916ae"
        },
        "item": {
          "id": "37e9bc31-0101-4f52-9caf-13899592f0b3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a6efc72a-7c97-4211-9330-d0f7ab5c08d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab80304-4822-41d6-8b13-b2bddd398ce2",
        "cursor": {
          "ref": "8f0dd7c8-9ec4-4c68-9f6c-d49be0f8b5f3",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1dff61bc-066c-40b5-be6c-ded7fbe6c274"
        },
        "item": {
          "id": "cab80304-4822-41d6-8b13-b2bddd398ce2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "23eb2cdb-4bcb-4041-bd6a-64f435a9ef61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8539061-d602-4920-b8c5-37c9912f5721",
        "cursor": {
          "ref": "b7a7316c-605f-4d3d-b870-424cf5d23274",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b3499c21-30ec-4580-a562-9e0e122feb9a"
        },
        "item": {
          "id": "b8539061-d602-4920-b8c5-37c9912f5721",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8c76b117-06b0-45db-bb84-1b999f8842ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba8ac78-1f27-4ad7-9d8d-3caa2ee82292",
        "cursor": {
          "ref": "f08928a4-6780-4b1d-9c78-a9756ff51ea5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "56f782df-99a5-4845-919a-38aea4267fd7"
        },
        "item": {
          "id": "1ba8ac78-1f27-4ad7-9d8d-3caa2ee82292",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c923776e-a738-4e45-8f48-3d51ecf9b1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e31fb3-7e87-407e-b60a-6b7618c9e324",
        "cursor": {
          "ref": "ccd94f78-01bc-495f-bae4-2be85758873e",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b3297840-538e-4aa3-99b7-130c463a2874"
        },
        "item": {
          "id": "37e31fb3-7e87-407e-b60a-6b7618c9e324",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "622e7d13-7d6e-4db6-8639-b62e1a6be27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeadbd79-03c0-4077-a9b2-d8180ea379cb",
        "cursor": {
          "ref": "a363232b-37db-4ff0-a861-21cddc064c9c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "794f0dc9-cd4e-456a-88be-4a8447efb7d6"
        },
        "item": {
          "id": "eeadbd79-03c0-4077-a9b2-d8180ea379cb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bc68ca77-71a3-470b-a88b-fe5ed8102c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585d48fa-8dea-4e8d-8878-f472b2fe68f9",
        "cursor": {
          "ref": "73b80d7e-ac92-4b0e-8a2d-6344a9a97372",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4a8ee652-5972-4698-a774-ac3de2e02300"
        },
        "item": {
          "id": "585d48fa-8dea-4e8d-8878-f472b2fe68f9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dcd53b80-8b04-4647-8994-6d73112517eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0798c93-53ce-437e-93d8-a307e099db7c",
        "cursor": {
          "ref": "4c7a614e-7dbd-4f2d-9e3d-07070e88a655",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2a168279-fe93-4571-a68e-a28fee3665ef"
        },
        "item": {
          "id": "d0798c93-53ce-437e-93d8-a307e099db7c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9b579d40-ce8a-460d-82de-3a13a2d13cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e045b05-070a-4e72-9704-72f82f5f5c52",
        "cursor": {
          "ref": "4782639f-7c3a-41e9-896f-777c321cebff",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8aaf7449-1c67-43ae-b52d-1d8f31a95a59"
        },
        "item": {
          "id": "9e045b05-070a-4e72-9704-72f82f5f5c52",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a821b3ed-1c7d-45f7-b8aa-40069f828ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bf80b3-de51-47f5-bdca-8748f3ca0173",
        "cursor": {
          "ref": "53ecf994-a6af-42f2-8f59-579d08f51fac",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "19c2f837-f64c-49ab-8fad-a5b9eb9a8fcb"
        },
        "item": {
          "id": "e9bf80b3-de51-47f5-bdca-8748f3ca0173",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "84e135bf-87da-4869-8e65-21d7ef5c3f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574002fe-101a-4468-8d9f-31345d6e4bae",
        "cursor": {
          "ref": "8111ea67-e6b3-46bb-997c-c2920c5f93d4",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c48bbf2c-6908-4fca-8622-667a0a57ba03"
        },
        "item": {
          "id": "574002fe-101a-4468-8d9f-31345d6e4bae",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "28bf4d2e-ca44-49be-afb1-0b481886aaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a847a505-4acb-47ef-9c93-56eb1c865627",
        "cursor": {
          "ref": "3ea0eba3-0209-42dd-805a-98fab6128fd7",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4754aae6-c546-4316-820d-ecb54466ff2b"
        },
        "item": {
          "id": "a847a505-4acb-47ef-9c93-56eb1c865627",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2f05dbbd-85d7-4611-966d-b91a6376c88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec50281-f2af-48b9-8d6b-cdf0d2bb75dd",
        "cursor": {
          "ref": "c3ad3f56-7005-4305-870e-86c91919c32d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a9da978b-ba73-4f54-9df4-a2dd337c41dc"
        },
        "item": {
          "id": "2ec50281-f2af-48b9-8d6b-cdf0d2bb75dd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5a7e0ee9-aa95-40bb-a9f3-550b630d6c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dced863-969e-4b53-b27b-3f8cfeea38b8",
        "cursor": {
          "ref": "7dcdeca2-1107-4536-a20e-5bae4e52d114",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bb7c56e2-6e62-4b41-8cde-1fe7cca0d764"
        },
        "item": {
          "id": "9dced863-969e-4b53-b27b-3f8cfeea38b8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "59fcca7a-1220-44c9-8a8f-c6cf1fa46682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a897057c-f139-412f-b415-2eb4c5df8f0d",
        "cursor": {
          "ref": "79613981-ca8a-4b85-aa2b-024e1431fa87",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4a9988a5-4559-49f2-8ea9-60a3454c43d3"
        },
        "item": {
          "id": "a897057c-f139-412f-b415-2eb4c5df8f0d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9f8c9bdd-c60c-4b41-a994-b39cee5e6b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b82cc78-7ab7-4567-a5f1-f8afcf05d4a5",
        "cursor": {
          "ref": "ee74f7a1-0fa4-4208-8e0d-4aad3af6495d",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "db79bd6f-2b54-44bd-b8bd-f90debd439e0"
        },
        "item": {
          "id": "8b82cc78-7ab7-4567-a5f1-f8afcf05d4a5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "88647528-7947-4edd-9107-311696e4f18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92689d3c-bcc1-487a-9bd1-c94f8f4ffccc",
        "cursor": {
          "ref": "2f804aa9-f9bd-4d65-b779-a158b15c3881",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9a22de44-59c9-4550-a146-c902babee265"
        },
        "item": {
          "id": "92689d3c-bcc1-487a-9bd1-c94f8f4ffccc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ccec9169-57b9-4c02-b22b-a18ac789aa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bdf5e5-afb2-4930-9578-aa0dd4fe3779",
        "cursor": {
          "ref": "ba23eac4-2579-4886-b37b-a792013e9190",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a8ad546d-5c16-42b4-8eaa-9915f8aefcd5"
        },
        "item": {
          "id": "a3bdf5e5-afb2-4930-9578-aa0dd4fe3779",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2fd7846c-f46f-41b3-87b9-78c6aa4d8c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363e6adc-4e7d-4e4b-b107-aae2938d0923",
        "cursor": {
          "ref": "81cc5c3a-a36b-4478-a14c-a7803b62779e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6bc752f1-aadd-4aa0-bbcb-64ac925d5980"
        },
        "item": {
          "id": "363e6adc-4e7d-4e4b-b107-aae2938d0923",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a9eea6a1-528d-41ea-8bd7-c4b352419292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367bff5e-fd81-4018-97dd-d5dc53aa10e4",
        "cursor": {
          "ref": "2925d36d-bfd5-4579-a09d-a582e1048865",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7c2faa2a-7f7a-480c-8d4c-9b1ef731f867"
        },
        "item": {
          "id": "367bff5e-fd81-4018-97dd-d5dc53aa10e4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f1e22e61-9f37-4814-b93e-d326c4ca2d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74063aa8-b94f-4b5e-ab23-3cca3e13ffb8",
        "cursor": {
          "ref": "41b6c287-981e-41cf-a49e-6d748b1a512c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "30f20105-e113-4bdb-8510-5cb46c9fffd3"
        },
        "item": {
          "id": "74063aa8-b94f-4b5e-ab23-3cca3e13ffb8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6f618006-0702-42ea-b5f9-140862312890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c939ba-a4e2-444e-8983-0c9621a35724",
        "cursor": {
          "ref": "8e6684b3-b9d3-4e8f-bc76-e01ad9fef13b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "388bb8d7-b9e3-4f86-b557-810504e57cae"
        },
        "item": {
          "id": "87c939ba-a4e2-444e-8983-0c9621a35724",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c07ef7d1-98a2-428d-8219-3c615cf86607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e24091f-4c69-428b-9e88-a89271e04958",
        "cursor": {
          "ref": "f41885d7-e8dc-4879-b244-8ae409623693",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "929882fa-1cda-431c-9847-18ec13b02b1c"
        },
        "item": {
          "id": "4e24091f-4c69-428b-9e88-a89271e04958",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c133c395-8633-4efa-9a5c-64eec1d542b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68278773-5345-4413-b1f5-6d7eb39e7bec",
        "cursor": {
          "ref": "ebce2524-dcc9-493e-be0d-30bc86a1e980",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dad45b64-ff74-4995-8efa-784bf60c7b0c"
        },
        "item": {
          "id": "68278773-5345-4413-b1f5-6d7eb39e7bec",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0c14ae70-eedd-468c-ad32-0ea91cab127c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6aeb12-6015-4a3c-b666-257565dda158",
        "cursor": {
          "ref": "0ea0af7b-0c03-4e2a-9e8f-2f81c0870693",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c2d200a2-7a57-4ab4-b35a-e0c99b089205"
        },
        "item": {
          "id": "8e6aeb12-6015-4a3c-b666-257565dda158",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a53fead4-f2f2-409b-9548-3f5f93ad3c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670e0efb-fa6c-4dc1-ae1d-ca96c63773ee",
        "cursor": {
          "ref": "6d4b48f4-7720-47e2-95c9-711779a864e8",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "042f6f96-b56e-4bcd-b2cb-43a8e92ec1f2"
        },
        "item": {
          "id": "670e0efb-fa6c-4dc1-ae1d-ca96c63773ee",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f26f3611-7639-4dce-aae9-840605bdeb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37febb39-dd03-4835-923b-563dfb56c855",
        "cursor": {
          "ref": "53df5fac-e5f6-43d1-ba5c-b4bd50069b02",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cb5dbeeb-80f4-4faf-b4d2-dd48465fc5a7"
        },
        "item": {
          "id": "37febb39-dd03-4835-923b-563dfb56c855",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9e9005b3-d664-4fde-8533-11de2553c917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fb9c4d-724d-447b-b743-febb1845bda1",
        "cursor": {
          "ref": "4c2c602d-569b-405f-9445-481d34796beb",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "104ed48f-d3ac-4d2f-adde-57a9fc601ab2"
        },
        "item": {
          "id": "b9fb9c4d-724d-447b-b743-febb1845bda1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fa339e01-17db-409c-a3fc-909ce0eb265c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2d39b5-6d54-4a6b-9871-f8022820f104",
        "cursor": {
          "ref": "0fdb7182-3099-433f-b7e8-e8f8d30a6c12",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e50cff04-2ac9-485a-985b-9d402753cc6a"
        },
        "item": {
          "id": "7a2d39b5-6d54-4a6b-9871-f8022820f104",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eebd0db8-b5fe-43f1-a826-f8366b093626",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d67fba-fb38-4467-9dcf-b9bba2f5ee39",
        "cursor": {
          "ref": "0c5cae17-e883-43be-a1cf-94957ff296a8",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "64717d2a-0c2b-467b-8ca8-93d4d46b426d"
        },
        "item": {
          "id": "d3d67fba-fb38-4467-9dcf-b9bba2f5ee39",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "68f4ee11-0eae-4a2b-9f67-df88d52a0393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663264e6-e4e3-454d-ab41-74c58e0724ff",
        "cursor": {
          "ref": "c147dff4-fb9a-4bf8-a5b1-fde0399e084a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a009a5c2-f34c-4859-b7de-238cfa3eedf7"
        },
        "item": {
          "id": "663264e6-e4e3-454d-ab41-74c58e0724ff",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fa729791-56ac-4317-b920-aaff69167506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fc5dcf-d147-4bfa-bea6-aa41beb0a8fd",
        "cursor": {
          "ref": "950c43d7-803d-476a-b5cd-f90026827405",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "36c69343-e7e5-489b-8485-b246deec9195"
        },
        "item": {
          "id": "b5fc5dcf-d147-4bfa-bea6-aa41beb0a8fd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "34c60b95-4bd8-4ba2-876c-887dbc7d377b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0371d81-a847-4eab-805e-91ed1ca1b31c",
        "cursor": {
          "ref": "a696b0ff-0715-447b-93d3-c5de2b1e0729",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "29c5b91d-fcbb-4561-b79e-63aaba2c6c20"
        },
        "item": {
          "id": "d0371d81-a847-4eab-805e-91ed1ca1b31c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a830f7cb-ae5f-4097-92ad-9a0989cd78fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1409b33e-eae1-49d5-8e13-ebeb18f04b84",
        "cursor": {
          "ref": "c6ab4a14-68f2-47e1-9125-ddd63a7edada",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "84e8223c-6663-4ae4-b578-43d2bd9e08d2"
        },
        "item": {
          "id": "1409b33e-eae1-49d5-8e13-ebeb18f04b84",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5a676967-1290-463d-ab51-039f3c19ff2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f068d79-a666-438a-bbec-dc1a3c39537b",
        "cursor": {
          "ref": "1b6a5b2c-ed0f-4771-b0f8-c76788d2bbf2",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "74cee0a1-f1d6-4fb7-ab84-b356f3bedfd2"
        },
        "item": {
          "id": "0f068d79-a666-438a-bbec-dc1a3c39537b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8ea66611-b066-4de7-9b9a-d3fe408c90bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd444799-df3d-4fa0-a019-3812fe818754",
        "cursor": {
          "ref": "7680f867-59c7-4d09-aefe-8b491549adef",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "76a412f7-4148-42f7-a7c4-a52cbf845d4b"
        },
        "item": {
          "id": "fd444799-df3d-4fa0-a019-3812fe818754",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "799add1e-b04c-4163-a030-618aace95a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206269cd-dadf-4e79-8677-ef2512e47fe2",
        "cursor": {
          "ref": "77d73d57-205b-4deb-a59e-0de4d7229620",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d3f584ae-33b7-4554-a1b4-faf39af19366"
        },
        "item": {
          "id": "206269cd-dadf-4e79-8677-ef2512e47fe2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f9cfe432-6f5f-49c0-be0b-004b4acbc111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad40566-fd97-4df6-9e79-d74ad56e1532",
        "cursor": {
          "ref": "8b4f4dfe-1776-455e-9b27-d02bf42cdfc1",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a3dc7ec1-efa6-4f9f-90d5-61eb8555418e"
        },
        "item": {
          "id": "dad40566-fd97-4df6-9e79-d74ad56e1532",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e93a2cc8-4f0e-4d3e-8cd2-b9eaebabe7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1de4a3-bd13-41e8-aa44-f12477b22690",
        "cursor": {
          "ref": "6b69fee7-0110-4520-86dd-ee7067a6248c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "99d58f5a-908f-4e05-be84-85d21e0f5b78"
        },
        "item": {
          "id": "cf1de4a3-bd13-41e8-aa44-f12477b22690",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d06b93a8-7488-4c44-ad43-5cc8d47c011f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e901d8d4-8de5-4120-b043-9d51ce5dab91",
        "cursor": {
          "ref": "654e70e5-6a9c-4750-9baa-5795a7b0ae78",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "09af9f5d-9874-4eba-9e65-6ad23c76df2d"
        },
        "item": {
          "id": "e901d8d4-8de5-4120-b043-9d51ce5dab91",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2392c4ce-b579-42ee-9d04-01d740fc9120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb351746-5807-471e-b9f6-d7102c49d91c",
        "cursor": {
          "ref": "b48a306b-d5d7-44b5-a1c4-1d83673427dd",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fdef0db0-d1d8-47e4-bc7d-f212a42eed59"
        },
        "item": {
          "id": "cb351746-5807-471e-b9f6-d7102c49d91c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "49c6621f-4bdd-4ca9-9919-dd53f4c7d1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f916b0ea-2b0b-45ea-a651-3c558a4868f3",
        "cursor": {
          "ref": "0cc7dd63-f17a-466d-8ac6-5beb1ed02713",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "726bf9cf-6f5b-412f-b761-820b01e878a4"
        },
        "item": {
          "id": "f916b0ea-2b0b-45ea-a651-3c558a4868f3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "aa274e2e-c0a2-4a0d-a926-89011f9a79ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1daa35d2-e31c-4010-a126-bfc4d848ea5a",
        "cursor": {
          "ref": "4e043930-0853-4e02-a2e1-f48cd7612857",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "372ba442-41df-4ed8-964c-87d278e45f3e"
        },
        "item": {
          "id": "1daa35d2-e31c-4010-a126-bfc4d848ea5a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "66e86256-3af6-49fd-979b-621c50e384bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89d4093-0c1a-46af-b788-225a749e56da",
        "cursor": {
          "ref": "f02cdd55-bb45-48d4-a374-936ad59ee14a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b4964dc1-1211-4adf-8292-e5b8cf30ea35"
        },
        "item": {
          "id": "f89d4093-0c1a-46af-b788-225a749e56da",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a0b3a053-973f-4931-aeaa-38ef8c86dc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9202459-f96d-482b-bf48-b3b23615b175",
        "cursor": {
          "ref": "07a3b498-de31-4ad6-95d6-b5e3093c24ca",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "14b1c36a-10fc-462b-a2b9-e2ad72e16595"
        },
        "item": {
          "id": "f9202459-f96d-482b-bf48-b3b23615b175",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "45fbbcf1-ea5f-4e68-800d-1faa1120c221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3b2fa5-9499-4b29-a1b6-8c5e528dd4ff",
        "cursor": {
          "ref": "599c3c82-e553-4330-a784-a99f68e58b71",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4c8d2c83-8095-47be-b555-9e2b3a925106"
        },
        "item": {
          "id": "6f3b2fa5-9499-4b29-a1b6-8c5e528dd4ff",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "75c2ddaf-3aeb-44d5-9a9c-ab9864594933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00282679-dfe1-40ce-a5aa-49a28c8f8c08",
        "cursor": {
          "ref": "5a277c74-df1b-4a77-a3e5-4cbaa567fcae",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f6cb8365-a1f7-4547-80ac-186031eb2427"
        },
        "item": {
          "id": "00282679-dfe1-40ce-a5aa-49a28c8f8c08",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8bb9c69e-cc93-4a3c-8d99-ee6f7c261144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3dd629-6eb2-4ada-8dfa-b6f10a3422fe",
        "cursor": {
          "ref": "f55562e5-7239-4ad4-a349-bdc1adfcef1e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c9bf4640-d6c7-4be2-b0c6-f148d88ed7ba"
        },
        "item": {
          "id": "4f3dd629-6eb2-4ada-8dfa-b6f10a3422fe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "815f3b74-9835-4e2c-83bd-a3608be95297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8833fbe3-4431-4080-afee-3bd58af7ec06",
        "cursor": {
          "ref": "99574ae1-50ad-4c98-976c-e3a767e048eb",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8921972c-a626-4bba-a0a0-2c924dc0f5c4"
        },
        "item": {
          "id": "8833fbe3-4431-4080-afee-3bd58af7ec06",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "16563610-abba-401a-9906-b5f252369104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a6b4cd-4580-48a0-b7a1-a246c887b954",
        "cursor": {
          "ref": "d817e075-416c-45fa-b86f-68e2f2573b74",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d5a5de4a-1b5b-41b7-a9b0-5cdf4fdb5dd5"
        },
        "item": {
          "id": "d2a6b4cd-4580-48a0-b7a1-a246c887b954",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "212cedab-710e-4475-a63f-41159dc5065a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd513f1-5bd8-4985-acf3-af3c397d06fb",
        "cursor": {
          "ref": "68995e1d-5691-4b37-824a-96cde82cb74c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "90426db9-09b6-4c1a-b0cc-a015873deada"
        },
        "item": {
          "id": "fdd513f1-5bd8-4985-acf3-af3c397d06fb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8b8d6740-c1c3-44b6-9977-667d87e1786b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6db66a-2a0c-4f23-b32a-7d507d392213",
        "cursor": {
          "ref": "6ab3f75a-4e90-477a-ba68-13c998757e4f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "45ab55c4-be06-4ed9-8888-c5510eb90be2"
        },
        "item": {
          "id": "9b6db66a-2a0c-4f23-b32a-7d507d392213",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "24412ecf-e3a2-4e7b-a502-9eb0ac736c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c58e21d-6b3f-446c-9370-85308ae640ea",
        "cursor": {
          "ref": "3d93fd80-de7e-404a-bb8f-aae078a385d5",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8cfffd44-6e1e-4fe8-84ce-58f710b14b65"
        },
        "item": {
          "id": "6c58e21d-6b3f-446c-9370-85308ae640ea",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e731bf3d-4f07-4ab4-8a30-5754ba80612f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d0e5ae-be06-4328-9ab2-621d4ce4b34e",
        "cursor": {
          "ref": "430f7d90-f1c2-4bfe-ae3c-8f6e8c284216",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b73260b3-8024-47fa-ace6-4d2ba3f98203"
        },
        "item": {
          "id": "50d0e5ae-be06-4328-9ab2-621d4ce4b34e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "33e1f5c0-e34a-4f31-9704-9c877aee8792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156b47a9-9316-4a67-ae3a-fa34c5b478ff",
        "cursor": {
          "ref": "6d6ae1a5-38cb-4538-91c6-acfc4cf99d4b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0398ae19-6dde-4c75-8eba-6041a85bd02c"
        },
        "item": {
          "id": "156b47a9-9316-4a67-ae3a-fa34c5b478ff",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8e93bf0e-d42d-4196-a2e7-6c82a05bf170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acab1c9-78ab-4b73-9558-cb1e02b12fad",
        "cursor": {
          "ref": "ea95d20d-7470-4abf-aacf-b6e24ca9f9e3",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a70285cf-b7b0-4b71-bc55-5afe176b0ec1"
        },
        "item": {
          "id": "9acab1c9-78ab-4b73-9558-cb1e02b12fad",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "921c5e64-635d-41d6-b997-d717d577b787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ad975f-be5d-4d97-9ab5-38b50f199292",
        "cursor": {
          "ref": "2edb7f4c-f363-43b1-8837-d4fa03aa6fb2",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e2bd5223-3bce-4df0-8944-2652ddc3c78f"
        },
        "item": {
          "id": "73ad975f-be5d-4d97-9ab5-38b50f199292",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b4f0edb7-a3ee-4bae-a063-83bf56f210e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5dface-2229-4988-892e-bcec6f2797d3",
        "cursor": {
          "ref": "da0619ed-2919-4726-a66a-38c766d6b9e1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4526e41b-ca26-481a-8271-7051b0fc6dfb"
        },
        "item": {
          "id": "6f5dface-2229-4988-892e-bcec6f2797d3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "00b9a4ac-0631-4b46-a5be-c0916a16fc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8884b6fd-d2d6-45cb-96ca-1a7bf19fd94a",
        "cursor": {
          "ref": "9613be5c-458f-438e-979c-00e8264e1f6a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "017802a8-5dff-4f6f-a83b-1b33965c31a1"
        },
        "item": {
          "id": "8884b6fd-d2d6-45cb-96ca-1a7bf19fd94a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b0e11ea4-3f28-42d1-b256-305595b7a74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3354fca-b31f-4d8b-bf37-8554668cfc0b",
        "cursor": {
          "ref": "5c4fa19d-dced-4ed7-a81d-d0b53ef42eb7",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a1c8128d-7fe2-4984-a8ee-b1b3f1d0fb77"
        },
        "item": {
          "id": "d3354fca-b31f-4d8b-bf37-8554668cfc0b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4a2013ac-883e-4ca6-b51c-ef5a23cc2505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf88255-4897-4e5f-be9b-8afc1d864e04",
        "cursor": {
          "ref": "2fad79c9-1993-4730-bc92-f7702984efd7",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5788e218-151e-45e1-84e5-e51090c5ece5"
        },
        "item": {
          "id": "7bf88255-4897-4e5f-be9b-8afc1d864e04",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "70daeafc-95bb-44a9-be06-f8bf0abe0b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ab65e7-1cfd-42c5-9127-0f4aba6be85c",
        "cursor": {
          "ref": "088914e6-113b-4fb3-95e5-fe5b566e740c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a9f8125c-d6bf-407f-b061-25cba6e5516e"
        },
        "item": {
          "id": "32ab65e7-1cfd-42c5-9127-0f4aba6be85c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a0b4ff98-883d-4b24-b504-6369296197ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae41f7b-182c-406d-857c-ef2d30006594",
        "cursor": {
          "ref": "aaf23954-f9bc-4a8d-8161-e5466aaadd4a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1611aa4a-e440-44f8-8a87-535fef18aa51"
        },
        "item": {
          "id": "dae41f7b-182c-406d-857c-ef2d30006594",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6eb8ee4b-4128-490f-9653-aa8ed25be1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd06faf-f849-4321-9189-87acb5665988",
        "cursor": {
          "ref": "c59d7847-f9f9-4075-93cb-0082b22207f4",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8cb63e91-c468-4267-9b9c-214f7c70ba45"
        },
        "item": {
          "id": "0bd06faf-f849-4321-9189-87acb5665988",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f29b82b7-eebe-4d16-87cb-43a46b618a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c65e43e-d9dc-42ce-a248-c24fee625b82",
        "cursor": {
          "ref": "1e96ffd2-5fe0-4636-adeb-4f972b554e86",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5212bf80-a505-4466-8ccc-64462abb614b"
        },
        "item": {
          "id": "8c65e43e-d9dc-42ce-a248-c24fee625b82",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f6e61d7b-0814-4dce-9d99-a39f41ba7002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a7e37f-fd6a-4099-a47e-89ef89b99f1c",
        "cursor": {
          "ref": "a9b379d3-429a-4e69-b8ae-816007da544e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "87583d67-9f07-444d-9043-9719d571f8ba"
        },
        "item": {
          "id": "94a7e37f-fd6a-4099-a47e-89ef89b99f1c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b7368280-f69c-4218-bf15-2f8bb2bcf62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5031b65f-0d31-45f7-8665-e6b49d4ba1b0",
        "cursor": {
          "ref": "7bb858d1-27b9-4def-a84f-133c017d1c32",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ae1415c5-ec02-4231-8f62-2496035497d6"
        },
        "item": {
          "id": "5031b65f-0d31-45f7-8665-e6b49d4ba1b0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c9711ed0-b8d6-4b01-ace9-63a009e7bcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80a0f7e-c13b-45d5-86b0-04344075ad52",
        "cursor": {
          "ref": "5d98e753-9768-4927-bb29-5e4e2b0f3af8",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "866412b0-c6d5-41a2-85c1-df6e63a46f64"
        },
        "item": {
          "id": "a80a0f7e-c13b-45d5-86b0-04344075ad52",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "46a6d26f-33ad-4bc3-8616-9484e0a9e226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b619e8-579b-47d8-ad43-eddf0a671d80",
        "cursor": {
          "ref": "aed8bf46-bd2a-474b-9e5d-d9439ffb678a",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "de7ccef7-ada2-4cae-8b72-563859af0573"
        },
        "item": {
          "id": "78b619e8-579b-47d8-ad43-eddf0a671d80",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "38154636-6d8a-4e57-a1fc-bdabf34a4bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921f77dd-6e4c-4bc8-ad17-8afdfe715b97",
        "cursor": {
          "ref": "f072f4e4-8e5c-433c-b3cc-9af514f922c7",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "aa8efcb7-d856-47f1-8b5e-ecd4944b89b8"
        },
        "item": {
          "id": "921f77dd-6e4c-4bc8-ad17-8afdfe715b97",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5641bb2f-b4ae-42af-8086-8d439b983fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09d7004-a89d-46e6-a486-10974cfc717c",
        "cursor": {
          "ref": "4869d693-90c4-4c9f-b417-62a938e7713e",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "27cfdf82-5e1b-48f4-8ed2-4a3663af2135"
        },
        "item": {
          "id": "b09d7004-a89d-46e6-a486-10974cfc717c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "61001780-7a77-4d1c-ba98-0e734373ef0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f96d7d-6895-45e1-9734-f8c4968775b3",
        "cursor": {
          "ref": "0341b021-a8a7-4d94-9380-ee15625f71b4",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "228dec30-66c3-4bd8-b904-235a3d365ff6"
        },
        "item": {
          "id": "39f96d7d-6895-45e1-9734-f8c4968775b3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cf6691e1-cc8b-4425-b175-eb9d62b5525b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e94807-b758-4db5-ac36-6d2fd1e2d84e",
        "cursor": {
          "ref": "5c98bfc1-08e7-48b3-ab38-ae08866e221c",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "81075075-7bd3-41f1-9f1c-334911757594"
        },
        "item": {
          "id": "22e94807-b758-4db5-ac36-6d2fd1e2d84e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2424b941-c541-4b0c-ab0e-6054ecee5b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d31cf3-2496-474b-826b-fbab6a6e59e1",
        "cursor": {
          "ref": "f66ba809-53f4-4bac-81de-477fa1925cb9",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7bc5fc34-4855-464e-8fc4-ad192395839c"
        },
        "item": {
          "id": "55d31cf3-2496-474b-826b-fbab6a6e59e1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3aebc838-0ac2-4a96-b3b2-47899054e4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a01349-c893-43f1-a9a4-d52556b3f2c2",
        "cursor": {
          "ref": "4a3ec805-7586-49e2-91f1-1499f3131c3d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "917b75ec-35d8-47b9-a28a-b1efc7922fc4"
        },
        "item": {
          "id": "15a01349-c893-43f1-a9a4-d52556b3f2c2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a1ce0427-6efe-4289-8a0d-5e3c8a31b9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa9dd2a-6628-4e94-8d0b-56e45ae168c8",
        "cursor": {
          "ref": "c113afd9-f3f4-48b8-b207-22c32a1d015c",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a3308c85-8275-4a8b-bff9-f8ac6721948a"
        },
        "item": {
          "id": "8aa9dd2a-6628-4e94-8d0b-56e45ae168c8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d45698b5-9ef1-493e-95bb-9c7af7e5951d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72858b96-b4ab-46a5-a368-a07e821b41f1",
        "cursor": {
          "ref": "e989f150-d968-4e15-aaf9-04840a3d7da7",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "72fa3cd4-b676-409a-89af-97cbdad768f0"
        },
        "item": {
          "id": "72858b96-b4ab-46a5-a368-a07e821b41f1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1d6ad955-bfd2-4594-8619-69632a6a9f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a477aaa1-ddbc-4350-b7a1-16edc574c8a7",
        "cursor": {
          "ref": "cc8f3566-2652-4e60-a2bb-c57a4d34dd38",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6f4511f7-947a-4729-a41a-f9170790317c"
        },
        "item": {
          "id": "a477aaa1-ddbc-4350-b7a1-16edc574c8a7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8faeefa5-a92c-4304-9898-dc3cf2eac251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d1e66d-dbcf-4c6d-81e7-580579eafeb8",
        "cursor": {
          "ref": "0c5a9196-d078-4d7d-9330-56e0a72e4dd3",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e8637419-57f9-4d98-991e-4f77a0cc3b70"
        },
        "item": {
          "id": "a2d1e66d-dbcf-4c6d-81e7-580579eafeb8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d140adce-620e-429e-8883-32b6a05c7f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930b9f67-5678-4dcb-a8a1-c7f88973da54",
        "cursor": {
          "ref": "c80ed500-04ed-4cd1-9625-034fb09a5bb9",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4e800f8a-1324-48da-9873-97c4df7e1638"
        },
        "item": {
          "id": "930b9f67-5678-4dcb-a8a1-c7f88973da54",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2df2e794-ed4f-408f-85e9-c9a520ac8656",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "bf1a69cf-175a-4df0-9486-41d031624bb1",
        "cursor": {
          "ref": "fa5dd6cc-d95c-466e-9ccc-d878e6206721",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "db216239-cd33-49cd-9374-18c3ff49e50b"
        },
        "item": {
          "id": "bf1a69cf-175a-4df0-9486-41d031624bb1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a84eb608-203b-4c07-b43e-ea6a8c6f77f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5384a238-c608-496c-bcb1-c07b90d41d3e",
        "cursor": {
          "ref": "0217fd2c-71d8-460f-ae2e-f75d50ac909d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "71edd2f9-1d65-4a1d-81bd-f222d0f97a26"
        },
        "item": {
          "id": "5384a238-c608-496c-bcb1-c07b90d41d3e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "61706503-027a-484f-ac9a-10aad2e68f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b38a3c-3a00-4273-8d9e-31a569ca063a",
        "cursor": {
          "ref": "f4cae50b-c6a6-4b7c-a4c6-d6f28dabf2ce",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9ca8fb2c-32b9-4c6c-8232-36f5ca1f5526"
        },
        "item": {
          "id": "31b38a3c-3a00-4273-8d9e-31a569ca063a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "dc154349-d427-4778-aa15-235e089e457a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97926504-1480-4e91-896e-d869a897b6f3",
        "cursor": {
          "ref": "a8cbf6c8-a877-4fbe-81ed-297ab4354288",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bb1607c2-db1b-4f96-a122-166090895141"
        },
        "item": {
          "id": "97926504-1480-4e91-896e-d869a897b6f3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "290e717e-d057-4785-81d3-e339104cbf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf7ff65-9f9d-4f46-a9c9-cf39f600ed2a",
        "cursor": {
          "ref": "b8640428-0c98-4e73-a468-a6885249056f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5137ccdf-8cba-4a91-ac41-9754a2aee4ff"
        },
        "item": {
          "id": "7bf7ff65-9f9d-4f46-a9c9-cf39f600ed2a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4744f538-1209-4de5-97c3-f85986fdbfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592fd21b-51f1-4a54-9861-256f94c14173",
        "cursor": {
          "ref": "594af2f6-5bab-40b3-9ad3-b230253195f9",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9df85ddd-e00f-4435-b3cd-22b7189de3e8"
        },
        "item": {
          "id": "592fd21b-51f1-4a54-9861-256f94c14173",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c55ba3c8-d928-4f0f-af6c-fb85fbeb005a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cbbd71-2fb2-4775-a7ac-c2ec965193c2",
        "cursor": {
          "ref": "fb391c92-f2df-4064-ab27-20f543b72882",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bc5e58ad-7953-4aab-be47-3cbfbaa1f757"
        },
        "item": {
          "id": "31cbbd71-2fb2-4775-a7ac-c2ec965193c2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5182af77-ff8a-4cd3-b27b-2fa8eee8e41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2453494-7438-4e91-af4f-2df21cb139b1",
        "cursor": {
          "ref": "162c38b2-a38f-4a2b-9300-1b5c1535b286",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "19ab368a-9152-444a-bbac-4d7f4df75552"
        },
        "item": {
          "id": "e2453494-7438-4e91-af4f-2df21cb139b1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e20c0868-103d-4ae5-9a43-e95ddae3ba45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c3c557-5a20-4160-be6c-09eb403f9b67",
        "cursor": {
          "ref": "9eb91103-1e15-43fe-a095-514aaa0302c6",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b389ce18-07ca-4934-9959-599f950d034c"
        },
        "item": {
          "id": "01c3c557-5a20-4160-be6c-09eb403f9b67",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f54c8dd3-981a-4f6b-a1c4-856b847f2b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d6b357-b5c2-4233-8841-5ec05917a0a0",
        "cursor": {
          "ref": "16623bbb-ac5e-4cac-86fe-4f24611ee96a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4c272c23-1cb7-439b-b2c6-1087daf58ac3"
        },
        "item": {
          "id": "41d6b357-b5c2-4233-8841-5ec05917a0a0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "48fff7ae-1647-4496-b3c2-6acb3b74229c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78961369-3d30-4aee-a21a-d713d834e102",
        "cursor": {
          "ref": "853a94a3-36a1-4741-b853-ad64d6f427ee",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2908299c-880c-43c3-8596-664b32cecd69"
        },
        "item": {
          "id": "78961369-3d30-4aee-a21a-d713d834e102",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6569bbb5-97a2-4dc2-bd49-795cf2b9a535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85953acb-46af-4ffc-868e-2791473c47f2",
        "cursor": {
          "ref": "e6f599f2-5168-4f69-913a-28bf543bb635",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c834e880-b666-4b98-99c9-bc181b0aff45"
        },
        "item": {
          "id": "85953acb-46af-4ffc-868e-2791473c47f2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "935a74fe-ec19-4a76-a6bc-b8c92d2e9933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cfb6de-ea6d-4721-ba20-caee5f054f52",
        "cursor": {
          "ref": "236c92a3-c2eb-45b4-93ce-64567435013b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e69bf84e-8103-4e84-a055-a33791d6e406"
        },
        "item": {
          "id": "11cfb6de-ea6d-4721-ba20-caee5f054f52",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "017ea7ac-065a-4889-bfc3-fa4daa676ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b3afb4-65ce-4336-82bb-9dee42f920c9",
        "cursor": {
          "ref": "c9dac53f-482b-4b89-af9b-f437539050af",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "757b2a0e-3733-4d90-b052-86d9949f37aa"
        },
        "item": {
          "id": "04b3afb4-65ce-4336-82bb-9dee42f920c9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1a67bef2-c798-4159-985e-ab073dfbf0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70256f8-a5ed-4a0a-a084-5607fa10b23d",
        "cursor": {
          "ref": "0c6cc88f-8d36-4a2e-a0fb-e0f0ec0fdec2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "83d08234-e68f-4d33-b7b4-8015710e1114"
        },
        "item": {
          "id": "a70256f8-a5ed-4a0a-a084-5607fa10b23d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c23bea1e-7eaa-4c29-aac8-6c0715b983b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4c3f59-2273-40d4-b938-3cc37ac757e9",
        "cursor": {
          "ref": "1a165838-ce57-4ead-89c3-98dcb938a8f5",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "59dba5d3-98fd-4343-b398-9343a7ba8b8b"
        },
        "item": {
          "id": "4c4c3f59-2273-40d4-b938-3cc37ac757e9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f7349236-611c-4863-b0a6-09bcd14c06b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3fc3a9-3c61-4608-9d80-a0dae3606114",
        "cursor": {
          "ref": "4af39242-3729-4847-a2eb-9b8717e27dfb",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f08fd07a-3986-4f8d-b0ce-feb8fe0c4637"
        },
        "item": {
          "id": "8c3fc3a9-3c61-4608-9d80-a0dae3606114",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e37e723e-00df-4dc4-95a2-89a831879b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1caaaf2f-64a5-4ac3-8288-99eba584bc5f",
        "cursor": {
          "ref": "b188b72a-d926-4c09-a81a-95ce9943ad9d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bd20423e-0153-4172-a085-15a2bc1afa44"
        },
        "item": {
          "id": "1caaaf2f-64a5-4ac3-8288-99eba584bc5f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "21a53f1e-278f-4f88-9e51-15924b888378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1f4287-781d-42b4-9e89-b56476e4ef22",
        "cursor": {
          "ref": "3f754627-b35f-4339-80e9-72533296f2ae",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b69a030b-aa68-40d7-ab30-719d9ebea029"
        },
        "item": {
          "id": "7d1f4287-781d-42b4-9e89-b56476e4ef22",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "33799318-02b7-477e-b75e-ab71a821c595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8d12f7-7c45-4885-a7a2-1f162ec865eb",
        "cursor": {
          "ref": "ea5f0049-f386-45cd-86b1-8b810f3b7eae",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0410b9b1-9388-4665-9573-58e40035d9c1"
        },
        "item": {
          "id": "8e8d12f7-7c45-4885-a7a2-1f162ec865eb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "599e3840-37d0-466e-a0a3-8ac3e7003a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75aa9dc-fcfd-4636-85f8-7c118da1b504",
        "cursor": {
          "ref": "9cc7cee4-4703-4650-81c8-2acb9337ece0",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "677632e6-3331-4d3f-847e-882bb637e0cf"
        },
        "item": {
          "id": "f75aa9dc-fcfd-4636-85f8-7c118da1b504",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2e2f6fd6-ce02-4949-92f0-7ed0c255cd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c3ed52-0957-4ff8-b9b2-407bab2790a9",
        "cursor": {
          "ref": "ca358b4a-1189-4b50-b5e7-803838501767",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dad38040-8220-4543-a2b7-1905632ed2cf"
        },
        "item": {
          "id": "07c3ed52-0957-4ff8-b9b2-407bab2790a9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8e425ebd-7926-4248-9858-0b16187b2c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123bdee1-2037-438d-84fa-df2a9e85e670",
        "cursor": {
          "ref": "5a482af3-cc27-404f-8b3e-1cd8edf3765d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2e185c64-d7f2-4e6b-9552-7554de949d0f"
        },
        "item": {
          "id": "123bdee1-2037-438d-84fa-df2a9e85e670",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "98490be3-9298-4429-ae49-94a3a00b1e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a27de7-45e8-4823-9785-f2726eaf2574",
        "cursor": {
          "ref": "9c09772a-aa21-4cad-a508-c71a91af865a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "88396e7c-5395-4279-b948-dc4b046c8cf0"
        },
        "item": {
          "id": "21a27de7-45e8-4823-9785-f2726eaf2574",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dd0d24c5-1975-4152-81fb-f4c15d987c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334ab256-4cf8-4dee-af81-60b6d1c53f90",
        "cursor": {
          "ref": "9f714d63-468b-4869-aa62-a45cc6bba6df",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8fa67cea-7709-4fe7-b6fc-cedd2cec9a95"
        },
        "item": {
          "id": "334ab256-4cf8-4dee-af81-60b6d1c53f90",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "24ad5d98-d9f3-4792-947e-f2ee6aa89cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d34a4f-0c57-43cd-9338-2119c1edb87c",
        "cursor": {
          "ref": "82294d47-8329-4367-baec-7afaec7b5ddc",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "37fd95fe-bdd1-4ab2-826a-317b83b1f615"
        },
        "item": {
          "id": "97d34a4f-0c57-43cd-9338-2119c1edb87c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9d661237-9adc-48a2-91a1-fe8a9a65fd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cff23a6-0784-401d-be06-7290f25d9f07",
        "cursor": {
          "ref": "e7daac3b-f37d-4553-ad44-33aff66adcde",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c670adaf-91fd-4e50-8dea-596472756ced"
        },
        "item": {
          "id": "3cff23a6-0784-401d-be06-7290f25d9f07",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0779d336-8723-4430-8747-f242f0738720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d98b95-08a6-4242-a2f0-09cd6c758099",
        "cursor": {
          "ref": "c014e8b8-9fde-46cd-ba3a-16726f240a2c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6c6f4584-ea3c-4b16-82ec-bbe0d8e70df0"
        },
        "item": {
          "id": "52d98b95-08a6-4242-a2f0-09cd6c758099",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b59f5db8-c091-430b-92f7-c23aad23e660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fae66dd-d58b-4c11-9cf6-1c04b3f87b83",
        "cursor": {
          "ref": "03d31b2d-7821-480b-92af-4abd6ed4781e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9cef1198-afd2-48ec-b61a-c3b44844c102"
        },
        "item": {
          "id": "9fae66dd-d58b-4c11-9cf6-1c04b3f87b83",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a6e7a927-70d6-40a9-90cc-7e9386a3d6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5ecb1f-c7f5-4321-8cda-05c6eb3466c9",
        "cursor": {
          "ref": "837eb42b-e6a4-45e2-b78c-8b5b78642049",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5dd33e23-8f5f-4ad6-97b2-67bd669c18cc"
        },
        "item": {
          "id": "ce5ecb1f-c7f5-4321-8cda-05c6eb3466c9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ebf6642d-b934-4d88-bcd0-d68988b543cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641c3c7a-a601-4d8a-a5fc-4b9248854a65",
        "cursor": {
          "ref": "1457ec91-93c9-47aa-b038-11f628824b90",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "bc019ef7-162c-41cd-aa63-461d5a50e686"
        },
        "item": {
          "id": "641c3c7a-a601-4d8a-a5fc-4b9248854a65",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4bb40e3a-f53e-4379-bf63-a12574a6d9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fee3dc-7708-45b8-ba4a-af36e86a1436",
        "cursor": {
          "ref": "2e4f6d69-fccf-4f24-a3a3-1594f685161b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "fe47c8c2-8e7f-4a07-a921-61b92c676c22"
        },
        "item": {
          "id": "53fee3dc-7708-45b8-ba4a-af36e86a1436",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c6ee0441-eba2-4832-a01e-e4522f54faf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3068c7a-7988-4939-8baa-774d0a226639",
        "cursor": {
          "ref": "cf8ea73f-e95f-40fa-aa8a-531b8d6dd614",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "aed6b3ac-7d25-4db2-a761-b71861f605df"
        },
        "item": {
          "id": "d3068c7a-7988-4939-8baa-774d0a226639",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6ba6758d-0c2b-4bed-a056-fcd7bc31b2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d58ff78-2622-4328-99b2-7c21c7cf1fd4",
        "cursor": {
          "ref": "c9f6a9ba-0a5a-4674-b80a-42031ffb5624",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "72fa4e4f-943a-4996-abb4-d2073267182d"
        },
        "item": {
          "id": "6d58ff78-2622-4328-99b2-7c21c7cf1fd4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6d8f38ae-fdef-41cf-af42-39f8367acffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f36922-0eee-49ee-af7e-9494eecb7208",
        "cursor": {
          "ref": "dc632b22-181b-4c56-90f7-da31a31b5748",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3509ba80-9885-4aaa-a1ab-9beb210fc756"
        },
        "item": {
          "id": "35f36922-0eee-49ee-af7e-9494eecb7208",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a41b5ca1-962b-441c-a1d5-fd88b47b5356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9deaa33-9134-4aa4-82d6-5c6ceb402826",
        "cursor": {
          "ref": "51bb1948-456e-467a-8e87-028efbd91bf6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ecf98842-229b-42d9-b980-5d383df692f5"
        },
        "item": {
          "id": "a9deaa33-9134-4aa4-82d6-5c6ceb402826",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4cf6e80f-ddad-46ab-b275-4bd92f6d3b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5e6158-2d39-4fa3-b4ee-35f92e39c293",
        "cursor": {
          "ref": "61f5a741-5bd5-407c-b22c-43fc14ae1b46",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7fa7ec2b-01ca-4ae4-8f6f-8bfd23af1ddf"
        },
        "item": {
          "id": "4d5e6158-2d39-4fa3-b4ee-35f92e39c293",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "878f0a34-6849-4427-aa83-06b7b88844f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2c2861-20d2-4290-9e9e-fdc05d0f0098",
        "cursor": {
          "ref": "69e40791-a733-4f4a-a6fa-accfd4e57bf1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0ebe7608-5dfc-4907-a73a-08f87f7de83b"
        },
        "item": {
          "id": "ab2c2861-20d2-4290-9e9e-fdc05d0f0098",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0b5efdd2-c2ca-4444-915e-79cdd230824d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594ffa9c-42d7-4117-855f-50312ab1f81e",
        "cursor": {
          "ref": "ce86d92f-3858-46e0-af2b-aea7ae8b150d",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "799ac3d0-3706-4032-a26c-6a281ab433ea"
        },
        "item": {
          "id": "594ffa9c-42d7-4117-855f-50312ab1f81e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7ec44048-f2dd-4e5c-ad0f-be2ca96bf59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e0a145-0327-4a35-b52e-8812b556455c",
        "cursor": {
          "ref": "34ce74c7-7e62-4562-8f5a-210ecda7930e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6d5d15fc-4b04-4dea-8119-8eb88bbdf5d6"
        },
        "item": {
          "id": "87e0a145-0327-4a35-b52e-8812b556455c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f7597665-371e-4bfd-858b-ae74523847a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29f1ace-c429-40d9-b27b-fd36c0388481",
        "cursor": {
          "ref": "a8dc0fee-a6e4-4eac-9f88-6eeac171f543",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "368d4912-cba1-4950-b717-971869250f15"
        },
        "item": {
          "id": "b29f1ace-c429-40d9-b27b-fd36c0388481",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8f7c30f8-0584-4ec2-859a-c9c42c0439df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d21ee9-f9a9-4639-be86-b15ab7b1fdc9",
        "cursor": {
          "ref": "1970c648-a020-46d7-af4e-8e46a8cb4abe",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "48cd3b59-8697-412f-9e2a-620e6a3b56fa"
        },
        "item": {
          "id": "79d21ee9-f9a9-4639-be86-b15ab7b1fdc9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "70234c52-e32d-45bd-8912-2bcfd18740bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40000f53-b442-472c-b9e2-083070df1ab5",
        "cursor": {
          "ref": "20f918a7-2678-40ca-a367-54942fd70900",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b6118009-dde5-4bd6-9173-9760ee3e8cb1"
        },
        "item": {
          "id": "40000f53-b442-472c-b9e2-083070df1ab5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a46c01b4-9fdd-4af6-88e8-5ede9fd4f0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e7b76b-3de2-4d3c-9151-ab9e92fcfa62",
        "cursor": {
          "ref": "c597a217-802e-4941-9d3d-9cb2f9dfc92c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d8c71166-1693-48a2-a881-eab6c8345788"
        },
        "item": {
          "id": "e6e7b76b-3de2-4d3c-9151-ab9e92fcfa62",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "af3edb08-d75b-4623-a996-9b379540f6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5f1930-19af-4780-a12f-4a9bade7f6c3",
        "cursor": {
          "ref": "7624c375-3333-48a1-b977-208a9548b0ce",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4b7f0847-23b9-4a53-80cd-ffa5a9836dea"
        },
        "item": {
          "id": "8d5f1930-19af-4780-a12f-4a9bade7f6c3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dc97fa01-8318-4225-a11a-b7b54c07f95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fe56b1-0c4b-4c58-aa3c-d4301905a836",
        "cursor": {
          "ref": "fd1e439b-f3f4-4a78-aebe-4d76ec546e58",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bd18d79a-3e1e-4979-b51e-8b0f68cf2753"
        },
        "item": {
          "id": "37fe56b1-0c4b-4c58-aa3c-d4301905a836",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d64af496-49d6-4180-befb-01c99c389e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5294c1-8707-4ecd-967e-34d7d8f0b783",
        "cursor": {
          "ref": "48a9a1ad-b0ab-40a1-8f1c-4a2938e22f6b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6021ec26-6e41-4e26-9d29-3e0a7ca6f668"
        },
        "item": {
          "id": "0a5294c1-8707-4ecd-967e-34d7d8f0b783",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a3d3c3a1-8300-4800-9bab-7dc83e43fd66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d713aa7-407c-44ff-8d37-d2d49142c0aa",
        "cursor": {
          "ref": "a0772190-8355-4162-b9e4-b1c2fc0ac174",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a2e73224-9d3a-4e12-9474-acf52988414a"
        },
        "item": {
          "id": "2d713aa7-407c-44ff-8d37-d2d49142c0aa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cdbac6ce-1fff-45e1-9cc2-903aaa3b2046",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4232ed7-543b-4d90-b1de-6783644265d0",
        "cursor": {
          "ref": "c98c5720-207a-4bf3-ab6e-5b3c2c4ee129",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1b961dce-137d-43c7-80c9-a3ef497ae051"
        },
        "item": {
          "id": "e4232ed7-543b-4d90-b1de-6783644265d0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "465703f4-6961-4f3c-98eb-6c2b5a06cdba",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d641eb8d-f2a6-42a3-b647-3f3e26693d2d",
        "cursor": {
          "ref": "31b01646-887f-46ec-b20a-3bfbc3941344",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "88a199eb-3342-4981-b523-8dca4c14c197"
        },
        "item": {
          "id": "d641eb8d-f2a6-42a3-b647-3f3e26693d2d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9ca634f7-5377-4c4d-ac12-1c36273325e5",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bcee27-50c2-4dfa-aee7-ae745bfefaa4",
        "cursor": {
          "ref": "4278f902-1876-488e-aee4-b4acdb18e27f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f0b229f5-7c78-422b-8021-fe5efab5c4e7"
        },
        "item": {
          "id": "66bcee27-50c2-4dfa-aee7-ae745bfefaa4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "04d9d4fa-f819-4c0a-abad-130d5632ab57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bcee27-50c2-4dfa-aee7-ae745bfefaa4",
        "cursor": {
          "ref": "4278f902-1876-488e-aee4-b4acdb18e27f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f0b229f5-7c78-422b-8021-fe5efab5c4e7"
        },
        "item": {
          "id": "66bcee27-50c2-4dfa-aee7-ae745bfefaa4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "04d9d4fa-f819-4c0a-abad-130d5632ab57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f6c04e-c1d4-4eb4-a8b3-48f0ddd3ebbb",
        "cursor": {
          "ref": "c413b811-01cc-42e7-a46a-54a2d60ca6aa",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e6b01847-355a-46e2-9e6a-f5c512686455"
        },
        "item": {
          "id": "f7f6c04e-c1d4-4eb4-a8b3-48f0ddd3ebbb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "24107f4e-5a16-4cd7-8762-bb03e8fe0e4c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bc9ad2-839f-4b38-9b99-331a9872a939",
        "cursor": {
          "ref": "403d9aef-9203-41e4-8767-c268e82a8e5f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b27a7552-9528-46bc-aa0f-e8fa6c5844ac"
        },
        "item": {
          "id": "71bc9ad2-839f-4b38-9b99-331a9872a939",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e491bc62-2c54-468a-92dd-c98234e5c29f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}