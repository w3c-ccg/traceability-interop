{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3d55ac69-1e39-469d-b396-12f22f619d1b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "42652b63-c55f-4b69-86cb-08f533c97ce9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5465e1dc-837c-4a6e-903e-0d0ee1a7f295",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77e68307-cfd0-46a8-915e-14c0f20dd353"
                }
              }
            ]
          },
          {
            "id": "d6fda742-22fe-40c6-add4-21e344b80d09",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dde5631d-062d-4929-9250-9b883f6f0762",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8b9af86a-9c89-4b32-8d63-ffc470ebbb3e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b5526969-7c57-45b7-aad5-f8f06f9f7ad7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6baf64ae-2818-4716-9dd6-d385c91dea07",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b125fec-5dfa-4089-a0e0-76f81f3f7664",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da87d0bb-d029-43f2-9987-5ecc0f5087ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a191c06f-cb81-422e-ba3a-30a7dcb94d3b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "203eea64-01db-48df-9027-a31ea7a77c18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed50f7f9-e089-4cfe-ac39-a8e693dc0eb9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37fe4457-7661-4d09-9741-43cc55930777",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8459c690-e09e-4a55-acc6-b7f33d1eb020"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dec6aea5-0264-4450-af5c-2c45cc6186c1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8682d343-7bcc-403a-a63d-ff625c89b31c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cab88084-3a66-4695-b0de-c6cdb86a84ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f3c6476-981e-411b-b28f-16fd452ae282"
            }
          }
        ]
      },
      {
        "id": "eae3dc61-1abc-444f-9fe0-add4ed70f8c8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b3416b1d-12da-44fc-99f2-a57a297282d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8067e34a-b5a3-4050-95c4-81e2c5ae7222",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "283d465f-d7a1-4809-bf66-5c903c592f40",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1197f524-d0db-49c9-8bbf-36b0d13036cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "324884e2-2af7-4667-acff-da5bbb43a3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa82862-ecbf-4bef-9440-73f62dd03b60",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7713b27-6670-4922-87ae-b6a4c5d300fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f34e288e-8360-498b-8eec-4d2b197ddc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640f8219-9472-430e-a7fe-c5ed470cfe19",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969813e4-f2c1-4247-becf-c3abde50b3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df4d28cc-4219-425d-95e1-20dcc9413a8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f91c5d9-2acc-4b91-8058-bb0dd21dbc16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ca4f312-5cd7-4f1e-8d27-e34ce832ae59",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69393fa4-8c47-4d90-8198-96a8a38547e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a219c57-651d-4ef4-8539-84948a14cc18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716da0bf-1900-40d7-9651-52a54672fe66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972451b5-ea5a-4d48-a889-6aeeddb4dd13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a2e7ed10-a3fa-4b02-928a-7389f350befe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8354973-4279-458f-8379-d141dbdf6714",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40060d44-9b6f-4f39-828b-589770a1c25c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "089c1b7d-2dea-4b9d-832f-bb9817923fba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94248a65-858b-4614-8083-2a3314c87961",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7671fea3-691e-4e63-b646-87a181b40bb2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab1e0d4f-9188-4bb4-a01a-5d812d0c2ca4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95a299a4-8a95-4167-877e-f4ce4c4560b2"
            }
          }
        ]
      },
      {
        "id": "7084e8c0-c9cf-4ef3-9dcd-61b935634081",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3ac28693-2968-4274-a831-fc89c5a265bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c30556b9-0867-408a-85f2-dab5a298c4a8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e0cae457-6fcf-40b6-ae6e-a3917ed8191b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83a8136-56a4-4adb-9876-9488d220de47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49480777-af88-45b1-afe5-cab3b7c89555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecb2aee-8236-4f5a-b7bc-801c22af68da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c17cab88-c87e-4f0f-b4d1-09e736b89f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cb9989-865e-4f4e-8757-2d8e983e6686",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40be753d-bd29-407e-bb90-36686f67cf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9305ebe-c0a9-4565-9954-0f4fcb09abb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567fde00-7e90-449f-b1d0-497ac15a23ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a75aecc4-d026-4eea-a89c-f27f2ec93d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e669d7-dc74-4ccd-a430-165b3b4d3e9e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d5491f-75d7-44c0-8846-dc335f28def9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a32098-532e-45b4-a93c-f12a131e434b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8602b1ae-1c0f-4552-955f-c443261c022f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce9ddc21-d754-44ea-bae2-bb04a5ef9f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca68746-b5e1-4688-a374-a2bcae54e761",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bd2cd0-1600-4008-823a-ceda104693dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62cd42a-0465-4c16-86c1-185f2acbcc8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42439279-130c-4691-b25b-aca8647c5332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6683a1a7-2789-4887-ac76-bd62b6a69902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd160c4-802c-4c2e-8d24-276d4fea27fb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcc4df6-0676-4994-b78b-2aab86354f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9aefcf0-f5b3-42db-9382-c0fb67df12f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4dbf8c-1de1-4f04-86b6-5b28a3303b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5966c558-b247-4f3d-a006-ff057bded006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba044899-95cf-4073-8181-945554ebc1ce",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bc48f9-35e6-4fa0-992b-e7cbabaced2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7c0e60-7b99-4f06-bff5-3a8583276d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db4de54-0280-439e-bcb6-50ff120b0db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f58abfc5-980f-49d4-85b3-7bd4cb11f3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e386ea-6b60-42bd-92db-a319506273af",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4f186f-1235-4999-b8e3-d80e33485f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3252cf20-f318-49c1-95d6-ead9b97e76fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbcc008-fd99-439d-a69c-f7de088ece52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee266df6-ad92-43fe-9c5f-ae57e73c0fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d579e2-6504-4317-bd7d-890c5f1a678b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb2dc11-5b1e-44f2-bb3d-f834824fc255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31c311c-4063-49b2-b8ac-a46e963ba74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fc40ae-cdc7-44ba-b382-1139fe622e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45da8255-7b32-4fe9-83d7-3f46fef6b9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4994483-b00e-44e8-b691-701766f496d4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea1cd11-4d2e-4762-bbbe-a03c51193d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b17b3e-4bba-4d10-b9d6-3abffc0d4424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ced3e2-7161-48f8-8dd5-57cb5d912801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d60613c3-cca8-45e7-b781-748b0677a250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b85ccd-a5c4-4928-9f75-843b068224db",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b10835c-acdc-4388-9705-e551d6deb947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71fed3d-7298-41ba-95de-d6ec125bec7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f5e88c-c9f7-416c-b226-d7c73513c8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1b7b29f-5b0a-4d4c-a22b-43e93971a879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921adbe2-0050-4299-877d-2067251d03f8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fc5604-1934-49cb-8735-5189a319490f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9c80d5-091b-4809-a016-d908ade67384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3f6e40-c316-48a0-8552-ebeb5c521267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "198a60d8-3fdd-4eda-a7b6-4caa09e109b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a55e44d-b36f-4c65-bf81-9822578c3da1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec06876-38a3-47ec-bb66-1e630f73638b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887efd6a-90e3-4daa-9a0f-4bcf59bf014f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44ba3dc-e4d2-475d-963b-aa60e528b7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2612f90-6d15-408c-b314-b82767a7d195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82ba9b8-8827-4417-9a62-8411ee2945f1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc01f9e3-9fc5-4a3b-b5e1-6a4ae1ad91dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aaaafa5-f6b3-470c-af95-e771c2c803f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e224f0-20b8-41b6-8205-3b61e3945511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab0f0cf9-e84b-44b4-ba46-c5db7ea01ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2d632c-7f47-4e67-aab8-4a56bdfb2146",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58831dc-24a7-4744-9b1a-d3dd4fbf6391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6abd7b-7e33-4331-8ff9-286674682956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cef3fc-0283-444c-9e3b-48774e3ced6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9a51e55-175c-4fa6-9fb4-d58f215efade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91252b7d-26c7-405d-9511-0beb7e3cafe3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbfb3f3-15ee-406d-8210-82d0d233cc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb50a626-0065-4a95-b9a3-50831ee39d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23aec5b0-4e75-4f16-b71b-a01bf6b13742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "005a3ff9-e056-400a-80ff-dbf10f96d15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0b05a5-746e-4c61-b44e-418d8e3ea704",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6ccd88-3af0-497d-9ee6-56d55c0603fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f35cb5b-2a08-4459-bec4-d49ead2e94d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e40553c-9792-480e-9303-08a2a02a586d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0985370a-cbd9-46e7-bcd8-0441a9693582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2170f6d6-88e4-4dda-bec3-6e73c44f986c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5987a8c9-3318-4b76-a4d3-201e3296765f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7a4817-9a39-4344-b250-965de0fdf3b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d89a54d-e24e-473b-a6c5-9c6ccc406e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2a9ced7-df4f-4aa2-a816-27db44a69a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac1a38e-91b4-49f7-8219-1d0f281ce258",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea1571b-6454-4051-b886-83001599bd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c11591-1be7-4b72-a8f8-87e1e675e410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bb9b50-08d9-4b3f-8eae-3893a8ad7f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dccaa8-23b0-457a-9874-d29a56acc2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18163ca5-be7c-41ff-8dcf-43ee99044846",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcb973b-95f6-4e8e-8922-fc49be02479d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6076f93e-5e0c-4b7b-8c3a-1657f2a5268b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10346a2a-94f5-4c96-9a71-88892c18d9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bd198c-398e-4654-8b3b-2e08a45d846e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468ed8d0-ab74-4973-8cc9-799643e6ac52",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f693fb6b-e161-4ce9-9cfd-ace21b72cdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ef1437-0247-4ed1-a07a-0f6769a25d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf16a10-6e76-411c-97c8-cd8cc60fdd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7650376e-93e1-4965-b2e2-d8209c19bf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09927fe3-0162-4b6b-9b15-d3b4cccc0fac",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63e52e3-e58a-41eb-8519-8f63f1a5982e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade3e58c-5c49-4421-b104-5e2e2dcd54eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82438f87-8ab1-428e-a71d-52415e309124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fef7ac8e-9e1e-4298-a468-7bd6c8f28c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e971e9a-2597-4fdb-892f-07989e4eb8cc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e541492-a78f-41de-9f8d-0ad57ff52a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d5b775-5679-486d-86f9-5b008c4d3379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1ad796-29aa-4cd5-9ea1-310fcc070d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa484b1-adad-43d2-a0ae-15add7f33274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1970b1-7a2a-486a-9c57-b09b9971ab4c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2ed0cf-10fa-4b1f-8823-c0483f98dbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed37762c-66fc-48b5-a68c-a7a04e1765e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8fd9b0-afc7-4e49-bacc-9a3cd812b450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "923072bd-f4a7-40a9-8194-8ec8eeb0436a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a2483e-2d4e-4511-b8ec-a6e06c0258d2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9724cb0a-2d3b-4c13-9c9f-1eed18afcae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c070d572-cf76-45c5-9343-9f2e81d30e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f853793-75f3-45ab-871a-2890446ec494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "262a7b04-02d3-4c36-acd0-e910fc9fd95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f511b1c-fbc4-4b51-8fc3-f51954c28adb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740dc3e1-1e13-4b92-b54b-4232f233db71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65a66c1-1b9e-441e-b030-7c016ff11fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c9def4-d13a-40a6-af41-e737df74a341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c712225f-78eb-4689-b872-b6a4bf7a2006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e61aed4-3b4e-4b80-938d-08a6ca4a8157",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f285f073-ddd8-479b-83ec-b8e044e31bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a060abf6-e410-4c3f-b024-ac4217443bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312819c2-c1ab-48d7-babd-52adcd7b5360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "290b3c22-8a52-472e-abc9-ffdca728794e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28afd759-d5a4-4237-acaa-c210dc2b3a3c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b132dc09-c57f-455e-9a69-727a6a1e44cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22232f6-b329-4823-bec1-cb1b8d06706b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71b5e64-a8b4-4eff-9c46-5b6f391f5aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbd2b00-488d-482b-a837-9509f1defe90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82464f37-b4e6-4cd2-ab9b-9dec64db09d1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce29619-1096-4efa-94bc-8c17a6b59f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb688503-99c3-426b-a091-f8ba58b14275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905c2fd5-bf4c-42c9-b211-17f0ca042d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "860be9af-29f0-483b-a7ba-82dae1789cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9488b4f0-ea8c-4680-a337-a9f73e1d362d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e8a238-4223-4e8a-9ba7-0d19481ae333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c590a513-5ef3-45dc-914c-dd56b8d1e47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d2b1e2-e480-460a-8c49-bdc47c8f661f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0344b77-54bf-4687-903f-466717c3344e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38a100b-f737-4435-b0d3-d3ed75d8a123",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dc7300-97c1-4dbf-ae93-b683464bef0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4ac2a7-4681-4744-bd37-d075c9e3fe91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcba2aa-0658-4368-8319-1a5799299ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7765ab-a53d-44c1-8eb7-5ce2daafef62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5ca6cf-0766-435f-9e2f-a78605487057",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceec6958-828a-4f4d-85bb-15d3c623b10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df06de08-215c-4d34-8541-b06cca79ef89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f955eba8-5849-4724-b4b8-ec71eef2d33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9e0f22-db16-41d3-ac90-ca3a82dd9522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb356447-2f79-4fdd-b328-c577e7cf2b65",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba70a2af-01a2-4968-8913-6e78ebca4052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac256376-2d4d-47c0-a7d9-6bb8f5bda273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892b61d4-daf5-451a-95ba-94ab8d5f40c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26eaf2c3-560d-49fc-b6ae-0fdaa1c3d754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1e3357-1a23-4105-bf9e-ca74c6ab94a3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b69a6d3-9f0a-48c6-ad70-b5b9bbdd0ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f03ee16-5080-40c2-9a7c-454ed6b25444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51c3abf-4b07-4dae-a925-ec1f1167ef15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84bacd13-bebf-45f3-8b2d-31bab3e2a549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2c45e5-a068-46ba-bc00-65560b1997aa",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3755e5-5d29-4f36-be6d-2c743deca66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6c34bf-7f88-4351-82b1-f8f0f6acf83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5555d1df-1185-49f5-8d23-12002cd5eb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9367d6-0874-4d9f-83f7-974637af6fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50ca428-37e9-4120-b335-a84d92cce0ab",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c2506e-a240-47eb-9170-daae6a5f08de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d019a24-169b-4bbd-9e6c-2dee8b39a8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6dc0a1-a802-4c21-bbba-3b2bcf2c71bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc0f966-5804-4b59-baa1-062bbe2d298b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edfcd4a-d36b-4eaa-bc55-5a28e677ee85",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684a0820-63e9-4e58-ad51-c100a4b06f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63ec6db4-854e-4eeb-b68c-3ca18ecbbc9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67492319-d138-424c-b611-35b990a62651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b26a2c9-3be2-4aa4-a7cf-fe3991122732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce7094d-f22d-4d0c-8a28-f4b7ebbe1dad",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a170ca5-4727-4f3c-97ab-49aad65625e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2936929d-bb9c-44b8-b422-76eec7bea8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e938c3b-b7e4-4d79-a2c0-3a1aed34aa40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f50f828b-1cbb-44f9-ad7f-b7f301ec16ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e810cb-85b6-4b0f-9b87-ea5490f810f9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cecd2b-4497-4322-a365-cb245f2de98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79dc445a-2d73-4e1b-b48c-35a5a98974e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02dc4cd-ca65-427d-b560-6ea4485c6f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "83c7e066-6139-4cf5-a12b-0c9946181e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62f1ce9-2ad5-42a0-925d-3440aa3ba06e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6384cb01-aca2-4263-8c72-2e4ff0e6d68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07e36f4-c4a6-478b-9055-e713d3503fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c614684-77b0-418a-8c8c-061aa132c303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4f2428-aac9-4c9f-9d80-446123546f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc6082d-d5f4-498b-86a4-7cfb08d3d3af",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba791e1-b930-4cb3-b56f-8c68b23341c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d10d21-f00b-4d25-9090-f3522036657b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd5a6ff-0bdd-4e34-8a80-9bd7e78f34e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3139fc-ed57-4b82-a354-c3ab612e8d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfe61fe-ee11-40d3-b6a2-258ae4b852dc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7352b6-4e25-477a-b166-7066253116bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5730b7-0ce2-4713-bdaf-800e62e12b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d0a352-36b7-4e90-873f-993fe21450b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "12f7400a-c6d8-4b0e-9780-63a36cf0ea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c5ebac-8b7e-41c8-9378-f3e7e8c7da5c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8059bea-ff10-4a68-b1d9-f3891aff96b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32725dfe-0ff4-4286-adf2-df4850899bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f797c3-8b7c-4bcc-abcf-2d8eaa746e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "04ce57c0-0c73-4ed6-b456-60ea666791a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c89ecb2-6da9-4003-9002-24addbc3ce0d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86eae2c-52c6-4a92-a49f-46c759b06ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9719309e-327e-4172-88e7-67327d213787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afe9f94-e323-474a-8b05-159d817e58aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3be9fd3-baf2-4fe5-8c82-8b5f957706c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac1f405-58b1-43a3-b816-e90708b310a3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecaddcf-119a-4f77-8757-e413b295b213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec69937-bd35-4f7f-abe6-a78c63e0ff9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845af5f0-22e4-431f-a65a-c4b879e37fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad1fed9-0bc0-4872-8fc5-d3e3b5417aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ae77e9-78f7-499e-b8f7-fbe9695ee247",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c7430b-4e0f-44a8-8d6c-b5339fb46aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60326418-7447-4eb7-8281-b433b07c9d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1292e38b-53c0-4ba0-90e3-ad3f8f4e3841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3124e09-40f7-4f4c-87ea-cd2063b160f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be59c68b-495d-46d0-b419-f4f62fe1fa52",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9def1e1-803c-4669-a8a4-339c6e4910b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0affdd41-bfcd-4071-b7ac-915fc9d2d3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae5829e-2c23-4734-a430-476977e513ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f62cbf1-1815-4839-a7d6-b619171b0386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb1c484-6514-4e13-b627-476fac4c60fe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f6877d-2beb-4e3a-ba1f-80e9b6393aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df991bc6-2a3d-4ad0-aefa-6ddb677cc59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebda5ae4-eab9-4b94-9952-6320c8f070eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab061d9-7080-4ae3-82e5-da8f896a322a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a410bbf5-4813-4117-9b0e-3aca03fc53ca",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd233a18-450a-48fb-b547-79b391cad9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832df027-8928-4127-bcf6-60d35729c1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1758e2-c013-4be0-b268-eaf8ee3aac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70aaff45-be94-4b9a-867b-f06dbeb6a581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8adc90c-2f53-4db9-a4c3-c859663af3ea",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87720056-ce55-40d4-9ee0-59a7716ebfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16de674-60f4-447e-963d-8dacf1cbeb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9ee375-7881-4218-b83c-addfbe2e3f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4409dfb7-9e3c-4911-81f7-67147ec5ac24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa108d76-3bfb-4578-b1c4-21ab2c47a135",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2153d2e7-f9d1-45fb-adaa-66767b56488a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fa3752-0c54-49af-bf69-a67a4ccca2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2873bb60-d500-48ea-81e8-9d4002ceda0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "618c59a1-4307-4b6e-b2c7-d8e31cd0220c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4860b74-844d-4eef-8cf2-8c3215d6f718",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e709d075-1241-4a31-8acb-f9c8be3d44cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b461d0c0-2d11-4d37-b859-8e5f62c14da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67f6beb-ef20-4add-a6a4-d222b7bb9e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "da07405a-c8ae-4147-873a-cff317cfe220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdda548-0010-45c8-a0e3-bf403b7d0be5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708b00bc-996c-46df-a33d-91e898c19c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6027efd7-ce67-4b5f-9fd2-e412d0905a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d377e78-0be7-4911-bfb1-be2e94bdd4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b48e764-efb9-4390-82cf-417c9643d798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de313d8d-4dc1-46ea-8837-d6e6b9f308e2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00942d8-3a34-410d-8b31-fb2ec2673ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4bb00a-4ddf-400a-bea7-a6b6b87d7827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d40603-69dc-438a-b937-d4212e3fd183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe45ca5-e154-4504-9177-331d05c30c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d600cec-0d78-4a50-a5e3-70d25b3b8e28",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c3c826-915f-4253-902f-741449f049ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39404594-4e68-425f-acc4-65fc51b34496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c44fb94-ab76-4990-a2b0-326a468488b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5feb7e22-6a57-4086-8d5e-65c8bddf9890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac4cef4-bf66-42fa-a98f-a459170e30d8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f67ad40-0319-4fb7-a67a-e7ac91ba0564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a72d9f-e027-405a-9603-9328b1844e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc69c954-5387-482d-bb32-bb2bad2eddb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a143b61f-9d5d-4659-aaba-30361c18e3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba082ec-c110-4814-b780-8066f38fdbf6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeb97f8-f544-449a-be1e-39315d322cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318e3d74-11f5-45dd-ac30-566cccb9d4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cbcbb8-724b-4275-b54d-5b4c9f9d1db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e696a6-bbe9-4014-90d8-362fcb5c11e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bcfe07-d2b1-47f4-9084-94ff61391466",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91f40f7-3f45-4ef3-bd07-0b128df0d8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6548a2-63d3-44c1-8345-ea0b5ee21c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01da2a85-f9b1-4a25-be0e-3fca0411f4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "76226103-97e7-47eb-8aae-ff6d72d89d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e3d9bc-5701-4f04-ac2c-9eefff2fd1f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735d2132-cc7b-41d4-aacb-77ea10a35c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fb44a4-172c-4f14-a664-948a2883751a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0609d4-05e7-4cb3-b49b-3216a1f2d28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6e8cb0-6fc4-4196-a787-f0dfa6a4118c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c58b7d5-5489-4f3a-96fe-3371c5b8e174",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe91e301-e7fe-4278-82ef-13804c077e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381e77b3-e1a7-4b47-8f34-b0e0c772d2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673cdeeb-3453-4394-8d9f-175f23401ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "81445a86-d8e8-4ca1-b2ab-feb538a9ece3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc936a63-e277-4744-b999-5c3e755eab40",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13e71e7-85ae-488c-803e-8d85a6d73c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde87ee6-d612-4341-958b-6d80d61c891e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b12afc0-1fac-4dc0-8bf0-ff273462ec90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8d4fce-150d-4c25-96b1-fead038e5991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccd2af8-d14c-49e2-a961-bd2c53d975eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65c5698-72c3-4b28-a610-ea71027ac829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64ff92f-cef3-4de7-9d47-5d16716dd45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbbde55-36c7-43f6-bc8d-26fd30ffd11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "271877a0-912c-4f4f-b123-c178c17da709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0075d4e0-92c9-4dfb-b6eb-c1d1f9490bff",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080d5eb8-f2a5-4b0e-971b-0105ddf49348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d0cffb-4402-4621-a427-6366a160ec88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3857a2-c0d6-45bc-afa1-6e35017bed93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "244cdc2a-6c52-4694-ab6e-2d3fe79954df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad2dd54-71df-4d1e-a67e-ec54aedd2bff",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a344979-318d-4f67-910e-42ed4da0f305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31aca705-f04d-4737-8bc7-1d59e335828f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a16d36-0e2b-4db2-9459-82c95e2361ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d21deb2-f6e5-4ebd-b8ae-23bdff16799c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba8c16d-4071-4e0a-baca-6400b35dde40",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8637990-bc35-41e1-9125-35123b65a5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3801767f-9f76-439d-adcb-48f07a949a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9068d904-3551-452d-bdd6-0f459f28c1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7816ab3-62e4-43e3-89bf-148e3447e7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1dbeb7-719e-453b-8632-47220ee67e6f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6412d974-1765-445a-b781-51cde35c15f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ea1868-c80f-4cc6-a91f-0cd8747c1738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbee474-d827-4576-a87d-5e7cb4618a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b716f449-2b8d-4781-b714-a81bf9a6c5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad2cef8-e87f-4ee0-88ff-d604548deeb2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17abf3e0-2839-4786-8bf9-98e0d956c8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17c52df-a05c-4fa0-96b3-9d6c352175a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d875ffd-65a7-4f40-943a-33c852cb13b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "411767dd-4038-4951-95b8-89a1aafa72a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a66b5b7-b8aa-4233-b2f0-9cdd461963c3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2210083-ae71-429e-ad6c-51711acf008f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed201bc-4cfa-4346-bce8-ef21052092fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3a8ebc-18d0-42d4-a405-b373899ad08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b0f3c3-820c-40a8-903f-84bd0c199356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8361e7-334f-415a-910d-0c0744513005",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1153063a-be80-4977-9780-8cc49a6116c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f89da9-f3fe-4189-9504-2ba9dddbfebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0dc99a-7b83-4881-bfb8-633d127160fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e19d8a-6ca1-4ba7-93c7-a1ca26527aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350751de-3cc4-4077-bba4-054f55c6866c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af163fbf-2492-4264-ae72-23bd7955ef9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05226ee6-09d5-45a9-827c-794c22aa2a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852178d7-4c9f-4ba0-a3dd-d91b71f5a1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2acf5255-73d5-4dcb-8a9d-e9eb75daeade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1f8865-3673-4ec9-985b-cc266105ac76",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d7938c-4015-493c-a900-f52feced75d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b5c468-ef64-4173-a35c-a2c8a70bd871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c209bf4b-f04a-4ba3-9917-8071cdb1bc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0ecb32-9993-4102-9120-271f9938ad0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9aeffb3-a74b-4d67-b3e7-71d0aa40b4dd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257f25e8-beaa-4b28-8bd7-803dd63332fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d855968b-7bb0-4152-a5a2-c1515ed25f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b52fe3-3013-445e-adcc-28f48ef2f61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9783a7-db6e-4f4d-9ca5-85d579c92295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ab41ec-7d99-428d-9e1b-413d088767e3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bd03dc-3157-40b8-ac6c-4203c14bdda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee91156a-f1f0-4db7-8ba4-8c2fcc2eba90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea03374-49bc-4077-8887-d03c45fc93ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "faadba71-b79d-4509-b22b-e88e3d533834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a71073-6224-4013-ad23-6c8d469b1ef5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6a5657-1408-4b26-bea4-d146aca802ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c02fb9-f79a-4bc6-a242-c1aaf75a3b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a141fa-e30b-479a-b0bf-f1cb9297f27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8af40eb3-6f52-4978-b57c-c520681844cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffb8b1e-20b2-459c-95c1-5f9e39a1cdd1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1843f0-1477-47ec-8c2a-792c0b5bd736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a6d6f4-2365-4957-9d7b-f308e94a5a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135369b8-8179-451a-a256-093e5b8d311f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eae8f60d-5301-4cae-8d51-61008002f238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aebbc5b-da35-48b4-9903-65b80946d920",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700d658b-7f02-48b3-81fb-01186e509707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb4dd21-94dd-4fdb-903a-aebc26575bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96660058-baa8-4de0-a8bc-f02c1a2bfeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "949b3524-2386-48ec-8145-4401bcba0e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b416a41-ff68-4fb4-97e3-a31cf6eb0104",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3394ff27-d2d6-46b8-90e8-73945f25af7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0a2379-98f8-417c-b0d9-1c794fe1cdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614c5292-72a7-4051-9ecc-9987b0490b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d09bf49f-6638-401b-9446-b8e3956ea1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b10310-4835-46e5-90fc-e98bf91046f7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367cb336-1268-415b-ad7c-788469f19631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21dbfab5-e948-4fce-a0af-7d4bd06bb1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99bff37-2ff7-4758-b789-0b0d8aa44801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bb1afc-f89e-4b81-b174-c070a858427b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fe1929-1b5d-490c-b229-4b643d927765",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5891c0-0b24-4a3b-89dd-e5140228dc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169d8404-8476-4b69-85d7-de9f174d0626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96662e69-1e62-4b38-b3bd-1e624ef4144a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1339a5ce-4843-4581-8a5f-0bcc12cce484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bf9e57-a646-42c0-86b2-87443c43c7c7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1ee5e2-100d-4221-be15-1e6af6129511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df182b1f-c8f4-43a3-9e7e-75f49be5a8fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3995d50a-ab59-4e3f-a35c-2d0881370139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60d05a30-e951-4038-a388-56ebbe0fc473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde8f282-847c-47c3-ada4-58959e71959b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78a4650-77ab-450d-9bff-3ba1e4b1a063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59bada32-1291-4b01-926d-d4a7f8b78310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5978d966-c350-43da-b3f2-8a9be12ce723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7bef64-9aaa-478d-9ca1-647635783504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4571472b-5c90-4bf9-a1c9-d0af30af7d80",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7043202-9bbc-4019-938b-1dba91deb735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b44e62-1fcd-4e1b-8dd6-72f30e2ddeae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e9ec6e-3c57-4724-b771-edb9b0c362c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2465506-c32d-4846-ac96-5bc54e7a1716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436236c8-5137-4711-9010-d1a1dc6b33cc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1629968f-cf2a-4ec3-950e-57c2dc42165e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2038978f-4eeb-4367-bbff-b97697968ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6491143-c0d0-43c7-bb7c-2c308d989854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3d073e-7a77-4ff2-9928-34ca03a78612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ef6d08-2127-4d78-8b4f-681cd470df0d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c457f7-d64e-4794-a2d4-e8c6b34a09a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b49e06-d08d-46a7-8af6-d171eb36ce12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bbc7ee-442b-4ed4-8e20-f02cb957f7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c53687c-543d-4564-a621-62ca0f4ff7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa17b66c-c543-4532-9ce6-79e546bb191c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e569cc99-d7f9-4894-9a17-ef316b11ffd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af96f607-4913-4447-8018-2930eefe656b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd73f3f-4269-46a8-ab55-ccc19f6e0530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8679a277-9887-4d89-bacc-302e4509a76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a90ea0-d204-4334-bb11-e042aa6cf354",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0771480f-0eda-4bbf-9a5f-7609f348c1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f00c8dd-8bff-4809-8ac8-1f6ffa19c1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943c40de-4c54-47ee-9b8d-a9b06aa34348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3730ff-688a-4124-9c42-aeebb9cb6648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831f50e8-6c2f-4f99-bd04-de807fee2e0a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f5f1ec-004e-487e-8da0-876ab6d6ccc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47c294f-ce1a-4477-b2e4-0a10684061fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae8e47c-e3fa-4e6a-a2bd-f18a9fc85302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f26e8094-4a50-4b79-8677-d6929d275d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d1b894-5be6-4b16-afee-ec9d1057ee94",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7ee9f9-a4b5-4a20-b6f6-b9fece166cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3d17d4-47d2-471b-9579-9086c663bb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c585dfeb-1dfb-43fa-b754-10ac80b677cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f4dbff-7c3f-485f-b614-dc10cfef8595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dd5a66-ad18-418e-bbfc-816d490bb48e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901e0798-86b2-448b-8cc1-2a7a3c5dd779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7704e6f8-227c-4775-91b3-9d2d07f50d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f9e07c-b6e2-41ae-ba76-9cc375a2e311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5ff00c-c445-4503-bf8c-6d1736feebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3709d23a-e944-4469-a465-a3a841287cbf",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0117c33f-e444-4440-aa8b-be1ec7717907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27511f77-184b-4596-9935-df2df5276e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d6d499-547f-48dd-b63c-a564379c5532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5beb7597-b92f-4dca-a08e-f195459ce963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ab28b4-ba34-40cb-9be0-cff57aef2e32",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50773e89-bac1-4610-8b2c-7b4827fd7287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7391e794-91e0-4bd4-8fe6-611cbd28d8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba49b78-f83b-4067-aef1-d9f44807a4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8192610-2b3b-4acb-bf37-eb343b7544f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b176ba73-9024-4e82-92df-cb98b95c7f71",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86672ee7-9946-4425-9781-fbf4dc073ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7437220d-7805-42a5-a845-8f582c200fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0a1e39-dfb6-4b87-ba6c-03c27307503b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "073b91c9-ade9-4523-bd0e-a21c904c0c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23193ec1-e829-491c-8d7e-859eaa788575",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de9461e-9fcb-4d1b-925b-2f88fe54d9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7921d398-7ea7-4903-ab7b-59a584be4fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaa03f3-21e6-4662-9a77-128940e58b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc011f97-713a-4199-a3ec-fd3847eea341"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da44faef-c3ca-4490-9c87-74a7caf2ddc8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad759b53-54d1-4bdc-ae74-1d0fc627e6ba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65de75ba-2e67-49e0-9b97-75ec681b29db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6fbc0e7-e787-470c-bf89-4a2fda99fc3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103744c7-1f1a-4390-9270-c766e88c9aec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c9221f7-9767-41c7-852c-f0585e50de91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5505d902-e796-4c82-83c4-24454f18020e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2c8c583-3a4a-4c9d-83dc-a3b6d3071a75"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0bd2a07-6691-4491-b057-a5c72ace984d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b7b72d8-d10e-4122-8ff9-fc73836664b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31f66d62-d3ab-425f-bdb8-81d95184dc6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea8ece3d-090d-471c-a722-a5d578e7144c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "761b249c-b2a1-4694-82ff-5e6d68e121d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56eca7b5-156b-495b-8760-156c980044ae"
                }
              }
            ]
          },
          {
            "id": "d179e444-465f-4f43-9b65-eeb25294dab8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "201459d6-4600-4ed9-8e34-45a4513cbbb1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d799679c-7727-482a-98c9-658de6472d65",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcb24a6-abed-45ba-808c-3e0b8021a626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "209316cf-2b75-42b9-8bef-8d6741618056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df06996-b6e9-4443-974d-87453a6d2953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b92fff1-c0c7-4d86-9cdd-f733aacc3a2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "22a44067-7490-45e8-9d2c-de1b63d0f31c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e2f5224-b756-44a9-a3b5-d5db508a8fd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50f1a97c-006c-463c-bc62-0c89c22b8356"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1cda607-5c35-45f9-bc59-653d0e956a63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b5533ee-bc9c-4976-a760-16877ab2533c"
                    }
                  }
                ]
              },
              {
                "id": "32858378-a9f3-47df-b493-0cb53439a339",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "010786a4-d6f7-4b20-9bfc-b665d1a35090",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fef62f57-44fd-4121-ade2-a62ca7e58829"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7f090ef-7779-423b-8f1c-7719628898fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0d5f798-7a52-4138-933c-6174715e684e"
                    }
                  }
                ]
              },
              {
                "id": "66fd39d1-2dce-4ba5-b7b1-8e3a90306934",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1741357b-fe93-44ed-909c-b2bb7125b23b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d754db00-3403-4ecc-8989-af12da728d7d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4255b50-6909-425d-94c2-03b197d3f449",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "562c14e4-c239-4712-875f-e7265c9fb146"
                    }
                  }
                ]
              },
              {
                "id": "7f063718-54c1-45e1-80db-49392150b32e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5f881a4-99b0-4cd6-a57f-9650a1aaa981",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8495691b-f7f8-4885-a6ab-e6fcfb13edad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c30dae0c-7e6f-4fe6-a152-f9e7e8208ccf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b88b9d4c-5d5a-439d-bd3b-e9f182a7e7b1"
                    }
                  }
                ]
              },
              {
                "id": "a15b7454-498d-4502-8e1f-77a84fb3f5a8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d09b55b7-3e11-45d4-84bc-e89ddb4031a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c41f2424-a2a4-4fbe-907a-2a95f6a2ec40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b73784dd-9c0e-4443-82e8-ba3c0a23f19b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "73a90b92-73f8-4f0e-9283-2e78b642fa59"
                    }
                  }
                ]
              },
              {
                "id": "c2daffc2-bcc5-49c8-9d21-f45782dcd4b5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1040fc31-acfe-48b9-87e2-3701a09a1054",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41d66190-87f3-4eaa-8a47-69c4fb3fdc6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1790f86-1916-4b11-aa6c-f425a65abfb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7b463e60-0b27-4546-be51-4ab16e30d06d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f8932a4a-0e06-4014-935c-52a0f6c28ef6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "216f5389-038e-4ab3-99e7-d4e7945b02ae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d95e5db-f1b0-49d5-bfdd-81d6a9cc5139",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cebd614b-827a-4378-a4a4-469b521f4095"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2507483-cea1-4756-8933-7e8976cf54e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2a5d90ce-edda-4d8f-8804-2755e0e8e240"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "176251c0-5549-4c05-aa5a-482fcd320cef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a464151-9c65-4aa1-a02b-ea44fc333f2c"
            }
          }
        ]
      },
      {
        "id": "fc9033bd-dcc0-4c9e-ba18-dc24e423485f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2d68501c-346c-436d-91d6-313299e98aa8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b823532-82af-405f-b349-08582fdee148",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2797fe73-4bca-4fdd-bcf0-b5c6a13befff",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aeac51e-216e-40b7-899c-92f0141109fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792dfa88-fb19-4515-b881-67b2c1d0f7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73484d5e-5c57-420b-a17b-e0957519328a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b81864-2347-43f1-bf30-674c7d0ba97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2880ca-e92e-44b3-8995-9028083309de",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1324c1-f586-4379-86f9-2853718a0991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0abaeb8-1ffd-4d15-8424-0c83f644ed31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127db415-6a82-49a1-8519-a580f5fbb454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fab749-172d-4c5e-8290-e98ae43df328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75e0c14-9202-48ec-bb93-53ea14ee23ad",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369668e8-d2c3-49ad-98d5-eba46b007cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b525fb-ecc3-4e4c-bb8a-63a26a741bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7c7e3d-a2b2-4778-9a48-1b2858972474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e507e5d7-7969-45c2-9164-0952f94e033e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fa065a-e4c3-413c-a8da-7519ef22ee9c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9bede2-4d1e-42ac-832d-dbac73387abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04112202-c1db-4ae7-8619-88984d6fcfec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577b797b-2db0-4f22-b950-34cc9ce8b13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35ee2ce0-7c37-492b-b697-6313532b069b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30eb75c-9829-4ab5-bc96-e96c55428095",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4fd617-9892-4fa0-9735-89e45cbc30b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3123e0db-7a3f-40ca-b50d-acf35b99408e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f528da1-f6d1-441d-87b7-239735de8ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94184676-e6b2-4c1f-97f7-cbbca11f7a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8759ee0d-fe66-4dff-90b1-ef7a6db0884f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d249d3ba-22c4-46dc-972a-ad793da64233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a069e588-7be8-4767-9f0a-6077ca84cf36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877f8500-f918-4457-9844-05edfe37125a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fedaacfa-fec3-43b3-b47d-5861dc0922db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5413b68b-73c6-4a49-ab46-b17daea14b91",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67866b2c-8872-46b3-a4c5-d85f31b61ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d81fb4-fcd5-42af-b273-e032b71ff873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e36214-d065-4d8e-92af-971b2ff0dccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f27d2fef-65ed-4c00-9ce4-95fa3d2905fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f07bac-5a27-42df-8ebc-68226b14a39d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7b35ea-d30d-4893-bcaf-fde9e92bea42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a5b723-4cdc-4bf3-9e4b-bf4fbe044fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20246855-afa4-4991-809d-53c6a48a94eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83229085-689e-43de-883f-f895ca1d562f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c62e26f-ff29-463b-91de-090c2731534d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1407034e-2ecc-4b19-99a1-95593c88e69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fa9389-d79c-415a-94cc-4833be41ed9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7429a4-df7a-4044-a2ea-2180f6428464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a79b8ef-9b68-4539-b2d1-913708160248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b1f21c-848a-4042-8cc6-3649e1b9498f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4407eb38-6b7a-40f5-8da9-b91c2fcc5d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6d3c19-ee81-4150-8dfd-aaf25bfad148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4230ec0-a226-4725-ab59-74604068a03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "faf19d49-ab31-4a38-86b9-027706e23e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532bac57-c8fa-4070-8ea7-90b3c7e13f87",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664150bd-0854-4e85-8bfe-164baf598741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f9dd6f-f4df-4983-8922-d4ac0f83fc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03afe143-4d94-44bb-9fee-c8ed91b37783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ecaa27-9c1a-4da0-93e6-89af2aa26479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08919499-61a8-4753-93db-73c4b4366e98",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91525227-c737-400b-a1cf-cd704218babe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d457005-bee7-44a2-8375-5fc6af0ab73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1ce7f8-d8bb-4be7-af1d-cd4651c77017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8dd3b3-a4a9-4dc3-9269-14236422b19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f61c35-9b91-4e7b-bfc9-c88b467c9c5c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7017a192-a8af-48df-9643-9714a2e3bac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48f56d2-c372-4b14-9444-8b74f47f0af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22106bb2-5eae-4448-a9b6-2ae8f4319b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c93789-0a89-40ba-ad07-976d83cc7f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba09c4b-696e-4e03-85cf-c34f5dbf4ff1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ede06f0-2e8b-4870-98f0-303eca532aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e95a8b-635e-4b91-a5a0-b668681ca6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa596c9-87f8-466c-8bb0-03fd3a19e586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d7a003-0b6c-4143-a91e-1a2681ec2ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4726d385-bbc7-4032-be6e-e8de664a71ac",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0a6834-0eb7-4ef8-bc69-93a5c865d815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2abf36-f1ba-4f7d-83ad-4847bd91105c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12577dab-f956-4c64-884d-358155004c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f004a456-8646-4b42-a23b-b8543bd8fd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a463d3-314a-4a48-9615-c4feec1b6b2c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c354707e-6fa5-4356-b1ea-a485a0b9d963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9d42d1-5e86-4d32-a5b1-8616ec6df8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436ad754-c931-49b7-8c7e-a992fe4c9424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ea9af6-4736-4bc9-a0c7-9e9c3e03439f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2416166b-7706-478d-be2e-d245fcadd0d1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8354145e-42ea-47f2-827b-539ea15b317d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29f697a-89c3-4fa0-b86b-e182810b7bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09c7b4f-cae7-4195-b277-d451edf518e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4fb001-cda0-4db3-a244-169957163756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4d0be2-5e1f-4fcb-b568-c55d2aa24bb5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d76ad7-81b9-4bb0-9926-7bff7751b5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0838909c-5002-4df0-bea4-91b8c41ff4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281103d9-1359-4cee-82e8-78c283fc69de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc08688-4001-4038-96cb-7c6c28a2000b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084ae6d4-8fa6-4e72-855d-bfa12dc1fc8b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95809804-a0e7-417b-bb36-4b4bb8c9d65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639a5c59-9b15-49ea-a94b-f61236c301bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638eec9a-b4da-48ae-b39f-f1406a934744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "613d9cc9-6908-45ff-b747-6aff5250da2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de170e9-4239-4d72-837b-8f19934d35fb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46912a90-8105-4227-a6be-28d6941bccce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e345029-632b-43a7-984e-6bf305a88aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930d87b4-cbe7-4a26-a7f4-a9ef73eb3455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67da5a73-cf60-45d1-b48a-13a17adcd014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccb9215-8d29-492b-8943-f59a16c28d09",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1775d05-d95d-40ad-b8b0-9edadf7974e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36472714-b53e-4197-83ee-7b0eea4f538b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4f99a6-4e47-41ee-ae00-373c4da9e9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c52515de-23ff-4679-b14f-25caa8ad3e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697e9eec-0986-4b9b-8e23-bd50c8a41594",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75205dd-46f1-41d7-9507-967b529cb505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd09fe3-d472-4276-ae3e-e83d1c157b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0734ff-b230-47fb-897d-52b94a9c22d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "677a2865-46f9-489b-ad92-5ebba82cde67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90ea8cd-171b-46c3-94c4-437ff8d2e698",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508da565-aaf6-45be-af0a-8ea10ddb742d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd70712b-6731-4633-b970-64de48e1ae42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0602741-6568-423f-ab35-1723a73ee3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0978aca7-7adb-4164-aaef-fa699499a543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219c2db3-22c5-4535-93e7-bd1d240ea6fd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec9a9be-e7be-42ea-8794-9870f2273f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a864b2-a02b-43d2-96b1-9fd2073510f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b55e909-cb3d-4d19-b985-68fba82fc11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ca6a4d-37b3-452f-96e3-7cf9bb6cd227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec037d1-39c7-4e1e-914c-06b1e474008a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae99eb7-7aaf-436d-bc63-54d4aa0872ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9608101-54bc-4e5d-bd95-3f6a530e55d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecd2a8a-666b-45f9-9b3c-3a4c6bf58813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21f03c05-440f-4d60-b6d0-4e72ccb71ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55d0cb6-e7dc-4334-bbee-f4014fab6fd4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5fa541-875d-4762-a376-71d26ee730bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee8b851-d9be-4de2-aab0-470604f0025f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f43839-e03c-450e-9b9e-1426e4e0d014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb33c59-9a81-4cf3-a9df-672590884f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa0f035-b9c6-4959-beff-f1f491c4fcdf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4746dfb1-f9bc-4eb8-bd33-d5b845276dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4085b6e9-b943-4384-bb8b-b32332273bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5340db-e589-4745-9d50-fa187e8a2029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93be9437-10e3-421b-a324-b9db0104e4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19676123-5831-4013-98f8-5ed472bf571e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f1022c-665e-487b-8827-471ad10b5376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7812732-0e51-487e-b642-68d5789c3da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaf41ad-a41e-46fd-9d4d-2c990f668c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38e5c623-159c-4898-b945-1b5984fa253e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed5b43c-2e33-444d-8aed-a16014530d48",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28378374-8e09-44db-9404-555f6c3cd947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a31c25-6e29-4986-ac53-1d970b2e057e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27669563-79db-4197-854b-90f9f15759b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2451c96-01bb-4d7d-90a6-b6d0ee8187d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0701244f-afd4-4e1c-9461-87b29255b2dd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e1c525-6027-49f0-918a-17d738648de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed58f2c-b786-4fe4-841f-ba1f33a8a9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da70c95-b45a-4788-8f1a-18c4068e6b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c857fe98-824e-4e78-ae50-b5287f6f7896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd83a1e9-c4f9-4812-933f-e4c787462e09",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293a215d-b68f-43ca-8cc9-87d1d3577d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c89cc8-571c-4dfe-9f49-f4f76b13a0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73128bb-43ca-488a-a94f-7a6333d132ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f35a9484-30d0-42ac-bbe7-7413f203a073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493e1136-923c-4f9c-95dd-148f3adb0564",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bbec12-0e24-4a72-82a2-582f408d348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787cfd2a-190c-4abd-b4ce-2c006052881d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8623e049-c567-4fb8-a11a-d2ac2554adeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbb8bba-60a1-4114-a6ce-59cf59a57f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c88e7cc-d033-42f3-893c-746b199ee8cc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6161c67d-dc48-4d4d-913d-6a83e4787fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704fe5b0-915e-42b1-a196-a07fcac4533c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee1440c-897a-4def-a07a-abd4124e6c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b971049-4a9a-428f-8eb1-40099cc5ecbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bf437c-264f-42bd-9046-0ab64468a8e9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e1af34-479a-4b43-bef3-f1a155bae034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005e3fcc-9dbc-4aac-a63f-6b962e58a4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05fd361-b31c-48fe-9112-5ee1e372deeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f10639b0-74d1-4266-a48c-8136ae5c15a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69757198-1f6a-41a6-9361-5cc93749a84d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1426e9e0-5792-4b70-91ae-9703f0fafc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabd8d51-ab88-457c-b9e7-a71848ce2981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f985e0-0487-4e35-83b1-9213dac5b463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd66628e-34b9-494d-8859-99bfb6aa3dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b34e80-6e77-49d5-aa21-70f9dab4b384",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17ba525-9967-4d71-af70-81aacb26d0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604e510d-7000-440b-afc4-5c3a7183aef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd430ed-8dc8-41cf-bf65-49fa59d9c10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03a1b47c-7559-4b08-98fa-abc002ae4863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f693c1-75a3-454c-9ccc-8138e33a59cf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a35c25-f906-4d6d-b5ca-41fb3efcf95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607a7c87-d737-48b3-adb9-d0afd2ee5d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cffa9d-0c54-4359-83f2-7e93a347c166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c70765fe-34c8-44b3-be76-54194f64e22d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e36befa7-b3f1-4173-bd77-f4a996705e1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45839ff2-417b-49e1-8764-0b6faa0732bf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbe4755-e77b-4bba-8759-f2ab6cdf3870",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3b826d-dc18-42f3-a6c2-ec2abf0c2203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598f8bd6-d720-413d-9e9c-123fd0794fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6068cd93-1094-4258-bfba-05bd8f38b079"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62b41307-e11e-4c6f-92d1-c24797d3d72c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bcc1a08-7011-4874-a021-8fc076942a83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bee5d124-5ddf-4fac-b235-b60ad75299a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1983530-2849-4ad7-a241-6fd7510c14d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60824259-d07f-456d-a95b-265f9249785b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67e3f2bf-769e-471c-9f0f-d4bbb3b72a44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d68458a-b282-4ee2-abcf-ab1831b7479f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc4237c5-bb51-4f58-bb09-bca91b215e02"
            }
          }
        ]
      },
      {
        "id": "c17d550b-402f-4756-9e15-6caa628efac2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "21356f46-384e-4786-8549-32437f1fc272",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32cc6df4-623d-494e-8efb-0b553a4860a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f6405035-62ef-493c-86b2-2ad26c25d60e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1694ebe-8a6e-4829-bad2-71c5f6a97177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8d3a4e-281f-4010-b92a-23f3cddfa358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a41369-af85-4106-879e-5d952f8b2594",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ca0580-7032-44c9-aaf7-ea0d72d7ab43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935650f5-6890-42f6-8c81-74f9b86c1f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf134e35-c726-4666-bdc2-3aedcf6289c8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dbd392-5e14-4e77-ad8c-bd2fa269ee53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b288a0-5e68-443d-aec6-d20d9d210ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf752b41-4d97-467a-ada0-60c92b81f3ca",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efac9148-e14a-42c3-98e1-6ca7b393120e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc5121f-2e7e-47d9-b1bb-5a29602facbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421f8fed-5ad8-4603-8bf2-3c38b4cb9ef0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007d53a0-90a9-4b27-bd3d-c5ca0ff10006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9142913-ea69-4ee0-b798-3ed0f0234a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c299b0e7-0c50-471b-b76b-b380448ab823",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938f62d9-701f-4757-9355-fa0acb2ddd80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3ccad3-a8e3-44e6-9184-98177af45b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baea62bd-aac0-4888-8765-15d08e08e4e4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30967e10-6e71-49d4-863c-f774010461d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d87b36b-d30c-410f-9501-1258311ab961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aae82e-9b74-4e40-aa05-ac43c091e0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce6aea7-724d-4ec5-ad73-1730753efaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06b4a21-d274-440b-a6c9-fcd6dc87eb77",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941bf0a5-ba56-4d72-b3ef-739a568c2df9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af7a61a5-7232-4bc8-b4ff-91ec2645981e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6230f2a7-9bef-44be-87c6-6d900102d991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f7c96c-503e-4453-a481-e2edaf9bc1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec581bf-25a9-45db-b81e-156d418b1d87",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b672c3-8195-40c2-9a3a-c05b9e7abff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b714934-406f-4741-9802-07809c0a1ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5276c8-5bab-442d-beee-232b0c48f668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fc98d7-ffae-4b98-afb6-48a971e15a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55301d2-8610-4fcb-a37b-3d70d4e9bf46",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43c7715-fecc-4e5a-87c4-00550630375a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36dc133a-86da-4f29-bc5e-c467c9fad340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d294ed9-ae12-4217-b53d-1bde920ce4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2c89e6-4adb-48c1-8826-18b4e59f4382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337894e7-5390-41d6-8835-e71d3669757e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd4199d-6c97-4105-b0d5-d276d2798193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3508db8b-3b63-4f95-8b13-a0c96973b2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50c750d-890f-4e3b-b7c6-13bdcc4dd7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef17a9e-df91-46fd-baf9-aac9bc8be408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c01694-9cec-4780-88cb-77fdb2268b45",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623ec186-946f-41d8-8e2a-52e5364dd82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a9bdc4-7a6d-4d10-9101-ff99494bf034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad2d0fc-df18-41c9-a7f1-3e825e211312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "742127eb-27e0-4b1a-837e-e6f923a29806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8403e6ef-feff-446e-9df4-16705b494117",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b893fdcd-6e68-441f-baca-0921dc2d8687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ff0f04-0c05-4435-b41e-fafd55c6d03b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9137ed-1c22-47e4-8964-cdb24cc21b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f827599-b004-49ba-b1df-8a1a74a0787f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9feca1-aba1-451f-8b5a-55d3c2714ac3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ea6ec7-84e0-4728-9e3a-927226244dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95b7593b-0e0d-40e9-88e3-d807e46ddf6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c513b42-b500-445b-9f3d-3c92e304a772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfe5bf5-fd61-4e7e-942e-537f680f696b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac89eb84-a33c-4eb6-be58-78c82e5825f7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282b7b75-9bd7-4997-bccc-d5718d5987cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f898853-1f2b-4ffc-86ee-57265ac39b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5873fd-5f5f-4a33-9e7b-0ff0b7051545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e36b78d-fe77-4c75-a7fe-ed6b619f91ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3504f6-5a27-4b19-9cfe-563db22312c3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff493d2-d586-450d-b676-46f1687bbd38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0111590b-8b90-4c5e-8fef-2c1f57c0b31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f7b152-98e1-4d20-8d75-717d3c4c7735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a306d889-9920-4e1b-9a83-76a92ab68a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ba20da-64f6-41ce-8f53-62008043446f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad9d638-7a24-4eac-a1f9-d1ad207395fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076650e2-4e18-4622-b272-55366e54ef37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08322cbe-f32f-42c7-89f8-0eb89d1933d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ed59ad-dc51-4ad7-b15f-d549cb8e92af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beece11a-124c-4317-9d09-baa91f1b739e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d094cb4-43a2-402f-98ef-fea6744a1b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95aa6596-8208-4fdf-8b6c-a5e27487913c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcd6d32-82d6-44ca-ab50-e27e3bbb54b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235db6af-abfe-45a0-86b3-7b2d72756fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ca2454-973d-4736-a82d-9bcdda16d6f5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a9bddf-6b8d-4f48-8053-9338c4b13b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3a36b4-c0fd-4e72-975b-0267a238b741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0df4eb2-6b2a-49ea-90de-3d4d32eee389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e02158-6cb6-4056-8839-e9a47bdc9321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf4ffb3-ec9f-408f-ae1d-74acd60e1604",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b568ee-9915-46da-ad3d-7ab9d8da3c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afc31e5-f667-4f6a-b9cf-0ed5db1f746d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1fd674-8f14-4077-b3b3-f26ba86c93cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda1bfe6-10ee-4714-af02-d31c741184cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8648021-3fcb-40bc-91b5-d9176f0dbea4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164e25b0-1db9-4336-9b0b-48bf173f5309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cccc52-c4f6-4b25-8669-119cd76e08cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6788300-5e72-477c-8775-0d4483fb99a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a76188-a474-419b-b27c-76e8f4e0bca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710cf3ac-5a86-4d71-9d42-2d93560a7128",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5934180-0124-49cc-a6bf-c5603f39aa4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcefaa5-5779-4378-a2b3-2b0429fa8731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c2728b-3b0e-4de3-b34c-d88bb1be09ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f75845-d0e3-42d0-8ffc-76b9c2b478cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1e258b-57ac-45d7-a85e-b8fd600ca8db",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9059cfc4-64e3-442d-a311-483618963ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d27ebd-2c60-4578-b298-e14d9414f7cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906b1caf-27cf-412d-bfc4-3a3be2f60462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db89ed8b-c604-49ff-95f1-a371d2488b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de81de0-f618-4658-9ba5-62c287668d7c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400e0a1f-8b4f-4e0e-be50-f79c4fbb7109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1477e3e-0a96-43c3-988b-6b52e5a5d560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649acf06-e579-4169-b1c2-a3192fcd6282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b51fbc-b1ee-4d5e-9798-ae2d400f0c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c1a688-8399-46e5-b92e-844f6f2c8310",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5027a7-775a-47a9-8fff-02d5b941ad58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "442440e0-989a-4c11-ac86-d805adf06d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3a2df6-0a75-4868-89fc-420bd96e1a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df21827-a734-455a-8ea1-766072334f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a34d479-40db-417f-8ade-91954721098a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03962e91-23b9-47a2-91a3-f916af5026ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f219595a-1252-45ea-b6a4-8d342065007a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e6f324-717f-43fb-8e21-6f7ab3447461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44caef5f-4a2a-4698-963d-f193f8d6721e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fae756-d8c4-40bf-82ac-ab97d4a1130c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1185e4-42b0-4cdf-8e47-9c7d81c6748a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c4d91ef-4ecf-40db-b2f7-15d8fdadedc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141ca106-a8fa-4c94-8842-4e17a56ce2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218e8f2f-20f8-4c7a-adf6-d835a1919a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a9b35-efc7-4730-9c52-b8a85691fa96",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1d5ffc-0a1a-4529-8af9-8378ec1330d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addad520-fbac-460f-9e1d-20eb41674b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2acc4b-5182-481c-82b0-22f983e91e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a25cbd3-0608-4372-823f-b9b88db6e260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d13b88-971c-4001-a935-9ea371a8de76",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29719541-cb1b-4428-9450-25a76b2e5559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66fb4bb9-7fa9-4998-8f43-e858ed55ebf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cdbd62-da73-4eb8-afcb-68a2aa8f0cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d09b53-ea81-4ac2-b8ff-a3b761e433ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01abce8-b85c-4d9c-bd9f-b5627c1c7e40",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ba1e30-d8a4-425a-8021-4b1d7a46d0d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1ce6ae-c618-45d7-81bd-c92936a3be67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f603a1da-6138-46f9-8a7a-cfe91e37053b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1137c27-e2ec-4a40-9f2f-f0259508bfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054a1caa-b335-4ee5-8c57-31db8bfdda84",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae84dc33-3c03-41ad-a844-4635edf2aeeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc4d0c7c-4d96-4b7b-8f1f-1188302a50a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd459fda-0cf4-4f2c-afd8-77b093a25fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3beeb324-04cc-4f08-97a1-530cb60f0524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a95bec-c4d5-46e0-9d2d-501c906a1c5c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5da53aa-4a71-4d5c-a92b-36cb673e0074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f55655fa-bbed-4dab-b6ee-7f4b66507b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bdbbb9-3b97-4884-9a54-19e329939b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8db813-1c48-46a4-9c4c-1a3d601aac9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcae775a-01ec-4237-9c21-729a64eeea3e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba56a30-f9e1-4c87-8ebe-1f58026c623e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dabc2aa3-e329-4203-943d-505f91e34ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03225236-ec56-4fc3-a22e-314e58154e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb603bc-c1dd-4a4c-9900-28a16f8fae5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fd50d3-a4c3-4b6e-9922-e117d39893a9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198c86fb-55d1-4e4e-9618-972772bdffd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45680906-c43a-4491-ba76-a37d2f3680ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a8c853-68f9-4297-afd8-cfbd0196a112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6adeb014-556f-435b-87e2-04d653b370d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb28b1a-5cfa-4584-a1ad-68faa8bffaa0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25efd99e-379d-4a15-addf-1427b362d9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dd834b-4790-45d1-93c6-c960265d2f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811ed0d5-fcf8-4307-ac81-bc5bb946ef91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6404ab-4400-4a04-a2f9-1140d8ab4131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b40428-805c-4bd2-a352-8c0ad488d2e4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ec4fb8-23de-4a13-be83-844104de070c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceeb9cf0-dc7e-4cf5-ad95-f6d30010a4bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3abbace-93ea-441a-ae66-c5a4925d38da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df26762-a577-4193-b0cb-913427d12686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560e3ed6-64fc-4fa6-b72d-ce4d45e72b51",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab88543-5f78-42d3-b725-b9ed8a89720f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f495f06d-b46f-4e62-8ce5-3bd010471d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08775afe-fe12-41fd-8f45-b5e998544565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119c31b5-1096-40e0-98c4-f3afaebc9d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9a0bef-df85-419c-bb8e-9b3550b4ba1a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255bb8c3-ccd8-4973-8ae8-ae294df09016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9666341-49b3-4d91-8d6f-a45b30ab9497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78efb6ab-9f30-4691-88db-ed2aff04a565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fc94f5-4719-462f-aaf8-4f593226c07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8347478-865d-4e38-8fe2-812279333ffd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcef6b25-64eb-4204-bfb7-9ed50f9fd695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be234d02-0cc8-484f-9e4b-dcf1b59fc473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431eec42-69bf-4cf5-9fa8-249b4cb4a7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a912c3d5-ea5e-4107-83b3-6e1d98ab4ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba9a501-8dcd-4b9a-a028-3c90ed1ab2e5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7aad6d-797f-49e2-b080-6b73a62a2cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d29bb6-6607-4e07-9e58-38567cf625f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d80025-e078-4b1e-a5af-1ccabd1465d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf63fa10-ffdc-4ffb-b9b2-12b0094a2acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870128ef-1692-46e1-9938-6ea5a13e3bf0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b664732e-dfd5-435c-8c6c-4af987259c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce21520-aab3-473c-a190-40508ff50bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a92b5db-8df0-4c4c-8481-1f20829dda7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8d105b-0dd9-466a-812f-e358989a44eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be768109-ac7c-418c-8611-44a14f779a79",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f44d51-4083-4609-bb2c-74b5a21b2d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cd37cb-9b4e-48dc-b98c-bc1199ec06cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ba6fb7-171b-493e-96c0-0de3dfa79b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d61b3a0-c847-4e97-bbe0-6807e63995b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6365b50f-0885-4ce6-948b-8996caf4c292",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734b12c6-6457-4091-94fb-a6a2a675ad72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db68e16-a061-4079-bf75-3a2edb9070d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe923e8c-f815-49d0-8488-3090f3641e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6dcd9c3-9aea-4dbf-a4e5-2fa55c734194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13160b57-1323-4dba-87eb-bca4187e4c49",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2d3528-2f68-4935-a485-d4ed38b7e3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3794691a-add0-4658-92b3-8b73dfcfcc5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab008b2-d620-45db-bb89-80224a3ddcbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbb0e07-e42e-4d79-ae84-af6041359c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aaf69f9-184e-4a84-9b49-d7572579c166",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5508a84d-d8cd-4a17-97d0-dc047cea077b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f5bd85-e7da-46bb-a534-f383a9c8fb6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31365c5c-46b6-4bfe-a211-c4fa5792603d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1d03bd-6fe4-462a-be57-b0b39a308a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c35807a-dd3f-4949-b403-819094fa3fcf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bea84a3-b4c3-4a3e-aae6-05999ca5bbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4b1b7f-1ab4-4f57-9639-58c7990b49a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f89d822-e68b-49ee-8315-03967a6b6c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8b617e-18e0-4679-b546-075ffd8c2ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1aea91a-9df4-4dee-bedf-08d55ec6ea8b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8d9711-bdd3-4a5c-86fb-8bd4e94f1ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac78b87a-8120-47c9-b13e-e9624f13cdf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693c694e-e2da-46b3-9ea7-6b8b3462f91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2290d4fb-8c95-4504-9684-5050222436bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c51f5d-153f-4133-bcf8-553eb42e538d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cd6527-0c0a-457a-b9ae-0d756865d391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51e7faa-3156-470f-8d60-14fa04ca092f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6083e0-c30a-4bb7-bf94-da0e6a94b217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9794407e-2518-4fc2-8946-e99947c1604e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e604f2-be1a-45fa-8908-80231247f835",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bf07ee-401c-4a93-8171-a6e339c77bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc35d45-8a75-4931-816e-fee7db071973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87031f25-0136-4207-a01c-879021e41401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898f45c6-558b-4c51-815f-2193ad54e3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c557b751-7cdc-44c7-a151-df5e4789c3d3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cd20fc-2388-4cd8-8054-30e5eba51e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769ff113-3440-49e4-b934-97c3ee6754c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9c08bd-dad6-42ed-bdb4-78ad537bc0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4778fbba-9fd8-48e3-8a25-06be6cd45f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb252309-2cf3-4e73-98f1-bc3bcdb0e885",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778e81cb-7d02-46b5-b8b2-7a03c919edbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16281387-34b1-415a-af07-0698cc1d74da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff82919b-7da5-4b57-b431-54eab94089db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00e224c-75e9-4b0e-b1ae-feab4a835bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2ab379-0274-4dbf-9716-717ec4686691",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ea1651-c492-4431-881c-7384cbde5eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc38b9c-de29-4c9a-9e45-0c1280923909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41c0b4e-4d37-4b79-a78b-a41fd12909e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b55896-3901-4137-a77c-82dcb26cbc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d9ff5a-2173-4120-9853-731df8e93885",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec162919-0b37-41ae-8bb8-6a74784a045a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f480f0c4-2b6f-4594-b5b8-1ef3a202caf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859ea58e-e6c2-4507-bca4-1c4d5fcae0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a965d210-3ed5-41ab-94b9-829366bc32af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148f95e5-ccf4-45e5-9022-80ec300f4ec1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89328c46-3475-4db6-bf59-3610bdda23d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199b68bb-22b6-4b70-8efb-87e7e1a6127c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a42a9f-498e-41d4-957e-f5300da49a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ac3972-41fd-4cb9-90b6-5f49e5a1881a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fea2f5-e0c4-48f4-bdfd-8558bfdd016e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c62044-1f47-4ff7-88e9-061fc2217c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1660cb7-596b-4719-a353-bed91d0063ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db614fd8-58a7-4952-9030-f9b0450bfc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b75729-813b-4396-8154-83393463d934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635d3645-05d2-4f26-b40a-3a8ab938e066",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e42d1a0-8582-4a17-88c0-9043ee840127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd65039-8f5c-4ee9-b57c-0c5a55a1d755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4065b060-e925-4832-8f36-f2c26a21fa15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff6499f-43e7-4630-a31f-62580de922e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35d1cc6-50e7-4833-819f-bb0385f9241d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08de6287-eeac-4648-be5e-fe13f3d18d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f741c392-822e-4b64-a748-65734a829da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093ea55d-5e0e-4339-a067-25a54d07acca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19ffae1-b2e6-4165-bc2b-61c4d72332fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f2cac7-c470-4dde-aad5-c22ed1ce6984",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a7a917-0c18-46c2-a10c-2e6bcf8701b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83290cf-c477-4127-910d-1ee1f3b48e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90526e6b-4a26-41ce-9e8f-9ea978719b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3facf4-6bba-4a26-bb10-1cd35f7441c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09af6732-a27a-43da-8eed-dc1ddf59a375",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067338a6-7dab-4569-896f-d893d5bfb221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f7a044-3b65-4e1e-8984-d69bf732a528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fba0ab7-0710-4797-a094-7356bac31e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5e1f60-990c-48e4-9352-eab8bd9c7574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2314eb-265a-4d47-8ec7-5370ec76d527",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3c6ca4-0b60-4e2c-9b30-4933362a04e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6fbaaa-499b-4cfa-9e09-f3b7628481b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8778c9-f0f7-47db-8a2e-52d223a97c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329686cb-a48b-47ed-8975-7c45fe5e7646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badcd1e7-8e0d-4e52-a862-03cdafca4bb7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32d249e-9e45-4ecb-aee4-d92b724ed6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767c6264-a68e-4b4a-8c28-97945ba24a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "987de7a6-9a36-4e82-8c9d-27ffab7efcba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d77cb64-8149-457b-b243-12a84b59bc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b62009-108f-4983-a8b1-e2a8f70202c0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10761e63-8732-4cb4-b4d1-6da4ced187a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf658684-4b3a-4f76-95a6-c97b308b37b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "145e2eb6-b3d0-48b9-8691-3dbf1c2bac77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3302e6e-d412-4dc1-aecd-f0d1d543c576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9810575-a1cd-4092-a666-f099c05a63fb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59a9813-ac55-41b1-90ab-ed7ad0a9bfea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5aa224-f742-4fd3-b185-247f294e49a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ed86cf-e302-4fef-9f0d-9bd3ba99cb79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6633a533-8b14-4668-a864-235ac23833ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8021f4e0-9053-4344-9585-934890c5571b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731f6bd9-67f5-4cf8-b26d-c35ba8904790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f55190-aba3-4865-80cf-724089f93bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11415af0-e16c-4ab0-826e-7e244dd2e5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1c976d-3ffa-4d9d-9c4f-01eeb81cd175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cf330f-d981-4e3e-94a8-65632a9a27db",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453e87d1-641c-4aed-aa05-37f71595784d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0b66e17-19aa-4bb1-805d-c85ed537f1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a692ce7-574b-459d-8507-c8d16dbb67c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b85bed-bdfd-4e53-b7e6-e77afcad2d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b5b7a0-60f3-4656-85ae-931507fd0f48",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9608dc-6c46-47c0-849d-c881cacd839e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c4d52a-a859-4dd6-85a2-fb80854ece3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359d70cb-f275-445c-9799-e58665ddd9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0946bdad-20cd-45cb-8c6b-6b2442c85735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146e88d9-5984-43c8-befa-5269d2f913bb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3d9a68-78d1-41f4-bfe7-4df85905f9e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76ccc1c3-ca5d-4c46-88cc-e5a281d0bb30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd696d6d-8dc7-46b7-b097-d59ca98645bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f303024f-ac0a-4112-9804-916b14177fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177eca41-1cc4-4ff1-ad8a-a8660db68ebb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987115c2-fca5-49be-8813-5720f079a31c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0ce7699-0521-47e2-a02a-89c74ecc336f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b7addf-7ab4-4e95-8587-7f0330598abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c56223b-fea8-41f9-aab5-c0e8271b0d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b141b2-4512-4dc1-801d-f4261d469fd6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c7a4ae-9baf-4bcf-843b-f3261e16bfe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b2d74b1-1e4b-41a3-9446-844a3a06a746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec11de85-9675-4681-ba8a-4e126ae068fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0707617e-cfed-4cb3-a7b4-41fc4aae8145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a4b474-cdb2-42d9-adfd-b1178d6b91fd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7effc0d1-93bd-4e2b-adfb-a0f80467a540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17822b2d-e0b5-4b9b-a287-d60b1d767c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434fd829-40e8-4658-b4e3-5481bf6a96b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375a1f50-3fb5-4668-90e6-c1693edee330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45c13e2-805f-4569-899c-8bbc84b0eaf2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eec7f54-4cc4-4d0e-8932-30d536d6966e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b81b07b-9db4-4260-9fea-8cd67daa9f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7574b2c0-94fc-4682-8be8-5ad820a4ce1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5047575-25c7-4e3a-9500-51522e01da8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e3cc5c-5ea8-4be1-94c8-54ca22d22240",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cbb5be-1fcd-4a9b-bf1d-821ce885273f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d999b727-5e8d-4529-bbc1-a40cb9860dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f470c7f-a953-45d2-b18f-a74ef8b8efd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7fd9fc-49bf-4987-8172-4b407a73aaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c6d2f2-27aa-449f-93f0-eef73aa6fc6c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be39daf-d357-4c02-bac7-d272ccada7b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbc7facb-b8c2-4393-be37-982cd787b815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7ba9e5-e7e7-43e9-b4b9-5d52ee894762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d973959-b3d2-40bc-893e-24b9da7e4572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26dafa0-cb29-450c-ace0-ec4900d2c990",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7249c6d-fc5d-4ba3-9bbc-3fc984dfb545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1542b9a-666c-45b9-a870-917dc0c8f2f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451c04a3-5c74-4381-8ea2-44c2517a7bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139af979-0212-4213-9811-2f7b8b61d783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f430818d-f379-4034-9277-eaa58180ff1e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3853d8-ddf7-4777-8673-54d125280b18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7984d2b3-52dd-44e6-a43e-f0d8a40a0271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be62e39-fd75-4d20-96b9-8a1f62fcc1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e07f967-cbc7-43e2-a7ed-0a4ac183ba5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792de84c-e0c0-4313-9bfe-8f8af6265cf3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26e44ee-59b2-4585-bae7-8fc28fb742df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d8acfe0-c685-4da5-bc36-1424c296ab7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35a354b-6720-464e-b891-9f4ee60b86f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5ccb77-243d-48a0-9414-501e7079c2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805063e3-d874-4a9e-bc7d-794911260f15",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04321b5a-7da1-493d-9d74-d0978424db27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b649834b-9a21-4dbb-b23c-943f80e94126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d165bec-341c-4e73-be91-4393c9ece443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b47da88-46b1-4017-9ac3-78fe25960d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54785f2-ae51-49af-a9da-a0d0ec4bc2bc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79366eb1-1d2d-4080-8c8b-8d58aa2e235d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13bb5ed5-6193-4b45-977d-a511c7d191b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ad7c51-da87-41a0-8641-a1f09afb68ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94dbbe6e-b9b0-4201-9a35-98b0787f4147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b68c88-065a-4b39-8402-974cbb3edab5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7396f35-4037-413b-8539-94dd492bb1d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13630fef-4985-41b8-9621-8e0da3b331f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72aaf7c-3076-401d-836f-17c10d022cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebe222b-485c-4f54-9c5a-84f2637ae0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9424c92-59a4-45a2-9bde-5f74a1e10ae9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ab4f11-3f8c-4b55-b35e-429a8b3c03a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e82f6ea3-32c0-41a1-8cef-f1f58a4224d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e24102-7a8a-4944-9d43-dc55922f0e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3675ba-477b-4fff-a547-74c3d6442bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f3261a-964d-4a7c-a9ef-52477a455c4d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e903b78b-50c0-4f6f-9e9e-2f4529062777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910a499e-32a8-4f29-93ff-e658158e717d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49c6de9-5d88-433a-b18d-e6d9f4439f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28e78df-11b4-4a37-b352-03487d28508a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd9b03d-a287-44d4-acd0-fe7bbec8b00d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630d6737-056a-43b6-bf93-393ffb41e1f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b32824a9-928b-4d30-8097-311f230fe7fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44a811e-f1d0-400e-ab8d-5ed292bcf9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581fa9f0-e99a-45e1-8c9f-3a16414db989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32861b03-0d10-484e-8efb-6aef6e3b2e58",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dca667-06f1-46e2-b16f-3afe986dfba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb018d12-239a-4508-a374-6e56fbd23a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1940d6c8-1cf7-41e6-a793-7e629ba3843b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ae6633-cad7-449a-91d1-cfe9ff013731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9fc906-6f50-4d7c-99f7-e04682eff593",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38030158-ac59-43d4-a523-51c2099f3812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd815b7e-1354-4fb4-968b-368513ad279a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecfbb6b-6be2-4052-8e2b-6dc42413a0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81556bb-65f8-4e82-ab5d-0b66afdcdedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78986776-b354-4ef9-8965-6cbcb8553c60",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1784f731-bcb6-473d-82d4-0a7bb1d374b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bcaeba4-cf84-4f24-9962-f125c1d8a50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00525813-fe2e-4197-b985-b1c677ffe153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b3944e-e48d-46d2-b29e-7a4973b4acf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7c2a0f-3d58-47f3-b520-7a052a305ef7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8a7e7a-50f3-4322-9a8c-43558dba8e38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af008dad-4be2-427e-b3a3-d6bba31acb94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f26f012-4e4d-4d07-9c57-c467e08bca6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcb0990-82ba-48f8-b9a6-a52b1dd8ebf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc62c832-6dc8-44fd-9dcb-7806631014ea",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9666a61e-deb5-4309-acd7-780222a77114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1070a07b-fbae-4262-9eb7-56195017dc04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c787ec-45aa-41ab-856e-8c63afc168ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e29611-770a-4866-9251-d93284f60022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43e748d-4e11-4645-abcb-ee437acb4158",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e58ccb-6f71-4dd6-9dea-7d232d7838d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5624bb-9012-4cb0-953d-7003f05c9b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3055c4f-43a2-465a-80a4-01e096244a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc9bb2b-bc19-48e3-8614-f84cb0e69602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b8701a-2869-4034-b32b-49eed131298b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9518957a-24d6-41b9-9589-02fbe9b26458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ef83291-e3c3-4047-a7c2-dc5823bbb9c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551aea2d-c2cb-49c6-af78-162f6cffefb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095ddac6-7d19-45a4-a701-2e17f3e8221b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0997e8-73cf-409c-83cb-e7ab484f22ba",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bf0c7a-f27f-458e-bc9c-892db75db058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c4c1190-93c7-4f2a-bc13-ec213e5c2c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4e62a8-0603-4400-91b6-e509ec0c3705",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c8491b-87f6-49cc-ad1b-db03691455a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f846306-c73a-45c5-af4c-a474b6578275",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556c6b64-2903-4386-9ba2-51caca1e6b78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1e3928b-70b6-4479-ad69-78341bb49dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908822c5-350b-4db6-835b-ee9f3baff112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ce6896-b7c6-44f4-9023-4ff68358aa5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59d3633-cc23-4a0b-b64c-c20be019932f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bd7e32-1b71-4e95-9d76-8db0cbf50d65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6efadefe-81ae-4033-835e-074e41216f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2f0306-bd4a-4e0d-8736-98c7b16e22b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64604410-31a4-4f0d-ba0f-35671b6d97f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6266b5-5119-43c2-ac04-a0cdba2bb3f9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f287d43-b3c2-4c9e-98e2-d10743480662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "008bf7f1-8e06-45ec-90d3-5d4981ca1652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efcb9f6-463a-463e-bd65-934794de3e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d079150-3cb9-4ec1-8a00-b7afa846fbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476bf8bc-d035-4fa0-ad53-5a339e75cf94",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a980aabd-1e87-45da-be00-6288327ffecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab9666a7-5438-48e5-b41e-8b8e454e9133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf12135-8bef-4d07-b93d-29fc17bd92a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fc04af-2e7c-45eb-97c9-6c01f01fed95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69688015-30c0-4abc-a6af-38176211ccd0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4b5075-b5bf-406c-9d75-6f07b053e67c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2266b1eb-a749-4482-9ec2-f6010cd24986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa67eec-517b-427c-ab87-a7b1bc650a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c064aa9-fb1a-4423-a3ea-aa0045c5358d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da75ba5-602c-4a46-8a04-4398d6050d6f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa73e3a8-3ce4-4b6d-9359-e4a0d5e31817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ab7b3bf-f395-4c37-a082-45c0d41d9bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252185f1-5556-45bb-bef9-6ca9f0113556",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075a79b5-76d3-4abd-8df1-aa1b6d296ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ce4d6f-2ebf-40ab-a431-83063e3eac94",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c72b24a-4e45-4ee4-9515-fb426dd1f97f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9f61917-bdc0-41e8-8d7a-e402b6ffecad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccce0556-728e-4cc6-8048-47b17d505cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f4e19e-2f0f-48fd-80bd-1ed3f32cd137"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96019e35-e106-41d8-b65d-bdde60925039",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ac4c9a9-5941-4f6f-8f96-15521781409d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6c4d67b-6da4-4980-a49e-3ca4d8fb7e71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e23e3a3-2002-4036-bfec-b753228f2d8b"
                    }
                  }
                ]
              },
              {
                "id": "2a88a219-bd82-4cff-965a-05e22bc3c252",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a922fb7-4079-45a5-acd2-43705f4e07ba",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443a749a-1e0d-485c-a619-580521526b02",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9c46065d-a6c7-48e0-843f-26b5d9a8b67d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbb093d-9090-404d-975d-d64cce9d6d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "498a6c84-eb69-45f5-86a6-0b86160fc068"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f70623a3-600c-42cb-a5b6-eb28609179df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f03add8c-c107-4673-8caf-1137013c63a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c11be882-0377-4800-90e2-70411fbec487",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d957342-d878-418b-a561-45eeef696405"
                    }
                  }
                ]
              },
              {
                "id": "690abd8d-e84d-4fa1-83c0-aaebcf533ec5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "88a7aa63-7c37-4728-8362-1f9474bd947d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089b83e8-7110-4086-a978-37d72d726492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "90e4bcd7-b31f-464c-9ed3-e1594d857868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5815e0e-e961-45a1-9f31-18e645def254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5235ea81-af99-4e26-a85f-9d416808b5ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7a83d0b0-6242-4faa-92a8-913d4913ad4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4991ca80-e470-4232-a7f1-bbecf529934b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ed58809-531f-4d9d-ab53-ef3f20197108",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5cb18266-b17d-4b25-89e6-c4344d6d413d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "383b3dce-cbe1-4137-974a-9a0cc086a37d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d174cdea-e99a-4060-a1ec-1bcc703e7d86"
                    }
                  }
                ]
              },
              {
                "id": "5ba631cb-abf9-4563-8874-c658e07313f8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc70f76d-7aa4-4823-8f0d-99a812d73a48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "75ae6972-d2b7-47b5-b645-58835e8c09ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73d71f61-9037-4e06-831c-5363f6e8c6b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d841f2e5-0b25-4f83-941f-a667613f4e46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0bf0b28-8bfa-4b56-a42b-3fbe13ed5272",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2b0cfbfa-ba59-484e-9fbf-8af09e740a0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9fdf30f-5ee5-4b34-a7c9-f6377176cd5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e432d9e-9b01-4741-846f-de5671c1527e"
            }
          }
        ]
      },
      {
        "id": "dbb3aa6e-b387-4cd2-8a46-1edcda6adb48",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "548f5d29-52bd-4a58-a39e-2928552d9022",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e7a3563-d8d7-465f-876d-bdba38a1054f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64383c07-6c7c-49f0-bd1f-c1f578e40380",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24be6a6a-61c9-441a-9ea6-2dd917cb9b16",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e820c648-362e-4844-822e-6802ffc10fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98151231-dcb9-43e9-8fee-e7fc00361f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0493fb4f-afa5-4284-9d3b-588007446a75"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6514a61d-40c3-41d6-ae4b-e5591aac6df5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "617b5e17-ef6a-49a1-93fc-84dfcc125c23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "671900c7-3abd-4a43-9cc1-7f99f096b2be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3edc84ec-5bef-4a5d-95c2-fe01fad818ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b56fc35c-05f8-475c-8132-38b15392de67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "690c97cb-8c5c-4c4e-a110-fc6ba8331631"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "684337e2-b433-445a-9926-cd794b2f0018",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1deac8f-64c9-4971-bcc9-4fca37c47f6d"
            }
          }
        ]
      },
      {
        "id": "360c2392-ef46-4d50-ae16-9593acc56dee",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1c6a7386-e314-4bbb-a1e7-efbcb77171d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe3c1d72-c2e6-483b-9bce-5474ba8e7964",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45aca796-94e9-4a6e-9a27-5e8545214004",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fbc7d1-018f-4468-85f9-7fd11776b152",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75a3c313-e603-4f4b-9da3-11e928b2a11c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26481275-778a-40a2-b191-e55f78f715a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91da1887-11a3-4795-ab88-68636db35ded"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b715b10-ca39-40f2-84c7-eb81f7f54b50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9986df1d-7b42-45d0-8150-e54cacb5bef4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46efdede-b952-4a3f-bc0b-86b9917d1f01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcde5889-0795-44c3-9b97-0fdae85c9b3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33033c05-5c53-491c-9581-a842f01f4e95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "782fbfe6-ac5f-459c-b0a4-86351d51e00a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dca90d20-da48-4495-b61f-115d8fabe71a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62acadb4-c55d-4340-87a9-20149b13fa41"
            }
          }
        ]
      },
      {
        "id": "6b9e1048-e544-4a6f-9026-3e6ac8c86c8e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2040ff83-df0a-4ce9-a91c-98942bb1241d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "180eee93-cf64-41a7-820c-0c7a4685923d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96329e97-98f3-41ce-add7-2d0480fbbe0b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a042e4c4-c886-4941-a38f-0efbb66e8bd9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d7b1292-1b53-48be-9d83-81c1c1f36704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e077356a-d62a-4899-8e70-b739993750c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0017e322-7fbf-41e4-8c4c-413d074f275f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad6ee19b-87f5-4132-a990-99be198b5fdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb264865-cbfd-489e-8970-5fa86b4ffba5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "404f300c-4eba-4e07-8420-a9f2016ffb52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4db119b3-909c-4a5b-bfa2-1fd71e192c6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0011232a-1f61-4ae3-a887-b8a3329a84af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "51f3dd26-c1b5-49a8-a05a-2c4ffaaaa800"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e736e9da-acc2-47c4-b71d-51ce14102efc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "519df615-a8f4-4ecf-9b64-5367c962babf"
            }
          }
        ]
      },
      {
        "id": "c02b211a-a49f-4c0c-b791-81fef11d8d60",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1705cc7f-58f5-4bc2-b8a1-105586c3f678",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56be4f7a-7dc4-4679-8033-27586550a4a0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9e0fcbc4-e987-4e43-b036-0b1dc58ade85",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07128f2a-8b6b-481c-95a0-6ce4a9f83210",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f510fa0d-f711-4320-8023-9b0077d1f294",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.099206349206346,
      "responseMin": 8,
      "responseMax": 276,
      "responseSd": 23.879867977193946,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724028088158,
      "completed": 1724028099434
    },
    "executions": [
      {
        "id": "42652b63-c55f-4b69-86cb-08f533c97ce9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f38c959f-24f4-41bf-8c1f-62b627dbebf5",
          "httpRequestId": "f8716942-1d41-45e4-9a74-944a32c653e6"
        },
        "item": {
          "id": "42652b63-c55f-4b69-86cb-08f533c97ce9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0cbc0f85-f73c-4371-93b7-8b34af2d7d89",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "d6fda742-22fe-40c6-add4-21e344b80d09",
        "cursor": {
          "ref": "488db8d1-4f56-4bfe-9c56-6d17f85e9e83",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b2736931-fc02-4ce0-90ff-355b7dce02ea"
        },
        "item": {
          "id": "d6fda742-22fe-40c6-add4-21e344b80d09",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d11f04de-7c14-4861-9855-75186c5b8635",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "5b125fec-5dfa-4089-a0e0-76f81f3f7664",
        "cursor": {
          "ref": "635bbd8d-4b0c-4ebe-8ec6-2f3de4e4c726",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3c04ba60-0b50-4385-a87e-82df7f2493db"
        },
        "item": {
          "id": "5b125fec-5dfa-4089-a0e0-76f81f3f7664",
          "name": "did_json"
        },
        "response": {
          "id": "47a9bb0b-172e-48bd-ab02-3624e031c82c",
          "status": "OK",
          "code": 200,
          "responseTime": 174,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283d465f-d7a1-4809-bf66-5c903c592f40",
        "cursor": {
          "ref": "93114a67-35bc-4c36-ac32-cc32f6ae46d4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dfbb699d-888c-4594-a806-fded7c9bdc5f"
        },
        "item": {
          "id": "283d465f-d7a1-4809-bf66-5c903c592f40",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0fefc32-eaa8-4bbc-94be-6973aadaf8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283d465f-d7a1-4809-bf66-5c903c592f40",
        "cursor": {
          "ref": "93114a67-35bc-4c36-ac32-cc32f6ae46d4",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dfbb699d-888c-4594-a806-fded7c9bdc5f"
        },
        "item": {
          "id": "283d465f-d7a1-4809-bf66-5c903c592f40",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0fefc32-eaa8-4bbc-94be-6973aadaf8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa82862-ecbf-4bef-9440-73f62dd03b60",
        "cursor": {
          "ref": "55cca7dd-7ab6-4856-a259-935748106a69",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "99347eeb-c0fb-4b02-90a5-9dc433ece799"
        },
        "item": {
          "id": "2aa82862-ecbf-4bef-9440-73f62dd03b60",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b83c3839-c91b-4986-9298-915e533f0f96",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640f8219-9472-430e-a7fe-c5ed470cfe19",
        "cursor": {
          "ref": "cca889d8-4ef1-4bb5-8fc9-4c6fcec17da5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "861ec38f-a08d-4100-a0a5-a5fe86391461"
        },
        "item": {
          "id": "640f8219-9472-430e-a7fe-c5ed470cfe19",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "86b6cb91-8de1-4f35-a9a1-6787b3e50930",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca4f312-5cd7-4f1e-8d27-e34ce832ae59",
        "cursor": {
          "ref": "1e222235-f4d5-410f-be6f-9b3bb8e84519",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "280fea49-200e-4354-9b95-51aacf5de0e6"
        },
        "item": {
          "id": "1ca4f312-5cd7-4f1e-8d27-e34ce832ae59",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "07ffebd5-b2fb-4330-8cfa-cd83b26fbdce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8354973-4279-458f-8379-d141dbdf6714",
        "cursor": {
          "ref": "d84adca5-fdae-44c4-a18a-c4f649ccf544",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e0c015d5-6d4b-4921-8d9f-84602da35f61"
        },
        "item": {
          "id": "a8354973-4279-458f-8379-d141dbdf6714",
          "name": "identifiers"
        },
        "response": {
          "id": "ab0023cb-faaf-4741-9446-3e0f8fca8f6e",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cae457-6fcf-40b6-ae6e-a3917ed8191b",
        "cursor": {
          "ref": "fba3ee81-aabf-47af-875f-f1b62d3003f5",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0aab0ade-b6ff-4b24-8acc-57dbc40efa57"
        },
        "item": {
          "id": "e0cae457-6fcf-40b6-ae6e-a3917ed8191b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0cc68f50-69ad-4761-96e6-837b2ed1a212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cb9989-865e-4f4e-8757-2d8e983e6686",
        "cursor": {
          "ref": "9becfb5c-c0f1-4392-9fde-27d7d269d815",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "02ff4730-5b9f-4cd6-a8e1-f34d65ea0f18"
        },
        "item": {
          "id": "d8cb9989-865e-4f4e-8757-2d8e983e6686",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1a9acb42-f953-4848-8b04-e7d9799c31fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e669d7-dc74-4ccd-a430-165b3b4d3e9e",
        "cursor": {
          "ref": "4a48974a-6015-460f-8020-87b5d8158790",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "47ab525c-092f-4375-bab1-7d2861a19191"
        },
        "item": {
          "id": "e5e669d7-dc74-4ccd-a430-165b3b4d3e9e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0676a8b5-004f-4e5a-a961-f82c219c9719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca68746-b5e1-4688-a374-a2bcae54e761",
        "cursor": {
          "ref": "31b30514-3c26-41c1-81f9-956455a73adc",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1e09430c-c14a-4a88-8cc0-3652830bf604"
        },
        "item": {
          "id": "aca68746-b5e1-4688-a374-a2bcae54e761",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "93aec513-845f-4d1e-9f3c-e397dae03267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd160c4-802c-4c2e-8d24-276d4fea27fb",
        "cursor": {
          "ref": "90ede02c-7deb-40a8-afb2-7624a7492270",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "28f3d634-c01c-4f0a-96fc-065b8d392d80"
        },
        "item": {
          "id": "efd160c4-802c-4c2e-8d24-276d4fea27fb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a2441e60-2c41-4373-ae20-ba82c5d6664b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba044899-95cf-4073-8181-945554ebc1ce",
        "cursor": {
          "ref": "762ec8e1-c4e1-47ae-869c-3f1b6ffab996",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dc32c673-0ba2-4a1f-ac0c-2bb9642b72fd"
        },
        "item": {
          "id": "ba044899-95cf-4073-8181-945554ebc1ce",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b4830c34-0456-43d3-a81d-b7bf8e4cf1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e386ea-6b60-42bd-92db-a319506273af",
        "cursor": {
          "ref": "a89d4297-dd55-4865-b30d-100f3b54ae48",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "54012112-dedc-4da8-a90a-71b074e52492"
        },
        "item": {
          "id": "65e386ea-6b60-42bd-92db-a319506273af",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b3020b73-f48f-4b6b-bd79-72eb92c76f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d579e2-6504-4317-bd7d-890c5f1a678b",
        "cursor": {
          "ref": "c00f5b63-c9af-4885-8202-c1a3d33267c5",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "05adcb89-e337-49b3-a1ac-65c232006b11"
        },
        "item": {
          "id": "d0d579e2-6504-4317-bd7d-890c5f1a678b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "20f73eff-e58e-4811-8f0b-f6acd0f8f0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4994483-b00e-44e8-b691-701766f496d4",
        "cursor": {
          "ref": "03e37039-71db-4762-96fa-c25e4f6f3703",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6f187cac-8114-4122-ac31-241604677f32"
        },
        "item": {
          "id": "d4994483-b00e-44e8-b691-701766f496d4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "af08f8c6-4b92-452e-b2cc-5c31c822d5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b85ccd-a5c4-4928-9f75-843b068224db",
        "cursor": {
          "ref": "04db225e-916e-4e93-a2e5-a55a88d4f6d4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4a3ce773-1a54-4ad0-bd1e-6bbff4324d41"
        },
        "item": {
          "id": "86b85ccd-a5c4-4928-9f75-843b068224db",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7e174787-0873-4f75-977d-4cb2866962de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921adbe2-0050-4299-877d-2067251d03f8",
        "cursor": {
          "ref": "74298189-ec3d-47a8-9020-883929eaa380",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a9170732-1863-4c5d-a0d8-a6d15a1d9f48"
        },
        "item": {
          "id": "921adbe2-0050-4299-877d-2067251d03f8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "10f57996-8273-465b-a9ae-0b954064a853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a55e44d-b36f-4c65-bf81-9822578c3da1",
        "cursor": {
          "ref": "d1105200-09a0-49e3-b28e-56c6bf3e258d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7353e115-786e-462f-b942-7a47bf28bc09"
        },
        "item": {
          "id": "1a55e44d-b36f-4c65-bf81-9822578c3da1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2504200d-badf-4e29-99a1-60ccd45c8aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82ba9b8-8827-4417-9a62-8411ee2945f1",
        "cursor": {
          "ref": "3aa77615-262f-42ee-9199-6ce1ace144e9",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f92be7fb-84d4-484b-8e11-bd9526f33655"
        },
        "item": {
          "id": "c82ba9b8-8827-4417-9a62-8411ee2945f1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b7e9fb68-7ac2-402f-ae01-7c64a3b53621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2d632c-7f47-4e67-aab8-4a56bdfb2146",
        "cursor": {
          "ref": "43e0a875-f463-4914-82e8-c70c9150cd31",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "68a6aa22-e83c-4c91-9135-023ca04c6d68"
        },
        "item": {
          "id": "aa2d632c-7f47-4e67-aab8-4a56bdfb2146",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "542db612-6de7-4359-b8f8-ac03a76a2991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91252b7d-26c7-405d-9511-0beb7e3cafe3",
        "cursor": {
          "ref": "e30b0568-c909-448e-a3a7-417ed0f077af",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a45768fd-ca4b-42e4-ba0a-5aa90b486206"
        },
        "item": {
          "id": "91252b7d-26c7-405d-9511-0beb7e3cafe3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "61ce333b-bdf2-4432-9800-ec32ed4bfcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0b05a5-746e-4c61-b44e-418d8e3ea704",
        "cursor": {
          "ref": "d84698b4-6503-4a4b-9260-45b7435dbb7b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e59adfdf-1005-48a2-96e6-8f8fc22825c6"
        },
        "item": {
          "id": "ae0b05a5-746e-4c61-b44e-418d8e3ea704",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "78c8858d-7262-4748-b9b8-2a25a0766869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2170f6d6-88e4-4dda-bec3-6e73c44f986c",
        "cursor": {
          "ref": "38847d91-8663-4d37-80a3-026c3c988d88",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6fa5fb1f-3b22-4d03-ba40-3172c64cc80f"
        },
        "item": {
          "id": "2170f6d6-88e4-4dda-bec3-6e73c44f986c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "07c2f511-7208-4833-b34a-ac222d64df2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac1a38e-91b4-49f7-8219-1d0f281ce258",
        "cursor": {
          "ref": "370d8e37-e3c1-4049-9f42-d14edf279c47",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "53b7bdc1-9395-447b-92cc-973e2c29256f"
        },
        "item": {
          "id": "dac1a38e-91b4-49f7-8219-1d0f281ce258",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "96d3fe4f-37b9-4968-83c0-ddd33eef72cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18163ca5-be7c-41ff-8dcf-43ee99044846",
        "cursor": {
          "ref": "7172f197-a386-49ff-972a-f8b20ae262b1",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d225eaf8-0f9a-4484-b633-bea7c80095e5"
        },
        "item": {
          "id": "18163ca5-be7c-41ff-8dcf-43ee99044846",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6c8d1286-8266-43df-bde6-0de865951a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468ed8d0-ab74-4973-8cc9-799643e6ac52",
        "cursor": {
          "ref": "12e34587-b04b-4a0f-871e-d6f70108bf85",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "65f7386b-5d90-438f-b6fb-8f16b373217d"
        },
        "item": {
          "id": "468ed8d0-ab74-4973-8cc9-799643e6ac52",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0330c46f-ef5e-4b33-9c84-2a891e0ac83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09927fe3-0162-4b6b-9b15-d3b4cccc0fac",
        "cursor": {
          "ref": "8134baca-40be-46d7-b6a9-752bac5c4851",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6b812c14-bfd6-4f73-83a8-a176f6f7a522"
        },
        "item": {
          "id": "09927fe3-0162-4b6b-9b15-d3b4cccc0fac",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2b6f0b17-0437-43fa-979a-40acad94a739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e971e9a-2597-4fdb-892f-07989e4eb8cc",
        "cursor": {
          "ref": "a1ea481c-05ca-42c7-99b7-e04d2fb1d784",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "40388916-4743-4ffe-881b-414e693ab2b5"
        },
        "item": {
          "id": "2e971e9a-2597-4fdb-892f-07989e4eb8cc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "30fe7cc1-afe5-440a-8411-213d77c7f5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1970b1-7a2a-486a-9c57-b09b9971ab4c",
        "cursor": {
          "ref": "ea33983b-4e25-46f8-b0e9-43eb016ce96f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dd3f75c9-3e89-46ea-a691-6175e947aeff"
        },
        "item": {
          "id": "fb1970b1-7a2a-486a-9c57-b09b9971ab4c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "71d20789-9bae-4c57-9789-5c8de7885370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a2483e-2d4e-4511-b8ec-a6e06c0258d2",
        "cursor": {
          "ref": "a20646e0-d96c-46d1-976c-4fc8c7afeff3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b4278b5d-97f4-41da-8fa8-1356091e4b39"
        },
        "item": {
          "id": "c5a2483e-2d4e-4511-b8ec-a6e06c0258d2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d3eea0a4-f19c-4124-b3ad-cb34516cf842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f511b1c-fbc4-4b51-8fc3-f51954c28adb",
        "cursor": {
          "ref": "22d07348-8bf4-4565-90bd-cfbacc3dc3b8",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3fb768e4-6ec7-47b5-925b-173fa5c1be29"
        },
        "item": {
          "id": "6f511b1c-fbc4-4b51-8fc3-f51954c28adb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9effaaa0-5dc3-4693-a04b-70a2733b5d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e61aed4-3b4e-4b80-938d-08a6ca4a8157",
        "cursor": {
          "ref": "281be40a-fc18-4e2b-af73-7ee2592f639b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e218c798-f66f-4ae6-bdd3-9d8af8201e7f"
        },
        "item": {
          "id": "2e61aed4-3b4e-4b80-938d-08a6ca4a8157",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bf2d16b6-f73b-4e27-9305-4d961f3cd2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28afd759-d5a4-4237-acaa-c210dc2b3a3c",
        "cursor": {
          "ref": "eb2901a1-7a72-4e04-b883-746416db88df",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5a919bfe-e08b-413e-b4c2-993f19be9d1c"
        },
        "item": {
          "id": "28afd759-d5a4-4237-acaa-c210dc2b3a3c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7a4b4cbc-3669-4a58-ab0e-ad6659c1fe19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82464f37-b4e6-4cd2-ab9b-9dec64db09d1",
        "cursor": {
          "ref": "f0364f5a-fec7-4f2b-8dd9-49bcab587c6d",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3a486aaa-8c79-44d4-b51f-f4f7b9fe2410"
        },
        "item": {
          "id": "82464f37-b4e6-4cd2-ab9b-9dec64db09d1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "df3bfa50-0990-4879-a201-debc4eb1d1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9488b4f0-ea8c-4680-a337-a9f73e1d362d",
        "cursor": {
          "ref": "2d4446cc-f983-4502-a956-b7bb15ab6822",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9b4429ac-b37e-41d2-b441-2f9c2e3936d3"
        },
        "item": {
          "id": "9488b4f0-ea8c-4680-a337-a9f73e1d362d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3b6f8a01-f1aa-4002-880c-e1611830e2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38a100b-f737-4435-b0d3-d3ed75d8a123",
        "cursor": {
          "ref": "0b5a9836-f6b0-46ca-ad41-89a7acf5290b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "59a2ebea-556b-4f20-a0e0-de93e96e9fd0"
        },
        "item": {
          "id": "b38a100b-f737-4435-b0d3-d3ed75d8a123",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "792b3806-aea5-477b-b5ec-f5ea191075b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5ca6cf-0766-435f-9e2f-a78605487057",
        "cursor": {
          "ref": "6838c021-6681-4ff7-8b7a-da7496bf2fed",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5a66a9c8-727e-4c46-895a-1c62f99f4136"
        },
        "item": {
          "id": "7e5ca6cf-0766-435f-9e2f-a78605487057",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "57e8dbb1-adcb-4bdb-860f-f90b3d668f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb356447-2f79-4fdd-b328-c577e7cf2b65",
        "cursor": {
          "ref": "9eb208ce-4c70-4edd-bb3e-a2f3cbdec4be",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "362c9c7f-239f-4dce-9161-88afa9709e4c"
        },
        "item": {
          "id": "fb356447-2f79-4fdd-b328-c577e7cf2b65",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "acd6a83a-3c0d-4178-9f76-dbbe156196fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1e3357-1a23-4105-bf9e-ca74c6ab94a3",
        "cursor": {
          "ref": "7b81f947-a8fb-4508-9c4f-676f0a08440d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f9d4ecf8-024a-4605-847a-b11e73ebf136"
        },
        "item": {
          "id": "1c1e3357-1a23-4105-bf9e-ca74c6ab94a3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b33c04cd-ed1d-485a-81bd-365e261e5353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2c45e5-a068-46ba-bc00-65560b1997aa",
        "cursor": {
          "ref": "afeabb19-ef9d-413a-b29d-037aca54e191",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1561ba8f-40f8-4db4-8f08-8967cb49d87f"
        },
        "item": {
          "id": "db2c45e5-a068-46ba-bc00-65560b1997aa",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ffde6a11-f420-4a9e-93c9-24cbdadcf5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50ca428-37e9-4120-b335-a84d92cce0ab",
        "cursor": {
          "ref": "f9a0f62d-b306-4224-a2d2-0a218a1d95d5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8cd67321-883e-4f64-b824-12e05edad966"
        },
        "item": {
          "id": "b50ca428-37e9-4120-b335-a84d92cce0ab",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fe31797e-a560-43b8-abbd-a25e2460e490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edfcd4a-d36b-4eaa-bc55-5a28e677ee85",
        "cursor": {
          "ref": "7a0083c4-734d-4288-9726-084beb6dba4f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3cf03fac-04d4-4dc6-a5bc-725ba95c699b"
        },
        "item": {
          "id": "9edfcd4a-d36b-4eaa-bc55-5a28e677ee85",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2baa559b-6591-4777-a0b5-e2f7141ff0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce7094d-f22d-4d0c-8a28-f4b7ebbe1dad",
        "cursor": {
          "ref": "576f3cba-37e1-4889-8200-95347ba9eafa",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6cc07722-7356-48e7-9e5e-6dc87d70c5bd"
        },
        "item": {
          "id": "1ce7094d-f22d-4d0c-8a28-f4b7ebbe1dad",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "26db5963-50d5-4579-a800-525ae17e48f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e810cb-85b6-4b0f-9b87-ea5490f810f9",
        "cursor": {
          "ref": "092bae0b-31ad-46b4-aa8f-40431daacfe4",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "69450c71-4d21-4a62-88de-4eb2cbaf7f2c"
        },
        "item": {
          "id": "e2e810cb-85b6-4b0f-9b87-ea5490f810f9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "66174281-bfac-481e-92b3-9c17c32c503e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62f1ce9-2ad5-42a0-925d-3440aa3ba06e",
        "cursor": {
          "ref": "95c9d6f4-e851-434c-8d8c-68f3c4b5c2e5",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "00a6f998-9fd2-45b2-9be9-9142fae9b094"
        },
        "item": {
          "id": "c62f1ce9-2ad5-42a0-925d-3440aa3ba06e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "537ff850-cd9a-452f-a356-f2728354b743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc6082d-d5f4-498b-86a4-7cfb08d3d3af",
        "cursor": {
          "ref": "a13eda55-823b-4775-a76a-80dc172ba17d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d856dd5a-e9e2-4c49-9c34-aa51db3b9533"
        },
        "item": {
          "id": "5cc6082d-d5f4-498b-86a4-7cfb08d3d3af",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d017f183-8dc8-4693-930d-999e89e2b6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfe61fe-ee11-40d3-b6a2-258ae4b852dc",
        "cursor": {
          "ref": "740cd52e-1c95-407d-98c9-acdccdef22a1",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "852ad730-bfde-47d8-b578-d5b5f7e4f84a"
        },
        "item": {
          "id": "6cfe61fe-ee11-40d3-b6a2-258ae4b852dc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c5270ad0-5ff2-4672-b312-11a9dcbe01e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c5ebac-8b7e-41c8-9378-f3e7e8c7da5c",
        "cursor": {
          "ref": "18f337d1-16db-48f7-be94-28a443805459",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "107f9be7-3cb1-49df-9d05-4f1ce25aa872"
        },
        "item": {
          "id": "b6c5ebac-8b7e-41c8-9378-f3e7e8c7da5c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "051d3557-e78f-439d-b13c-90760e597a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c89ecb2-6da9-4003-9002-24addbc3ce0d",
        "cursor": {
          "ref": "a99b4391-4586-4dae-860c-577c5fffc3af",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0efcc238-a84c-4370-be0b-953bf1692e19"
        },
        "item": {
          "id": "4c89ecb2-6da9-4003-9002-24addbc3ce0d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f9832712-98c2-4ca2-b364-90e645187cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac1f405-58b1-43a3-b816-e90708b310a3",
        "cursor": {
          "ref": "5d76d6b0-72b6-49c8-8151-a0431412d853",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "13f6e0d9-2b40-49e3-a596-75e94d28cb69"
        },
        "item": {
          "id": "fac1f405-58b1-43a3-b816-e90708b310a3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0aecc40d-466e-4a3c-af9e-349c7c35cca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ae77e9-78f7-499e-b8f7-fbe9695ee247",
        "cursor": {
          "ref": "04273214-d54b-449e-85c7-52d7fe89dc3f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "faf69191-6e60-4bfe-86e3-f9cefd99e153"
        },
        "item": {
          "id": "25ae77e9-78f7-499e-b8f7-fbe9695ee247",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ab184773-7cd7-41b9-b2c9-9ad839f79932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be59c68b-495d-46d0-b419-f4f62fe1fa52",
        "cursor": {
          "ref": "58fd4e52-e9b0-4c93-b2c3-52954d6ac016",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c44d1c94-337f-49c0-b8be-022f46d7b5e0"
        },
        "item": {
          "id": "be59c68b-495d-46d0-b419-f4f62fe1fa52",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "320a7f21-7124-4780-b7a8-041f1a8211c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb1c484-6514-4e13-b627-476fac4c60fe",
        "cursor": {
          "ref": "035f5ee9-b709-482d-a880-a1481fe3dcb6",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2bcfd6cc-0d12-4d9b-95cb-53c4a632a89e"
        },
        "item": {
          "id": "beb1c484-6514-4e13-b627-476fac4c60fe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4c70ef62-7178-4cbb-9a2a-dd36a8ef5046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a410bbf5-4813-4117-9b0e-3aca03fc53ca",
        "cursor": {
          "ref": "3bed6afb-e1b6-4b42-aec4-446cf8983dca",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1d366580-6968-4201-ba2a-87c9556f03ee"
        },
        "item": {
          "id": "a410bbf5-4813-4117-9b0e-3aca03fc53ca",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "73c84f54-9e41-4c42-a1e3-27c5dcbb10c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8adc90c-2f53-4db9-a4c3-c859663af3ea",
        "cursor": {
          "ref": "50599f45-450f-4aef-91ae-f7428a757ed5",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dfceb226-c41e-4824-b9e2-b112a5413d29"
        },
        "item": {
          "id": "b8adc90c-2f53-4db9-a4c3-c859663af3ea",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4a7db7fe-7f61-4577-b30f-ab53f3886c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa108d76-3bfb-4578-b1c4-21ab2c47a135",
        "cursor": {
          "ref": "29c3df84-9a95-4d0b-af2c-50a5c29aa240",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c3fd8bab-e8c3-4a10-b2aa-d12216d295ab"
        },
        "item": {
          "id": "fa108d76-3bfb-4578-b1c4-21ab2c47a135",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "61b402d2-8b1b-446b-8e76-f858eafd9ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4860b74-844d-4eef-8cf2-8c3215d6f718",
        "cursor": {
          "ref": "22f3ff86-0fdd-40c7-9e65-882373282eb5",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "22d5e6f3-82a7-49f1-8d1b-8b58c2df9946"
        },
        "item": {
          "id": "c4860b74-844d-4eef-8cf2-8c3215d6f718",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5306beb5-de6e-489f-aa8b-cc11b04fbcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdda548-0010-45c8-a0e3-bf403b7d0be5",
        "cursor": {
          "ref": "e8a1d4c1-a9ef-4682-9dda-e70f67789648",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9aacd30a-3c76-4a4f-a88b-a4dc96c39985"
        },
        "item": {
          "id": "cfdda548-0010-45c8-a0e3-bf403b7d0be5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a6d795d9-b4b7-4514-86af-e037d9350847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de313d8d-4dc1-46ea-8837-d6e6b9f308e2",
        "cursor": {
          "ref": "ee48b4e1-9274-4e1d-860e-184a0556bd37",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "effe363f-2ffa-4690-902f-4d51a1fa63b9"
        },
        "item": {
          "id": "de313d8d-4dc1-46ea-8837-d6e6b9f308e2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "dd2301ed-d76b-45ce-bbde-515bd7a2a415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d600cec-0d78-4a50-a5e3-70d25b3b8e28",
        "cursor": {
          "ref": "8e475eae-fdec-426b-a00f-66c6dcc04ff3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1d9db31f-6188-46b9-8982-99916ff8522f"
        },
        "item": {
          "id": "3d600cec-0d78-4a50-a5e3-70d25b3b8e28",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c61c3031-f201-4714-8446-0c5401636d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac4cef4-bf66-42fa-a98f-a459170e30d8",
        "cursor": {
          "ref": "421e1467-84b8-498b-b53e-85b36435b414",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "81707ed6-55c8-4850-b9db-d39b82c828ed"
        },
        "item": {
          "id": "3ac4cef4-bf66-42fa-a98f-a459170e30d8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3abce4bb-7411-45f1-853f-c272b99dac66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba082ec-c110-4814-b780-8066f38fdbf6",
        "cursor": {
          "ref": "681cd6fc-f0be-4ac5-a736-692125de3955",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a3c492ad-6441-413b-b11c-1b47780fd2c6"
        },
        "item": {
          "id": "9ba082ec-c110-4814-b780-8066f38fdbf6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1c25971c-ecc1-4787-9592-f87208b99490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bcfe07-d2b1-47f4-9084-94ff61391466",
        "cursor": {
          "ref": "e3f69d0f-0693-460a-9a7b-f4b90c115c3b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "55ebfd7e-b69a-42ba-a0a7-b2a9d1667867"
        },
        "item": {
          "id": "30bcfe07-d2b1-47f4-9084-94ff61391466",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1f9e5a07-1711-42fb-bcac-01a33ce68e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e3d9bc-5701-4f04-ac2c-9eefff2fd1f4",
        "cursor": {
          "ref": "1edf8859-6225-486c-9677-06793f0cfb74",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "47badbcd-7035-4ccb-a4db-17d963b43cff"
        },
        "item": {
          "id": "a7e3d9bc-5701-4f04-ac2c-9eefff2fd1f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "80448a06-5d93-4e9a-97b8-460fcb33ddb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c58b7d5-5489-4f3a-96fe-3371c5b8e174",
        "cursor": {
          "ref": "6b76f124-7bc4-480e-8b43-b98e659dd726",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e6c64e50-2b51-4e02-ba3e-5ac952b29cd9"
        },
        "item": {
          "id": "7c58b7d5-5489-4f3a-96fe-3371c5b8e174",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "650b1327-a49f-4e26-9591-1998c9b8aa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc936a63-e277-4744-b999-5c3e755eab40",
        "cursor": {
          "ref": "f18f2d29-bffd-4765-8964-91f60e91440d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "603b18c2-8f2a-426e-b93d-4c1b028bc82e"
        },
        "item": {
          "id": "fc936a63-e277-4744-b999-5c3e755eab40",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "293b68e2-7f81-44f5-8cf5-383eeeb27074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccd2af8-d14c-49e2-a961-bd2c53d975eb",
        "cursor": {
          "ref": "4b2ecdf7-03cd-4c1d-8896-72b4853c4d94",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "62029ca4-9f49-4950-85ea-5aaa788d0326"
        },
        "item": {
          "id": "6ccd2af8-d14c-49e2-a961-bd2c53d975eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c3602037-3d74-4dbb-9277-684f306c00fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0075d4e0-92c9-4dfb-b6eb-c1d1f9490bff",
        "cursor": {
          "ref": "0f6d3e44-32d7-4e3e-ace8-a6f4e3832d55",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a7e7b6af-0ca4-4b93-b0b8-4e458aa4ff55"
        },
        "item": {
          "id": "0075d4e0-92c9-4dfb-b6eb-c1d1f9490bff",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "834b801a-770a-4050-9a8f-a5fea04833da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad2dd54-71df-4d1e-a67e-ec54aedd2bff",
        "cursor": {
          "ref": "64ceee6f-10b3-450a-a164-cee24e833042",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "37592b6e-637a-4dbd-b623-050863177e51"
        },
        "item": {
          "id": "2ad2dd54-71df-4d1e-a67e-ec54aedd2bff",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "671c7429-4235-4836-b9f4-e222b7ea8a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba8c16d-4071-4e0a-baca-6400b35dde40",
        "cursor": {
          "ref": "58721b8e-ec87-45c7-85b4-b947c3c297c1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0cbce9bf-f00a-4a29-9946-a7dedbee9d90"
        },
        "item": {
          "id": "6ba8c16d-4071-4e0a-baca-6400b35dde40",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4eb03c97-898d-46aa-b1ce-6e8b3123b3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1dbeb7-719e-453b-8632-47220ee67e6f",
        "cursor": {
          "ref": "8ac32416-51c5-447e-bdf7-61d6cdb3a543",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "58095a63-0eb0-4777-be12-6826a264ac1c"
        },
        "item": {
          "id": "8f1dbeb7-719e-453b-8632-47220ee67e6f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8ec22703-a41e-4b46-9b4f-ca618d7756ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad2cef8-e87f-4ee0-88ff-d604548deeb2",
        "cursor": {
          "ref": "b3890a1e-8792-47e3-b4d7-87f4d8922d34",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "385979de-a0eb-45d5-ad7e-e6b9b15e9a12"
        },
        "item": {
          "id": "5ad2cef8-e87f-4ee0-88ff-d604548deeb2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1cd996f9-43ef-461d-9e46-0d6858d198b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a66b5b7-b8aa-4233-b2f0-9cdd461963c3",
        "cursor": {
          "ref": "f9caac6d-d968-4fdc-92b6-b72034bcdab0",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f2a66ed5-8028-4459-863e-c2f41d046b22"
        },
        "item": {
          "id": "3a66b5b7-b8aa-4233-b2f0-9cdd461963c3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d52a658b-cdda-4007-8739-870ff281a05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8361e7-334f-415a-910d-0c0744513005",
        "cursor": {
          "ref": "f77cddd1-15ee-471a-9986-9a59bdbdae9c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3e2eb98e-623d-4b14-837b-feb96e4adf63"
        },
        "item": {
          "id": "df8361e7-334f-415a-910d-0c0744513005",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2983a655-235f-4172-bb9d-76c6f4421274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350751de-3cc4-4077-bba4-054f55c6866c",
        "cursor": {
          "ref": "6d50b7f8-cf90-4a03-8946-a6da4b6f6f0e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "067b4a94-1f30-4dce-a5c5-069f431bb286"
        },
        "item": {
          "id": "350751de-3cc4-4077-bba4-054f55c6866c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "32c91d64-3ca5-45a8-bc8b-abbb03b145fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1f8865-3673-4ec9-985b-cc266105ac76",
        "cursor": {
          "ref": "a2c995a2-84ae-4149-9fb7-1e1df9f826ae",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0e4f3288-f9fb-4a81-b811-3bc200e3f284"
        },
        "item": {
          "id": "7c1f8865-3673-4ec9-985b-cc266105ac76",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2231e3c3-148e-4a65-a8e8-db10456dc4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9aeffb3-a74b-4d67-b3e7-71d0aa40b4dd",
        "cursor": {
          "ref": "e81795b3-5764-4a3b-ae3a-94e9b33828a5",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1f06e281-86f0-4e60-ad44-429f78dac776"
        },
        "item": {
          "id": "f9aeffb3-a74b-4d67-b3e7-71d0aa40b4dd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f7bcc616-f3a4-405c-bd3b-0ba691421cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ab41ec-7d99-428d-9e1b-413d088767e3",
        "cursor": {
          "ref": "f6e8bbbd-c5a7-4eca-8977-2a2b4740d082",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d5e3c9e5-a28d-424f-af45-c7de040d83de"
        },
        "item": {
          "id": "27ab41ec-7d99-428d-9e1b-413d088767e3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4caaccb7-0f41-44f4-a217-8257bd56d12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a71073-6224-4013-ad23-6c8d469b1ef5",
        "cursor": {
          "ref": "7c36d1b0-5bf2-40e2-bba4-526cafa076d8",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7c9da354-ca7f-46bd-a94c-99f5fe5b2f8b"
        },
        "item": {
          "id": "41a71073-6224-4013-ad23-6c8d469b1ef5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4af83a14-ec63-4735-af3f-d63f372fee25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffb8b1e-20b2-459c-95c1-5f9e39a1cdd1",
        "cursor": {
          "ref": "7c07d714-bb0a-4d33-9efb-2e935de162c8",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "083a86d0-5fb8-49f4-a833-fe3078298169"
        },
        "item": {
          "id": "fffb8b1e-20b2-459c-95c1-5f9e39a1cdd1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0ad298fc-23ea-4ace-aa5c-4cc2e0d15e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aebbc5b-da35-48b4-9903-65b80946d920",
        "cursor": {
          "ref": "27911c29-cd5b-4f5c-89e0-a7bd4d1ca4ed",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a2f50ecf-d0a9-4146-beec-5fcf9668b53a"
        },
        "item": {
          "id": "1aebbc5b-da35-48b4-9903-65b80946d920",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "008515fe-6e11-44e4-b4d3-77064ead56a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b416a41-ff68-4fb4-97e3-a31cf6eb0104",
        "cursor": {
          "ref": "a33eea0b-8042-4b22-95c1-0ba96966fae3",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fbf84e4a-422e-4e55-a1b5-720038761d5a"
        },
        "item": {
          "id": "2b416a41-ff68-4fb4-97e3-a31cf6eb0104",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3e8a57ce-c3dc-4121-8109-c5de513f291e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b10310-4835-46e5-90fc-e98bf91046f7",
        "cursor": {
          "ref": "aabbe5f4-62c1-42aa-b69b-1a2e329ffcea",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dd1d0f57-77b6-4cf9-baf3-c16a83f39e16"
        },
        "item": {
          "id": "75b10310-4835-46e5-90fc-e98bf91046f7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f74ddae7-2c5c-4a62-86b2-3180efa2ce73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fe1929-1b5d-490c-b229-4b643d927765",
        "cursor": {
          "ref": "cf524d98-652e-4c57-bf1c-38e5b17703ce",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "26163d39-5b3a-44bc-90d0-b77ca2ea1ef6"
        },
        "item": {
          "id": "88fe1929-1b5d-490c-b229-4b643d927765",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a23821c8-284b-4b4a-bd76-84bff943b9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bf9e57-a646-42c0-86b2-87443c43c7c7",
        "cursor": {
          "ref": "0df456b8-1ad7-4486-afaf-2dc80c1a1b61",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bd041b7c-3208-4c4e-99c6-0ce29d095bc6"
        },
        "item": {
          "id": "61bf9e57-a646-42c0-86b2-87443c43c7c7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "14a5e015-56b3-4c24-80aa-918f08922ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde8f282-847c-47c3-ada4-58959e71959b",
        "cursor": {
          "ref": "4861805e-b8e4-4434-962f-ea92b6a65306",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "28d46e23-4073-49fb-8cbd-6dae58c972f9"
        },
        "item": {
          "id": "dde8f282-847c-47c3-ada4-58959e71959b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4e4cae06-45fc-42d7-a255-30554797f201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4571472b-5c90-4bf9-a1c9-d0af30af7d80",
        "cursor": {
          "ref": "1481f5a8-bff8-4d51-a492-637f9f69487e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1665dd49-6e86-4fa4-a15c-4db0024e0a81"
        },
        "item": {
          "id": "4571472b-5c90-4bf9-a1c9-d0af30af7d80",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b490ef17-6f78-40b3-b861-6186ff828764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436236c8-5137-4711-9010-d1a1dc6b33cc",
        "cursor": {
          "ref": "7f01dcfa-9b1d-4299-8248-8f3dfee583ef",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b340b1dd-8a3a-4427-a957-e84e525e02bc"
        },
        "item": {
          "id": "436236c8-5137-4711-9010-d1a1dc6b33cc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cba395da-8c85-48a7-902e-a666dc603a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ef6d08-2127-4d78-8b4f-681cd470df0d",
        "cursor": {
          "ref": "9f05f7f6-0daf-45d4-a4e9-2ddb5fa30508",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c0415396-cc70-4091-875f-4d32c4336db1"
        },
        "item": {
          "id": "41ef6d08-2127-4d78-8b4f-681cd470df0d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "41c4d6af-e4b0-48bf-b385-c1634e5f25c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa17b66c-c543-4532-9ce6-79e546bb191c",
        "cursor": {
          "ref": "dee6249d-e279-436e-b8a5-53b35a6d0168",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9dbdde33-afc8-4cb6-80ea-ae510d51a4a2"
        },
        "item": {
          "id": "fa17b66c-c543-4532-9ce6-79e546bb191c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "36605ea0-725b-414c-a9e5-42961d6142c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a90ea0-d204-4334-bb11-e042aa6cf354",
        "cursor": {
          "ref": "79627a37-bd82-4a40-91d1-a54154c31698",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6ce0cf11-c58b-40cc-8f93-8b816cbea08f"
        },
        "item": {
          "id": "b0a90ea0-d204-4334-bb11-e042aa6cf354",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "764ff9c1-4e9f-4e1c-9f26-b5708b112b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831f50e8-6c2f-4f99-bd04-de807fee2e0a",
        "cursor": {
          "ref": "9d003ad8-bce0-4b1e-8174-a07b78dace83",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3aacab3d-931b-4620-8895-d1791f671a1b"
        },
        "item": {
          "id": "831f50e8-6c2f-4f99-bd04-de807fee2e0a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e032179e-54dc-4a09-af73-71cd4a699a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d1b894-5be6-4b16-afee-ec9d1057ee94",
        "cursor": {
          "ref": "fdedd113-96e9-4560-aa12-27363ca1c154",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e45907f0-0c79-4539-b8bd-e868538c215f"
        },
        "item": {
          "id": "c3d1b894-5be6-4b16-afee-ec9d1057ee94",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "059bda2b-1451-47ff-8edb-b35b34e3592c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dd5a66-ad18-418e-bbfc-816d490bb48e",
        "cursor": {
          "ref": "eecf2a08-fe64-48cf-ab92-fb3ef805b56c",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c9eef394-0cab-4ada-8a6b-68448dd40ffa"
        },
        "item": {
          "id": "d1dd5a66-ad18-418e-bbfc-816d490bb48e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0e4d0254-b496-46fa-acb2-e852cd1b3066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3709d23a-e944-4469-a465-a3a841287cbf",
        "cursor": {
          "ref": "d99af55e-cca0-4675-97f5-06a846b02dfb",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ff21e9a0-d5e3-4064-8ca2-3438ddcc7329"
        },
        "item": {
          "id": "3709d23a-e944-4469-a465-a3a841287cbf",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "11b36dea-cb38-4a12-ba09-addcf3fa1f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ab28b4-ba34-40cb-9be0-cff57aef2e32",
        "cursor": {
          "ref": "0b22c8dd-7fad-4d27-8ecf-764f7037f14e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "db00b81b-c475-4f7b-8856-bb3d35d448b8"
        },
        "item": {
          "id": "18ab28b4-ba34-40cb-9be0-cff57aef2e32",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4e540a58-2f63-4174-9b51-ca73c0a5f687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b176ba73-9024-4e82-92df-cb98b95c7f71",
        "cursor": {
          "ref": "a6e467ff-a5da-4e4e-866d-4e6c230f880f",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6ad99ad6-11c5-425b-a6e1-366b939aefe1"
        },
        "item": {
          "id": "b176ba73-9024-4e82-92df-cb98b95c7f71",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8c6578ce-17c2-4387-8b79-71fec879af9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23193ec1-e829-491c-8d7e-859eaa788575",
        "cursor": {
          "ref": "75a76264-9110-465d-86d4-8e0a1ceabce4",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "58ac2de8-736d-42ff-a83f-bae88124fc4f"
        },
        "item": {
          "id": "23193ec1-e829-491c-8d7e-859eaa788575",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "df763229-b51e-4ece-8b2c-2709bc1de168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad759b53-54d1-4bdc-ae74-1d0fc627e6ba",
        "cursor": {
          "ref": "c817d216-0279-419c-9d2c-e2c91d808531",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0e43b271-0900-4d21-af03-b88071021cb9"
        },
        "item": {
          "id": "ad759b53-54d1-4bdc-ae74-1d0fc627e6ba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "33120515-e474-47c5-b247-539d08be0627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d799679c-7727-482a-98c9-658de6472d65",
        "cursor": {
          "ref": "d8fc20f6-b213-4556-92d8-e69bc2d9eb5e",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "18a78609-f9a5-4ab5-bf5e-410cd6ff6043"
        },
        "item": {
          "id": "d799679c-7727-482a-98c9-658de6472d65",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2733fbad-10f1-4346-9021-b99bebc4ff1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "22a44067-7490-45e8-9d2c-de1b63d0f31c",
        "cursor": {
          "ref": "14c46cd4-13dc-4724-a086-3826c03cd3b1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "47b7246a-b3a7-419e-8708-6e51944fb977"
        },
        "item": {
          "id": "22a44067-7490-45e8-9d2c-de1b63d0f31c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6d5f5f82-0836-4273-8b2d-ce110e7616fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "32858378-a9f3-47df-b493-0cb53439a339",
        "cursor": {
          "ref": "7c1b825f-24f7-4775-ad1a-69917f1c4dbf",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9932d849-2e5e-47b5-9380-17b0e4c4371e"
        },
        "item": {
          "id": "32858378-a9f3-47df-b493-0cb53439a339",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "85a0a239-21f1-4e97-9fc3-3d470bd17226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "66fd39d1-2dce-4ba5-b7b1-8e3a90306934",
        "cursor": {
          "ref": "9d5df4bc-8d00-46fc-882c-eb6ae2c9c08b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1850415d-8ffa-49aa-895a-aa159ed83181"
        },
        "item": {
          "id": "66fd39d1-2dce-4ba5-b7b1-8e3a90306934",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b1227cb6-8a08-4be7-a79e-28499010d233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7f063718-54c1-45e1-80db-49392150b32e",
        "cursor": {
          "ref": "a45dd9f9-f6f9-463a-b719-c2f54b8e8456",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "71dbce0e-25e7-4d67-9b57-04875d309684"
        },
        "item": {
          "id": "7f063718-54c1-45e1-80db-49392150b32e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e34f23ba-b0e4-416f-9ff4-bf994dd7469a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "a15b7454-498d-4502-8e1f-77a84fb3f5a8",
        "cursor": {
          "ref": "7e077f54-3391-4ac2-a2b7-3ef9b0531043",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "94b5a044-7b14-4e6e-804e-88ead0c7fd6c"
        },
        "item": {
          "id": "a15b7454-498d-4502-8e1f-77a84fb3f5a8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d931ba87-3e16-4d2d-aa5f-803fc348dc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c2daffc2-bcc5-49c8-9d21-f45782dcd4b5",
        "cursor": {
          "ref": "0c34e058-5004-4871-a0ef-f9b007465af2",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b4b0e8be-85d7-4487-8a98-2011670571f6"
        },
        "item": {
          "id": "c2daffc2-bcc5-49c8-9d21-f45782dcd4b5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2510b307-84f9-49a5-b9d1-1428df5878ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2797fe73-4bca-4fdd-bcf0-b5c6a13befff",
        "cursor": {
          "ref": "648b1ebf-cf00-41f8-b25f-13ce1de6f78b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "afecf69c-a93f-4707-a3bd-811f07ffc223"
        },
        "item": {
          "id": "2797fe73-4bca-4fdd-bcf0-b5c6a13befff",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8105bb19-89de-4e4b-a411-6831a42e226e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2880ca-e92e-44b3-8995-9028083309de",
        "cursor": {
          "ref": "3bffc590-d957-4f88-99de-0902aa3e176d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8f416034-c364-48a9-b7fe-4d05e5c4153f"
        },
        "item": {
          "id": "fc2880ca-e92e-44b3-8995-9028083309de",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8515e92c-947b-4f08-a4e7-27afee0bc98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75e0c14-9202-48ec-bb93-53ea14ee23ad",
        "cursor": {
          "ref": "2af524b7-d784-4490-b7ac-64a7e34f12b0",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e061b7a1-7610-4976-950b-a998fcc10b88"
        },
        "item": {
          "id": "c75e0c14-9202-48ec-bb93-53ea14ee23ad",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0655f4bb-158d-4728-920f-379ce48b726e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fa065a-e4c3-413c-a8da-7519ef22ee9c",
        "cursor": {
          "ref": "1ae829fc-144b-4850-ba4b-29bf07545515",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "23d28db8-6eb3-4cb0-b079-fd4bde0d2a50"
        },
        "item": {
          "id": "a5fa065a-e4c3-413c-a8da-7519ef22ee9c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "85b31df6-1d06-481c-877a-8c643ca4612b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30eb75c-9829-4ab5-bc96-e96c55428095",
        "cursor": {
          "ref": "1dd3d035-9767-4708-b419-5a9cea5e3a61",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1e401d5c-6e07-4231-a5de-ac3ca09834e9"
        },
        "item": {
          "id": "f30eb75c-9829-4ab5-bc96-e96c55428095",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ed9832a7-4847-4155-a700-59175c349438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8759ee0d-fe66-4dff-90b1-ef7a6db0884f",
        "cursor": {
          "ref": "36da22f1-6404-47ac-ab4d-1000c905ddf3",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3f12303c-d37b-4bd2-958b-7b2401c4cd26"
        },
        "item": {
          "id": "8759ee0d-fe66-4dff-90b1-ef7a6db0884f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b9db8ae3-7ffa-4542-bd1f-f7bc2dfc2e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5413b68b-73c6-4a49-ab46-b17daea14b91",
        "cursor": {
          "ref": "5ee02545-adc8-4883-931a-2186c78cbe76",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "73636c3d-421e-4845-b983-e512d85e31c6"
        },
        "item": {
          "id": "5413b68b-73c6-4a49-ab46-b17daea14b91",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cb03a22b-f882-449d-b766-da6acebd293d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f07bac-5a27-42df-8ebc-68226b14a39d",
        "cursor": {
          "ref": "3c0d1306-6279-40b5-9459-e64b60e90d08",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5604af77-d3c7-4636-9211-77c708e0c9ad"
        },
        "item": {
          "id": "f8f07bac-5a27-42df-8ebc-68226b14a39d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e55bee9a-0f72-409e-a3a2-1317f57ca893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c62e26f-ff29-463b-91de-090c2731534d",
        "cursor": {
          "ref": "f00b003f-30ef-4849-a47c-3cb440a990e0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e2308dae-faeb-4724-a564-0397d1c4490d"
        },
        "item": {
          "id": "4c62e26f-ff29-463b-91de-090c2731534d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "da98e6c0-821a-4315-97cf-2bbca7242fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b1f21c-848a-4042-8cc6-3649e1b9498f",
        "cursor": {
          "ref": "fe40d49c-67f9-4e1b-ada7-89e5fc257b12",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ac6b2a25-cfff-4243-8c6c-0283ca54775e"
        },
        "item": {
          "id": "d4b1f21c-848a-4042-8cc6-3649e1b9498f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ce2ced51-3736-4e8f-9f0e-e122f192c2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532bac57-c8fa-4070-8ea7-90b3c7e13f87",
        "cursor": {
          "ref": "df0d12c8-5c0e-4b5d-a1e4-347eb0f27f20",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2585376b-1d91-43af-aba4-d9f6b865be1d"
        },
        "item": {
          "id": "532bac57-c8fa-4070-8ea7-90b3c7e13f87",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cb635b14-df44-4b66-b242-242ade1964d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08919499-61a8-4753-93db-73c4b4366e98",
        "cursor": {
          "ref": "638231ff-e9d1-4a6e-b881-307e210b1890",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "af1e26b2-1a7d-4b5f-a489-ef5c0bb9d1dd"
        },
        "item": {
          "id": "08919499-61a8-4753-93db-73c4b4366e98",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "86824f07-2021-4f96-97e6-d286776ee92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f61c35-9b91-4e7b-bfc9-c88b467c9c5c",
        "cursor": {
          "ref": "8eb9c3ab-2ae8-4caa-975d-e4c52fc35b36",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "41287f3d-298a-47b1-b83b-931cebbf4233"
        },
        "item": {
          "id": "66f61c35-9b91-4e7b-bfc9-c88b467c9c5c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8b0b4f7e-9507-4d16-9639-7875835d26a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba09c4b-696e-4e03-85cf-c34f5dbf4ff1",
        "cursor": {
          "ref": "8cd9c0ee-76c7-4211-9e75-6f686a16f42d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4af4670d-b8ee-4e31-8d17-e17ce9cc5097"
        },
        "item": {
          "id": "4ba09c4b-696e-4e03-85cf-c34f5dbf4ff1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "445a1eb8-116d-4e8c-b4ed-cb918169753b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4726d385-bbc7-4032-be6e-e8de664a71ac",
        "cursor": {
          "ref": "3faeafec-6da3-46b3-9549-b0d8d3482fe1",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5864e322-f829-4f7b-ad3c-a95c7ac80fe3"
        },
        "item": {
          "id": "4726d385-bbc7-4032-be6e-e8de664a71ac",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b850c9e2-0b2e-43fa-9218-33983d538ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a463d3-314a-4a48-9615-c4feec1b6b2c",
        "cursor": {
          "ref": "dee5f1e6-0bf1-49b5-97b9-40b72552e192",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6e52c9ff-706e-4f75-bf6d-89bffb119b64"
        },
        "item": {
          "id": "b7a463d3-314a-4a48-9615-c4feec1b6b2c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "79a958a2-2fe6-4ddf-81ec-95e04f99a9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2416166b-7706-478d-be2e-d245fcadd0d1",
        "cursor": {
          "ref": "58cdde18-c24e-4d75-ac12-e7bcc9569a1c",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dca7dc98-7582-4db5-b624-56de01498ed2"
        },
        "item": {
          "id": "2416166b-7706-478d-be2e-d245fcadd0d1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3a02aea9-80a7-4bfe-81dc-18cc6cd90415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4d0be2-5e1f-4fcb-b568-c55d2aa24bb5",
        "cursor": {
          "ref": "6fb2ac46-74e1-4a5b-9091-f594bee8fc95",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "18622357-e754-4f41-921f-d6fea9fc01a1"
        },
        "item": {
          "id": "3f4d0be2-5e1f-4fcb-b568-c55d2aa24bb5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8ff19142-9065-4226-a761-462b32cb2644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084ae6d4-8fa6-4e72-855d-bfa12dc1fc8b",
        "cursor": {
          "ref": "a2e3c484-d280-4bd2-acc9-022a0b40389d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c10388ac-62ee-4443-b09b-bc429e8dec97"
        },
        "item": {
          "id": "084ae6d4-8fa6-4e72-855d-bfa12dc1fc8b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4800a7e2-067f-4c48-a944-3e7c76c941c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de170e9-4239-4d72-837b-8f19934d35fb",
        "cursor": {
          "ref": "1f68a84b-483d-4e7f-9fc2-4820693e321d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "abe96b12-565b-4df9-864b-db5b7a2bbbd4"
        },
        "item": {
          "id": "5de170e9-4239-4d72-837b-8f19934d35fb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1e94eb3f-278a-4224-b9e1-4a3acf272e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccb9215-8d29-492b-8943-f59a16c28d09",
        "cursor": {
          "ref": "8a8ab7a7-bba9-4f5f-b39d-64df61df4e6f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "29531489-8638-4c71-a957-efc8ddebe130"
        },
        "item": {
          "id": "5ccb9215-8d29-492b-8943-f59a16c28d09",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "31f38700-c0d7-49d4-822f-23183cca1b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697e9eec-0986-4b9b-8e23-bd50c8a41594",
        "cursor": {
          "ref": "e4ff2f1e-7230-439b-9a34-599f129c23d7",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "042a3557-0ef1-4f05-ad1c-1eb8ccd7cca2"
        },
        "item": {
          "id": "697e9eec-0986-4b9b-8e23-bd50c8a41594",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e4319d9b-df4f-4184-a374-732f959ecd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90ea8cd-171b-46c3-94c4-437ff8d2e698",
        "cursor": {
          "ref": "08b11b9b-ba92-41b4-8b85-34a4834b6e9c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ee0ae09d-9452-441e-8dc6-9d84dcb939c7"
        },
        "item": {
          "id": "c90ea8cd-171b-46c3-94c4-437ff8d2e698",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c2c56fc2-28d0-4c72-914d-4f86e5be7518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219c2db3-22c5-4535-93e7-bd1d240ea6fd",
        "cursor": {
          "ref": "c527dc9e-d89e-4b3e-a823-56c743cbef0e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a4f8659f-781e-4771-95f4-f744296dc264"
        },
        "item": {
          "id": "219c2db3-22c5-4535-93e7-bd1d240ea6fd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ea4d63dc-d90a-4d1a-ac5f-7808397f0481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec037d1-39c7-4e1e-914c-06b1e474008a",
        "cursor": {
          "ref": "9a6a08f4-2ec2-4187-8968-94f476ad14c2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7c57bfdd-8162-4d4c-b791-6725f4c3158c"
        },
        "item": {
          "id": "9ec037d1-39c7-4e1e-914c-06b1e474008a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "974f7dea-942e-4b38-a122-37f20c9aaf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55d0cb6-e7dc-4334-bbee-f4014fab6fd4",
        "cursor": {
          "ref": "cda5d1a2-5ecc-4619-8074-af86869e0224",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5331bd3e-c23e-4e30-adac-b368bef47398"
        },
        "item": {
          "id": "b55d0cb6-e7dc-4334-bbee-f4014fab6fd4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "befd9b74-0668-42a7-b94e-1d93f3dddc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa0f035-b9c6-4959-beff-f1f491c4fcdf",
        "cursor": {
          "ref": "b16b0576-1f9d-469b-8cc0-a254dfd0e82f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "56b8cde4-5313-4e6e-944a-a16e3ad77c5b"
        },
        "item": {
          "id": "7fa0f035-b9c6-4959-beff-f1f491c4fcdf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "36f2ede7-abfb-4ff8-b5d9-5e652244043b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19676123-5831-4013-98f8-5ed472bf571e",
        "cursor": {
          "ref": "d1c4f8cc-d3ea-4a67-b5d0-89d119578704",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "99b83718-30ea-43e7-b1c7-24aa636ba917"
        },
        "item": {
          "id": "19676123-5831-4013-98f8-5ed472bf571e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8caef5a5-3b2b-4482-a7eb-16c95ab5b4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed5b43c-2e33-444d-8aed-a16014530d48",
        "cursor": {
          "ref": "b71e956d-9a5f-41fc-a310-174c134bc8c6",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "96968096-052c-4d5c-8ebb-afad4bf8fc32"
        },
        "item": {
          "id": "bed5b43c-2e33-444d-8aed-a16014530d48",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fa9da683-f5ae-4f2c-aefa-3203a65fae82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0701244f-afd4-4e1c-9461-87b29255b2dd",
        "cursor": {
          "ref": "044b97cb-f60f-40db-965c-be043bd42184",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b3133aa2-4746-4ced-a110-2d548dd4c84e"
        },
        "item": {
          "id": "0701244f-afd4-4e1c-9461-87b29255b2dd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2a51b857-25d1-49ae-8569-4dad60c01690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd83a1e9-c4f9-4812-933f-e4c787462e09",
        "cursor": {
          "ref": "2c308745-bd6e-49c0-9b67-7411ba29ad2d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ce01165c-35ba-42a5-b292-cb8302e5ce80"
        },
        "item": {
          "id": "dd83a1e9-c4f9-4812-933f-e4c787462e09",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "450f2df5-96d2-4802-aa27-36b9d2fe20b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493e1136-923c-4f9c-95dd-148f3adb0564",
        "cursor": {
          "ref": "813d64b0-c63c-4739-9f0f-1c68445ca8e4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5b398e01-50c5-4b9d-836d-2e706c95f102"
        },
        "item": {
          "id": "493e1136-923c-4f9c-95dd-148f3adb0564",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2484dd01-71f4-4f1c-8faf-b21d398acf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c88e7cc-d033-42f3-893c-746b199ee8cc",
        "cursor": {
          "ref": "d0928a9f-3292-4892-a21f-3773369d3978",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3fe98b13-a61c-4ad0-8450-a3ed99437dd1"
        },
        "item": {
          "id": "8c88e7cc-d033-42f3-893c-746b199ee8cc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e24685e6-bff2-445c-a78f-ce0538a99f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bf437c-264f-42bd-9046-0ab64468a8e9",
        "cursor": {
          "ref": "9c7445f7-a298-44a6-86d2-34d1e9461c8a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e6e9c90e-bcca-406b-b9ca-545385dc0543"
        },
        "item": {
          "id": "54bf437c-264f-42bd-9046-0ab64468a8e9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "49d93f8a-143b-4984-98e0-e2c1bf332aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69757198-1f6a-41a6-9361-5cc93749a84d",
        "cursor": {
          "ref": "fae686fa-7bc3-4e8a-8a1b-9152d06ed533",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "02546183-1212-4b6c-bb35-580fb1980d88"
        },
        "item": {
          "id": "69757198-1f6a-41a6-9361-5cc93749a84d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4c63e12d-4052-41e6-9512-2b42dbaf0525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b34e80-6e77-49d5-aa21-70f9dab4b384",
        "cursor": {
          "ref": "99549aa7-0aa9-44ee-ab2b-c73ba49a4988",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "741fa1f1-f922-4e77-b99d-56de14c77a59"
        },
        "item": {
          "id": "85b34e80-6e77-49d5-aa21-70f9dab4b384",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "244bd159-f15a-40d2-aa22-5f27ede9741a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f693c1-75a3-454c-9ccc-8138e33a59cf",
        "cursor": {
          "ref": "994410da-0988-4416-b50b-5563edea4e0d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "afbf5923-a225-4290-9be0-b206cdf494a7"
        },
        "item": {
          "id": "20f693c1-75a3-454c-9ccc-8138e33a59cf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "208ab2af-280b-4c23-b7b3-f5962177b26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45839ff2-417b-49e1-8764-0b6faa0732bf",
        "cursor": {
          "ref": "bfb397b6-f824-467b-9e76-caa294aa5db1",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a58e1f26-cbc8-4ef0-ba2a-67ac11daa754"
        },
        "item": {
          "id": "45839ff2-417b-49e1-8764-0b6faa0732bf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b55bdc08-9b8a-4eec-ab64-5fcec679f420",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6405035-62ef-493c-86b2-2ad26c25d60e",
        "cursor": {
          "ref": "bffc4a18-1361-44cb-ac00-c22fa76439a4",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "73b3682c-9963-4c9a-bcae-54d187c8626e"
        },
        "item": {
          "id": "f6405035-62ef-493c-86b2-2ad26c25d60e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "43f7699f-5a4a-4724-a7fa-1493b0389316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a41369-af85-4106-879e-5d952f8b2594",
        "cursor": {
          "ref": "afe9eb0e-69ce-4e2a-86fe-5f03e69640b9",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1a778812-f307-49d6-a420-483741a384d2"
        },
        "item": {
          "id": "31a41369-af85-4106-879e-5d952f8b2594",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "79c4e200-3d12-482d-989f-7d3a659f50be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf134e35-c726-4666-bdc2-3aedcf6289c8",
        "cursor": {
          "ref": "710c5640-ecb2-41eb-bbdb-bffd58b8567c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "41fd5336-cec1-423f-bcc7-f96cbf5c6adb"
        },
        "item": {
          "id": "bf134e35-c726-4666-bdc2-3aedcf6289c8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9216cb05-570f-41a1-90a2-5f908ef7888a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf752b41-4d97-467a-ada0-60c92b81f3ca",
        "cursor": {
          "ref": "2f4ef11b-dd2f-4ec1-a3d3-096c5896b74b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2e8e1f92-7059-4601-b734-0208ab57fcf3"
        },
        "item": {
          "id": "cf752b41-4d97-467a-ada0-60c92b81f3ca",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "697e7df0-fbe9-4135-8afb-7751cebcdfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421f8fed-5ad8-4603-8bf2-3c38b4cb9ef0",
        "cursor": {
          "ref": "e745eea8-3960-451f-92cf-08f3f9d04b06",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0252d30f-866d-45a0-bb45-ef869a546726"
        },
        "item": {
          "id": "421f8fed-5ad8-4603-8bf2-3c38b4cb9ef0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "854211b4-1711-4da4-bd19-233672908046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c299b0e7-0c50-471b-b76b-b380448ab823",
        "cursor": {
          "ref": "deecccd6-2257-4171-a820-803becaa88a8",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "067a43e2-e3da-4941-9f26-1cf93605cd22"
        },
        "item": {
          "id": "c299b0e7-0c50-471b-b76b-b380448ab823",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1b8dadb0-d31b-42d3-b45e-0b4b433884bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baea62bd-aac0-4888-8765-15d08e08e4e4",
        "cursor": {
          "ref": "151039cb-8be7-4e71-9f3e-d5710ababd93",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8483d052-4921-4553-a037-a8a66a2ab08d"
        },
        "item": {
          "id": "baea62bd-aac0-4888-8765-15d08e08e4e4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "327ebc1b-5296-408e-8080-791831ee2ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06b4a21-d274-440b-a6c9-fcd6dc87eb77",
        "cursor": {
          "ref": "94814469-d2c5-48cc-894e-6deeac12c8b1",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bc42f4b0-ffd2-475d-96ad-aedbe3f26217"
        },
        "item": {
          "id": "d06b4a21-d274-440b-a6c9-fcd6dc87eb77",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "dac8ed3d-e54f-4f5f-bd9f-9a1b00dca892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec581bf-25a9-45db-b81e-156d418b1d87",
        "cursor": {
          "ref": "68c7348f-5471-4f4d-aeaa-81e882b8c00c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b2a3d34c-af16-49ad-b76b-304d3fe6c0be"
        },
        "item": {
          "id": "fec581bf-25a9-45db-b81e-156d418b1d87",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e730c066-779f-4917-ad0d-9bce6bf33e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55301d2-8610-4fcb-a37b-3d70d4e9bf46",
        "cursor": {
          "ref": "30e8f7f5-0f56-4b53-a0ed-02eca17b9ff0",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cb535ad7-a7c3-4277-86b2-778bab6cd099"
        },
        "item": {
          "id": "f55301d2-8610-4fcb-a37b-3d70d4e9bf46",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c1772bbc-d1aa-4eb6-9375-10f6e09783e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337894e7-5390-41d6-8835-e71d3669757e",
        "cursor": {
          "ref": "a6a13995-7088-4d25-88ee-43ac5ddf21ff",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "16c58fba-52f2-4c00-aad2-3f6ef66a61cc"
        },
        "item": {
          "id": "337894e7-5390-41d6-8835-e71d3669757e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ab52aa65-5a79-4c66-9801-8d2d8f17dde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c01694-9cec-4780-88cb-77fdb2268b45",
        "cursor": {
          "ref": "decc5804-d02c-42f6-a63d-f9077726fc66",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "403a27ad-2afb-4c4d-a606-32535dd68c64"
        },
        "item": {
          "id": "67c01694-9cec-4780-88cb-77fdb2268b45",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ed35e182-86a7-4620-8769-545ccdb91a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8403e6ef-feff-446e-9df4-16705b494117",
        "cursor": {
          "ref": "f8c054e7-d3b4-48e2-8f21-a9db9696d6a6",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4e450eb8-b4e4-4f61-8da8-b9d402b9c404"
        },
        "item": {
          "id": "8403e6ef-feff-446e-9df4-16705b494117",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3d8528cf-e77e-4d85-a8a3-786bf50588de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9feca1-aba1-451f-8b5a-55d3c2714ac3",
        "cursor": {
          "ref": "0aa990cc-ca95-4dd5-a972-678726749238",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d959db7f-eedc-4204-97a6-8a2ed5cc4e0e"
        },
        "item": {
          "id": "fd9feca1-aba1-451f-8b5a-55d3c2714ac3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2836a108-6ef3-4fb8-9e53-a750e2675b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac89eb84-a33c-4eb6-be58-78c82e5825f7",
        "cursor": {
          "ref": "a68d316e-2481-4bac-92bd-7cc5543f9da0",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3620cf31-8f2f-43fe-be5b-3b08c5528f45"
        },
        "item": {
          "id": "ac89eb84-a33c-4eb6-be58-78c82e5825f7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "86026b75-c527-47fb-8d74-f97ca3bb4f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3504f6-5a27-4b19-9cfe-563db22312c3",
        "cursor": {
          "ref": "3c4a20e4-598d-4770-b921-eb52cb8882dc",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "623931a9-3fc0-4acf-9f6d-47bd872d4daf"
        },
        "item": {
          "id": "6c3504f6-5a27-4b19-9cfe-563db22312c3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5dae3999-ee0c-416d-9c73-56c5c9287623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ba20da-64f6-41ce-8f53-62008043446f",
        "cursor": {
          "ref": "5651183d-3758-4e25-a3a1-1740b679985a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c5191dfe-c56b-4c6f-ab4b-a0731c5607aa"
        },
        "item": {
          "id": "f7ba20da-64f6-41ce-8f53-62008043446f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0fc02a99-fd52-4c37-99d9-e837bc8fdedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beece11a-124c-4317-9d09-baa91f1b739e",
        "cursor": {
          "ref": "f7b64c3b-a754-4095-9ea2-bd3fc752a89f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f6fcfa55-65d1-4193-86cb-63b847f70514"
        },
        "item": {
          "id": "beece11a-124c-4317-9d09-baa91f1b739e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "daa3fb79-8925-4687-8fc0-84192322aea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ca2454-973d-4736-a82d-9bcdda16d6f5",
        "cursor": {
          "ref": "07314ad5-73ff-411f-80da-001e84ae5d4e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "504d0c52-3bce-4801-bbd9-4edcf70714bd"
        },
        "item": {
          "id": "a3ca2454-973d-4736-a82d-9bcdda16d6f5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ba254ab1-ec90-4375-b7b8-b0837b7af1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf4ffb3-ec9f-408f-ae1d-74acd60e1604",
        "cursor": {
          "ref": "b32e2778-816c-4835-bf96-b8dbb1f0bf26",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "789e9b28-a979-49ea-95cf-d78457a4177a"
        },
        "item": {
          "id": "faf4ffb3-ec9f-408f-ae1d-74acd60e1604",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f71731f8-9d61-40da-8988-21913a0e92c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8648021-3fcb-40bc-91b5-d9176f0dbea4",
        "cursor": {
          "ref": "00509810-0278-4b05-a460-9688dde590b6",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8a390467-42be-4bf6-990a-ea67d4cb4e5e"
        },
        "item": {
          "id": "f8648021-3fcb-40bc-91b5-d9176f0dbea4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "26d70cba-6097-4028-a003-b22a3a0ebe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710cf3ac-5a86-4d71-9d42-2d93560a7128",
        "cursor": {
          "ref": "58d79935-69e7-4dc4-b925-c4afb2849bd7",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6008e475-ec7f-44f1-8e44-8efd87ac595b"
        },
        "item": {
          "id": "710cf3ac-5a86-4d71-9d42-2d93560a7128",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c933f06a-7f9a-45d6-a18a-c239e8ca3de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1e258b-57ac-45d7-a85e-b8fd600ca8db",
        "cursor": {
          "ref": "74a0190b-41d1-439d-b24f-fc543be4f93a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "79d8a0cb-0fb4-4542-a6aa-1ed2c4efd42b"
        },
        "item": {
          "id": "2f1e258b-57ac-45d7-a85e-b8fd600ca8db",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "52d7f815-a069-4675-8250-65bea52b45ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de81de0-f618-4658-9ba5-62c287668d7c",
        "cursor": {
          "ref": "59c02817-e19e-4aff-b0ab-d71f22497cc7",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5d3abada-a6c3-466f-83ff-29f0c6dbe696"
        },
        "item": {
          "id": "0de81de0-f618-4658-9ba5-62c287668d7c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ce189547-350b-419d-b8d9-f315ff3839f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c1a688-8399-46e5-b92e-844f6f2c8310",
        "cursor": {
          "ref": "39c962dd-de54-4989-add8-210f9782877d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "697d8149-6be6-404c-b39f-aeb19851d1f1"
        },
        "item": {
          "id": "d4c1a688-8399-46e5-b92e-844f6f2c8310",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e16ea36d-0c4e-408a-a4d2-73e45f6a6217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a34d479-40db-417f-8ade-91954721098a",
        "cursor": {
          "ref": "e658956a-5ea8-40b4-9816-017530451185",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c6a230e6-b92d-4378-bc78-955990f8d130"
        },
        "item": {
          "id": "7a34d479-40db-417f-8ade-91954721098a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "18466460-83a5-45fa-9409-e6ce0bd9ae71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fae756-d8c4-40bf-82ac-ab97d4a1130c",
        "cursor": {
          "ref": "1e2fd81b-9acc-44ca-bf3c-6bb99c75d74b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3c510d69-d79c-4d27-ba40-910673c8c3f7"
        },
        "item": {
          "id": "57fae756-d8c4-40bf-82ac-ab97d4a1130c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e8bf0151-d0da-4446-b409-7d48a035b927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a9b35-efc7-4730-9c52-b8a85691fa96",
        "cursor": {
          "ref": "44a9e05d-5d1c-48dd-a3c2-5cfffc09c538",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "57a30aa2-60f8-4237-ae21-05278a4d627c"
        },
        "item": {
          "id": "2e9a9b35-efc7-4730-9c52-b8a85691fa96",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f54d9fdd-e5f7-46b6-9130-21b5e1becca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d13b88-971c-4001-a935-9ea371a8de76",
        "cursor": {
          "ref": "3bd41912-05c5-4a29-bd28-1c2b04585041",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c902bef0-13c5-41b1-b282-ce4c7f1c6ec9"
        },
        "item": {
          "id": "c9d13b88-971c-4001-a935-9ea371a8de76",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ec772820-44ac-4fd1-a240-156cf9f50005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01abce8-b85c-4d9c-bd9f-b5627c1c7e40",
        "cursor": {
          "ref": "a7b7f3fc-884b-4abd-a358-96362c8d9a5d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7b9ca5b5-5524-4bb0-bd3e-41d1a42b6b5d"
        },
        "item": {
          "id": "f01abce8-b85c-4d9c-bd9f-b5627c1c7e40",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f9c55d3c-c550-4e2e-94f8-4bb076132057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054a1caa-b335-4ee5-8c57-31db8bfdda84",
        "cursor": {
          "ref": "db6d45a8-9ee2-4eef-b353-763f47a9d7c7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2b009a6c-f2d3-4183-99f6-7459e3863616"
        },
        "item": {
          "id": "054a1caa-b335-4ee5-8c57-31db8bfdda84",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "561d1e1c-a336-4da4-9bb7-b0ef0bc35d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a95bec-c4d5-46e0-9d2d-501c906a1c5c",
        "cursor": {
          "ref": "ec3e801a-262b-4669-a70f-92bfb6012b51",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "17ad50ee-a114-4e3b-848c-f505f2065a92"
        },
        "item": {
          "id": "56a95bec-c4d5-46e0-9d2d-501c906a1c5c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d1b8c74f-bcb1-4cb6-8fe2-a87c380a50f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcae775a-01ec-4237-9c21-729a64eeea3e",
        "cursor": {
          "ref": "56a65bf6-18cf-4dd9-ba6a-f150aacb64b4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b6bcef5f-2929-41bf-9908-16674c3db0d8"
        },
        "item": {
          "id": "bcae775a-01ec-4237-9c21-729a64eeea3e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "633c3480-00a9-461a-8e86-ae0fa349c081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fd50d3-a4c3-4b6e-9922-e117d39893a9",
        "cursor": {
          "ref": "1116bc10-2b65-4d26-9ee2-bdc4837a9b76",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4dc4cbb0-4a44-4ec4-98ea-df29e6bc5d06"
        },
        "item": {
          "id": "c3fd50d3-a4c3-4b6e-9922-e117d39893a9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ba6981d2-298f-48fa-8edc-73b7498ad6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb28b1a-5cfa-4584-a1ad-68faa8bffaa0",
        "cursor": {
          "ref": "9f9d6c6d-c4ae-4010-a36b-e21c91eaaf90",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6ba5aeb4-ec18-44b3-89ec-4160b06c223a"
        },
        "item": {
          "id": "cdb28b1a-5cfa-4584-a1ad-68faa8bffaa0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4c56e40e-18c2-40bc-8c69-22ce7b0fcd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b40428-805c-4bd2-a352-8c0ad488d2e4",
        "cursor": {
          "ref": "b9ff630b-4455-4505-a9a2-239982f9c5fb",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a9fe7d1f-44e8-49c1-8a59-b553f0e00a99"
        },
        "item": {
          "id": "72b40428-805c-4bd2-a352-8c0ad488d2e4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "786eef48-1075-455a-a2ab-ee98c896e908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560e3ed6-64fc-4fa6-b72d-ce4d45e72b51",
        "cursor": {
          "ref": "5e4e6660-1a39-43d2-9153-579e4a6fd03d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c3105d70-f0c4-4479-8bd8-7d6fb7b63976"
        },
        "item": {
          "id": "560e3ed6-64fc-4fa6-b72d-ce4d45e72b51",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "288b5465-ccfe-4a6d-8262-6b7610373971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9a0bef-df85-419c-bb8e-9b3550b4ba1a",
        "cursor": {
          "ref": "108f7cef-d665-409d-9794-f3145f4184bb",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3afed968-fc94-496a-adde-2fa48a335585"
        },
        "item": {
          "id": "3b9a0bef-df85-419c-bb8e-9b3550b4ba1a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0656ef8c-3caa-427d-8673-9e1e4ce4dd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8347478-865d-4e38-8fe2-812279333ffd",
        "cursor": {
          "ref": "453bfeee-f436-4120-901d-7a5a3377d3c4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ca438900-4b4c-4398-99f1-6cb6209ab8de"
        },
        "item": {
          "id": "b8347478-865d-4e38-8fe2-812279333ffd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "998ce07f-6006-4e0b-88dd-9ceac2df874f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba9a501-8dcd-4b9a-a028-3c90ed1ab2e5",
        "cursor": {
          "ref": "13219b45-2177-4e0a-b402-12f715c0b038",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d3bebc5a-9745-4831-91ce-ec6ca65e3699"
        },
        "item": {
          "id": "fba9a501-8dcd-4b9a-a028-3c90ed1ab2e5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a2d846f8-a813-4d52-8e6d-b161137071af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870128ef-1692-46e1-9938-6ea5a13e3bf0",
        "cursor": {
          "ref": "71895cc4-3dde-459b-9243-86e202891d20",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f5222c0b-db27-4ae1-b6e7-2ac0f32432e1"
        },
        "item": {
          "id": "870128ef-1692-46e1-9938-6ea5a13e3bf0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "30f8ec18-7a74-49c1-921e-786df3ef7755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be768109-ac7c-418c-8611-44a14f779a79",
        "cursor": {
          "ref": "16a082c4-6301-4bd7-bb7e-164ae122f036",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b5afbaf6-954b-4305-89ea-afaa3a0e7428"
        },
        "item": {
          "id": "be768109-ac7c-418c-8611-44a14f779a79",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "34874d30-f719-4c84-ba84-69c1a97afc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6365b50f-0885-4ce6-948b-8996caf4c292",
        "cursor": {
          "ref": "3c9bc26e-c24b-4b9c-b858-2ace42208ee8",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c712ec8f-2ca3-484d-bf94-5ad70f74f069"
        },
        "item": {
          "id": "6365b50f-0885-4ce6-948b-8996caf4c292",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e4a20b96-3f86-474b-8491-9539e8273630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13160b57-1323-4dba-87eb-bca4187e4c49",
        "cursor": {
          "ref": "0f12b014-5556-4d3a-8f8d-7c036315278c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "03366475-0a6c-49f2-8e6d-7d3b1c8911ae"
        },
        "item": {
          "id": "13160b57-1323-4dba-87eb-bca4187e4c49",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "85b4dd94-8c9c-4628-948f-183d0274e558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aaf69f9-184e-4a84-9b49-d7572579c166",
        "cursor": {
          "ref": "4334f029-4faf-4b63-9052-f01da2c0e174",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fca4ff6f-e4d5-4be8-bde6-f2d9ef33ba03"
        },
        "item": {
          "id": "6aaf69f9-184e-4a84-9b49-d7572579c166",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5335401d-53ba-46e7-8750-f7141c3455dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c35807a-dd3f-4949-b403-819094fa3fcf",
        "cursor": {
          "ref": "51c1e761-cd79-4316-8712-0d3766ec8746",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "32ecf730-882a-417d-bb6e-af3669d6b166"
        },
        "item": {
          "id": "4c35807a-dd3f-4949-b403-819094fa3fcf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e19bd014-a4a3-4cb4-ac19-e4e812fe0d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1aea91a-9df4-4dee-bedf-08d55ec6ea8b",
        "cursor": {
          "ref": "89b35da2-d42b-4dc0-946c-d60fd9815da5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b38e4fed-f583-4851-84d7-9b299b821733"
        },
        "item": {
          "id": "d1aea91a-9df4-4dee-bedf-08d55ec6ea8b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2f8b921f-a333-4118-9ac4-5964c955b10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c51f5d-153f-4133-bcf8-553eb42e538d",
        "cursor": {
          "ref": "4bcefea5-72ab-4ecb-9f02-fd88e185daa9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "68c314bc-62a4-4030-b50e-6c904be746d3"
        },
        "item": {
          "id": "e0c51f5d-153f-4133-bcf8-553eb42e538d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2ed4d084-15bb-438d-8f5c-d651e4182e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e604f2-be1a-45fa-8908-80231247f835",
        "cursor": {
          "ref": "f9e529a3-60d3-4721-8721-32863817d31d",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "937d4951-ede1-4992-97fd-eee5f7bcc1ee"
        },
        "item": {
          "id": "40e604f2-be1a-45fa-8908-80231247f835",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "07de2bb5-65a6-4fb9-bd00-cb683b58a4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c557b751-7cdc-44c7-a151-df5e4789c3d3",
        "cursor": {
          "ref": "f908c0f7-ecae-4407-9e01-4035da27d22f",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3c6ccf42-214b-498b-b63f-87fbc53c44c6"
        },
        "item": {
          "id": "c557b751-7cdc-44c7-a151-df5e4789c3d3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5f798368-bde0-451f-af50-45df9415aee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb252309-2cf3-4e73-98f1-bc3bcdb0e885",
        "cursor": {
          "ref": "8af6fe6a-c0fe-42fa-b98c-5d9b10e00d72",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f8013453-0769-4752-b5bf-6a742c80dd85"
        },
        "item": {
          "id": "eb252309-2cf3-4e73-98f1-bc3bcdb0e885",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "35d05410-1772-45fa-b07d-95440a825293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2ab379-0274-4dbf-9716-717ec4686691",
        "cursor": {
          "ref": "d8900bdf-d96a-4dd8-9880-d0a8519a08b9",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7da32701-8ae4-4cc3-8569-631dff26106c"
        },
        "item": {
          "id": "8e2ab379-0274-4dbf-9716-717ec4686691",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3793f058-0a83-4d65-a14e-b2e0d223bc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d9ff5a-2173-4120-9853-731df8e93885",
        "cursor": {
          "ref": "8571e769-3d4e-4b6d-894b-104ad20e0785",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0c6f4a74-774b-412b-acef-73c2d789e842"
        },
        "item": {
          "id": "60d9ff5a-2173-4120-9853-731df8e93885",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fb2c29d9-1d74-458c-b984-c6094c0841e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148f95e5-ccf4-45e5-9022-80ec300f4ec1",
        "cursor": {
          "ref": "cf7c414c-c633-435b-8b49-357f3fcdc7c4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c8120fc1-c46d-4321-90f4-e83cee5706dd"
        },
        "item": {
          "id": "148f95e5-ccf4-45e5-9022-80ec300f4ec1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "41ebec43-7244-4035-8cf1-806b7e90302d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fea2f5-e0c4-48f4-bdfd-8558bfdd016e",
        "cursor": {
          "ref": "e4473144-b9d6-4897-ad60-fb97b9a89c0b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e3e65dd3-5c6e-424a-9316-99b870f07686"
        },
        "item": {
          "id": "f2fea2f5-e0c4-48f4-bdfd-8558bfdd016e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c6cc35a7-48b4-47ba-a83a-c7116332fd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635d3645-05d2-4f26-b40a-3a8ab938e066",
        "cursor": {
          "ref": "9b972d79-ac45-427b-8c89-505bb105a251",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8d7e35b8-018a-4c49-b8ef-b8c7deef49a4"
        },
        "item": {
          "id": "635d3645-05d2-4f26-b40a-3a8ab938e066",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6e898197-a9bb-4d90-8530-3b7030d84cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35d1cc6-50e7-4833-819f-bb0385f9241d",
        "cursor": {
          "ref": "a93a4c06-2a2f-4181-a273-f3a2c53ce6be",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2124a4ca-7640-49da-a219-fd09fadf4687"
        },
        "item": {
          "id": "b35d1cc6-50e7-4833-819f-bb0385f9241d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e03bc3f3-35af-4a59-be05-abaed6d7fa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f2cac7-c470-4dde-aad5-c22ed1ce6984",
        "cursor": {
          "ref": "083acc13-7bd7-4fa0-816e-0e0848fb51ec",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b99a92c5-7f2b-4fed-821d-b4069d9b7a70"
        },
        "item": {
          "id": "89f2cac7-c470-4dde-aad5-c22ed1ce6984",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f46aeae5-4cf2-4e76-9081-4552a078e88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09af6732-a27a-43da-8eed-dc1ddf59a375",
        "cursor": {
          "ref": "bc1f1b4a-07fb-4308-9012-23b01dca94ad",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "de0730db-7ed3-4039-9b8c-ef41e0b4db3e"
        },
        "item": {
          "id": "09af6732-a27a-43da-8eed-dc1ddf59a375",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "761287ce-7e70-4587-8902-9dc8335b4742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2314eb-265a-4d47-8ec7-5370ec76d527",
        "cursor": {
          "ref": "5e118ae0-d7be-4eb1-8010-b95a333fa28e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b5e29ebe-d6c7-4b06-a831-9bc59f2fe468"
        },
        "item": {
          "id": "ea2314eb-265a-4d47-8ec7-5370ec76d527",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7a05c3b9-6d2e-406c-9ba4-b815cab14ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badcd1e7-8e0d-4e52-a862-03cdafca4bb7",
        "cursor": {
          "ref": "b966b4c6-31bc-41e6-bc56-be7c80c5f730",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f58668a1-a24d-47fe-82fd-7e4c27645290"
        },
        "item": {
          "id": "badcd1e7-8e0d-4e52-a862-03cdafca4bb7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7396ba62-813f-4acb-af9c-2873ab021b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b62009-108f-4983-a8b1-e2a8f70202c0",
        "cursor": {
          "ref": "1c4d13f6-f643-42e8-9e3f-aa84b4a8b860",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "310c07fd-2fd5-45f2-a6bd-d6992bdb1dc8"
        },
        "item": {
          "id": "37b62009-108f-4983-a8b1-e2a8f70202c0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ab670aa2-c0d5-4eaa-ad04-9ef4fb331f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9810575-a1cd-4092-a666-f099c05a63fb",
        "cursor": {
          "ref": "650c1a3b-db29-43d2-b295-2a2c5e7ce8c4",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0796f3ad-e187-4165-9611-78c67e4a2159"
        },
        "item": {
          "id": "d9810575-a1cd-4092-a666-f099c05a63fb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "18a63305-7061-4dca-bf9a-da39bbbde7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8021f4e0-9053-4344-9585-934890c5571b",
        "cursor": {
          "ref": "6842f837-6ed0-4bdd-84b7-272d8cfdef9b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2e0097a8-2956-4369-a89c-56f6918891da"
        },
        "item": {
          "id": "8021f4e0-9053-4344-9585-934890c5571b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "449e0c7e-327f-4b48-8d8e-4aad01de671d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cf330f-d981-4e3e-94a8-65632a9a27db",
        "cursor": {
          "ref": "7566d534-96fb-4ace-baa0-38399493e646",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f1a263f5-1c03-4db9-9089-835e66ef8b2f"
        },
        "item": {
          "id": "b6cf330f-d981-4e3e-94a8-65632a9a27db",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2066d13b-45a8-460a-b44c-832fa3e29518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b5b7a0-60f3-4656-85ae-931507fd0f48",
        "cursor": {
          "ref": "4632c48f-91c6-4250-b2b7-2019ed9f0563",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3d6f7015-efd5-40fb-9618-cc9975a06e92"
        },
        "item": {
          "id": "56b5b7a0-60f3-4656-85ae-931507fd0f48",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "70851e61-fef1-48df-a3a1-087918f9b0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146e88d9-5984-43c8-befa-5269d2f913bb",
        "cursor": {
          "ref": "07d2cf7b-a060-4bc3-a56f-780df6b3d666",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fca3d136-685d-4a13-9c0c-783a9fc6d6f5"
        },
        "item": {
          "id": "146e88d9-5984-43c8-befa-5269d2f913bb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "781271b1-bb9c-4ada-8ddb-8dc3ddfbfe0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177eca41-1cc4-4ff1-ad8a-a8660db68ebb",
        "cursor": {
          "ref": "ae12eeca-206e-4b53-af4c-fdfe8dd9cd39",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "faf33fb9-5b35-4941-900d-e191bc6b7788"
        },
        "item": {
          "id": "177eca41-1cc4-4ff1-ad8a-a8660db68ebb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "769d76fc-f91a-4625-8ad7-1c62f18a7beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b141b2-4512-4dc1-801d-f4261d469fd6",
        "cursor": {
          "ref": "114f6491-d275-4331-b174-f7195bc342cc",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a06c89d1-aae7-498b-84a5-ab6e008e9003"
        },
        "item": {
          "id": "e7b141b2-4512-4dc1-801d-f4261d469fd6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ff856e98-c29e-40c9-b8bc-20808a5c306e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a4b474-cdb2-42d9-adfd-b1178d6b91fd",
        "cursor": {
          "ref": "b550e79b-7f13-48d0-982b-f0f7b64de89a",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5bc9b882-6760-4404-aaf9-904fc881ccd2"
        },
        "item": {
          "id": "18a4b474-cdb2-42d9-adfd-b1178d6b91fd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f2ef2c93-190e-45c6-9185-5a4c68eca8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45c13e2-805f-4569-899c-8bbc84b0eaf2",
        "cursor": {
          "ref": "89c9e9c1-2002-42f9-9b54-eff5a7ee2955",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2b97fc3c-7cbf-46c1-a714-815751e6eb4b"
        },
        "item": {
          "id": "b45c13e2-805f-4569-899c-8bbc84b0eaf2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e8a46c13-dea5-4b3a-97c2-7e70be126c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e3cc5c-5ea8-4be1-94c8-54ca22d22240",
        "cursor": {
          "ref": "5184c1bb-a02d-404d-81f5-bd57fa7a8df1",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2cf17868-fe66-4de9-a1c9-c6b61c8126a1"
        },
        "item": {
          "id": "55e3cc5c-5ea8-4be1-94c8-54ca22d22240",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "38f52213-f6a5-4d9f-9356-ccdaaae946b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c6d2f2-27aa-449f-93f0-eef73aa6fc6c",
        "cursor": {
          "ref": "0977ea30-8eca-4089-9a42-659695e4791b",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e86a71ea-ffa0-4a99-8ef9-f322d56200a0"
        },
        "item": {
          "id": "54c6d2f2-27aa-449f-93f0-eef73aa6fc6c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ac327147-2b44-4512-8e25-59c948759011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26dafa0-cb29-450c-ace0-ec4900d2c990",
        "cursor": {
          "ref": "981683ab-4438-4e79-bb22-f9f7832f06fd",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0a91de81-fcc5-46c5-b7a8-d126da8c8ce7"
        },
        "item": {
          "id": "b26dafa0-cb29-450c-ace0-ec4900d2c990",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e1ee7122-b0ac-47f8-bb0b-740fe379d81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f430818d-f379-4034-9277-eaa58180ff1e",
        "cursor": {
          "ref": "9d55befb-b88d-47c6-a00d-d1c314934bba",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "48e88b2a-b80f-413e-92f6-a235bf15d770"
        },
        "item": {
          "id": "f430818d-f379-4034-9277-eaa58180ff1e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a1faf4e5-fc80-4f0e-8a1b-ab1d12b6d339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792de84c-e0c0-4313-9bfe-8f8af6265cf3",
        "cursor": {
          "ref": "508295b7-bc8d-4eb1-b108-ff0e6343f77b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8c681c9f-e1ca-4240-8e5e-062ffb71e837"
        },
        "item": {
          "id": "792de84c-e0c0-4313-9bfe-8f8af6265cf3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "be9e5a23-7697-4b4d-85c1-853d2324c600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805063e3-d874-4a9e-bc7d-794911260f15",
        "cursor": {
          "ref": "0caef573-192a-475c-bacd-5dbba7eacb11",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "960b9530-2605-4a0d-92f8-c45d95ff7c8c"
        },
        "item": {
          "id": "805063e3-d874-4a9e-bc7d-794911260f15",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "229f0f53-dc6f-4d00-a123-660235a47802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54785f2-ae51-49af-a9da-a0d0ec4bc2bc",
        "cursor": {
          "ref": "e1978a9e-0c10-480d-978e-5b3d7c5bb24c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "502f1016-ef4d-4bb3-9b13-ff0caaf25ae5"
        },
        "item": {
          "id": "b54785f2-ae51-49af-a9da-a0d0ec4bc2bc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "003db4ce-f562-4c1c-b84b-5e7509bc6174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b68c88-065a-4b39-8402-974cbb3edab5",
        "cursor": {
          "ref": "b2620b96-cd34-4372-ad3b-f605d52b1fdb",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4646b0db-58e2-4c96-977f-312dafdc2ba7"
        },
        "item": {
          "id": "38b68c88-065a-4b39-8402-974cbb3edab5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a79be48f-0712-4455-8ae6-08646706aa6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9424c92-59a4-45a2-9bde-5f74a1e10ae9",
        "cursor": {
          "ref": "4692a470-5194-481d-95be-1222dd49f8b1",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7d89fead-d5ce-49f3-bddb-80aa41a56dae"
        },
        "item": {
          "id": "c9424c92-59a4-45a2-9bde-5f74a1e10ae9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "75bd21ab-9f4a-4a16-92cb-22be7c453958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f3261a-964d-4a7c-a9ef-52477a455c4d",
        "cursor": {
          "ref": "0cbb28e2-fe9d-49a7-8046-55f78179318d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ed21b993-e3a5-4dd2-8633-55c67887b7bc"
        },
        "item": {
          "id": "61f3261a-964d-4a7c-a9ef-52477a455c4d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9c5494f5-fbeb-427c-a5dd-f546a7eebdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd9b03d-a287-44d4-acd0-fe7bbec8b00d",
        "cursor": {
          "ref": "9873fe22-c7d5-4c72-8e3b-ed0bb7b6d2a1",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2451d77a-5bfa-4efd-83e5-1edb17c0b31c"
        },
        "item": {
          "id": "4cd9b03d-a287-44d4-acd0-fe7bbec8b00d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2df34ea6-59b7-4a95-98a3-362644316ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32861b03-0d10-484e-8efb-6aef6e3b2e58",
        "cursor": {
          "ref": "7203e757-c4b8-4d48-b8f5-0769c5b3fbd7",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4866ad6e-2346-41f7-9265-b9f40f3eadd2"
        },
        "item": {
          "id": "32861b03-0d10-484e-8efb-6aef6e3b2e58",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8c5bc6ef-09a6-4e4f-bbb6-a8e945cb103d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9fc906-6f50-4d7c-99f7-e04682eff593",
        "cursor": {
          "ref": "b9f071af-232d-4a59-a22d-2623abc0fda1",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "074f26f7-1b06-4303-8eb5-fe9fcf4fd044"
        },
        "item": {
          "id": "9d9fc906-6f50-4d7c-99f7-e04682eff593",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "191f695b-9e23-43a1-b302-f11d86556eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78986776-b354-4ef9-8965-6cbcb8553c60",
        "cursor": {
          "ref": "22cd1ce5-ea52-4a34-bd27-da3a1561aa6e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "590c42c6-6d9b-4c97-8b95-e9bd6f3d47fa"
        },
        "item": {
          "id": "78986776-b354-4ef9-8965-6cbcb8553c60",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0f91d0b0-36b7-41f9-b829-cb4efed5598b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7c2a0f-3d58-47f3-b520-7a052a305ef7",
        "cursor": {
          "ref": "a40be758-1e62-4089-bfb1-aa71746c4b64",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1f5512a6-243a-421d-a7fb-837d2c78f3e5"
        },
        "item": {
          "id": "fb7c2a0f-3d58-47f3-b520-7a052a305ef7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b472ac47-c75c-44c7-8c6a-a877e23d01ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc62c832-6dc8-44fd-9dcb-7806631014ea",
        "cursor": {
          "ref": "07da1dd6-a77f-4e69-bf63-5662a9eb116b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "882fc0c0-c8aa-4eff-8e36-0c54b0052108"
        },
        "item": {
          "id": "bc62c832-6dc8-44fd-9dcb-7806631014ea",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "49adc819-8b46-4a79-a5c0-6dd768c94689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43e748d-4e11-4645-abcb-ee437acb4158",
        "cursor": {
          "ref": "6c3f36ea-1c38-4af2-bada-b4833e6fb53d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "04a7c90f-1895-4816-8d50-ecc425cd4249"
        },
        "item": {
          "id": "f43e748d-4e11-4645-abcb-ee437acb4158",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dfade97d-92c3-4209-9271-1270df778f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b8701a-2869-4034-b32b-49eed131298b",
        "cursor": {
          "ref": "e2f9ef35-50d7-41e4-ba27-74b6e64f476a",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c82d0e0a-4263-4169-a6cd-c68b1ce1d9e2"
        },
        "item": {
          "id": "63b8701a-2869-4034-b32b-49eed131298b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3f86dc51-05f5-4a6a-8393-ccaedfeeed63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0997e8-73cf-409c-83cb-e7ab484f22ba",
        "cursor": {
          "ref": "1791f5b8-5306-4bd5-bc66-4f17b8250ce7",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8b889878-65a1-4215-bfc2-d147df29f268"
        },
        "item": {
          "id": "ae0997e8-73cf-409c-83cb-e7ab484f22ba",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4a27d155-f956-4e35-bf39-fcecfb86f8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f846306-c73a-45c5-af4c-a474b6578275",
        "cursor": {
          "ref": "ea4064d6-a68f-4f74-9f7e-99670301c91f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1409a9ba-bb15-4925-be6d-d48a50d6a557"
        },
        "item": {
          "id": "5f846306-c73a-45c5-af4c-a474b6578275",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "35a6682a-aba9-4a3d-969e-69a80acb8861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59d3633-cc23-4a0b-b64c-c20be019932f",
        "cursor": {
          "ref": "ce86ef3b-dcf0-4299-80b9-69839f0890b7",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7b8f7b81-8d64-4c33-96b2-d93ce4f562d1"
        },
        "item": {
          "id": "c59d3633-cc23-4a0b-b64c-c20be019932f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "df82f216-6008-45a3-9250-57dd674f9732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6266b5-5119-43c2-ac04-a0cdba2bb3f9",
        "cursor": {
          "ref": "9fb4f54e-e456-4866-9a38-459870f4c972",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2c5c403a-0d70-4e50-9458-6a788543ab48"
        },
        "item": {
          "id": "bc6266b5-5119-43c2-ac04-a0cdba2bb3f9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6a5471e6-88f7-47d1-ac71-d6047c09f6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476bf8bc-d035-4fa0-ad53-5a339e75cf94",
        "cursor": {
          "ref": "b6fb8bde-8579-45f5-bd21-0b7605901796",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "98737162-2556-43ee-9e5f-ba81d7765859"
        },
        "item": {
          "id": "476bf8bc-d035-4fa0-ad53-5a339e75cf94",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1cb34998-bec8-4590-992f-c1a8ddc7cb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69688015-30c0-4abc-a6af-38176211ccd0",
        "cursor": {
          "ref": "3cc9dc1e-0cff-475a-a032-967b60c4f402",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1a97542b-3d98-480c-ac88-2a6abdae6bb7"
        },
        "item": {
          "id": "69688015-30c0-4abc-a6af-38176211ccd0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3aa8e6d4-58b6-4381-aa10-6c3cd6540c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da75ba5-602c-4a46-8a04-4398d6050d6f",
        "cursor": {
          "ref": "b4128d70-6798-4a14-80d7-2f3cd35a5a64",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a220c88f-2480-4a18-aaf6-1418894326aa"
        },
        "item": {
          "id": "0da75ba5-602c-4a46-8a04-4398d6050d6f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e3f713f1-4c2a-4dfc-9d75-1db3943e6827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ce4d6f-2ebf-40ab-a431-83063e3eac94",
        "cursor": {
          "ref": "57af71ff-be62-454e-9caa-4a9d516e9c85",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7776b4d8-22b5-417c-b2d9-8a12502960f2"
        },
        "item": {
          "id": "d8ce4d6f-2ebf-40ab-a431-83063e3eac94",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dcfb1171-a9b7-4dda-9018-9c76ccd7567d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a922fb7-4079-45a5-acd2-43705f4e07ba",
        "cursor": {
          "ref": "f799cd80-0f1f-4234-b665-c7e36e58e29b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "554091d1-8c4d-43ed-ab33-c59a927361c1"
        },
        "item": {
          "id": "4a922fb7-4079-45a5-acd2-43705f4e07ba",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7177bc77-4718-48f0-987b-a43afc8716fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a7aa63-7c37-4728-8362-1f9474bd947d",
        "cursor": {
          "ref": "740883eb-24da-464f-9f4f-347b1571932c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cb42ae67-ed47-482f-972d-3e9135172b64"
        },
        "item": {
          "id": "88a7aa63-7c37-4728-8362-1f9474bd947d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "28632f9f-d52e-486d-9d4c-035e829ece08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "4991ca80-e470-4232-a7f1-bbecf529934b",
        "cursor": {
          "ref": "a73d1dcc-9810-4e8e-bc0b-f131cef70ad9",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "78d95e45-3e95-4dd2-b6d8-e0dd66a3efa9"
        },
        "item": {
          "id": "4991ca80-e470-4232-a7f1-bbecf529934b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ead8b08f-4a38-410c-8634-8bcdd962795e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "5ba631cb-abf9-4563-8874-c658e07313f8",
        "cursor": {
          "ref": "b5a3a6ce-f2c4-409a-8e11-becf59f2e1d0",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8c77005f-df58-4593-83a8-a3350b163f96"
        },
        "item": {
          "id": "5ba631cb-abf9-4563-8874-c658e07313f8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a85cb5b9-a476-4da6-a65e-6f7a05c18c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "64383c07-6c7c-49f0-bd1f-c1f578e40380",
        "cursor": {
          "ref": "f9845a09-4cba-408b-bba9-79f141bce73f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "eb2f5fa7-2dd1-48c6-95dd-5b2f1dda6395"
        },
        "item": {
          "id": "64383c07-6c7c-49f0-bd1f-c1f578e40380",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "74d52fd0-a4d7-42de-b233-2ced87452ef7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64383c07-6c7c-49f0-bd1f-c1f578e40380",
        "cursor": {
          "ref": "f9845a09-4cba-408b-bba9-79f141bce73f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "eb2f5fa7-2dd1-48c6-95dd-5b2f1dda6395"
        },
        "item": {
          "id": "64383c07-6c7c-49f0-bd1f-c1f578e40380",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "74d52fd0-a4d7-42de-b233-2ced87452ef7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45aca796-94e9-4a6e-9a27-5e8545214004",
        "cursor": {
          "ref": "fb1fdb2a-0e7c-432d-8be5-1d03042789b6",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f6072a74-d863-44a8-abd2-0e28f5cb481a"
        },
        "item": {
          "id": "45aca796-94e9-4a6e-9a27-5e8545214004",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9595ffb1-7267-4ba3-b203-f7111cce45ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96329e97-98f3-41ce-add7-2d0480fbbe0b",
        "cursor": {
          "ref": "194e34c9-1955-4113-b597-a3a925e25935",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9c4efbe7-85f9-4806-8062-c15cb1024cb2"
        },
        "item": {
          "id": "96329e97-98f3-41ce-add7-2d0480fbbe0b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "755ddeb7-5433-40aa-9a59-0bd1b647ac2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}